
CREATE DATABASE titan;
GO

-- Usa o banco de dados criado
USE titan;
GO

-- Cria um novo login
CREATE LOGIN manga WITH PASSWORD = 'Complex@123';
GO

-- Cria um usuário para o login
CREATE USER manga FOR LOGIN manga;
GO

-- Adiciona o usuário ao role de datareader, para que ele possa ler os dados
EXEC sp_addrolemComplex@123ember 'db_datareader', 'manga';
GO

-- Adiciona o usuário ao role de datawriter, para que ele possa modificar os dados
EXEC sp_addrolemember 'db_datawriter', 'manga';
GO

ALTER DATABASE [titan] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [titan] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [titan] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [titan] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [titan] SET ARITHABORT OFF 
GO
ALTER DATABASE [titan] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [titan] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [titan] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [titan] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [titan] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [titan] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [titan] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [titan] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [titan] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [titan] SET  DISABLE_BROKER 
GO
ALTER DATABASE [titan] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [titan] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [titan] SET TRUSTWORTHY OFF 
GO
ALTER DATABASE [titan] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO
ALTER DATABASE [titan] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [titan] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [titan] SET HONOR_BROKER_PRIORITY OFF 
GO
ALTER DATABASE [titan] SET RECOVERY FULL 
GO
ALTER DATABASE [titan] SET  MULTI_USER 
GO
ALTER DATABASE [titan] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [titan] SET DB_CHAINING OFF 
GO
ALTER DATABASE [titan] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) 
GO
ALTER DATABASE [titan] SET TARGET_RECOVERY_TIME = 0 SECONDS 
GO
ALTER DATABASE [titan] SET DELAYED_DURABILITY = DISABLED 
GO
EXEC sys.sp_db_vardecimal_storage_format N'titan', N'ON'
GO
USE [titan]
GO
/****** Object:  User [supertupi]    Script Date: 20/05/2024 14:44:57 ******/
CREATE USER [supertupi] FOR LOGIN [supertupi] WITH DEFAULT_SCHEMA=[dbo]
GO
ALTER ROLE [db_owner] ADD MEMBER [supertupi]
GO
ALTER ROLE [db_datareader] ADD MEMBER [supertupi]
GO
ALTER ROLE [db_datawriter] ADD MEMBER [supertupi]
GO
/****** Object:  UserDefinedFunction [dbo].[BankersRound]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Function [dbo].[BankersRound](@Val Decimal(32,16), @Digits Int)
Returns Decimal(32,16)
AS
Begin
    Return Case When Abs(@Val - Round(@Val, @Digits, 1)) * Power(10, @Digits+1) = 5 
                Then Round(@Val, @Digits, Case When Convert(int, Round(abs(@Val) * power(10,@Digits), 0, 1)) % 2 = 1 Then 0 Else 1 End)
                Else Round(@Val, @Digits)
                End
End
GO
/****** Object:  UserDefinedFunction [dbo].[DataValidaAproximada]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*developer: Vagner Santos 
  data: 26/12/2013
  ticket: 219
  descrição: Obtem uma data valida baseado no dia,mes e ano informado
ex passando dia 30 em mes de fevereiro, vai retornar uma data com dia 28 ou 29 dependendo do ano
*/
  
CREATE FUNCTION [dbo].[DataValidaAproximada] ( 
	@Dia int,
	@Mes int, 
	@Ano int
	
	)
RETURNS smalldatetime
BEGIN

	declare @dataValida bit,@data datetime
	set @dataValida = 0
	WHILE @dataValida = 0
	begin
	  select @dataValida = (select 1 where ISDATE(CAST(@Ano AS VARCHAR(4)) + '-' +  CAST(@Mes AS VARCHAR(2)) +'-' + CAST(@Dia AS VARCHAR(2)) ) = 1)
	  if @dataValida = 1
	  begin 
	  	 select @data =  Convert(smalldatetime, CAST(@Ano AS VARCHAR(4)) + '-' +  CAST(@Mes AS VARCHAR(2)) +'-' + CAST(@Dia AS VARCHAR(2)),102)
	  	 set @dataValida = 1
	  end
	  else
	  begin
	    --decrementar dia até achar dia válido
		set @Dia = @Dia - 1
	  end
	end
	
Return @data

END


GO
/****** Object:  UserDefinedFunction [dbo].[DiaQuinzedoMes]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[DiaQuinzedoMes] ( 

	@Mes int, 
	@Ano int
	
	)
RETURNS smalldatetime
BEGIN

    RETURN Convert(smalldatetime, CAST(@Ano AS VARCHAR(4)) + '-' +  CAST(@Mes AS VARCHAR(2)) + '-15',102)

END
GO
/****** Object:  UserDefinedFunction [dbo].[Extenso]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[Extenso](@VALOR DECIMAL(18, 5))
RETURNS VARCHAR(255)
AS
BEGIN

DECLARE
@STR_EXT VARCHAR(255),
@FLAG_E INT,
@GRUPO DECIMAL(10, 2),
@MOEDA VARCHAR(10),
@MOEDA_PLURAL VARCHAR(10),
@FLAG_CENTAVOS DECIMAL(18, 5)

-- Aqui vc podera configurar a descricao da Moeda
SET @MOEDA = 'Real'
SET @MOEDA_PLURAL = 'Reais'
SET @FLAG_CENTAVOS = 1 -- Exibir os centavos [ 0) Nao 1) Sim ]

SET @STR_EXT = ''
SET @FLAG_E = 0
SET @GRUPO = 0

IF ((CONVERT(INT, @VALOR) - (CONVERT(INT, @VALOR) % 1)) = 0)
BEGIN
SET @STR_EXT = ' Zero'
END
ELSE
BEGIN
DECLARE @TEMPINT BIGINT
-- SET @TEMPINT = (.000000001*((CONVERT(BIGINT, @VALOR) % 1000000000000) 
-- - (CONVERT(BIGINT, @VALOR) % 1000000000)))
-- SELECT @FLAG_E = FLAG_E, @STR_EXT = STR_EXT FROM dbo.TrataGrupoExtenso(
-- @TEMPINT, '' Bilhao'', '' Bilhoes'', @FLAG_E, @STR_EXT)

SET @TEMPINT = .000001*((CONVERT(INT, @VALOR) % 1000000000) 
- (CONVERT(INT, @VALOR) % 1000000))

SELECT @FLAG_E = FLAG_E, @STR_EXT = STR_EXT 
FROM dbo.TrataGrupoExtenso(
@TEMPINT, ' Milhao' , ' Milhoes', @FLAG_E, @STR_EXT)

SET @TEMPINT = .001*((CONVERT(INT, @VALOR) % 1000000) - 
(CONVERT(INT, @VALOR) % 1000))

SELECT @FLAG_E = FLAG_E, @STR_EXT = STR_EXT 
FROM dbo.TrataGrupoExtenso(
@TEMPINT, ' Mil' , ' Mil', @FLAG_E, @STR_EXT)

SET @TEMPINT = (CONVERT(INT, @VALOR) % 1000)

SELECT @FLAG_E = FLAG_E, @STR_EXT = STR_EXT 
FROM dbo.TrataGrupoExtenso(
@TEMPINT, '' , '', @FLAG_E, @STR_EXT)
END

IF (ROUND(@VALOR, 0) = 1) 
BEGIN
SET @STR_EXT = @STR_EXT + ' '+RTRIM(@MOEDA)
END
ELSE
BEGIN
IF (ROUND(@VALOR, -6) <> 0) and 
(ROUND(@VALOR, 0) - ROUND(@VALOR, -6) = 0)
SET @STR_EXT = @STR_EXT + ' de ' + RTRIM(@moeda_plural)
ELSE
SET @STR_EXT = @STR_EXT + ' ' + RTRIM(@moeda_plural)
END

IF (@FLAG_CENTAVOS = 1)
BEGIN
SET @FLAG_E = 1;

DECLARE @TEMPINT2 BIGINT
-- SET @TEMPINT2 = 100*(@VALOR - ROUND(@VALOR, 0))

set @TEMPINT2 = cast(right(cast(cast(@VALOR as numeric(10,2)) as varchar(15)),2) as BIGINT)

-- Aqui vc podera mudar a descricao dos centavos
SELECT @FLAG_E = FLAG_E, @STR_EXT = STR_EXT 
FROM dbo.TrataGrupoExtenso(
@TEMPINT2, ' centavo' , ' centavos', @FLAG_E, @STR_EXT)
END

RETURN(@STR_EXT)
END
GO
/****** Object:  UserDefinedFunction [dbo].[FeriadoValida]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--FeriadoValida
CREATE FUNCTION [dbo].[FeriadoValida]
	(
		@pIDPosto uniqueidentifier,
		@pData char(5)
	)
RETURNS nvarchar(100)
AS
	BEGIN
		Declare @UF as char(2)
        Declare @Municipio nvarchar(MAX)
		Declare @Feriado nvarchar(100)
		Declare @FeriadoNacional nvarchar(100)
		Declare @FeriadoEstadual nvarchar(100)
		Declare @FeriadoMunicipal nvarchar(100)
     
        set @UF=(Select UF from tbPostos where Id = @pIDPosto)
        set @Municipio = (Select tbCidades.Descricao
                          from tbPostos
                            INNER JOIN tbCidades ON tbPostos.IdMunicipio = tbCidades.Id
                          where tbPostos.Id = @pIDPosto)

        set @FeriadoNacional= Isnull((SELECT ISNULL(Descricao, '') as Feriado FROM tbFeriados WHERE     (Data = @pData) AND (Tipo = 'N')),'')
        set @FeriadoEstadual = ISNULL((SELECT Descricao AS Feriado FROM tbFeriados WHERE (Data = @pData) AND (Local = @UF) AND (Tipo = 'E')), '')
        set @FeriadoMunicipal =ISNULL  ((SELECT  Descricao AS Feriado FROM tbFeriados WHERE (Data = @pData) AND (Local = @Municipio) AND (Tipo = 'M')), '') 	
 
        Return @FeriadoNacional + @FeriadoEstadual + @FeriadoMunicipal

	
	END

GO
/****** Object:  UserDefinedFunction [dbo].[fncMontaDataHora]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[fncMontaDataHora]
	(
		@Dia		int,
		@Mes		int, 
		@Ano		int,
		@Hora		int,
		@Minuto		int,
		@Segundo	int
	)
	RETURNS datetime

	/*
		Descrição: Monta um datetime de acordo com os parâmetros passados para dia, mes, ano, hora, minuto e segundo
		Autor....: MangaTech - Alysson
		Data.....: 26/04/2021
		Ex.......: SELECT [dbo].[fncMontaDataHora](26, 4, 2021, 23, 59, 59)
	*/

BEGIN
	DECLARE @DataRetorno datetime

	SELECT @DataRetorno = CONCAT(@Ano, '-', @Mes, '-', @Dia, ' ', @Hora, ':', @Minuto, ':', @Segundo)

	RETURN @DataRetorno
END
GO
/****** Object:  UserDefinedFunction [dbo].[FormatarCpfCnpj]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[FormatarCpfCnpj] (@VALOR VARCHAR(20))
RETURNS VARCHAR(20)
AS
  BEGIN
	DECLARE @RESULTADO VARCHAR(20) 
 
	IF LEN(@VALOR)<= 11
	   BEGIN
	    SELECT @RESULTADO=SUBSTRING(@VALOR, 1, 3)+ '.' +
		                  SUBSTRING(@VALOR, 4, 3)+ '.' +
		                  SUBSTRING(@VALOR, 7, 3)+ '-' +
		                  SUBSTRING(@VALOR, 10, 2)
		END
 
	ELSE
 
		BEGIN
	     SELECT @RESULTADO=SUBSTRING(@VALOR, 1, 2)+ '.' +
			               SUBSTRING(@VALOR, 3, 3)+ '.' +
			               SUBSTRING(@VALOR, 6, 3)+ '/' +
			               SUBSTRING(@VALOR, 9, 4)+ '-' +
			               SUBSTRING(@VALOR, 13, 2)
		END
 
		RETURN (@RESULTADO)
 
	END
GO
/****** Object:  UserDefinedFunction [dbo].[FromBase64]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[FromBase64] (@data varchar(max))

RETURNS varchar(8000)

AS

BEGIN

DECLARE

@Output varchar(8000),

@Bits varbinary(3)

DECLARE @XmlData xml

SET @XmlData = CAST('<data>' + @data + '</data>' as xml)

SELECT @Output= CONVERT(varchar(max),

@XmlData.value('(data)[1]', 'varbinary(max)'))

RETURN @Output

END
GO
/****** Object:  UserDefinedFunction [dbo].[GrupoExtenso]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[GrupoExtenso](@VALOR DECIMAL(18, 2))
  RETURNS VARCHAR(255)
AS
BEGIN
  DECLARE
    @STR_EXT VARCHAR(255),
    @AUX     INT,
    @VALOR_T INT

    SET @STR_EXT = ''
    SET @AUX = 0

    SET @VALOR_T = ROUND(@VALOR, 0)
    SET @AUX     = @VALOR_T - (@VALOR_T % 100)


    IF (@VALOR_T = 100)  SET @STR_EXT = ' Cem'
    ELSE IF (@AUX = 100) SET @STR_EXT = ' Cento'
    ELSE IF (@AUX = 200) SET @STR_EXT = ' Duzentos'
    ELSE IF (@AUX = 300) SET @STR_EXT = ' Trezentos'
    ELSE IF (@AUX = 400) SET @STR_EXT = ' Quatrocentos'
    ELSE IF (@AUX = 500) SET @STR_EXT = ' Quinhentos'
    ELSE IF (@AUX = 600) SET @STR_EXT = ' Seiscentos'
    ELSE IF (@AUX = 700) SET @STR_EXT = ' Setecentos'
    ELSE IF (@AUX = 800) SET @STR_EXT = ' Oitocentos'
    ELSE IF (@AUX = 900) SET @STR_EXT = ' Novecentos'

    IF (((@VALOR_T - @AUX) <> 0) AND (@AUX <> 0)) 
		SET @STR_EXT = @STR_EXT+' e'

    SET @AUX = (@VALOR_T % 100) - (@VALOR_T % 10)

    IF (@AUX = 10)
      BEGIN
        SET @AUX = (@VALOR_T % 10)
        IF (@AUX = 0)  SET @STR_EXT = @STR_EXT+' Dez'
        ELSE IF (@AUX = 1) SET @STR_EXT = @STR_EXT+' Onze'
        ELSE IF (@AUX = 2) SET @STR_EXT = @STR_EXT+' Doze'
        ELSE IF (@AUX = 3) SET @STR_EXT = @STR_EXT+' Treze'
        ELSE IF (@AUX = 4) SET @STR_EXT = @STR_EXT+' Quatorze'
        ELSE IF (@AUX = 5) SET @STR_EXT = @STR_EXT+' Quinze'
        ELSE IF (@AUX = 6) SET @STR_EXT = @STR_EXT+' Dezesseis'
        ELSE IF (@AUX = 7) SET @STR_EXT = @STR_EXT+' Dezessete'
        ELSE IF (@AUX = 8) SET @STR_EXT = @STR_EXT+' Dezoito'
        ELSE IF (@AUX = 9) SET @STR_EXT = @STR_EXT+' Dezenove'
       END
    ELSE
       BEGIN
         IF (@AUX = 20) SET @STR_EXT = @STR_EXT+' Vinte'
         ELSE IF (@AUX = 30) SET @STR_EXT = @STR_EXT+' Trinta'
         ELSE IF (@AUX = 40) SET @STR_EXT = @STR_EXT+' Quarenta'
         ELSE IF (@AUX = 50) SET @STR_EXT = @STR_EXT+' Cinquenta'
         ELSE IF (@AUX = 60) SET @STR_EXT = @STR_EXT+' Sessenta'
         ELSE IF (@AUX = 70) SET @STR_EXT = @STR_EXT+' Setenta'
         ELSE IF (@AUX = 80) SET @STR_EXT = @STR_EXT+' Oitenta'
         ELSE IF (@AUX = 90) SET @STR_EXT = @STR_EXT+' Noventa'

         IF ((@AUX <> 0) and ((@VALOR_T % 10) <> 0))
           BEGIN
             SET @STR_EXT = @STR_EXT+' e'
             SET @AUX = (@VALOR_T % 10)
             IF (@AUX = 1) SET @STR_EXT = @STR_EXT+' Um'
             ELSE IF (@AUX = 2) SET @STR_EXT = @STR_EXT+' Dois'
             ELSE IF (@AUX = 3) SET @STR_EXT = @STR_EXT+' Tres'
             ELSE IF (@AUX = 4) SET @STR_EXT = @STR_EXT+' Quatro'
             ELSE IF (@AUX = 5) SET @STR_EXT = @STR_EXT+' Cinco'
             ELSE IF (@AUX = 6) SET @STR_EXT = @STR_EXT+' Seis'
             ELSE IF (@AUX = 7) SET @STR_EXT = @STR_EXT+' Sete'
             ELSE IF (@AUX = 8) SET @STR_EXT = @STR_EXT+' Oito'
             ELSE IF (@AUX = 9) SET @STR_EXT = @STR_EXT+' Nove'
           END
      END
   RETURN(@STR_EXT);
END
GO
/****** Object:  UserDefinedFunction [dbo].[GuidEmpty]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[GuidEmpty]()
RETURNS uniqueidentifier
AS
BEGIN
	-- Declare the return variable here
	DECLARE @ResultVar uniqueidentifier

	-- Add the T-SQL statements to compute the return value here
	SELECT @ResultVar = CAST(CAST(0 AS BINARY) AS UNIQUEIDENTIFIER)

	-- Return the result of the function
	RETURN @ResultVar

END
GO
/****** Object:  UserDefinedFunction [dbo].[PercentualPLR]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--PercentualPLR
CREATE FUNCTION [dbo].[PercentualPLR]
	(
		@pIDPosto uniqueidentifier,
		@pIDProduto uniqueidentifier, 
		@pValor money
		
	)
RETURNS money
AS
	BEGIN

	DECLARE @MyCursor CURSOR 
	Declare @percentual as money
	Declare @ValorInicial as money
	Declare @ValorFinal as money
	Declare @PercentualRetorno as money 
	set @PercentualRetorno = 0

	set @MyCursor = CURSOR FAST_FORWARD FOR Select ValorInicial,ValorFinal, Percentual From tbPLRTabela where idPosto=@pIDPosto and idProduto=@pIDProduto
		OPEN @MyCursor 
		FETCH NEXT FROM @MyCursor INTO @ValorInicial, @ValorFinal, @Percentual
		WHILE @@FETCH_STATUS = 0 
			BEGIN 
			   if @pValor >= @ValorInicial and @pValor <=@ValorFinal 
			     begin
			     	set @PercentualRetorno = @Percentual
			     end
		FETCH NEXT FROM @MyCursor INTO @ValorInicial, @ValorFinal, @Percentual
		END 
		CLOSE @MyCursor 
        DEALLOCATE @MyCursor 

        
        Return @PercentualRetorno
end

GO
/****** Object:  UserDefinedFunction [dbo].[PrimeiroDiadoMes]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[PrimeiroDiadoMes] ( 	@Mes int, 
	@Ano int
	
	)
RETURNS smalldatetime
BEGIN

    RETURN Convert(smalldatetime, CAST(@Ano AS VARCHAR(4)) + '-' +  CAST(@Mes AS VARCHAR(2)) + '-01',102)

END
GO
/****** Object:  UserDefinedFunction [dbo].[ToBase64]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[ToBase64] (@Input varchar(6000))

RETURNS varchar(8000)

AS

BEGIN

DECLARE

@Output varchar(8000),

@Bits varbinary(3),

@Pos int

SET @Pos = 1

SET @Output = ''

WHILE @Pos <= Len(@Input) BEGIN

SET @Bits = Convert(varbinary(3), Substring(@Input, @Pos, 3))

SET @Output = @Output +

Substring('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',

Substring(@Bits, 1, 1) / 4 + 1, 1)

SET @Output = @Output +

Substring('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',

Substring(@Bits, 1, 1) % 4 * 16 +

Substring(@Bits, 2, 1) / 16 + 1, 1)

SET @Output = @Output +

Substring('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',

Substring(@Bits, 2, 1) % 16 * 4 +

Substring(@Bits, 3, 1) / 64 + 1, 1)

SET @Output = @Output +

Substring('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',

Substring(@Bits, 3, 1) % 64 + 1, 1)

SET @Pos = @Pos + 3

END

RETURN (Left(@Output, Len(@Output) - 3 +

Len(@Bits)) + Replicate('=', 3 - Len(@Bits)))

END
GO
/****** Object:  UserDefinedFunction [dbo].[TrataGrupoExtenso]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--CREATE FUNCTION
CREATE FUNCTION [dbo].[TrataGrupoExtenso](
	@GRUPO DECIMAL(18, 5), @SINGULAR VARCHAR(50), 
	@PLURAL VARCHAR(50), @FLAG_E INT, @STR_EXT VARCHAR(255))
RETURNS @RESULTADO TABLE (FLAG_E INT, STR_EXT varchar(250))
AS
BEGIN
  DECLARE
    @RETORNO VARCHAR(255),
    @FLAG    INT

  SET @RETORNO = @STR_EXT
  SET @FLAG    = @FLAG_E

  IF (@GRUPO <> 0)
    BEGIN
      IF (@FLAG_E = 1) SET @RETORNO = @RETORNO + ' e'
      SET @FLAG_E = 1
      SET @RETORNO = @RETORNO + (SELECT dbo.GrupoExtenso(@grupo))
      IF (@GRUPO = 1) SET @RETORNO = @RETORNO + @SINGULAR
      ELSE SET @RETORNO = @RETORNO + @PLURAL
    END
  INSERT @RESULTADO
    (FLAG_E, STR_EXT) VALUES (@FLAG, @RETORNO)
  RETURN
END
GO
/****** Object:  UserDefinedFunction [dbo].[UltimoDiadoMes]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[UltimoDiadoMes] ( 

	@Mes int, 
	@Ano int
	
	)
RETURNS smalldatetime
BEGIN


/*
	declare @pData smalldatetime
	declare @pInputdate smalldatetime
	set @pInputdate = Convert(smalldatetime, CAST(@Ano AS VARCHAR(4)) + '-' +  CAST(@Mes AS VARCHAR(2)) + '-01',102)                
	set @pData =  (SELECT  DATEADD(d, -DAY(@pInputdate),DATEADD(m,1,@pInputdate))) 
	RETURN Convert(smalldatetime, CAST(@Ano AS VARCHAR(4)) + '-' +  CAST(@Mes AS VARCHAR(2)) + '-' + Cast(day(@pData) as Varchar(2)),102)                
	
	*/
	
	/*declare @dia int
	
	If @mes = 2
	   set @dia=28
	else
	   set @dia = 30
	 
    RETURN Convert(smalldatetime, CAST(@Ano AS VARCHAR(4)) + '-' +  CAST(@Mes AS VARCHAR(2)) + '-' + Cast(@dia as Varchar(2)),102)                */

	declare @Date smalldatetime
	set @Date = CAST(@Ano AS VARCHAR(4)) + '-' +  CAST(@Mes AS VARCHAR(2)) + '-' + Cast(1 as Varchar(2))
	RETURN DATEADD(d, -1, DATEADD(m, DATEDIFF(m, 0, @Date) + 1, 0))
END
GO
/****** Object:  Table [dbo].[Calendario]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Calendario](
	[Data] [smalldatetime] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_Calendario] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbAbastecimentos]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbAbastecimentos](
	[NumAbastecimento] [int] NOT NULL,
	[Canal] [nchar](4) NOT NULL,
	[TotalDinheiro] [nchar](20) NOT NULL,
	[TotalLitros] [nchar](20) NOT NULL,
	[ppu] [nchar](20) NOT NULL,
	[TempoAbastecimento] [nchar](16) NOT NULL,
	[Hora] [nchar](10) NOT NULL,
	[Registro] [nchar](20) NOT NULL,
	[Encerrante] [nchar](30) NOT NULL,
	[DataHoraEmissao] [nchar](40) NOT NULL,
	[COO] [nchar](20) NOT NULL,
	[NumeroNota] [nchar](20) NOT NULL,
	[Status] [nchar](20) NULL,
	[Data] [date] NOT NULL,
	[EncerranteInicial] [nchar](15) NULL,
	[ValidacaoAbastecimento] [nvarchar](max) NULL,
	[NumTanque] [int] NULL,
	[NumeroBomba] [int] NULL,
	[NumBomba] [int] NULL,
	[NumeroSerieECF] [nvarchar](20) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdProduto] [uniqueidentifier] NULL,
	[UltimoAbastecimentoCaixa] [bit] NULL,
	[IdCaixa] [uniqueidentifier] NULL,
	[ItemCupom] [int] NULL,
	[CodigoVendedor] [nvarchar](16) NULL,
	[Idvenda] [uniqueidentifier] NULL,
	[IdVendedor] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbAbastecimentos] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbAcessos]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbAcessos](
	[Descricao] [nvarchar](50) NOT NULL,
	[Maquinario] [nvarchar](50) NOT NULL,
	[Usuario] [nvarchar](60) NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdUsuario] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbAcessos] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbAcessosSupernet]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbAcessosSupernet](
	[Data] [smalldatetime] NOT NULL,
	[HoraInicio] [smalldatetime] NULL,
	[Tempo] [int] NOT NULL,
	[TempoAdicional] [int] NULL,
	[Status] [char](10) NOT NULL,
	[Senha] [nvarchar](50) NULL,
	[Cupom] [nvarchar](50) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[IdAutorizador] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbAcessosSupernet] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbAdiantamento]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbAdiantamento](
	[Descricao] [varchar](50) NOT NULL,
	[Data] [smalldatetime] NOT NULL,
	[Valor] [money] NOT NULL,
	[Finalizado] [bit] NOT NULL,
	[Saldo] [money] NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPessoa] [uniqueidentifier] NULL,
	[IdContaBancaria] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbAdiantamento] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbAdiantamentoItem]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbAdiantamentoItem](
	[NotaFiscal] [varchar](50) NOT NULL,
	[Descricao] [varchar](100) NOT NULL,
	[Data] [smalldatetime] NOT NULL,
	[Valor] [money] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdAdiantamento] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbAdiantamentoItem] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbAfericao]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbAfericao](
	[QTD] [money] NULL,
	[Lenta] [float] NULL,
	[Rapida] [float] NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdCaixa] [uniqueidentifier] NULL,
	[IdBomba] [uniqueidentifier] NULL,
	[DataMovimento] [datetime] NULL,
	[IdEntidade] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbAfericao] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbAgendamentos]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbAgendamentos](
	[Id] [uniqueidentifier] NOT NULL,
	[Descricao] [nvarchar](50) NULL,
	[Horario] [datetime] NULL,
	[Status] [nvarchar](50) NULL,
 CONSTRAINT [PK_tbAgendamentos] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbAgendamentosPosto]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbAgendamentosPosto](
	[Id] [uniqueidentifier] NOT NULL,
	[Status] [nvarchar](50) NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdAgendamento] [uniqueidentifier] NULL,
	[Modulo] [nvarchar](50) NULL,
 CONSTRAINT [PK_tbAgendamentosPosto] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbAgendamentosPostoHistorico]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbAgendamentosPostoHistorico](
	[Id] [uniqueidentifier] NOT NULL,
	[Texto] [nvarchar](2000) NULL,
	[IdAgendamentoPosto] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbAgendamentosPostoHistorico] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbAlertas]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbAlertas](
	[Mensagem] [nvarchar](1000) NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbAlertas] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbalinea]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbalinea](
	[descricao] [nvarchar](70) NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbAlinea] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbAliquotaICMSIinterEstadual]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbAliquotaICMSIinterEstadual](
	[Id] [uniqueidentifier] NULL,
	[EstadoId] [uniqueidentifier] NULL,
	[AliquotaIcms] [decimal](18, 0) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbAlteracaoEntidades]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbAlteracaoEntidades](
	[id] [uniqueidentifier] NOT NULL,
	[Data] [smalldatetime] NOT NULL,
	[CampoAlterado] [nchar](8) NOT NULL,
	[ConteudoAnterior] [nvarchar](100) NOT NULL,
	[idEntidade] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbAlteracaoEntidades] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbAlteracaoPrecoPorbicoAgendamento]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbAlteracaoPrecoPorbicoAgendamento](
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NOT NULL,
	[IdEntidade] [uniqueidentifier] NOT NULL,
	[Data] [date] NOT NULL,
	[Turno] [int] NULL,
	[TipoAlteracao] [nvarchar](50) NOT NULL,
	[Efetuada] [bit] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbAlteracaoPrecoPorBicoAgendamentoItens]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbAlteracaoPrecoPorBicoAgendamentoItens](
	[Id] [uniqueidentifier] NOT NULL,
	[IdAlteracao] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NOT NULL,
	[IdBico] [uniqueidentifier] NOT NULL,
	[Valor] [decimal](18, 3) NOT NULL,
	[Efetuada] [bit] NULL,
	[Inutilizada] [bit] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbAlteracaoProduto]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbAlteracaoProduto](
	[Id] [uniqueidentifier] NOT NULL,
	[Idproduto] [uniqueidentifier] NOT NULL,
	[DataInicioUtilizacao] [smalldatetime] NOT NULL,
	[DataFinalUtilizacao] [smalldatetime] NULL,
	[DescricaoAnterior] [nvarchar](100) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbAlteraEstoqueManual]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbAlteraEstoqueManual](
	[Id] [uniqueidentifier] NULL,
	[Motivo] [nvarchar](200) NULL,
	[DataMovimento] [datetime] NULL,
	[EstoqueAntigo] [int] NULL,
	[EstoqueNovo] [int] NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[IdProduto] [uniqueidentifier] NULL,
	[IdCaixa] [uniqueidentifier] NULL,
	[IdPosto] [uniqueidentifier] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbAnalistaFornecedorCombustivel]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbAnalistaFornecedorCombustivel](
	[Id] [uniqueidentifier] NOT NULL,
	[Nome] [nvarchar](200) NULL,
	[EntidadeId] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbAnalistaFornecedorCombustivel] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbBancos]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbBancos](
	[NumBanco] [int] NOT NULL,
	[Nome] [nvarchar](100) NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbBancos] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbBloqueio]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbBloqueio](
	[Descricao] [ntext] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbBloqueio] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbBombaLacres]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbBombaLacres](
	[id] [uniqueidentifier] NOT NULL,
	[NumeroLacre] [nvarchar](50) NOT NULL,
	[DataAplicacao] [smalldatetime] NOT NULL,
	[DataRemocao] [smalldatetime] NULL,
	[NumeroBomba] [int] NOT NULL,
	[IdPosto] [uniqueidentifier] NOT NULL,
	[IdDescontinuidadeEncerrante] [uniqueidentifier] NULL,
	[Acao] [varchar](50) NULL,
 CONSTRAINT [PK_tbBombaLacres] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbBombas]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbBombas](
	[NumBomba] [int] NOT NULL,
	[Encerrante] [float] NOT NULL,
	[Ativo] [bit] NOT NULL,
	[InativoEm] [datetime] NULL,
	[DiferencaPreco] [money] NOT NULL,
	[NumeroBomba] [int] NULL,
	[Canal] [nchar](2) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdTanque] [uniqueidentifier] NULL,
	[NumeroSerie] [nvarchar](50) NULL,
	[Fabricante] [nvarchar](50) NULL,
	[Modelo] [nvarchar](50) NULL,
	[TipoMedicao] [nchar](1) NULL,
	[LimiteEncerrante] [numeric](18, 3) NULL,
	[PrecoDiferenciado] [decimal](18, 3) NOT NULL,
	[CasasDecPreco] [int] NULL,
 CONSTRAINT [PK_tbBombas] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbCaixa]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbCaixa](
	[TCaixa] [int] NOT NULL,
	[Dia] [smalldatetime] NULL,
	[DataAbertura] [datetime] NULL,
	[DataFechamento] [datetime] NULL,
	[PodeFechar] [bit] NOT NULL,
	[PrimeiroAcesso] [bit] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[Troco] [numeric](18, 4) NULL,
	[IdPontoVenda] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbCaixa] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbCaixaItens]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbCaixaItens](
	[TipoLeitura] [varchar](1) NOT NULL,
	[idObjeto] [int] NULL,
	[ValorCalculado] [float] NOT NULL,
	[ValorLido] [float] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdCaixa] [uniqueidentifier] NULL,
	[PrecoProduto] [float] NULL,
 CONSTRAINT [PK_tbCaixaItens] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbCaixaTrabalhadores]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbCaixaTrabalhadores](
	[Id] [uniqueidentifier] NOT NULL,
	[IdCaixa] [uniqueidentifier] NULL,
	[IdEntidade] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbCaixaTrabalhadores] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbCarretaTransportadora]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbCarretaTransportadora](
	[Placa] [nvarchar](50) NULL,
	[Compartimento] [nvarchar](50) NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdTransportadora] [uniqueidentifier] NULL,
	[Ativo] [bit] NOT NULL,
 CONSTRAINT [PK_tbCarretaTransportadora] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbCartaFrete]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbCartaFrete](
	[idCarta] [int] NULL,
	[DataEmissao] [datetime] NULL,
	[NumNota] [nvarchar](10) NULL,
	[ValorLiquido] [money] NULL,
	[ValorAbastecimento] [money] NULL,
	[ValorAdiantamento] [money] NULL,
	[ValorRetorno] [money] NULL,
	[Placa] [nvarchar](50) NULL,
	[Motorista] [nvarchar](100) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdCaixaRetorno] [uniqueidentifier] NULL,
	[IdVenda] [uniqueidentifier] NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[IdEnviada] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbCartaFrete] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbCartaFreteContaCorrente]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbCartaFreteContaCorrente](
	[Data] [smalldatetime] NOT NULL,
	[Descricao] [varchar](50) NOT NULL,
	[Valor] [money] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbCartaFreteContaCorrente] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbCartaFreteEnvio]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbCartaFreteEnvio](
	[Data] [smalldatetime] NOT NULL,
	[Valor] [money] NOT NULL,
	[Pago] [bit] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdContaPagamento] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbCartaFreteEnvio] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbCartaoIdentifid]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbCartaoIdentifid](
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NOT NULL,
	[CodigoIdentifid] [nvarchar](50) NOT NULL,
	[IdEntidade] [uniqueidentifier] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbCartoes]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbCartoes](
	[Tipo] [char](10) NOT NULL,
	[Descricao] [nvarchar](100) NULL,
	[Lote] [nvarchar](20) NOT NULL,
	[Data] [smalldatetime] NOT NULL,
	[DataVencimento] [smalldatetime] NOT NULL,
	[Valor] [money] NOT NULL,
	[ValorLiquido] [money] NOT NULL,
	[Conciliado] [bit] NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdOperadora] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbCartoes] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbCategoriaServicos]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbCategoriaServicos](
	[Id] [uniqueidentifier] NOT NULL,
	[Descricao] [nvarchar](80) NOT NULL,
 CONSTRAINT [PK_tbCategoriaServicos] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbCEST]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbCEST](
	[Id] [uniqueidentifier] NOT NULL,
	[CEST] [nvarchar](50) NOT NULL,
	[Descricao] [nvarchar](max) NOT NULL,
	[NCM] [nvarchar](100) NOT NULL,
	[Segmento] [nvarchar](100) NOT NULL,
	[IdNCM] [uniqueidentifier] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbCFOP]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbCFOP](
	[id] [uniqueidentifier] NOT NULL,
	[CFOP] [varchar](9) NOT NULL,
	[NaturezaOperacao] [nvarchar](250) NOT NULL,
	[Descricao] [nvarchar](2000) NULL,
	[Ativo] [bit] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbCheques]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbCheques](
	[NumeroCheque] [varchar](50) NULL,
	[Data] [smalldatetime] NULL,
	[valor] [money] NULL,
	[Nominal] [varchar](50) NULL,
	[Utilizacao] [varchar](200) NULL,
	[Assinatura] [varchar](20) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdContaBancaria] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbCheques] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbChequeSemFundo]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbChequeSemFundo](
	[nCheque] [varchar](10) NOT NULL,
	[valor] [money] NOT NULL,
	[DataEstorno] [smalldatetime] NULL,
	[TipoEstorno] [nvarchar](5) NULL,
	[pago] [bit] NULL,
	[DataAtualizacao] [smalldatetime] NOT NULL,
	[HistoricoAtualizacao] [varchar](20) NULL,
	[PrimeiraApresentacao] [bit] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[IdRefBancaria] [uniqueidentifier] NULL,
	[IdContaBancaria] [uniqueidentifier] NULL,
	[IdAlinea] [uniqueidentifier] NULL,
	[IdResponsavel] [uniqueidentifier] NULL,
	[IdLinhaRastreamento] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbChequeSemFundo] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbCidades]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbCidades](
	[Descricao] [varchar](50) NOT NULL,
	[UF] [char](2) NULL,
	[CodigoIBGE] [nvarchar](50) NULL,
	[DestinoFrete] [bit] NULL,
	[cUF] [nchar](8) NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbCidades] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbCodigoServico]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbCodigoServico](
	[IdCodServico] [varchar](10) NOT NULL,
	[Servico] [nvarchar](500) NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbCodigoServico] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbColaboradoresDifCaixa]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbColaboradoresDifCaixa](
	[Descricao] [varchar](150) NULL,
	[valor] [money] NOT NULL,
	[Pago] [bit] NOT NULL,
	[Tipo] [char](1) NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[IdCaixa] [uniqueidentifier] NULL,
	[MotivoQuebraSobra] [nvarchar](200) NULL,
 CONSTRAINT [PK_tbColaboradoresDifCaixa] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbConcorrentes]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbConcorrentes](
	[Nome] [nvarchar](100) NOT NULL,
	[Endereco] [nvarchar](100) NULL,
	[Bairro] [nvarchar](60) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdCidade] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbConcorrentes] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbConcorrentesPreco]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbConcorrentesPreco](
	[Gasolina] [smallmoney] NOT NULL,
	[GasolinaAditivada] [smallmoney] NOT NULL,
	[Etanol] [smallmoney] NOT NULL,
	[DieselS500] [smallmoney] NOT NULL,
	[DieselS10] [smallmoney] NOT NULL,
	[Observacoes] [nvarchar](4000) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdConcorrente] [uniqueidentifier] NULL,
	[DieselS10Aditivado] [smallmoney] NULL,
	[DieselS500Aditivado] [smallmoney] NULL,
 CONSTRAINT [PK_tbConcorrentesPreco] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbConcorrentesPrecoAlteracao]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbConcorrentesPrecoAlteracao](
	[Data] [smalldatetime] NOT NULL,
	[Mensagem] [nvarchar](50) NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdCidade] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbConcorrentesPrecoAlteracao] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbConcorrentesPrecoHistorico]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbConcorrentesPrecoHistorico](
	[Id] [uniqueidentifier] NOT NULL,
	[Data] [smalldatetime] NOT NULL,
	[Mensagem] [nvarchar](50) NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdCidade] [uniqueidentifier] NULL,
	[IdUsuario] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbConcorrentesPrecoHistorico] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 80) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbConfiguracao]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbConfiguracao](
	[DataConciliacao] [smalldatetime] NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbConfiguracao] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbConfiguracaoEmail]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbConfiguracaoEmail](
	[Id] [uniqueidentifier] NOT NULL,
	[Servidor] [nvarchar](30) NOT NULL,
	[Porta] [nvarchar](10) NOT NULL,
	[Email] [nvarchar](30) NOT NULL,
	[SenhaApp] [nvarchar](200) NOT NULL,
	[PostoId] [uniqueidentifier] NOT NULL,
	[KeyCript] [nvarchar](100) NOT NULL,
	[IvCript] [nvarchar](100) NOT NULL,
 CONSTRAINT [PK_tbConfiguracaoEmail] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbConfiguracaoEmissaoAutomatica]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbConfiguracaoEmissaoAutomatica](
	[Id] [uniqueidentifier] NOT NULL,
	[TotalSegundos] [int] NULL,
 CONSTRAINT [PK_tbConfiguracaoEmissaoAutomatica] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbConfiguracaoEmissaoAutomaticaPosto]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbConfiguracaoEmissaoAutomaticaPosto](
	[Id] [uniqueidentifier] NOT NULL,
	[TotalVendas] [int] NULL,
	[IdPosto] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbConfiguracaoEmissaoAutomaticaPosto] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbConfiguracaoPAF_ECF]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbConfiguracaoPAF_ECF](
	[DescricaoRequisito] [nvarchar](50) NULL,
	[DescricaoItem] [nvarchar](50) NULL,
	[DescricaoAlinea] [nvarchar](50) NULL,
	[Descritivo] [nvarchar](255) NULL,
	[Chave] [nvarchar](50) NULL,
	[Valor] [nvarchar](50) NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbConfiguracaoPAF_ECF] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbConhecimentoFreteEletronico]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbConhecimentoFreteEletronico](
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NOT NULL,
	[IdEntidade] [uniqueidentifier] NOT NULL,
	[DataEmissao] [datetime] NOT NULL,
	[DataEntrada] [date] NOT NULL,
	[NumeroCTE] [nvarchar](50) NOT NULL,
	[SerieCTE] [nvarchar](50) NOT NULL,
	[ChaveCTE] [nvarchar](50) NOT NULL,
	[XML_CTE] [nvarchar](max) NOT NULL,
	[Status] [nvarchar](50) NULL,
	[Motivo] [nvarchar](50) NULL,
	[Recibo] [nvarchar](50) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbContadores]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbContadores](
	[NomeContador] [nvarchar](50) NOT NULL,
	[CPFContador] [varchar](20) NOT NULL,
	[CRC] [nchar](40) NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdEscritorio] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbContadores] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbContadoresPosto]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbContadoresPosto](
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdContador] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbContadoresPosto] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbContasBancarias]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbContasBancarias](
	[Titular] [varchar](80) NULL,
	[Banco] [varchar](10) NOT NULL,
	[Descricao] [varchar](50) NULL,
	[Agencia] [varchar](20) NOT NULL,
	[Conta] [varchar](20) NOT NULL,
	[Saldo] [money] NOT NULL,
	[DataConciliacao] [smalldatetime] NULL,
	[Ativo] [bit] NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[NomeBanco] [nvarchar](50) NULL,
	[IdBanco] [uniqueidentifier] NULL,
	[RecebePix] [bit] NOT NULL,
 CONSTRAINT [PK_tbContasBancarias] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbContasPagarReceber]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbContasPagarReceber](
	[idTipo] [char](10) NULL,
	[CodConta] [bigint] NULL,
	[Data] [smalldatetime] NULL,
	[DataVencto] [smalldatetime] NULL,
	[DataPagamento] [smalldatetime] NULL,
	[IdTipoDocto] [nvarchar](4) NULL,
	[NumDocto] [nvarchar](50) NULL,
	[DataDoc] [smalldatetime] NULL,
	[VrUDespesa] [money] NULL,
	[Valor] [money] NULL,
	[Pago] [money] NOT NULL,
	[Juros] [money] NULL,
	[Desconto] [money] NULL,
	[TaxaCartao] [money] NULL,
	[Despesa] [bit] NOT NULL,
	[Ativa] [bit] NOT NULL,
	[InfoAdic] [nvarchar](100) NULL,
	[Autorizado] [nvarchar](50) NULL,
	[Placa] [nvarchar](50) NULL,
	[Local] [nvarchar](50) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdContaBancaria] [uniqueidentifier] NULL,
	[IdPedCaixa] [uniqueidentifier] NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[IdHistorico] [uniqueidentifier] NULL,
	[IdProduto] [uniqueidentifier] NULL,
	[IdCaixaRecebimento] [uniqueidentifier] NULL,
	[IdVenda] [uniqueidentifier] NULL,
	[IdChequeDev] [uniqueidentifier] NULL,
	[TipoIntencaoPagar] [varchar](100) NULL,
	[IdUsuarioInsercao] [uniqueidentifier] NULL,
	[InsercaoData] [date] NULL,
	[IdUsuarioAlteracao] [uniqueidentifier] NULL,
	[AlteracaoData] [date] NULL,
	[ValorQuebraCaixa] [money] NULL,
	[AnoPagamentoColaborador] [int] NULL,
	[MesPagamentoColaborador] [int] NULL,
	[TipoDespesaSalario] [char](2) NULL,
	[IdItemPedidoCombustivel] [uniqueidentifier] NULL,
	[IdOperadoraProduto] [uniqueidentifier] NULL,
	[IdPedidoRevenda] [uniqueidentifier] NULL,
	[IdHistoricoPagamentoCliente] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbContasPagarReceber] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [IX_TBCONTASPAGARRECEBER]    Script Date: 20/05/2024 14:44:58 ******/
CREATE CLUSTERED INDEX [IX_TBCONTASPAGARRECEBER] ON [dbo].[tbContasPagarReceber]
(
	[idTipo] ASC,
	[DataVencto] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbContasPagarReceberItens]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbContasPagarReceberItens](
	[TipoDoc] [nvarchar](4) NOT NULL,
	[NumeroDoc] [nvarchar](20) NOT NULL,
	[Valor] [money] NOT NULL,
	[DataPagamento] [smalldatetime] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdConta] [uniqueidentifier] NULL,
	[IdContaBancaria] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbContasPagarReceberItens] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbControlePix]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbControlePix](
	[Id] [uniqueidentifier] NOT NULL,
	[Valor] [money] NOT NULL,
	[Troco] [money] NOT NULL,
	[DataHora] [datetime] NOT NULL,
	[Status] [nvarchar](20) NOT NULL,
	[TxId] [nvarchar](50) NOT NULL,
	[BrCode] [nvarchar](250) NOT NULL,
	[CNPJ] [nvarchar](20) NULL,
	[NomePagador] [nvarchar](100) NULL,
	[DataPagamento] [nvarchar](50) NULL,
	[PostoId] [uniqueidentifier] NULL,
	[PontoVendaId] [uniqueidentifier] NULL,
	[CaixaId] [uniqueidentifier] NULL,
	[VendedorId] [uniqueidentifier] NULL,
	[VendaId] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbControlePix] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbControleRetiradaAtendente]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbControleRetiradaAtendente](
	[Tipo] [nchar](2) NOT NULL,
	[Valor] [money] NOT NULL,
	[DataHora] [datetime] NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[CaixaId] [uniqueidentifier] NULL,
	[vendaLioId] [uniqueidentifier] NULL,
	[VendedorId] [uniqueidentifier] NULL,
	[PostoId] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbControleRetiradaAtendente] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbControleRetiradaAtendenteItens]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbControleRetiradaAtendenteItens](
	[Id] [uniqueidentifier] NOT NULL,
	[RetiradaAtendenteId] [uniqueidentifier] NOT NULL,
	[PostoId] [uniqueidentifier] NULL,
	[Valor] [decimal](10, 2) NULL,
	[QuantidadeCedulasMoedas] [int] NULL,
 CONSTRAINT [PK_tbControleRetiradaAtendenteItens] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbControleRetiradaCaixa]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbControleRetiradaCaixa](
	[Id] [uniqueidentifier] NOT NULL,
	[ControleRetiradaAtendenteId] [uniqueidentifier] NULL,
	[ConfirmaValorRecebido] [bit] NULL,
	[LoginCaixaId] [uniqueidentifier] NULL,
	[PostoId] [uniqueidentifier] NULL,
	[ValorCorreto] [money] NULL,
 CONSTRAINT [PK_tbControleRetiradaCaixa] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbControleTelas]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbControleTelas](
	[Id] [uniqueidentifier] NOT NULL,
	[IdUsuario] [uniqueidentifier] NOT NULL,
	[CodigoTela] [varchar](50) NULL,
 CONSTRAINT [PK_tbControleTelas] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 80) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbConvenios]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbConvenios](
	[Descricao] [nvarchar](100) NOT NULL,
	[Gasolina] [money] NULL,
	[Alcool] [money] NULL,
	[Diesel] [money] NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[GasolinaAditivada] [money] NULL,
 CONSTRAINT [PK_tbConvenios] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbCotacao]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbCotacao](
	[Gasolina] [float] NOT NULL,
	[GasolinaAditivada] [float] NOT NULL,
	[Alcool] [float] NOT NULL,
	[Diesel] [float] NOT NULL,
	[DieselFiltrado] [float] NOT NULL,
	[DataAlteracao] [smalldatetime] NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdEntidade] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbCotacao] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbCTEDistribuicaoDfe]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbCTEDistribuicaoDfe](
	[Id] [uniqueidentifier] NOT NULL,
	[Emissao] [date] NOT NULL,
	[Fornecedor] [nvarchar](100) NOT NULL,
	[CNPJ] [nvarchar](50) NOT NULL,
	[Chave] [nvarchar](50) NOT NULL,
	[Importado] [bit] NOT NULL,
	[Cancelado] [bit] NOT NULL,
	[Valor] [money] NOT NULL,
	[NSU] [nchar](15) NOT NULL,
	[IdPosto] [uniqueidentifier] NOT NULL,
	[MesCompetencia] [int] NOT NULL,
	[AnoCompetencia] [int] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbCuponsPerdidos]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbCuponsPerdidos](
	[Id] [uniqueidentifier] NOT NULL,
	[Cupons] [decimal](18, 0) NOT NULL,
	[Recuperado] [bit] NOT NULL,
	[idCaixa] [uniqueidentifier] NOT NULL,
	[idPosto] [uniqueidentifier] NOT NULL,
	[idPontoVenda] [uniqueidentifier] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbDepositoChequePre]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbDepositoChequePre](
	[Pago] [bit] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdVendaItemPagamento] [uniqueidentifier] NULL,
	[DataInclusaoNoMovimento] [date] NULL,
 CONSTRAINT [PK_tbDepositoChequePre] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbDepositos]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbDepositos](
	[Tipo] [char](2) NOT NULL,
	[Valor] [money] NOT NULL,
	[Documento] [varchar](50) NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdCaixa] [uniqueidentifier] NULL,
	[DataDeposito] [datetime] NULL,
 CONSTRAINT [PK_tbDepositos] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbDepRet]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbDepRet](
	[dep] [money] NULL,
	[ret] [money] NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbDepRet] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbDescontinuidadeEncerrantes]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbDescontinuidadeEncerrantes](
	[Id] [uniqueidentifier] NOT NULL,
	[NumeroBomba] [int] NOT NULL,
	[NumeroBico] [int] NOT NULL,
	[Data] [datetime] NOT NULL,
	[Motivo] [nvarchar](500) NOT NULL,
	[Justificativa] [nvarchar](500) NULL,
	[Correcao] [nvarchar](500) NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[EncerranteAnterior] [float] NULL,
	[EncerrantePosterior] [float] NULL,
	[Cnpj] [varchar](20) NULL,
	[Cpf] [varchar](20) NULL,
	[Nome] [varchar](100) NULL,
	[NumeroIntervencao] [int] NOT NULL,
	[NumAbastecimento] [int] NOT NULL,
 CONSTRAINT [PK__tbDescon__3214EC07D0E04A9C] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbDescontoFormaPagamento]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbDescontoFormaPagamento](
	[Id] [uniqueidentifier] NOT NULL,
	[ValorBomba] [money] NOT NULL,
	[Diferenca] [money] NOT NULL,
	[ValorDesconto] [money] NOT NULL,
	[DataHora] [datetime] NOT NULL,
	[IdFormaPagamento] [uniqueidentifier] NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[IdProduto] [uniqueidentifier] NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdPontoVenda] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbDescontoFormaPagamento] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbDespesa]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbDespesa](
	[VALOR] [money] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdCaixa] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbDespesa] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbDespesaItens]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbDespesaItens](
	[QTD] [int] NOT NULL,
	[PRECOCUSTO] [money] NOT NULL,
	[PRECOVENDA] [money] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdDespesa] [uniqueidentifier] NULL,
	[IdProduto] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbDespesaItens] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbDespesasLimite]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbDespesasLimite](
	[Ano] [int] NOT NULL,
	[Mes] [int] NOT NULL,
	[Valor] [money] NOT NULL,
	[Acrescimo] [money] NOT NULL,
	[Observacao] [nvarchar](4000) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdHistorico] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbDespesasLimite] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbDias]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbDias](
	[Dia] [int] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbDias] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbDocumentos]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbDocumentos](
	[Documento] [image] NOT NULL,
	[NomeArquivo] [nvarchar](100) NOT NULL,
	[Tipo] [nvarchar](30) NOT NULL,
	[Filtro] [int] NULL,
	[Descricao] [nvarchar](50) NOT NULL,
	[TipoDoc] [nvarchar](50) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbDocumentos] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbDocumentosEmitidos]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbDocumentosEmitidos](
	[COO] [int] NOT NULL,
	[GNF] [int] NOT NULL,
	[GRG] [int] NOT NULL,
	[CDC] [int] NOT NULL,
	[TipoDocumento] [char](2) NOT NULL,
	[DataRodape] [smalldatetime] NOT NULL,
	[ValidacaoDocumentos] [nvarchar](200) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdEcf] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbDocumentosEmitidos] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbEcfs]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbEcfs](
	[NumeroSerie] [nvarchar](50) NOT NULL,
	[NumeroCaixa] [int] NOT NULL,
	[Modelo] [nvarchar](20) NOT NULL,
	[MFAdicional] [char](1) NOT NULL,
	[Marca] [nvarchar](20) NULL,
	[Tipo] [nvarchar](7) NULL,
	[Ativo] [bit] NULL,
	[ValidacaoECF] [nvarchar](200) NULL,
	[VersaoFirmware] [nchar](10) NULL,
	[DataHoraSB] [smalldatetime] NULL,
	[NumeroSubstituicoes] [int] NULL,
	[CodigoNacionalFabricacao] [nchar](6) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbEcfs] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbEnroll]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbEnroll](
	[Template] [image] NULL,
	[NomeApresentado] [nvarchar](100) NOT NULL,
	[RG] [nvarchar](20) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdEntidade] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbEnroll] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbEntidadeDiaPagamento]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbEntidadeDiaPagamento](
	[Dia] [int] NOT NULL,
	[uso] [bit] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[DiaVencimento] [int] NULL,
 CONSTRAINT [PK_tbEntidadeDiaPagamento] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbEntidadeFormaPagPrazo]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbEntidadeFormaPagPrazo](
	[Id] [uniqueidentifier] NOT NULL,
	[FormaPagamentoPrazo] [nvarchar](50) NULL,
	[IdEntidade] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbEntidadeFormaPagPrazo] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbEntidadeRefBanc]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbEntidadeRefBanc](
	[Banco1] [nvarchar](50) NULL,
	[Agencia1] [nvarchar](10) NULL,
	[Conta1] [nvarchar](20) NULL,
	[FoneBanco1] [nvarchar](20) NULL,
	[ContatoBanco1] [nvarchar](20) NULL,
	[ContaDesde1] [smalldatetime] NULL,
	[Documento] [nvarchar](50) NULL,
	[Serasa] [nvarchar](50) NULL,
	[Ativo] [bit] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[DataConsulta] [datetime] NULL,
	[ConsultaFinanceira] [varchar](100) NULL,
	[ProtocoloConsulta] [varchar](100) NULL,
	[AprovadoConsulta] [bit] NULL,
 CONSTRAINT [PK_tbEntidadeRefBanc] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbEntidadeRefComl]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbEntidadeRefComl](
	[RefComercial] [char](50) NULL,
	[NomeContato] [char](40) NULL,
	[Fone] [char](20) NULL,
	[Obs] [nchar](240) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdEntidade] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbEntidadeRefComl] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbEntidades]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbEntidades](
	[Tipo] [varchar](4) NULL,
	[Pessoa] [char](4) NOT NULL,
	[RzSocial] [varchar](80) NULL,
	[NomeUsual] [varchar](50) NULL,
	[CNPJ] [varchar](20) NOT NULL,
	[IE] [varchar](50) NULL,
	[Emissor] [varchar](50) NULL,
	[Endereco] [varchar](100) NULL,
	[Bairro] [varchar](50) NULL,
	[Municipio] [varchar](50) NULL,
	[UF] [varchar](50) NULL,
	[CEP] [varchar](50) NULL,
	[Fone0800] [varchar](50) NULL,
	[Fone] [varchar](50) NULL,
	[Fax] [varchar](50) NULL,
	[Contato] [varchar](50) NULL,
	[dtCadastro] [smalldatetime] NULL,
	[DtNascFund] [smalldatetime] NULL,
	[Prazo] [bit] NOT NULL,
	[CartaFrete] [bit] NOT NULL,
	[Cheque3] [bit] NOT NULL,
	[Limite] [money] NOT NULL,
	[SaldoLimite] [money] NOT NULL,
	[DiaFechamento] [int] NOT NULL,
	[ProxFechamento] [smalldatetime] NULL,
	[Tolerancia] [int] NOT NULL,
	[Obs] [varchar](300) NULL,
	[Ativo] [bit] NOT NULL,
	[DataBloqueio] [smalldatetime] NULL,
	[Especial] [bit] NOT NULL,
	[Serasa] [varchar](15) NULL,
	[FornComb] [bit] NOT NULL,
	[Transportadora] [bit] NULL,
	[Email] [nvarchar](1000) NULL,
	[NVendasPrazo] [float] NOT NULL,
	[PagaChequePrazo] [bit] NOT NULL,
	[SenhaPrazo] [varchar](10) NULL,
	[DataExpiracao] [smalldatetime] NOT NULL,
	[Alerta] [varchar](100) NULL,
	[Combustivel] [bit] NULL,
	[Lubrificante] [bit] NULL,
	[Conveniencia] [bit] NULL,
	[PrazoFornecedor] [char](10) NULL,
	[Contador] [bit] NOT NULL,
	[Cheque] [bit] NOT NULL,
	[ObsComercial] [nvarchar](2000) NULL,
	[OperadoraCartao] [bit] NOT NULL,
	[LiberadoPagarComCartao] [bit] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPostoCadastro] [uniqueidentifier] NULL,
	[IdCidade] [uniqueidentifier] NULL,
	[IdConvenio] [uniqueidentifier] NULL,
	[IdVendaCadastrou] [uniqueidentifier] NULL,
	[CodigoVendedor] [int] NULL,
	[TipoFornecedorLubrificante] [bit] NULL,
	[TipoFornecedorConveniencia] [bit] NULL,
	[TipoFornecedorServico] [bit] NULL,
	[Suframa] [nvarchar](10) NULL,
	[ProxVencimento] [smalldatetime] NULL,
	[Complemento] [nvarchar](50) NULL,
	[Numero] [nvarchar](50) NULL,
	[RG] [nvarchar](50) NULL,
	[ProdutorRural] [bit] NULL,
	[ContribuinteICMS] [bit] NULL,
	[TipoFornecedorAguaCanalizada] [bit] NOT NULL,
	[TipoFornecedorEnergiaEletrica] [bit] NOT NULL,
	[TipoFornecedorTelecomunicacao] [bit] NOT NULL,
	[TipoFornecedorComunicacao] [bit] NOT NULL,
	[PrazoBloqueadoData] [bit] NOT NULL,
	[LiberadoPagarComCartaoCredito] [bit] NOT NULL,
	[UltimaDataSincronizacaoForcada] [date] NULL,
	[Banco] [bit] NOT NULL,
 CONSTRAINT [PK_tbEntidades] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [idx_entidade_rzsocial]    Script Date: 20/05/2024 14:44:58 ******/
CREATE CLUSTERED INDEX [idx_entidade_rzsocial] ON [dbo].[tbEntidades]
(
	[RzSocial] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbEntidadesFone]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbEntidadesFone](
	[Descricao] [varchar](50) NOT NULL,
	[Fone] [varchar](70) NOT NULL,
	[Principal] [bit] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdEntidade] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbEntidadesFone] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbEntidadesPonto]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbEntidadesPonto](
	[InicioTrabalho] [smalldatetime] NULL,
	[InicioAlmoco] [smalldatetime] NULL,
	[FimAlmoco] [smalldatetime] NULL,
	[FimTrabalho] [smalldatetime] NULL,
	[Falta] [bit] NOT NULL,
	[Folga] [bit] NOT NULL,
	[Ferias] [bit] NOT NULL,
	[Atestado] [bit] NULL,
	[Afastado] [bit] NULL,
	[Advertencia] [bit] NULL,
	[MarcadoIniTrab] [bit] NULL,
	[MarcadoIniDesc] [bit] NULL,
	[MarcadoFimDesc] [bit] NULL,
	[MarcadoFimTrab] [bit] NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdEntidade] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbEntidadesPonto] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbEquipamentoPostos]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbEquipamentoPostos](
	[Codigo] [int] NOT NULL,
	[Status] [int] NOT NULL,
	[Obs] [varchar](200) NULL,
	[Preco] [money] NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdEquipamento] [uniqueidentifier] NULL,
	[IdPosto] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbEquipamentoPostos] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbEquipamentos]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbEquipamentos](
	[Descricao] [nvarchar](50) NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbEquipamentos] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbEscalaTrabalho]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbEscalaTrabalho](
	[Data] [smalldatetime] NOT NULL,
	[Folga] [bit] NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[IdHorario] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbEscalaTrabalho] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbFeriados]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbFeriados](
	[Descricao] [nvarchar](50) NOT NULL,
	[Data] [nvarchar](10) NOT NULL,
	[Tipo] [char](1) NOT NULL,
	[Local] [nvarchar](2) NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbFeriados] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbFormaPagamento]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbFormaPagamento](
	[Id] [uniqueidentifier] NOT NULL,
	[Nome] [nvarchar](20) NOT NULL,
	[Sigla] [nvarchar](20) NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbFormaPagamento] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbFrete]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbFrete](
	[Valor] [float] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdDestino] [uniqueidentifier] NULL,
	[IdTransportadora] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbFrete] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbFuncs]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbFuncs](
	[CTPS] [nvarchar](25) NULL,
	[PIS] [nvarchar](20) NULL,
	[TitEleitor] [nvarchar](25) NULL,
	[Funcao] [nvarchar](35) NULL,
	[Admissao] [smalldatetime] NULL,
	[Salario] [money] NULL,
	[PercPericulosidade] [float] NULL,
	[AdicNoturno] [float] NULL,
	[QCaixa] [float] NULL,
	[SalFamilia] [money] NULL,
	[Bonificacao] [money] NULL,
	[Premio] [money] NULL,
	[AjudaCusto] [money] NULL,
	[Folguista] [bit] NULL,
	[Gerente] [bit] NOT NULL,
	[Contador] [bit] NOT NULL,
	[Frentista] [bit] NOT NULL,
	[Ferias] [smalldatetime] NULL,
	[CestaBasica] [smallmoney] NULL,
	[Administrativa] [bit] NULL,
	[TipoContrato] [nvarchar](20) NULL,
	[FrentistaCaixa] [bit] NULL,
	[FrentistaCaixaNoturno] [bit] NULL,
	[Atendimento] [bit] NULL,
	[Marketing] [bit] NULL,
	[Vendas] [bit] NULL,
	[EstadoCivil] [nvarchar](50) NULL,
	[Conjuge] [nvarchar](50) NULL,
	[Identifid] [nvarchar](16) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[IdHorario] [uniqueidentifier] NULL,
	[IdHorario1] [uniqueidentifier] NULL,
	[Ativo] [bit] NOT NULL,
 CONSTRAINT [PK_tbFuncs] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbGARE]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbGARE](
	[QTD] [int] NOT NULL,
	[valor] [money] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbGARE] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbGNRE]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbGNRE](
	[GNRE] [money] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbGNRE] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbGrupo]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbGrupo](
	[Descricao] [varchar](80) NULL,
	[idSetor] [char](2) NULL,
	[TipoAliquota] [nvarchar](5) NULL,
	[Aliquota] [money] NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbGrupo] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbGrupos]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbGrupos](
	[Descricao] [nvarchar](25) NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbGrupos] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbHashesArquivos]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbHashesArquivos](
	[Id] [uniqueidentifier] NOT NULL,
	[Hash] [nvarchar](200) NOT NULL,
	[NomeArquivo] [nvarchar](200) NOT NULL,
	[ModuloDosArquivos] [nvarchar](20) NOT NULL,
 CONSTRAINT [PK_tbHashesArquivos] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbHistoricoPagamentoCliente]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbHistoricoPagamentoCliente](
	[Id] [uniqueidentifier] NOT NULL,
	[DataPagamento] [datetime] NULL,
	[TipoRecebimento] [nvarchar](50) NULL,
	[ClienteId] [uniqueidentifier] NULL,
	[ValorTotal] [float] NULL,
	[DataVencimento] [datetime] NULL,
	[SaldoVencimento] [float] NULL,
	[DataFechamento] [datetime] NULL,
	[PostoId] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbHistoricoPagamentoCliente] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbHistoricos]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbHistoricos](
	[Descricao] [nvarchar](30) NULL,
	[Despesa] [bit] NOT NULL,
	[Ativo] [bit] NOT NULL,
	[Tipo] [nvarchar](50) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[UsadoSistema] [bit] NOT NULL,
 CONSTRAINT [PK_tbHistoricos] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbHoleriteHistoricos]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbHoleriteHistoricos](
	[Descricao] [nvarchar](50) NOT NULL,
	[Tipo] [char](1) NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbHoleriteHistoricos] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbHorarios]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbHorarios](
	[Descricao] [nvarchar](50) NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbHorarios] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbIcones]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbIcones](
	[id] [uniqueidentifier] NULL,
	[icone] [image] NULL,
	[Numero] [int] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbInventario]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbInventario](
	[Id] [uniqueidentifier] NOT NULL,
	[IdProduto] [uniqueidentifier] NOT NULL,
	[Quantidade] [decimal](18, 3) NOT NULL,
	[PrecoCusto] [decimal](18, 3) NOT NULL,
	[IdPosto] [uniqueidentifier] NOT NULL,
	[Ano] [int] NOT NULL,
	[Mes] [int] NOT NULL,
	[CompetenciaSPED] [int] NOT NULL,
	[DataHoraGravacao] [datetime] NOT NULL,
 CONSTRAINT [PK_tbInventario] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbItemPendenciaSincronizacao]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbItemPendenciaSincronizacao](
	[IdPendenciaSincronizacao] [uniqueidentifier] NULL,
	[IdItemSincronizacao] [uniqueidentifier] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[NomeTabela] [nvarchar](50) NULL,
 CONSTRAINT [PK_tbItemPendenciaSincronizacao] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbLMC]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbLMC](
	[Livro] [int] NOT NULL,
	[Data] [smalldatetime] NOT NULL,
	[Tipo] [char](1) NULL,
	[Pagina] [int] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdProduto] [uniqueidentifier] NULL,
	[VisualizadoDia] [bit] NULL,
 CONSTRAINT [PK_tbLMC] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbLocalEstoque]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbLocalEstoque](
	[Descricao] [nvarchar](50) NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbLocalEstoque] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbLocalEstoquePosto]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbLocalEstoquePosto](
	[Id] [uniqueidentifier] NOT NULL,
	[IdLocal] [uniqueidentifier] NULL,
	[IdPosto] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbLocalEstoquePosto] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbLogs]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbLogs](
	[Tabela] [varchar](50) NOT NULL,
	[Operacao] [varchar](50) NOT NULL,
	[Descricao] [varchar](300) NOT NULL,
	[Data] [datetime] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[IdPosto] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbLogs] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbManifestacaoDestinatario]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbManifestacaoDestinatario](
	[Id] [uniqueidentifier] NOT NULL,
	[Emissao] [date] NOT NULL,
	[Fornecedor] [nvarchar](100) NOT NULL,
	[CNPJ] [nvarchar](20) NOT NULL,
	[Chave] [nvarchar](50) NOT NULL,
	[Manifestado] [bit] NOT NULL,
	[TipoManifestacao] [char](1) NOT NULL,
	[Importada] [bit] NOT NULL,
	[Valor] [decimal](18, 2) NOT NULL,
	[NSU] [nvarchar](20) NOT NULL,
	[IdPosto] [uniqueidentifier] NOT NULL,
	[MesCompetencia] [int] NULL,
	[AnoCompetencia] [int] NULL,
	[Lote] [nvarchar](20) NULL,
 CONSTRAINT [PK_Chave_tbManifestacaoDestinatario] PRIMARY KEY CLUSTERED 
(
	[Chave] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbManutencaoBomba]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbManutencaoBomba](
	[NumeroBomba] [nvarchar](50) NULL,
	[NumeroBico] [nvarchar](50) NULL,
	[DataSubstituicao] [datetime] NULL,
	[Motivo] [nvarchar](255) NULL,
	[CNPJEmpresaSubstituicao] [nvarchar](15) NULL,
	[CPFTecnicoSubstituicao] [nvarchar](20) NULL,
	[NumeroLacresRemovidos] [nvarchar](15) NULL,
	[NumeroLacresAplicados] [nvarchar](15) NULL,
	[ValorEncerranteAntesSubstituicao] [decimal](18, 2) NULL,
	[ValorEncerranteDepoisSubstituicao] [decimal](18, 2) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbManutencaoBomba] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbMedicao]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbMedicao](
	[DataHora] [smalldatetime] NULL,
	[Medicao] [int] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdTanque] [uniqueidentifier] NULL,
	[IdCaixa] [uniqueidentifier] NULL,
	[IdProduto] [uniqueidentifier] NULL,
	[Densidade] [float] NULL,
	[DataHoraSolicitacao] [smalldatetime] NULL,
 CONSTRAINT [PK_tbMedicao] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbMensagens]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbMensagens](
	[Assunto] [nvarchar](200) NULL,
	[Mensagem] [ntext] NOT NULL,
	[DataEnvio] [smalldatetime] NOT NULL,
	[DataLeitura] [smalldatetime] NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPai] [uniqueidentifier] NULL,
	[De] [uniqueidentifier] NULL,
	[Para] [uniqueidentifier] NULL,
	[MensagemLida] [bit] NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdDespesa] [uniqueidentifier] NULL,
	[PushStatus] [smallint] NULL,
	[QtdRetentativa] [smallint] NULL,
 CONSTRAINT [PK_tbMensagens] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbMetas]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbMetas](
	[Ano] [int] NOT NULL,
	[Mes] [int] NOT NULL,
	[Litragem] [money] NOT NULL,
	[Lucratividade] [money] NOT NULL,
	[ObservacaoLitragem] [nvarchar](500) NULL,
	[ObservacaoLucratividade] [nvarchar](500) NULL,
	[PercentualTurno1] [money] NULL,
	[PercentualTurno2] [money] NULL,
	[PercentualTurno3] [money] NULL,
	[PercentualTurno4] [money] NULL,
	[PercentualTurno5] [money] NULL,
	[PercentualTurno6] [money] NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdProduto] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbMetas] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbMotorista]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbMotorista](
	[Placa] [nvarchar](50) NOT NULL,
	[Motorista] [nvarchar](50) NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbMotorista] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbMotoristaTransportadora]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbMotoristaTransportadora](
	[Nome] [nvarchar](50) NULL,
	[RG] [nvarchar](50) NULL,
	[CPF] [nvarchar](50) NULL,
	[CNH] [nvarchar](50) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdTransportadora] [uniqueidentifier] NULL,
	[Ativo] [bit] NOT NULL,
 CONSTRAINT [PK_tbMotoristaTransportadora] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbMovBancaria]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbMovBancaria](
	[TipoMov] [varchar](1) NULL,
	[Descricao] [varchar](150) NULL,
	[Valor] [money] NULL,
	[DataHora] [datetime] NULL,
	[Ativo] [bit] NULL,
	[NumeroDoc] [varchar](50) NULL,
	[Conciliado] [bit] NOT NULL,
	[DataBancaria] [smalldatetime] NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdCaixaPosto] [uniqueidentifier] NULL,
	[IdContaBancaria] [uniqueidentifier] NULL,
	[NotaFiscal] [varchar](50) NULL,
	[LancamentoManual] [bit] NOT NULL,
	[IdContasPagarReceber] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbMovBancaria] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbMovimentacaoEstoque]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbMovimentacaoEstoque](
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NOT NULL,
	[IdProduto] [uniqueidentifier] NOT NULL,
	[IdCaixa] [uniqueidentifier] NULL,
	[DataMovimento] [datetime] NOT NULL,
	[TipoMovimento] [varchar](2) NOT NULL,
	[TipoEstoque] [varchar](2) NOT NULL,
	[Valor] [decimal](18, 4) NOT NULL,
	[Origem] [varchar](200) NOT NULL,
	[NumeroCupom] [int] NULL,
	[Data] [datetime] NOT NULL,
	[Estoque] [int] NOT NULL,
	[Almoxarifado] [int] NOT NULL,
	[PrecoCusto] [float] NULL,
	[PrecoVenda] [float] NULL,
 CONSTRAINT [PK_tbMovimentacaoEstoque] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbNaturezaOperacao]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbNaturezaOperacao](
	[Id] [uniqueidentifier] NOT NULL,
	[NaturezaOperacao] [nvarchar](100) NOT NULL,
 CONSTRAINT [PK_tbNaturezaOperacao] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbNCM]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbNCM](
	[Id] [uniqueidentifier] NOT NULL,
	[Codigo] [nvarchar](50) NOT NULL,
	[Excecao] [nvarchar](50) NULL,
	[Tipo] [nvarchar](50) NULL,
	[Descricao] [nvarchar](2000) NULL,
	[AliquotaNacionalFederal] [decimal](18, 2) NOT NULL,
	[AliquotaImportadosFederal] [decimal](18, 2) NOT NULL,
	[AliquotaEstadual] [decimal](18, 2) NOT NULL,
	[AliquotaMunicipal] [decimal](18, 2) NOT NULL,
	[InicioVigencia] [date] NOT NULL,
	[FimVigencia] [date] NOT NULL,
	[Chave] [nvarchar](50) NULL,
	[Versao] [nvarchar](50) NULL,
	[Fonte] [nvarchar](50) NULL,
	[Vencido] [bit] NULL,
 CONSTRAINT [PK_tbNCM] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbNotaFiscalEletronica]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbNotaFiscalEletronica](
	[Numero] [int] NULL,
	[Serie] [varchar](3) NULL,
	[Lote] [varchar](3) NULL,
	[Recibo] [varchar](20) NULL,
	[ChaveNota] [varchar](255) NULL,
	[XML_NFE] [text] NULL,
	[Status] [varchar](255) NULL,
	[Motivo] [text] NULL,
	[DataEmissao] [datetime] NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[Tipo] [nvarchar](100) NULL,
	[DataEntradaSaida] [date] NULL,
	[XML_CANCELAMENTO] [nvarchar](2000) NULL,
	[ModulodeEmissao] [nvarchar](50) NULL,
	[XML_CartaCorrecao] [nvarchar](max) NULL,
	[ValorTotalNota] [decimal](15, 4) NOT NULL,
 CONSTRAINT [PK_tbNotaFiscalEletronica] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbNotaFiscalEletronicaServico]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbNotaFiscalEletronicaServico](
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NOT NULL,
	[IdEntidade] [uniqueidentifier] NOT NULL,
	[NumeroNFSE] [nchar](20) NOT NULL,
	[DataEmissao] [date] NOT NULL,
	[DataEntradaSaida] [date] NOT NULL,
	[XML_NFSE] [nvarchar](2000) NOT NULL,
	[ChaveNFSE] [nvarchar](50) NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbNotaFiscalServico]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbNotaFiscalServico](
	[Id] [uniqueidentifier] NOT NULL,
	[IdFornecedor] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[Numero] [nvarchar](50) NOT NULL,
	[Serie] [nvarchar](50) NOT NULL,
	[SubSerie] [nvarchar](50) NULL,
	[ChaveNfse] [nvarchar](50) NULL,
	[DataEmissao] [date] NULL,
	[DataExecucao] [date] NULL,
	[TipoPagamento] [nvarchar](50) NULL,
	[ValorPisRetidoFonte] [decimal](18, 2) NULL,
	[ValorCofinsRetidoFonte] [decimal](18, 2) NULL,
	[ValorISS] [decimal](18, 2) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbNotaFiscalServicoItens]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbNotaFiscalServicoItens](
	[Id] [uniqueidentifier] NOT NULL,
	[IdNotaFiscalServico] [uniqueidentifier] NOT NULL,
	[IdServico] [uniqueidentifier] NOT NULL,
	[Item] [int] NOT NULL,
	[Valor] [decimal](18, 2) NOT NULL,
	[Desconto] [decimal](18, 2) NULL,
	[ValorPIS] [decimal](18, 2) NULL,
	[ValorCOFINS] [decimal](18, 2) NULL,
	[ValorICMS] [decimal](18, 2) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbNotasFiscaisEmitidas]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbNotasFiscaisEmitidas](
	[CFOP] [int] NOT NULL,
	[Tipo] [nvarchar](20) NOT NULL,
	[Numero] [int] NOT NULL,
	[Cupons] [nvarchar](4000) NOT NULL,
	[Valor] [money] NOT NULL,
	[Data] [smalldatetime] NULL,
	[Serie] [int] NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdCaixa] [uniqueidentifier] NULL,
	[IdEntidade] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbNotasFiscaisEmitidas] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbNotasFiscaisEmitidasDetalhes]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbNotasFiscaisEmitidasDetalhes](
	[Item] [int] NOT NULL,
	[Quantidade] [float] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdNota] [uniqueidentifier] NULL,
	[IdProduto] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbNotasFiscaisEmitidasDetalhes] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbOcorrencias]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbOcorrencias](
	[Numero] [int] NOT NULL,
	[DataHora] [smalldatetime] NOT NULL,
	[Assunto] [nvarchar](100) NULL,
	[Descricao] [ntext] NOT NULL,
	[Resposta] [ntext] NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdCaixa] [uniqueidentifier] NULL,
	[IdEntidade] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbOcorrencias] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbOperadoras]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbOperadoras](
	[PathSolicitacaoTef] [nvarchar](100) NULL,
	[PathRespostaTef] [nvarchar](100) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[TEF] [bit] NULL,
	[IdContaBancaria] [uniqueidentifier] NULL,
	[Ativo] [bit] NOT NULL,
 CONSTRAINT [PK_tbOperadoras] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbOperadorasProduto]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbOperadorasProduto](
	[Id] [uniqueidentifier] NOT NULL,
	[Nome] [nvarchar](50) NULL,
	[Bandeira] [nvarchar](50) NULL,
	[Taxa] [decimal](18, 2) NULL,
	[Modalidade] [nvarchar](50) NULL,
	[Prazo] [int] NULL,
	[OperadoraId] [uniqueidentifier] NULL,
	[Ativo] [bit] NULL,
	[DataCriacao] [datetime] NULL,
	[DataAlteracao] [datetime] NULL,
	[DataExclusao] [datetime] NULL,
	[Configurada] [bit] NULL,
 CONSTRAINT [PK_tbOperadorasProduto] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPagamentoColaborador]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPagamentoColaborador](
	[Mes] [int] NULL,
	[Data] [smalldatetime] NOT NULL,
	[TipoPagamento] [varchar](50) NOT NULL,
	[Descricao] [varchar](50) NOT NULL,
	[Valor] [money] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdEntidade] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbPagamentoColaborador] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPagamentosClientes]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPagamentosClientes](
	[IDTipo] [char](3) NOT NULL,
	[Data] [smalldatetime] NOT NULL,
	[DataVencto] [smalldatetime] NOT NULL,
	[DataPagamento] [smalldatetime] NOT NULL,
	[IDTipoDocto] [varchar](5) NOT NULL,
	[Valor] [money] NOT NULL,
	[NumDocto] [varchar](50) NOT NULL,
	[CodConta] [int] NOT NULL,
	[InfoAdic] [varchar](200) NOT NULL,
	[DataDeposito] [smalldatetime] NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdPedCaixa] [uniqueidentifier] NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[IdContaBancaria] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbPagamentosClientes] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPagamentosItens]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPagamentosItens](
	[Id] [uniqueidentifier] NOT NULL,
	[IdConta] [uniqueidentifier] NULL,
	[IdMov] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbPagamentosItens] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbParametro]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbParametro](
	[id] [uniqueidentifier] NOT NULL,
	[codigo] [varchar](50) NOT NULL,
	[valor] [varchar](50) NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPatrimonio]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPatrimonio](
	[Numero] [nvarchar](50) NOT NULL,
	[Descricao] [nvarchar](50) NOT NULL,
	[Valor] [money] NOT NULL,
	[Detalhes] [text] NULL,
	[DataCompra] [smalldatetime] NULL,
	[DataBaixa] [smalldatetime] NULL,
	[Local] [nvarchar](50) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdTipo] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbPatrimonio] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPatrimonioManutencao]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPatrimonioManutencao](
	[Descricao] [nvarchar](50) NOT NULL,
	[Valor] [money] NOT NULL,
	[Data] [smalldatetime] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPatrimonio] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbPatrimonioManutencao] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPatrimonioTipo]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPatrimonioTipo](
	[Descricao] [nvarchar](50) NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbPatrimonioTipo] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPedidoRecebimentoCombustivelVendas]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPedidoRecebimentoCombustivelVendas](
	[Id] [uniqueidentifier] NOT NULL,
	[PostoId] [uniqueidentifier] NOT NULL,
	[PedidoItemId] [uniqueidentifier] NOT NULL,
	[TanqueId] [uniqueidentifier] NOT NULL,
	[EstoqueInicial] [int] NOT NULL,
	[MedicaoInicial] [int] NULL,
	[VendasNoDescarregamento] [int] NOT NULL,
	[Descarregou] [int] NOT NULL,
	[EstoqueFinal] [int] NOT NULL,
	[MedicaoFinal] [int] NULL,
	[DataHoraInicio] [datetime] NOT NULL,
	[DataHoraTermino] [datetime] NULL,
	[FinalizadoAdministrativo] [bit] NOT NULL,
	[EncerramentoConferencia] [bit] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPedidoRevenda]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPedidoRevenda](
	[Id] [uniqueidentifier] NOT NULL,
	[PostoId] [uniqueidentifier] NULL,
	[NumPedido] [int] NULL,
	[FornecedorId] [uniqueidentifier] NULL,
	[DataPedido] [datetime] NULL,
	[NumeroNotaFiscal] [nvarchar](50) NULL,
	[DataNotaFiscal] [datetime] NULL,
	[DataVencimento] [datetime] NULL,
	[IntencaoPagar] [nvarchar](50) NULL,
	[DataRecebimento] [datetime] NULL,
	[PrevisaoEntrega] [datetime] NULL,
	[NumeroNota] [varchar](100) NULL,
	[DataNota] [datetime] NULL,
	[DataVencimentoProduto] [datetime] NULL,
	[IntencaoPagamentoProduto] [varchar](100) NULL,
	[ValorProduto] [money] NULL,
	[NumeroCTFrete] [varchar](100) NULL,
	[DataCTFrete] [datetime] NULL,
	[DataVencimentoFrete] [datetime] NULL,
	[IntencaoPagamentoFrete] [varchar](100) NULL,
	[IdUsuario] [uniqueidentifier] NULL,
	[TransportadoraId] [uniqueidentifier] NULL,
	[MotoristaId] [uniqueidentifier] NULL,
	[CavaloId] [uniqueidentifier] NULL,
	[CarretaId] [uniqueidentifier] NULL,
	[DataCriacao] [datetime] NULL,
	[DataAlteracao] [datetime] NULL,
 CONSTRAINT [PK_tbPedidoRevenda] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPedidoRevendaItem]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPedidoRevendaItem](
	[Id] [uniqueidentifier] NOT NULL,
	[ProdutoId] [uniqueidentifier] NULL,
	[Quantidade] [int] NULL,
	[ValorUnitario] [float] NULL,
	[PedidoId] [uniqueidentifier] NULL,
	[QuantidadeEmVenda] [int] NULL,
 CONSTRAINT [PK_tbPedidoRevendaItem] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPedidoRevendaItemHistorico]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPedidoRevendaItemHistorico](
	[Id] [uniqueidentifier] NOT NULL,
	[ProdutoId] [uniqueidentifier] NULL,
	[FornecedorId] [uniqueidentifier] NULL,
	[PostoId] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbPedidoRevendaItemHistorico] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPedidos]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPedidos](
	[Dataped] [datetime] NULL,
	[ValorProduto] [money] NOT NULL,
	[Valorfrete] [money] NOT NULL,
	[ValorGNRE] [money] NOT NULL,
	[ValorGARE] [money] NOT NULL,
	[ValorTotal] [money] NOT NULL,
	[IdChqProd] [int] NULL,
	[IdChqFrete] [int] NULL,
	[TipoPagto] [nvarchar](5) NULL,
	[PgRc] [bit] NULL,
	[Despesa] [bit] NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[IdEntidadeTransp] [uniqueidentifier] NULL,
	[IdMotorista] [uniqueidentifier] NULL,
	[IdCavalo] [uniqueidentifier] NULL,
	[IdCarreta] [uniqueidentifier] NULL,
	[NumPedido] [int] NULL,
	[IdUsuario] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbPedidos] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPedidosItens]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPedidosItens](
	[QTD] [float] NOT NULL,
	[QTDRecebido] [float] NOT NULL,
	[VUPro] [money] NOT NULL,
	[VUFrete] [money] NULL,
	[VUGNRE] [float] NULL,
	[VUGARE] [money] NULL,
	[Hora] [varchar](20) NULL,
	[NumeroNota] [varchar](20) NULL,
	[DataNota] [smalldatetime] NULL,
	[FaltaSobra] [int] NULL,
	[Lacre] [nvarchar](100) NULL,
	[OBS] [text] NULL,
	[Placa] [nvarchar](10) NULL,
	[Motorista] [nvarchar](50) NULL,
	[RGMotorista] [nvarchar](15) NULL,
	[Analista] [varchar](60) NULL,
	[Aspecto] [nvarchar](100) NULL,
	[COR] [nvarchar](20) NULL,
	[densidade] [float] NULL,
	[Massa] [float] NULL,
	[Teor] [float] NULL,
	[Teor1] [float] NULL,
	[Temperatura] [float] NULL,
	[PrevisaoEntrega] [nvarchar](50) NULL,
	[FrentistaDescarga] [nvarchar](50) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPedido] [uniqueidentifier] NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdProduto] [uniqueidentifier] NULL,
	[IdCaixaRecebimento] [uniqueidentifier] NULL,
	[IdTanque] [uniqueidentifier] NULL,
	[IdAnalistaCombustivel] [uniqueidentifier] NULL,
	[NumeroCTFrete] [varchar](20) NULL,
	[DataCTFrete] [datetime] NULL,
	[Boletim] [nvarchar](50) NULL,
	[DataRecebimento] [datetime] NULL,
	[DensidadeCarregamento] [float] NULL,
	[ConferenciaVolumeRecebido] [float] NULL,
	[TemperaturaCarregamento] [float] NULL,
	[IntencaoPagamentoProduto] [varchar](20) NULL,
	[IntencaoPagamentoFrete] [varchar](20) NULL,
	[IntencaoDescarregar] [varchar](100) NULL,
	[DataVencimentoCombustivel] [datetime] NULL,
	[DataVencimentoFrete] [datetime] NULL,
	[IdFrentistaDescarga] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbPedidosItens] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPedidosItensRecebidos]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPedidosItensRecebidos](
	[qtd] [float] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPedido] [uniqueidentifier] NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdTanque] [uniqueidentifier] NULL,
	[DataMovimento] [datetime] NULL,
	[IdItem] [uniqueidentifier] NULL,
	[IdCaixaRecebimento] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbPedidosItensRecebidos] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPendenciaSincronizacao]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPendenciaSincronizacao](
	[IdPendenciaSincronizacao] [uniqueidentifier] NOT NULL,
	[TipoPendencia] [nvarchar](150) NOT NULL,
	[DataOcorrencia] [datetime] NOT NULL,
	[EventoOrigem] [nvarchar](50) NOT NULL,
	[IdPosto] [uniqueidentifier] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPerdaComunicacaoBico]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPerdaComunicacaoBico](
	[Id] [uniqueidentifier] NOT NULL,
	[NumeroBomba] [int] NOT NULL,
	[NumeroBico] [int] NOT NULL,
	[DataInicial] [datetime] NOT NULL,
	[DataFinal] [datetime] NULL,
	[DataRetornoComunicacao] [datetime] NULL,
	[IdPosto] [uniqueidentifier] NOT NULL,
	[Retorno] [bit] NOT NULL,
 CONSTRAINT [PK__tbPerdaC__3214EC07719CDDE7] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPermissoesPrazo]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPermissoesPrazo](
	[Tipo] [varchar](15) NOT NULL,
	[Descricao] [varchar](50) NOT NULL,
	[RG] [nvarchar](20) NULL,
	[Senha] [nvarchar](50) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdEntidade] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbPermissoesPrazo] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPlanoConta]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPlanoConta](
	[Id] [uniqueidentifier] NOT NULL,
	[Tipo] [nvarchar](50) NOT NULL,
	[Conta] [nvarchar](50) NOT NULL,
	[NumeroConta] [nvarchar](50) NOT NULL,
	[NumeroReceita] [nvarchar](50) NOT NULL,
	[DataInclusaoAlteracao] [date] NULL,
	[CodigoNaturezaConta] [nchar](10) NULL,
	[IndicadorTipoConta] [nchar](10) NULL,
	[Nivel] [nchar](10) NULL,
	[IdPosto] [uniqueidentifier] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPlanoContas]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPlanoContas](
	[Descricao] [nvarchar](40) NULL,
	[Tipo] [nvarchar](1) NULL,
	[CodContaExtendido] [nvarchar](26) NULL,
	[Nivel] [int] NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbPlanoContas] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPLR]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPLR](
	[Data] [smalldatetime] NOT NULL,
	[Descricao] [nvarchar](100) NOT NULL,
	[Total] [money] NOT NULL,
	[Percentual] [money] NOT NULL,
	[Valor] [money] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdEntidade] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbPLR] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPLRTabela]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPLRTabela](
	[ValorInicial] [money] NOT NULL,
	[ValorFinal] [money] NOT NULL,
	[Percentual] [money] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdProduto] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbPLRTabela] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPontoVenda]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPontoVenda](
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NOT NULL,
	[Nome] [nvarchar](50) NOT NULL,
	[TipoProdutoPrincipal] [nvarchar](50) NOT NULL,
	[LerAbastecimentos] [bit] NOT NULL,
	[CaixaSeparado] [bit] NULL,
	[FDSeparado] [bit] NULL,
	[FiltrarProdutoConvLub] [nvarchar](50) NULL,
	[Principal] [bit] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPostos]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPostos](
	[RzSocial] [nvarchar](100) NOT NULL,
	[NomeUsual] [nvarchar](100) NOT NULL,
	[Ativo] [bit] NOT NULL,
	[Rede] [nvarchar](20) NULL,
	[CNPJ] [nvarchar](20) NOT NULL,
	[IE] [nvarchar](20) NULL,
	[Endereco] [nvarchar](150) NULL,
	[Bairro] [nvarchar](50) NULL,
	[UF] [nvarchar](2) NULL,
	[CEP] [nvarchar](10) NULL,
	[Fone] [nvarchar](20) NULL,
	[Fax] [nvarchar](20) NULL,
	[ValorContador] [money] NULL,
	[Internet] [varchar](50) NULL,
	[ValorInternet] [money] NULL,
	[HorarioFunc] [varchar](50) NULL,
	[AluguelMensal] [money] NULL,
	[OBS] [nvarchar](500) NULL,
	[IP] [nvarchar](50) NULL,
	[TipoMonitoramento] [nvarchar](50) NULL,
	[MetaDespesa] [bit] NULL,
	[TetoEstoque] [bit] NULL,
	[HorarioAlmoco] [bit] NOT NULL,
	[CRCContador] [nvarchar](20) NULL,
	[Intrajornada] [char](1) NULL,
	[ContatoSintegra] [nvarchar](100) NULL,
	[PLR] [bit] NOT NULL,
	[IM] [nvarchar](20) NULL,
	[Medicao] [bit] NULL,
	[ValeAlimentacao] [bit] NULL,
	[ValidacaoPosto] [nvarchar](200) NULL,
	[Automacao] [bit] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdContato] [uniqueidentifier] NULL,
	[IdGerenteGeral] [uniqueidentifier] NULL,
	[IdContador] [uniqueidentifier] NULL,
	[IdRede] [uniqueidentifier] NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[IdMunicipio] [uniqueidentifier] NULL,
	[IdContaCorrente] [uniqueidentifier] NULL,
	[Numero] [nvarchar](50) NULL,
	[Complemento] [nvarchar](50) NULL,
	[Suframa] [nvarchar](10) NULL,
	[Email] [nvarchar](100) NULL,
	[Identifid] [bit] NULL,
	[tef] [bit] NULL,
	[EstiloNegocioCombustivel] [bit] NULL,
	[EstiloNegocioLubrificante] [bit] NULL,
	[EstiloNegocioConveniencia] [bit] NULL,
	[EstiloNegocioServico] [bit] NULL,
	[Lubrificante] [bit] NULL,
	[Conveniencia] [bit] NULL,
	[EmissaoECF] [bit] NOT NULL,
	[EmissaoSAT] [bit] NOT NULL,
	[EmissaoNFCE] [bit] NOT NULL,
	[QuantificaVendaColaborador] [bit] NOT NULL,
	[CodigoContaAnaliticaEstoque] [nvarchar](50) NULL,
	[Lio] [bit] NOT NULL,
	[ObrigadoInformarDadosCartao] [nvarchar](50) NULL,
	[TipoPlanoConta] [nvarchar](50) NULL,
	[PermitirReimpressaoRetirada] [bit] NULL,
	[PermitirExclusaoRetirada] [bit] NULL,
	[TipoTef] [nvarchar](50) NULL,
	[UltimaConsultaManifestacao] [datetime] NULL,
	[NomeCertificado] [varchar](300) NULL,
	[DataVencimento] [date] NOT NULL,
	[TokenOlhoNoImposto] [varchar](300) NULL,
	[CertificadoSerialNumber] [varchar](200) NULL,
	[PermiteUsarSemLogin] [bit] NULL,
	[MostrarTotalFaturado] [bit] NULL,
	[MostrarPagamentosRecebido] [bit] NULL,
	[MostrarPreviaEncerramentoCaixa] [bit] NULL,
	[MostrarValorSemRetirada] [bit] NULL,
	[PixValidade] [int] NULL,
	[Tipo] [nvarchar](10) NULL,
	[MatrizId] [uniqueidentifier] NULL,
	[UltimoNSUCte] [nvarchar](60) NULL,
	[BloquearVendaPrazo] [bit] NULL,
	[ImprimirViaEstabelecimento] [bit] NULL,
	[AssinaturaDigital] [bit] NULL,
	[UltimoNSUManifestacao] [nvarchar](20) NULL,
 CONSTRAINT [PK_tbPostos] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPrecoFormaPagamento]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPrecoFormaPagamento](
	[Id] [uniqueidentifier] NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdProduto] [uniqueidentifier] NULL,
	[TipoPagamento] [nvarchar](50) NULL,
	[Preco] [decimal](18, 3) NULL,
	[TipoPrecoBase] [nvarchar](50) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPrecosEspeciais]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPrecosEspeciais](
	[PrecoEspecial] [money] NOT NULL,
	[Diferenca] [money] NOT NULL,
	[Fixo] [bit] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[IdProduto] [uniqueidentifier] NULL,
	[IdServico] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbPrecosEspeciais] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPrecosPedidos]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPrecosPedidos](
	[Descricao] [varchar](100) NOT NULL,
	[Preco] [money] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdProd] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbPrecosPedidos] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbProdutos]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbProdutos](
	[CodigoBarras] [nvarchar](50) NULL,
	[Descricao] [nvarchar](600) NOT NULL,
	[TipoProd] [nvarchar](50) NOT NULL,
	[TipoAliquota] [nvarchar](50) NULL,
	[Aliquota] [money] NULL,
	[ordem] [int] NULL,
	[Ativo] [bit] NOT NULL,
	[UnidadeMedida] [nvarchar](4) NULL,
	[IAT] [char](1) NULL,
	[IPPT] [char](1) NULL,
	[CST] [nchar](12) NULL,
	[ValidacaoProdutos] [nvarchar](200) NULL,
	[NCM] [nchar](40) NULL,
	[PISCST] [nchar](12) NULL,
	[PISAliquota] [money] NULL,
	[COFINSCST] [nchar](12) NULL,
	[COFINSAliquota] [money] NULL,
	[CodigoANP] [varchar](9) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdGrupo] [uniqueidentifier] NULL,
	[NumProduto] [int] NULL,
	[IdUnidadeMedida] [uniqueidentifier] NULL,
	[IdProdutoImpostoNcm] [uniqueidentifier] NULL,
	[IdProdutoDestinacao] [uniqueidentifier] NULL,
	[IdCEST] [uniqueidentifier] NULL,
	[idNCM] [uniqueidentifier] NULL,
	[QuantidadeFracionada] [bit] NOT NULL,
 CONSTRAINT [PK_tbProdutos] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbProdutosAlteracaoPreco]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbProdutosAlteracaoPreco](
	[Id] [uniqueidentifier] NOT NULL,
	[DataAlteracao] [date] NULL,
	[TurnoAlteracao] [int] NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[TipoProduto] [nvarchar](50) NULL,
	[TipoAlteracao] [nvarchar](50) NULL,
	[AlteradoGlobalmente] [bit] NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[DataCadastro] [datetime] NOT NULL,
 CONSTRAINT [PK_tbProdutosAlteracaoPrecoProdutoHistorico] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbProdutosAlteracaoPrecoAgendamento]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbProdutosAlteracaoPrecoAgendamento](
	[Data] [smalldatetime] NOT NULL,
	[Turno] [int] NOT NULL,
	[Valor] [smallmoney] NOT NULL,
	[Efetuada] [bit] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdProduto] [uniqueidentifier] NULL,
	[IdAlteracao] [uniqueidentifier] NULL,
	[Inutilizada] [bit] NOT NULL,
 CONSTRAINT [PK_tbProdutosAlteracaoPreco] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbProdutosAlteracaoPrecoHistorico]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbProdutosAlteracaoPrecoHistorico](
	[Id] [uniqueidentifier] NOT NULL,
	[Data] [datetime] NULL,
	[Turno] [int] NULL,
	[PrecoVenda] [smallmoney] NULL,
	[IdAlteracao] [uniqueidentifier] NULL,
	[IdProduto] [uniqueidentifier] NULL,
	[PrecoCusto] [smallmoney] NULL,
	[Frete] [smallmoney] NULL,
	[PrecoNovo] [smallmoney] NULL,
	[IdPosto] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbProdutosAlteracaoPrecoProdutoHistoricoDetalhe] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbProdutosConversaoCodigo]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbProdutosConversaoCodigo](
	[Id] [uniqueidentifier] NOT NULL,
	[IdEntidade] [uniqueidentifier] NOT NULL,
	[Idproduto] [uniqueidentifier] NOT NULL,
	[CodigoProdutoFornecedor] [nvarchar](50) NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbProdutoConversaoCodigo] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbProdutosDestinacao]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbProdutosDestinacao](
	[Id] [uniqueidentifier] NOT NULL,
	[DestinacaoProduto] [nvarchar](50) NOT NULL,
	[CodigoDestinacao] [nchar](8) NOT NULL,
	[Ativo] [bit] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbProdutosEstoqueTeto]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbProdutosEstoqueTeto](
	[Conveniencia] [smallmoney] NOT NULL,
	[Lubrificante] [smallmoney] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbProdutosEstoqueTeto] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbProdutosImpostoNCM]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbProdutosImpostoNCM](
	[id] [uniqueidentifier] NOT NULL,
	[AliquotaProdutoNacional] [decimal](18, 2) NULL,
	[AliquotaProdutoImportado] [decimal](18, 2) NULL,
	[CodigoNCM] [varchar](50) NULL,
	[Versao] [varchar](50) NULL,
	[ativo] [bit] NULL,
	[Descricao] [varchar](4000) NULL,
	[CodigoExecao] [varchar](10) NULL,
 CONSTRAINT [PK_tbProdutosImpostoNCM] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbProdutosPostos]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbProdutosPostos](
	[Estoque] [float] NOT NULL,
	[PrecoCusto] [money] NOT NULL,
	[PrecoVenda] [money] NOT NULL,
	[Almoxarifado] [int] NOT NULL,
	[ValidacaoEstoque] [nvarchar](200) NULL,
	[Data] [nchar](80) NULL,
	[ValidacaoEstoqueFimdia] [nvarchar](200) NULL,
	[EstoqueFimDia] [int] NULL,
	[Atualizado] [bit] NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdProduto] [uniqueidentifier] NULL,
	[IdEcf] [uniqueidentifier] NULL,
	[IdLocal] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbProdutosPostos] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPromocao]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPromocao](
	[Id] [uniqueidentifier] NOT NULL,
	[Nome] [nvarchar](50) NULL,
	[DataInicio] [datetime] NULL,
	[DataFinal] [datetime] NULL,
	[Ativo] [bit] NULL,
	[Tipo] [nvarchar](50) NULL,
 CONSTRAINT [PK_tbPromocao] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPromocaoMensagem]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPromocaoMensagem](
	[Id] [uniqueidentifier] NOT NULL,
	[Texto] [nvarchar](max) NULL,
 CONSTRAINT [PK_tbPromocaoMensagem] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPromocaoPostos]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPromocaoPostos](
	[Id] [uniqueidentifier] NOT NULL,
	[Ativo] [bit] NULL,
	[IdPromocao] [uniqueidentifier] NULL,
	[IdPosto] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbPromocaoPostos] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbPromocaoProdutos]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbPromocaoProdutos](
	[Id] [uniqueidentifier] NOT NULL,
	[Desconto] [float] NULL,
	[DescontoAplicado] [float] NULL,
	[QuantidadeComprada] [float] NULL,
	[IdPromocao] [uniqueidentifier] NULL,
	[IdProduto] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbPromocaoProdutos] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbRedes]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbRedes](
	[Descricao] [nvarchar](50) NOT NULL,
	[servidor] [nvarchar](50) NULL,
	[banco] [nvarchar](50) NULL,
	[usuario] [nvarchar](50) NULL,
	[senha] [nvarchar](50) NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbRedes] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbReducao]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbReducao](
	[MFAdicional] [char](1) NULL,
	[ModeloECF] [nvarchar](20) NOT NULL,
	[NumeroUsuario] [char](2) NOT NULL,
	[CRZ] [int] NOT NULL,
	[COO] [int] NOT NULL,
	[CRO] [int] NOT NULL,
	[DataMovimento] [smalldatetime] NOT NULL,
	[DataEmissao] [smalldatetime] NOT NULL,
	[VendaBrutaDiaria] [money] NOT NULL,
	[ParametroDescontoISSQN] [char](1) NOT NULL,
	[TotalizadorGeral] [money] NULL,
	[ValidacaoReducao] [nvarchar](200) NULL,
	[CupomInicial] [int] NULL,
	[CupomFinal] [int] NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdEcf] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbReducao] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbReducaodetalhes]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbReducaodetalhes](
	[IdCRZ] [nvarchar](50) NOT NULL,
	[TipoTributo] [nchar](40) NOT NULL,
	[Indice] [int] NOT NULL,
	[ValorAliquota] [money] NOT NULL,
	[ValorAcumulado] [money] NOT NULL,
	[ValidacaoReducaoDetalhe] [nvarchar](200) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdEcf] [uniqueidentifier] NULL,
	[IdReducao] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbReducaoDetalhes] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbReducaoEmissao]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbReducaoEmissao](
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NOT NULL,
	[DataMovimento] [datetime] NOT NULL,
	[DataGeracao] [datetime] NOT NULL,
 CONSTRAINT [PK_tbReducaoEmissao] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbReducaoMedicao]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbReducaoMedicao](
	[Id] [uniqueidentifier] NOT NULL,
	[idReducaoEmissao] [uniqueidentifier] NULL,
	[IdProduto] [uniqueidentifier] NOT NULL,
	[ValorMedicao] [decimal](18, 4) NOT NULL,
	[idMedicaoOrigem] [uniqueidentifier] NULL,
	[TipoMedicaoOrigem] [char](1) NULL,
	[ValorEstoque] [decimal](18, 4) NULL,
 CONSTRAINT [PK_tbReducaoMedicao] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbRegistroDispositivo]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbRegistroDispositivo](
	[Id] [uniqueidentifier] NOT NULL,
	[DispositivoToken] [nvarchar](250) NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[Horario] [smalldatetime] NULL,
 CONSTRAINT [PK_tbRegistroDispositivo] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbRetiradaObrigacao]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbRetiradaObrigacao](
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NOT NULL,
	[TipoFormaPagamento] [nvarchar](50) NOT NULL,
	[ObrigadoInformarRetirada] [bit] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbRetiradas]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbRetiradas](
	[valor] [money] NOT NULL,
	[Depositado] [bit] NOT NULL,
	[Especie] [varchar](2) NOT NULL,
	[COO] [int] NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdCaixa] [uniqueidentifier] NULL,
	[DataHora] [datetime] NULL,
	[Removida] [bit] NOT NULL,
	[IdPontoVenda] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbRetiradas] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbRetiradasItens]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbRetiradasItens](
	[Id] [uniqueidentifier] NOT NULL,
	[IdRetirada] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NOT NULL,
	[Tipo] [char](2) NOT NULL,
	[Valor] [decimal](18, 2) NOT NULL,
	[QuantidadeCedulasMoedas] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbRetiradaValorHoraBloqueio]    Script Date: 20/05/2024 14:44:58 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbRetiradaValorHoraBloqueio](
	[Id] [uniqueidentifier] NOT NULL,
	[Idposto] [uniqueidentifier] NOT NULL,
	[HoraIni] [nchar](5) NOT NULL,
	[HoraFim] [nchar](5) NOT NULL,
	[Valor] [decimal](18, 0) NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbServicos]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbServicos](
	[Id] [uniqueidentifier] NOT NULL,
	[Descricao] [nvarchar](100) NOT NULL,
	[IdUnidadeMedida] [uniqueidentifier] NULL,
	[PISCST] [nchar](12) NULL,
	[COFINSCST] [nchar](12) NULL,
	[IdCodServico] [uniqueidentifier] NULL,
	[NumServico] [int] NULL,
	[IdCategoriaServico] [uniqueidentifier] NULL,
	[DataCriacao] [smalldatetime] NULL,
	[DataAlteracao] [smalldatetime] NULL,
	[AliquotaPIS] [decimal](18, 2) NULL,
	[AliquotaCOFINS] [decimal](18, 2) NULL,
 CONSTRAINT [PK_tbServicos] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbServicosPostos]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbServicosPostos](
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdServico] [uniqueidentifier] NULL,
	[Preco] [money] NULL,
 CONSTRAINT [PK_tbServicosPostos] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbStatusWebServices]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbStatusWebServices](
	[Id] [uniqueidentifier] NOT NULL,
	[Idposto] [uniqueidentifier] NULL,
	[Tipo] [nchar](5) NOT NULL,
	[ModoOperacao] [nvarchar](50) NOT NULL,
	[StatusWebService] [nvarchar](50) NOT NULL,
	[DataConsulta] [datetime] NOT NULL,
	[DataInicioContingencia] [nvarchar](50) NULL,
	[DataFimContingencia] [nvarchar](50) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbSumarizacaoCaixa]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbSumarizacaoCaixa](
	[Id] [uniqueidentifier] NOT NULL,
	[IdCaixa] [uniqueidentifier] NOT NULL,
	[DataMovimento] [date] NOT NULL,
	[TotalCombustivel] [decimal](15, 4) NULL,
	[TotalLubrificante] [decimal](15, 4) NULL,
	[TotalConveniencia] [decimal](15, 4) NULL,
	[TotalPrecoEspecial] [decimal](15, 4) NULL,
	[TotalPromocao] [decimal](15, 4) NULL,
	[TotalVendas] [decimal](15, 4) NULL,
	[TotalDinheiro] [decimal](15, 4) NULL,
	[TotalPrazo] [decimal](15, 4) NULL,
	[TotalCartaoCredito] [decimal](15, 4) NULL,
	[TotalCartaoDebito] [decimal](15, 4) NULL,
	[TotalPix] [decimal](15, 4) NULL,
	[TotalChequeVista] [decimal](15, 4) NULL,
	[TotalChequePrazo] [decimal](15, 4) NULL,
	[TotalRetiradas] [decimal](15, 4) NULL,
	[TotalQuebraSobraCaixa] [decimal](15, 4) NULL,
	[TotalPrecoFormaPag] [decimal](15, 4) NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbSuprimento]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbSuprimento](
	[COO] [int] NOT NULL,
	[Valor] [money] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbSuprimento] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbTanques]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbTanques](
	[NumTanque] [int] NOT NULL,
	[Capacidade] [int] NOT NULL,
	[Ativo] [bit] NOT NULL,
	[InativoEm] [datetime] NULL,
	[Medicao] [float] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdProduto] [uniqueidentifier] NULL,
	[CapacidadeReal] [float] NULL,
	[PuxaAte] [float] NULL,
	[DataFabricacao] [datetime] NULL,
 CONSTRAINT [PK_tbTanques] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbTanquesMovEstoque]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbTanquesMovEstoque](
	[PrecoCusto] [money] NOT NULL,
	[Quantidade] [float] NOT NULL,
	[QuantVend] [float] NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdProduto] [uniqueidentifier] NULL,
	[IdTanque] [uniqueidentifier] NULL,
	[DataRecebimentoPedido] [datetime] NOT NULL,
 CONSTRAINT [PK_tbTanquesMovEstoque] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbTarefas]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbTarefas](
	[Descricao] [nvarchar](50) NOT NULL,
	[DataPrevista] [smalldatetime] NOT NULL,
	[DataRealizada] [smalldatetime] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdTarefaTipo] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbTarefas] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbTarefaTipo]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbTarefaTipo](
	[Descricao] [nvarchar](50) NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbTarefaTipo] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbTipoConta]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbTipoConta](
	[IdTipo] [char](1) NOT NULL,
	[Descricao] [char](20) NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbTipoConta] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbTipoContasPGRec]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbTipoContasPGRec](
	[codtipo] [char](2) NOT NULL,
	[Descricao] [char](40) NULL,
	[tipo] [char](1) NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbTipoContasPGRec] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbTipoDoc]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbTipoDoc](
	[IdTipoDoc] [nvarchar](5) NOT NULL,
	[Descricao] [nvarchar](35) NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbTipoDoc] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbTipoEnt]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbTipoEnt](
	[IdTipo] [char](2) NOT NULL,
	[Descricao] [char](15) NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbTipoEnt] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbTipoProd]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbTipoProd](
	[IdTipoProd] [varchar](50) NOT NULL,
	[Descricao] [nvarchar](20) NULL,
	[DescricaoNova] [nvarchar](20) NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_TipoProd] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbTiposOcorrencia]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbTiposOcorrencia](
	[Descricao] [varchar](50) NOT NULL,
	[Email] [varchar](300) NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_tbTiposOcorrencia] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbTipoToken]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbTipoToken](
	[Id] [uniqueidentifier] NOT NULL,
	[Tipo] [nvarchar](50) NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbTokens]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbTokens](
	[Id] [uniqueidentifier] NOT NULL,
	[EntidadeId] [uniqueidentifier] NULL,
	[TipoId] [uniqueidentifier] NULL,
	[Token] [nvarchar](50) NULL,
	[DataGeracao] [datetime] NULL,
	[DataVencimento] [datetime] NULL,
	[Status] [nvarchar](50) NULL,
	[DataUso] [datetime] NULL,
	[EntidadeUsoId] [uniqueidentifier] NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbTotalizadorTributado]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbTotalizadorTributado](
	[Tributo] [nvarchar](50) NOT NULL,
	[Indice] [int] NOT NULL,
	[ValorAliquota] [money] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdEcf] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbTotalizadorTributado] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbTurno]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbTurno](
	[IdTurno] [int] NOT NULL,
	[Descricao] [nvarchar](50) NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdPontoVenda] [uniqueidentifier] NULL,
	[HoraInicio] [nchar](5) NULL,
	[HoraFim] [nchar](5) NULL,
	[DataAlteracao] [date] NULL,
	[HorarioAtivoInicio] [nchar](5) NULL,
	[HorarioAtivoFim] [nchar](5) NULL,
	[Ativo] [bit] NULL,
 CONSTRAINT [PK_tbTurno] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbUF]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbUF](
	[Sigla] [nchar](8) NOT NULL,
	[Estado] [nchar](120) NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[Codigo] [nchar](2) NULL,
 CONSTRAINT [PK_tbUF] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbUnidadeMedidas]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbUnidadeMedidas](
	[Unidademedida] [nchar](8) NOT NULL,
	[Descricao] [nvarchar](50) NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[CodigoUnidadeMedida] [int] NULL,
 CONSTRAINT [PK_tbUnidadeMedidas] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbUniformes]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbUniformes](
	[Tipo] [nvarchar](50) NULL,
	[Tamanho] [char](10) NOT NULL,
	[Obs] [varchar](100) NULL,
	[Estado] [char](10) NOT NULL,
	[DataEntrega] [smalldatetime] NOT NULL,
	[DataDesativacao] [smalldatetime] NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdEntidade] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbUniformes] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbUsuarios]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbUsuarios](
	[Senha] [nvarchar](50) NOT NULL,
	[Turno] [bit] NULL,
	[DataExpiracao] [smalldatetime] NULL,
	[Bloqueado] [char](1) NOT NULL,
	[NomeUsual] [nvarchar](50) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[Nivel] [uniqueidentifier] NULL,
	[Foto] [image] NULL,
	[Pin] [nvarchar](50) NULL,
	[Ativo] [bit] NOT NULL,
	[MenuRetirada] [bit] NULL,
	[MenuMultiplasVendas] [bit] NULL,
	[MenuReimpressao] [bit] NULL,
	[MenuCartao] [bit] NULL,
 CONSTRAINT [PK_tbUsuarios] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbUsuariosClientes]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbUsuariosClientes](
	[Usuario] [nvarchar](50) NOT NULL,
	[Senha] [nvarchar](50) NOT NULL,
	[Pin] [nvarchar](50) NULL,
	[IdEntidade] [uniqueidentifier] NOT NULL,
	[Tipo] [nvarchar](50) NOT NULL,
	[Ativo] [bit] NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[Foto] [image] NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbUsuariosPostos]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbUsuariosPostos](
	[Id] [uniqueidentifier] NOT NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[IdPosto] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbUsuariosPostos] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbValidacaoRegistros]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbValidacaoRegistros](
	[Descricao] [nvarchar](50) NULL,
	[Valor] [nvarchar](200) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbValidacaoRegistros] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbVeiculoTransportadora]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbVeiculoTransportadora](
	[Descricao] [nvarchar](50) NOT NULL,
	[Placa] [nvarchar](50) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdTransportadora] [uniqueidentifier] NULL,
	[Ativo] [bit] NOT NULL,
 CONSTRAINT [PK_tbVeiculoTransportadora] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbVendas]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbVendas](
	[Cupom] [nvarchar](20) NULL,
	[ValorTotal] [money] NOT NULL,
	[Estornado] [bit] NOT NULL,
	[Data] [datetime] NULL,
	[Status] [nchar](20) NULL,
	[NomeCliente] [nvarchar](100) NULL,
	[DocumentoCliente] [nvarchar](20) NULL,
	[DataMovimento] [smalldatetime] NULL,
	[NotaFiscal] [nchar](8) NULL,
	[ContadorCupomFiscal] [int] NULL,
	[SubTotal] [money] NULL,
	[ValidacaoCupom] [nvarchar](200) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdCaixa] [uniqueidentifier] NULL,
	[IdCliente] [uniqueidentifier] NULL,
	[IdVendedor] [uniqueidentifier] NULL,
	[IdNotaFiscal] [uniqueidentifier] NULL,
	[IdEcf] [uniqueidentifier] NULL,
	[NumeroNotaFiscalManual] [nvarchar](20) NULL,
	[Tipodocumento] [char](2) NULL,
	[XMLSat] [nvarchar](max) NULL,
	[NumeroCupomSat] [int] NULL,
	[IdPromocao] [uniqueidentifier] NULL,
	[TotalDesconto] [money] NULL,
	[OrigemVenda] [nvarchar](50) NULL,
	[XMLCancelamentoEnvio] [nvarchar](max) NULL,
	[XMLCancelamento] [nvarchar](max) NULL,
	[XMLEnvio] [nvarchar](max) NULL,
	[IdPontoVenda] [uniqueidentifier] NULL,
	[EmitidaEmContingencia] [bit] NOT NULL,
	[FinalizadoEnvioContingencia] [bit] NOT NULL,
	[CanceladaContingencia] [bit] NOT NULL,
	[FinalizadoCancelamentoContingencia] [bit] NOT NULL,
	[IdUsuarioCancelamento] [uniqueidentifier] NULL,
	[MotivoCancelamento] [varchar](200) NULL,
	[DataHoraCancelamento] [datetime] NULL,
 CONSTRAINT [PK_tbVendas] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Index [IX_tbVendas_Data_Desc]    Script Date: 20/05/2024 14:44:59 ******/
CREATE CLUSTERED INDEX [IX_tbVendas_Data_Desc] ON [dbo].[tbVendas]
(
	[Data] DESC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbVendasCelular]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbVendasCelular](
	[Id] [uniqueidentifier] NOT NULL,
	[VendaId] [uniqueidentifier] NULL,
	[Json] [nvarchar](max) NULL,
	[DataRecebimento] [smalldatetime] NULL,
	[DataProcessamento] [smalldatetime] NULL,
	[DataEmissao] [smalldatetime] NULL,
	[Status] [nvarchar](100) NULL,
 CONSTRAINT [PK_tbVendasCelular] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbVendasItens]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbVendasItens](
	[Item] [int] NULL,
	[Quantidade] [float] NOT NULL,
	[PrecoCusto] [money] NOT NULL,
	[PrecoVenda] [money] NOT NULL,
	[PrecoEspecial] [money] NULL,
	[Cancelado] [bit] NULL,
	[ValorItem] [money] NULL,
	[ValidacaoCupomItem] [nvarchar](200) NULL,
	[Status] [nchar](8) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdVenda] [uniqueidentifier] NULL,
	[IdProduto] [uniqueidentifier] NULL,
	[IdBomba] [uniqueidentifier] NULL,
	[IdTanque] [uniqueidentifier] NULL,
	[IdServicoPosto] [uniqueidentifier] NULL,
	[IdVendedor] [uniqueidentifier] NULL,
	[IdPromocao] [uniqueidentifier] NULL,
	[PrecoPromocao] [money] NULL,
	[PrecoFormaPag] [money] NULL,
	[DescontoAcrescimo] [money] NULL,
 CONSTRAINT [PK_tbVendasItens] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbVendasItensPagamento]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbVendasItensPagamento](
	[TipoPagamento] [char](3) NOT NULL,
	[Valor] [money] NOT NULL,
	[Desconto] [money] NOT NULL,
	[NumDoc] [varchar](50) NULL,
	[DataVencimento] [smalldatetime] NOT NULL,
	[Autorizacao] [varchar](10) NULL,
	[NumCupomVinculado] [varchar](20) NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[IdVenda] [uniqueidentifier] NULL,
	[IdEntidade] [uniqueidentifier] NULL,
	[ContaBancaria] [uniqueidentifier] NULL,
	[Operadora] [uniqueidentifier] NULL,
	[FeitoRetiradaCartao] [bit] NOT NULL,
	[ContaBancariaDepositoId] [uniqueidentifier] NULL,
 CONSTRAINT [PK_tbVendasItensPagamento] PRIMARY KEY NONCLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbVendasLIO]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbVendasLIO](
	[Id] [uniqueidentifier] NOT NULL,
	[AbastecimentoId] [uniqueidentifier] NOT NULL,
	[CaixaId] [uniqueidentifier] NULL,
	[PostoId] [uniqueidentifier] NOT NULL,
	[AdministradoraCartao] [nvarchar](50) NOT NULL,
	[Produto] [nvarchar](50) NOT NULL,
	[Modalidade] [nvarchar](50) NOT NULL,
	[Autorizacao] [nvarchar](50) NOT NULL,
	[EmitidoCupom] [bit] NOT NULL,
	[Taxa] [decimal](18, 2) NULL,
	[VendaId] [uniqueidentifier] NULL,
	[Cancelada] [bit] NOT NULL,
	[Adquirinte] [nvarchar](20) NULL,
	[ClienteId] [uniqueidentifier] NULL,
	[NomeCliente] [nvarchar](80) NULL,
	[Documento] [nvarchar](50) NULL,
	[Rg] [nvarchar](50) NULL,
	[Motorista] [nvarchar](50) NULL,
	[Placa] [nvarchar](50) NULL,
	[km] [nvarchar](50) NULL,
	[Valor] [money] NULL,
	[EmitidaOrigemVendas] [bit] NOT NULL,
	[ValorPagoDinheiro] [money] NULL,
	[VendedorId] [uniqueidentifier] NULL,
	[PareamentoVendaId] [uniqueidentifier] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbVendasLioItemAbastecimento]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbVendasLioItemAbastecimento](
	[Id] [uniqueidentifier] NOT NULL,
	[VendaLioId] [uniqueidentifier] NOT NULL,
	[AbastecimentoId] [uniqueidentifier] NOT NULL,
	[PostoId] [uniqueidentifier] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbVersaoSped]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbVersaoSped](
	[ID] [uniqueidentifier] NOT NULL,
	[CodigoVersao] [nchar](12) NOT NULL,
	[Versao] [nchar](40) NOT NULL,
	[DataInicio] [smalldatetime] NOT NULL,
	[DataFinal] [smalldatetime] NULL,
	[Modulo] [nvarchar](max) NULL,
 CONSTRAINT [PK_tbVersaoSped] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tbXMLContingenciaErro]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tbXMLContingenciaErro](
	[Id] [uniqueidentifier] NULL,
	[IdVenda] [uniqueidentifier] NULL,
	[MotivoErro] [varchar](200) NULL,
	[Finalizado] [bit] NULL,
	[IdPosto] [uniqueidentifier] NULL,
	[IdPontoVenda] [uniqueidentifier] NULL,
	[NumeroCupomSat] [int] NULL,
	[Data] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[LocalizarDuplicadas]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[LocalizarDuplicadas]
AS
SELECT     idPosto, idProduto, COUNT(idPosto) AS qtdPosto, COUNT(idProduto) AS QtdeProd
FROM         dbo.tbProdutosPostos
GROUP BY idPosto, idProduto
HAVING      (COUNT(idPosto) > 1) AND (COUNT(idProduto) > 1)
GO
/****** Object:  View [dbo].[manutenção]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[manutenção]
AS
SELECT     dbo.tbEquipamentoPostos.id, dbo.tbEquipamentos.Descricao, dbo.tbEquipamentoPostos.Codigo AS Codigo, dbo.tbPostos.NomeUsual AS Posto, 
                      dbo.tbEquipamentoPostos.Status
FROM         dbo.tbEquipamentoPostos INNER JOIN
                      dbo.tbEquipamentos ON dbo.tbEquipamentoPostos.id = dbo.tbEquipamentos.id INNER JOIN
                      dbo.tbPostos ON dbo.tbEquipamentoPostos.Posto = dbo.tbPostos.IdPosto
GO
/****** Object:  View [dbo].[teste]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[teste]
AS
SELECT     'Combustiveis' AS Descricao, SUM(dbo.tbVendasItens.PrecoVenda) AS Precovenda
FROM         dbo.tbVendas INNER JOIN
                      dbo.tbVendasItens ON dbo.tbVendas.idVenda = dbo.tbVendasItens.idVenda INNER JOIN
                      dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.IdProduto INNER JOIN
                      dbo.tbProdutosPostos ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto AND 
                      dbo.tbVendasItens.idProduto = dbo.tbProdutosPostos.idProduto AND dbo.tbProdutos.IdProduto = dbo.tbProdutosPostos.idProduto
GROUP BY dbo.tbProdutos.TipoProd, dbo.tbVendas.idCaixa
HAVING      (dbo.tbVendas.idCaixa BETWEEN 32 AND 32) AND (dbo.tbProdutos.TipoProd = 'LB')
GO
/****** Object:  View [dbo].[vendas]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vendas]
AS
SELECT     dbo.tbVendas.idVenda, dbo.tbVendasItens.Quantidade, dbo.tbVendasItens.PrecoCusto, dbo.tbVendasItens.PrecoVenda, 
                      dbo.tbVendasItens.PrecoEspecial, dbo.tbVendasItens.idTanque, dbo.tbVendasItensPagamento.TipoPagamento
FROM         dbo.tbVendas INNER JOIN
                      dbo.tbVendasItens ON dbo.tbVendas.idVenda = dbo.tbVendasItens.idVenda INNER JOIN
                      dbo.tbVendasItensPagamento ON dbo.tbVendas.idVenda = dbo.tbVendasItensPagamento.idVenda
WHERE     (dbo.tbVendas.idCaixa = 692) AND (dbo.tbVendasItens.idTanque = 1)
GO
/****** Object:  View [dbo].[vendasCBTurno]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vendasCBTurno]
AS
SELECT     TOP 100 PERCENT dbo.tbProdutos.Descricao, ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0) AS T1, ISNULL
                          ((SELECT     ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                              FROM         dbo.tbVendasItens INNER JOIN
                                                    dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.idVenda INNER JOIN
                                                    dbo.tbProdutosPostos ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto INNER JOIN
                                                    dbo.tbProdutos ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.IdProduto AND 
                                                    dbo.tbVendasItens.idProduto = dbo.tbProdutos.IdProduto
                              WHERE     (dbo.tbVendas.idCaixa = 405) AND (dbo.tbProdutos.TipoProd = 'CB')
                              GROUP BY dbo.tbProdutos.Descricao), 0) AS T2, ISNULL
                          ((SELECT     ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                              FROM         dbo.tbVendasItens INNER JOIN
                                                    dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.idVenda INNER JOIN
                                                    dbo.tbProdutosPostos ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto INNER JOIN
                                                    dbo.tbProdutos ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.IdProduto AND 
                                                    dbo.tbVendasItens.idProduto = dbo.tbProdutos.IdProduto
                              WHERE     (dbo.tbVendas.idCaixa = 406) AND (dbo.tbProdutos.TipoProd = 'CB')
                              GROUP BY dbo.tbProdutos.Descricao), 0) AS T3
FROM         dbo.tbVendasItens INNER JOIN
                      dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.idVenda INNER JOIN
                      dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.IdProduto
WHERE     (dbo.tbVendas.idCaixa = 404) AND (dbo.tbProdutos.TipoProd = 'CB')
GROUP BY dbo.tbProdutos.Descricao, dbo.tbProdutos.ordem
ORDER BY dbo.tbProdutos.ordem
GO
/****** Object:  View [dbo].[vendasContTurno]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vendasContTurno]
AS
SELECT     'Clientes Atendidos' AS Descricao, ISNULL(COUNT(dbo.tbVendasItens.Quantidade), 0) AS T1, ISNULL
                          ((SELECT     ISNULL(COUNT(dbo.tbVendasItens.Quantidade), 0)
                              FROM         dbo.tbVendasItens INNER JOIN
                                                    dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.idVenda INNER JOIN
                                                    dbo.tbProdutosPostos ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto INNER JOIN
                                                    dbo.tbProdutos ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.IdProduto AND 
                                                    dbo.tbVendasItens.idProduto = dbo.tbProdutos.IdProduto
                              WHERE     (dbo.tbVendas.idCaixa = 405)
                              GROUP BY dbo.tbProdutos.Descricao), 0) AS T2, ISNULL
                          ((SELECT     ISNULL(COUNT(dbo.tbVendasItens.Quantidade), 0)
                              FROM         dbo.tbVendasItens INNER JOIN
                                                    dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.idVenda INNER JOIN
                                                    dbo.tbProdutosPostos ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto INNER JOIN
                                                    dbo.tbProdutos ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.IdProduto AND 
                                                    dbo.tbVendasItens.idProduto = dbo.tbProdutos.IdProduto
                              WHERE     (dbo.tbVendas.idCaixa = 406)
                              GROUP BY dbo.tbProdutos.Descricao), 0) AS T3
FROM         dbo.tbVendasItens INNER JOIN
                      dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.idVenda INNER JOIN
                      dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.IdProduto
WHERE     (dbo.tbVendas.idCaixa = 404)
GROUP BY dbo.tbProdutos.Descricao
GO
/****** Object:  View [dbo].[vendasLBTurno]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vendasLBTurno]
AS
SELECT     'Òleo Lubrificantes' AS Descricao, ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0) AS T1, ISNULL
                          ((SELECT     ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                              FROM         dbo.tbVendasItens INNER JOIN
                                                    dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.idVenda INNER JOIN
                                                    dbo.tbProdutosPostos ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto INNER JOIN
                                                    dbo.tbProdutos ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.IdProduto AND 
                                                    dbo.tbVendasItens.idProduto = dbo.tbProdutos.IdProduto
                              WHERE     (dbo.tbVendas.idCaixa = 405) AND (dbo.tbProdutos.TipoProd = 'LB')
                              GROUP BY dbo.tbProdutos.Descricao), 0) AS T2, ISNULL
                          ((SELECT     ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                              FROM         dbo.tbVendasItens INNER JOIN
                                                    dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.idVenda INNER JOIN
                                                    dbo.tbProdutosPostos ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto INNER JOIN
                                                    dbo.tbProdutos ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.IdProduto AND 
                                                    dbo.tbVendasItens.idProduto = dbo.tbProdutos.IdProduto
                              WHERE     (dbo.tbVendas.idCaixa = 406) AND (dbo.tbProdutos.TipoProd = 'LB')
                              GROUP BY dbo.tbProdutos.Descricao), 0) AS T3
FROM         dbo.tbVendasItens INNER JOIN
                      dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.idVenda INNER JOIN
                      dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.IdProduto
WHERE     (dbo.tbVendas.idCaixa = 404) AND (dbo.tbProdutos.TipoProd = 'LB')
GROUP BY dbo.tbProdutos.Descricao
GO
/****** Object:  View [dbo].[vendasLCTurno]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vendasLCTurno]
AS
SELECT     'Loja de Conveniência' AS Descricao, ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0) AS T1, ISNULL
                          ((SELECT     ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                              FROM         dbo.tbVendasItens INNER JOIN
                                                    dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.idVenda INNER JOIN
                                                    dbo.tbProdutosPostos ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto INNER JOIN
                                                    dbo.tbProdutos ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.IdProduto AND 
                                                    dbo.tbVendasItens.idProduto = dbo.tbProdutos.IdProduto
                              WHERE     (dbo.tbVendas.idCaixa = 405) AND (dbo.tbProdutos.TipoProd = 'LC')
                              GROUP BY dbo.tbProdutos.Descricao), 0) AS T2, ISNULL
                          ((SELECT     ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                              FROM         dbo.tbVendasItens INNER JOIN
                                                    dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.idVenda INNER JOIN
                                                    dbo.tbProdutosPostos ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto INNER JOIN
                                                    dbo.tbProdutos ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.IdProduto AND 
                                                    dbo.tbVendasItens.idProduto = dbo.tbProdutos.IdProduto
                              WHERE     (dbo.tbVendas.idCaixa = 406) AND (dbo.tbProdutos.TipoProd = 'LC')
                              GROUP BY dbo.tbProdutos.Descricao), 0) AS T3
FROM         dbo.tbVendasItens INNER JOIN
                      dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.idVenda INNER JOIN
                      dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.IdProduto
WHERE     (dbo.tbVendas.idCaixa = 404) AND (dbo.tbProdutos.TipoProd = 'LC')
GROUP BY dbo.tbProdutos.Descricao
GO
/****** Object:  View [dbo].[vendasMediaTurno]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vendasMediaTurno]
AS
SELECT     'Média de Vendas' AS Descricao, ISNULL(COUNT(dbo.tbVendasItens.Quantidade), 0) AS T1, ISNULL
                          ((SELECT     Isnull(COUNT(dbo.tbVendasItens.Quantidade), 0) AS T2
                              FROM         dbo.tbVendasItens INNER JOIN
                                                    dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.idVenda INNER JOIN
                                                    dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.IdProduto INNER JOIN
                                                    dbo.tbCaixa ON dbo.tbVendas.idCaixa = dbo.tbCaixa.idCaixa
                              WHERE     (dbo.tbVendas.idCaixa BETWEEN 400 AND 410) AND (dbo.tbCaixa.TCaixa = 2)
                              GROUP BY dbo.tbProdutos.Descricao), 0) AS T2, ISNULL
                          ((SELECT     Isnull(COUNT(dbo.tbVendasItens.Quantidade), 0) AS T2
                              FROM         dbo.tbVendasItens INNER JOIN
                                                    dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.idVenda INNER JOIN
                                                    dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.IdProduto INNER JOIN
                                                    dbo.tbCaixa ON dbo.tbVendas.idCaixa = dbo.tbCaixa.idCaixa
                              WHERE     (dbo.tbVendas.idCaixa BETWEEN 400 AND 410) AND (dbo.tbCaixa.TCaixa = 3)
                              GROUP BY dbo.tbProdutos.Descricao), 0) AS T3
FROM         dbo.tbVendasItens INNER JOIN
                      dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.idVenda INNER JOIN
                      dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.IdProduto INNER JOIN
                      dbo.tbCaixa ON dbo.tbVendas.idCaixa = dbo.tbCaixa.idCaixa
WHERE     (dbo.tbVendas.idCaixa BETWEEN 400 AND 410) AND (dbo.tbCaixa.TCaixa = 1)
GROUP BY dbo.tbProdutos.Descricao
GO
/****** Object:  View [dbo].[VIEW1]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW1]
AS
SELECT     idEntidade AS FG, MIN(Gasolina) AS VG
FROM         dbo.tbCotacao
GROUP BY idEntidade
GO
/****** Object:  View [dbo].[VIEW2]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW2]
AS
SELECT     SUM(dbo.tbCaixaItens.ValorLido) AS Expr1
FROM         dbo.tbTanques INNER JOIN
                      dbo.tbBombas ON dbo.tbTanques.IdPosto = dbo.tbBombas.IdPosto AND dbo.tbTanques.NumTanque = dbo.tbBombas.NumTanque INNER JOIN
                      dbo.tbCaixaItens ON dbo.tbTanques.NumTanque = dbo.tbCaixaItens.idObjeto
WHERE     (dbo.tbCaixaItens.TipoLeitura = 'T') AND (dbo.tbCaixaItens.idCaixa = 8)
GROUP BY dbo.tbCaixaItens.idObjeto
HAVING      (dbo.tbCaixaItens.idObjeto = dbo.tbCaixaItens.idObjeto)
GO
/****** Object:  View [dbo].[VIEW3]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW3]
AS
SELECT     idCaixa AS Caixa, MONTH(DataAbertura) AS Expr2, MIN(DataAbertura) AS Expr1, MAX(DataAbertura) AS Expr3
FROM         dbo.tbCaixa
GROUP BY MONTH(DataAbertura), idCaixa
GO
/****** Object:  View [dbo].[VIEW4]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW4]
AS
SELECT     dbo.tbEntidades.RzSocial, dbo.tbCartaFrete.idCarta, dbo.tbPostos.RzSocial AS Posto, dbo.tbCartaFrete.DataEmissao, dbo.tbCartaFrete.NumNota, 
                      dbo.tbCartaFrete.ValorLiquido, dbo.tbCartaFrete.Placa,
                          (SELECT     Fone
                            FROM          tbPostos
                            WHERE      idPosto = dbo.tbCartaFreteEnvio.idPosto) AS Fone,
                          (SELECT     dbo.tbContasBancarias.Titular + '  Banco:  ' + CAST(dbo.tbContasBancarias.Banco AS varchar(10)) 
                                                   + '  Ag: ' + CAST(dbo.tbContasBancarias.Agencia AS varchar(10)) + '  C/C:  ' + CAST(dbo.tbContasBancarias.Conta AS varchar(15))
                            FROM          dbo.tbContasBancarias INNER JOIN
                                                   dbo.tbCartaFreteEnvio ON dbo.tbContasBancarias.idConta = dbo.tbCartaFreteEnvio.ContaPagamento
                            WHERE      (dbo.tbCartaFreteEnvio.id = 456)) AS Banco
FROM         dbo.tbCartaFrete INNER JOIN
                      dbo.tbCartaFreteEnvio ON dbo.tbCartaFrete.idEnviada = dbo.tbCartaFreteEnvio.id INNER JOIN
                      dbo.tbEntidades ON dbo.tbCartaFrete.idEntidade = dbo.tbEntidades.IdEntidade INNER JOIN
                      dbo.tbPostos ON dbo.tbCartaFrete.IdPosto = dbo.tbPostos.IdPosto
WHERE     (dbo.tbCartaFreteEnvio.id = 456)
GO
/****** Object:  View [dbo].[VIEW5]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW5]
AS
SELECT     dbo.tbPedidos.Dataped AS DataCompra, dbo.tbCaixa.DataAbertura AS DataRecebimento, dbo.tbEntidades.NomeUsual AS Fornecedor, 
                      dbo.tbPedidosItens.NumeroNota AS NF, dbo.tbPedidosItens.QTDRecebido, dbo.tbProdutos.Descricao, dbo.tbPedidosItens.QTD, 
                      dbo.tbPedidosItens.VUPro + dbo.tbPedidosItens.VUFrete + dbo.tbPedidosItens.VUGNRE AS ValorUnitario, dbo.tbPedidosItens.OBS, 
                      dbo.tbPostos.NomeUsual
FROM         dbo.tbPedidos INNER JOIN
                      dbo.tbPedidosItens ON dbo.tbPedidos.IdPedido = dbo.tbPedidosItens.idPedido INNER JOIN
                      dbo.tbCaixa ON dbo.tbPedidosItens.idPosto = dbo.tbCaixa.idPosto AND dbo.tbPedidosItens.idCaixaRecebimento = dbo.tbCaixa.idCaixa INNER JOIN
                      dbo.tbEntidades ON dbo.tbPedidos.IdEntidade = dbo.tbEntidades.IdEntidade INNER JOIN
                      dbo.tbProdutos ON dbo.tbPedidosItens.idProduto = dbo.tbProdutos.IdProduto INNER JOIN
                      dbo.tbPostos ON dbo.tbPedidosItens.idPosto = dbo.tbPostos.IdPosto
WHERE     (dbo.tbPedidosItens.QTD - dbo.tbPedidosItens.QTDRecebido = 0) AND (dbo.tbProdutos.TipoProd IN ('CB')) AND (dbo.tbPostos.IdPosto BETWEEN 14 AND
                       14) AND (dbo.tbCaixa.DataAbertura BETWEEN CONVERT(DATETIME, '2005-03-01 00:00:00', 102) AND CONVERT(DATETIME, '2005-03-11 23:00:00', 
                      102))
GO
/****** Object:  View [dbo].[VIEW6]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VIEW6]
AS
SELECT     idCaixa
FROM         dbo.tbCaixa
GO
/****** Object:  View [dbo].[viewAdiantamentos]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewAdiantamentos]
AS
SELECT     dbo.tbEntidades.NomeUsual, dbo.tbAdiantamento.Descricao, dbo.tbAdiantamento.Data, dbo.tbAdiantamento.Valor, dbo.tbAdiantamentoItem.NotaFiscal, 
                      dbo.tbAdiantamentoItem.Descricao AS DescItem, dbo.tbAdiantamentoItem.Data AS DataItem, dbo.tbAdiantamentoItem.Valor AS ValorItem
FROM         dbo.tbAdiantamento INNER JOIN
                      dbo.tbEntidades ON dbo.tbAdiantamento.idPessoa = dbo.tbEntidades.IdEntidade RIGHT OUTER JOIN
                      dbo.tbAdiantamentoItem ON dbo.tbAdiantamento.id = dbo.tbAdiantamentoItem.idAdiantamento
WHERE     (dbo.tbAdiantamento.id = 9)
GO
/****** Object:  View [dbo].[viewAfericao]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewAfericao]
AS
SELECT     SUM(QTD) AS Afericao
FROM         dbo.tbAfericao
WHERE     (NumBomba > '0' AND NumBomba = '1') AND (idCaixa BETWEEN 6 AND 8)
GO
/****** Object:  View [dbo].[viewAmostrTestemunha]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewAmostrTestemunha]
AS
SELECT     dbo.tbProdutos.Descricao, CONVERT(nvarchar(15), dbo.tbCaixa.DataAbertura, 103) AS data, dbo.tbPedidosItens.Lacre, 
                      dbo.tbPedidosItens.NumeroNota, dbo.tbPedidosItens.Motorista, dbo.tbPedidosItens.RGMotorista, dbo.tbPedidosItens.Placa, dbo.tbPostos.RzSocial, 
                      dbo.tbPostos.CNPJ AS CNPJP, tbEntidades_1.RzSocial AS Recebedor, dbo.tbPostos.Endereco, dbo.tbPostos.Bairro, dbo.tbPostos.Municipio, 
                      dbo.tbPostos.UF, dbo.tbPedidosItens.QTD, dbo.tbPedidosItens.Aspecto, dbo.tbPedidosItens.COR, dbo.tbPedidosItens.densidade, 
                      dbo.tbPedidosItens.Massa, dbo.tbPedidosItens.Teor, dbo.tbPedidosItens.Teor1, tbEntidades_2.RzSocial AS Analista, 
                      dbo.tbEntidades.CNPJ AS CNPJDistribuidor, dbo.tbEntidades.RzSocial AS RZSocialDistribuidor, tbEntidades_3.RzSocial AS RzSocialTransp, 
                      tbEntidades_3.CNPJ AS CNPJTransp
FROM         dbo.tbCaixa INNER JOIN
                      dbo.tbPedidosItens ON dbo.tbCaixa.idPosto = dbo.tbPedidosItens.idPosto AND 
                      dbo.tbCaixa.idCaixa = dbo.tbPedidosItens.idCaixaRecebimento INNER JOIN
                      dbo.tbPedidos ON dbo.tbPedidosItens.idPedido = dbo.tbPedidos.IdPedido INNER JOIN
                      dbo.tbProdutos ON dbo.tbPedidosItens.idProduto = dbo.tbProdutos.IdProduto INNER JOIN
                      dbo.tbEntidades ON dbo.tbPedidos.IdEntidade = dbo.tbEntidades.IdEntidade INNER JOIN
                      dbo.tbPostos ON dbo.tbCaixa.idPosto = dbo.tbPostos.IdPosto INNER JOIN
                      dbo.tbEntidades tbEntidades_1 ON dbo.tbCaixa.idEntidade = tbEntidades_1.IdEntidade INNER JOIN
                      dbo.tbEntidades tbEntidades_2 ON dbo.tbPedidosItens.Analista = tbEntidades_2.IdEntidade INNER JOIN
                      dbo.tbEntidades tbEntidades_3 ON dbo.tbPedidos.idEntidadeTransp = tbEntidades_3.IdEntidade
WHERE     (dbo.tbPedidosItens.idPedido = 12)
GO
/****** Object:  View [dbo].[viewBuscaRecebimentos em cheque]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewBuscaRecebimentos em cheque]
AS
SELECT     'Recebimento' AS Descricao, dbo.tbCaixa.Dia AS Dia, 
                      CASE dbo.tbCaixa.TCaixa WHEN 1 THEN '14 as 22' WHEN 2 THEN '22 as 06' WHEN 3 THEN '06 as 14' END AS Turno, dbo.tbEntidades.NomeUsual, 
                      0 AS idVenda, dbo.tbContasPagarReceber.idPosto, dbo.tbContasPagarReceber.CodConta AS Contabancaria, tbEntidades_1.IdEntidade AS Cliente, 
                      tbEntidades_1.NomeUsual AS DescricaoCliente, dbo.tbContasPagarReceber.Valor, 0 AS Linha, dbo.tbPostos.NomeUsual AS Posto
FROM         dbo.tbCaixa INNER JOIN
                      dbo.tbEntidades ON dbo.tbCaixa.idEntidade = dbo.tbEntidades.IdEntidade INNER JOIN
                      dbo.tbContasPagarReceber ON dbo.tbCaixa.idCaixa = dbo.tbContasPagarReceber.idPedCaixa INNER JOIN
                      dbo.tbEntidades tbEntidades_1 ON dbo.tbContasPagarReceber.idEntidade = tbEntidades_1.IdEntidade INNER JOIN
                      dbo.tbPostos ON dbo.tbCaixa.idPosto = dbo.tbPostos.IdPosto
WHERE     (dbo.tbContasPagarReceber.idTipo = 'RC') AND (dbo.tbContasPagarReceber.IdTipoDocto IN ('CV', 'CP')) AND 
                      (dbo.tbContasPagarReceber.NumDocto LIKE '%61%')
GO
/****** Object:  View [dbo].[viewCartaFrete]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewCartaFrete]
AS
SELECT     dbo.tbEntidades.RzSocial, dbo.tbCartaFrete.idCarta, dbo.tbPostos.RzSocial AS Posto, dbo.tbCartaFrete.DataEmissao, dbo.tbCartaFrete.NumNota, 
                      dbo.tbCartaFrete.ValorLiquido, dbo.tbCartaFrete.Placa, dbo.tbMotorista.Motorista
FROM         dbo.tbCartaFrete INNER JOIN
                      dbo.tbCartaFreteEnvio ON dbo.tbCartaFrete.idEnviada = dbo.tbCartaFreteEnvio.id INNER JOIN
                      dbo.tbEntidades ON dbo.tbCartaFrete.idEntidade = dbo.tbEntidades.IdEntidade INNER JOIN
                      dbo.tbPostos ON dbo.tbCartaFrete.IdPosto = dbo.tbPostos.IdPosto INNER JOIN
                      dbo.tbMotorista ON dbo.tbCartaFrete.Placa = dbo.tbMotorista.Placa
WHERE     (dbo.tbCartaFreteEnvio.id = 1)
GO
/****** Object:  View [dbo].[viewCartasPorVenda]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewCartasPorVenda]
AS
SELECT     idCarta AS Carta, NumNota AS Nota, ValorLiquido AS Valor, ValorAbastecimento AS Abastecimento, ValorAdiantamento AS Adiantamento, 
                      ValorRetorno AS Saldo
FROM         dbo.tbCartaFrete
WHERE     (IdPosto = 14) AND (idEntidade = 4) AND (idCaixaRetorno IS NULL) AND (idVenda = 61413)
GO
/****** Object:  View [dbo].[viewChequesDeveolvidos]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewChequesDeveolvidos]
AS
SELECT     dbo.tbEntidades.NomeUsual, dbo.tbalinea.descricao, dbo.tbChequeSemFundo.valor, dbo.tbChequeSemFundo.DataAtualizacao, 
                      dbo.tbChequeSemFundo.HistoricoAtualizacao
FROM         dbo.tbChequeSemFundo INNER JOIN
                      dbo.tbalinea ON dbo.tbChequeSemFundo.alinea = dbo.tbalinea.alinea INNER JOIN
                      dbo.tbEntidades ON dbo.tbChequeSemFundo.idEntidade = dbo.tbEntidades.IdEntidade
WHERE     (dbo.tbChequeSemFundo.idPosto = 2)
GO
/****** Object:  View [dbo].[viewChequesDevolvidos]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewChequesDevolvidos]
AS
SELECT     dbo.tbPostos.RzSocial, dbo.tbEntidades.NomeUsual, dbo.tbalinea.descricao, dbo.tbChequeSemFundo.nCheque, dbo.tbChequeSemFundo.valor, 
                      dbo.tbChequeSemFundo.HistoricoAtualizacao
FROM         dbo.tbChequeSemFundo INNER JOIN
                      dbo.tbPostos ON dbo.tbChequeSemFundo.idPosto = dbo.tbPostos.IdPosto INNER JOIN
                      dbo.tbEntidades ON dbo.tbChequeSemFundo.idEntidade = dbo.tbEntidades.IdEntidade INNER JOIN
                      dbo.tbalinea ON dbo.tbChequeSemFundo.alinea = dbo.tbalinea.alinea
GO
/****** Object:  View [dbo].[viewColaboradores]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewColaboradores]
AS
SELECT     dbo.tbEntidades.NomeUsual, dbo.tbFuncs.Admissao, dbo.tbFuncs.Funcao, dbo.tbFuncs.Salario, dbo.tbFuncs.PercPericulosidade, 
                      dbo.tbFuncs.AdicNoturno, dbo.tbFuncs.QCaixa, dbo.tbFuncs.SalFamilia, 
                      dbo.tbFuncs.Salario + dbo.tbFuncs.PercPericulosidade + dbo.tbFuncs.AdicNoturno + dbo.tbFuncs.QCaixa + dbo.tbFuncs.SalFamilia AS Total, 
                      dbo.tbHorarios.Descricao AS Horario
FROM         dbo.tbFuncs INNER JOIN
                      dbo.tbEntidades ON dbo.tbFuncs.IdEntidade = dbo.tbEntidades.IdEntidade INNER JOIN
                      dbo.tbHorarios ON dbo.tbFuncs.IdHorario = dbo.tbHorarios.IdHorario
WHERE     (dbo.tbFuncs.IdPosto = 2)
GO
/****** Object:  View [dbo].[viewComissaoDeVendas]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewComissaoDeVendas]
AS
SELECT     TOP 100 PERCENT dbo.tbVendas.IDVendedor, dbo.tbVendas.DataMovimento, SUM(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda) 
                      AS Total, SUM(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoEspecial) AS TotalEspecial, 'Gasolina' AS Descricao,
                          (SELECT     TOP 1 Percentual
                            FROM          dbo.tbPLRTabela
                            WHERE      (IDProduto = 1)) AS Percentual
FROM         dbo.tbVendas INNER JOIN
                      dbo.tbVendasItens ON dbo.tbVendas.idVenda = dbo.tbVendasItens.idVenda INNER JOIN
                      dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.IdProduto
WHERE     (dbo.tbVendas.Status IS NULL) AND (dbo.tbVendasItens.Cancelado = 0) AND (dbo.tbVendas.idPosto = 3)
GROUP BY dbo.tbVendas.IDVendedor, dbo.tbVendas.DataMovimento, dbo.tbVendasItens.idProduto, dbo.tbProdutos.TipoProd
HAVING      (dbo.tbVendas.DataMovimento BETWEEN CONVERT(DATETIME, '2008-05-01 00:00:00', 102) AND CONVERT(DATETIME, '2008-05-31 00:00:00', 102)) 
                      AND (NOT (dbo.tbVendas.IDVendedor IS NULL)) AND (dbo.tbVendasItens.idProduto = 1) AND (dbo.tbProdutos.TipoProd = N'CB')
ORDER BY dbo.tbVendas.DataMovimento, dbo.tbVendas.IDVendedor
GO
/****** Object:  View [dbo].[viewContaCorrenteColaborador]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewContaCorrenteColaborador]
AS
SELECT     TOP 100 PERCENT dbo.tbPostos.IdPosto, dbo.tbPostos.NomeUsual AS Posto, dbo.tbEntidades.RzSocial AS Colaborador, 
                      dbo.tbColaboradoresDifCaixa.valor, dbo.tbColaboradoresDifCaixa.Descricao, dbo.tbCaixa.Dia, dbo.tbCaixa.idCaixa, dbo.tbColaboradoresDifCaixa.Tipo, 
                      dbo.tbColaboradoresDifCaixa.idEntidade
FROM         dbo.tbColaboradoresDifCaixa INNER JOIN
                      dbo.tbEntidades ON dbo.tbColaboradoresDifCaixa.idEntidade = dbo.tbEntidades.IdEntidade INNER JOIN
                      dbo.tbPostos ON dbo.tbColaboradoresDifCaixa.idPosto = dbo.tbPostos.IdPosto INNER JOIN
                      dbo.tbCaixa ON dbo.tbColaboradoresDifCaixa.idCaixa = dbo.tbCaixa.idCaixa
WHERE     (dbo.tbPostos.IdPosto BETWEEN 4 AND 4) AND (dbo.tbColaboradoresDifCaixa.Tipo = 'C') AND (dbo.tbColaboradoresDifCaixa.valor > 0) AND 
                      (dbo.tbCaixa.Dia BETWEEN CONVERT(DATETIME, '2006-01-01 00:00:00', 102) AND CONVERT(DATETIME, '2006-12-31 00:00:00', 102)) AND 
                      (dbo.tbColaboradoresDifCaixa.idEntidade BETWEEN 93 AND 93) OR
                      (dbo.tbPostos.IdPosto BETWEEN 4 AND 4) AND (dbo.tbCaixa.Dia BETWEEN CONVERT(DATETIME, '2006-01-01 00:00:00', 102) AND 
                      CONVERT(DATETIME, '2006-12-31 00:00:00', 102)) AND (dbo.tbColaboradoresDifCaixa.idEntidade BETWEEN 93 AND 93)
ORDER BY dbo.tbPostos.NomeUsual, dbo.tbCaixa.Dia, dbo.tbEntidades.NomeUsual
GO
/****** Object:  View [dbo].[viewContas]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewContas]
AS
SELECT     dbo.tbContasPagarReceber.DataVencto, dbo.tbEntidades.NomeUsual, dbo.tbContasPagarReceber.IdTipoDocto, dbo.tbContasPagarReceber.NumDocto, 
                      dbo.tbContasPagarReceber.Valor
FROM         dbo.tbContasPagarReceber INNER JOIN
                      dbo.tbEntidades ON dbo.tbContasPagarReceber.idEntidade = dbo.tbEntidades.IdEntidade
WHERE     (dbo.tbContasPagarReceber.idPosto = 2) AND (dbo.tbContasPagarReceber.Ativa = 1) AND (dbo.tbContasPagarReceber.idTipo = 'AR') AND 
                      (dbo.tbContasPagarReceber.DataVencto BETWEEN CONVERT(DATETIME, '2005-01-01 00:00:00', 102) AND CONVERT(DATETIME, '2005-12-12 00:00:00', 
                      102))
GO
/****** Object:  View [dbo].[viewDepChequePre]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewDepChequePre]
AS
SELECT     TOP 100 PERCENT dbo.tbVendasItensPagamento.Linha, dbo.tbVendasItensPagamento.DataVencimento, 
                      'Banco: ' + RTRIM(dbo.tbEntidadeRefBanc.Banco1) + ' - ' + 'Ag: ' + RTRIM(dbo.tbEntidadeRefBanc.Agencia1) 
                      + ' - ' + 'C/C: ' + dbo.tbEntidadeRefBanc.Conta1 AS Conta, dbo.tbVendasItensPagamento.NumDoc, dbo.tbVendasItensPagamento.Valor, 
                      dbo.tbEntidades.RzSocial
FROM         dbo.tbVendasItensPagamento INNER JOIN
                      dbo.tbDepositoChequePre ON dbo.tbVendasItensPagamento.Linha = dbo.tbDepositoChequePre.Linha INNER JOIN
                      dbo.tbVendas ON dbo.tbVendasItensPagamento.idVenda = dbo.tbVendas.idVenda INNER JOIN
                      dbo.tbEntidadeRefBanc ON dbo.tbVendasItensPagamento.ContaBancaria = dbo.tbEntidadeRefBanc.ItemRefBanc INNER JOIN
                      dbo.tbEntidades ON dbo.tbEntidadeRefBanc.IdEntidade = dbo.tbEntidades.IdEntidade
WHERE     (dbo.tbVendasItensPagamento.TipoPagamento = 'CP') AND (dbo.tbVendasItensPagamento.DataVencimento <= CONVERT(DATETIME, '2006-05-05')) AND 
                      (dbo.tbDepositoChequePre.Pago = 0) AND (dbo.tbVendas.idPosto = 3)
ORDER BY dbo.tbVendasItensPagamento.DataVencimento
GO
/****** Object:  View [dbo].[viewDepositos]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewDepositos]
AS
SELECT     SUM(Valor) AS Depositado
FROM         dbo.tbMovBancaria
WHERE     (TipoMov = 'D') AND (idCaixaPosto BETWEEN 9 AND 13)
GO
/****** Object:  View [dbo].[viewDespesas]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewDespesas]
AS
SELECT     dbo.tbHistoricos.Descricao, dbo.tbContasPagarReceber.Valor,
                          (SELECT     SUM(dbo.tbContasPagarReceber.Valor)
                            FROM          dbo.tbContasPagarReceber INNER JOIN
                                                   dbo.tbHistoricos ON dbo.tbContasPagarReceber.idHistorico = dbo.tbHistoricos.IdHistorico
                            WHERE      (dbo.tbContasPagarReceber.Despesa = 1) AND (dbo.tbContasPagarReceber.idPedCaixa BETWEEN 6 AND 9)) AS ValorMes
FROM         dbo.tbContasPagarReceber INNER JOIN
                      dbo.tbHistoricos ON dbo.tbContasPagarReceber.idHistorico = dbo.tbHistoricos.IdHistorico
WHERE     (dbo.tbContasPagarReceber.Despesa = 1) AND (dbo.tbContasPagarReceber.idPedCaixa BETWEEN 6 AND 8)
GO
/****** Object:  View [dbo].[viewDespesas1]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewDespesas1]
AS
SELECT     dbo.tbCaixa.Dia, dbo.tbPostos.NomeUsual AS Posto, dbo.tbEntidades.NomeUsual AS Favorecido, dbo.tbContasPagarReceber.Valor, 
                      dbo.tbHistoricos.Descricao AS Historico, dbo.tbContasPagarReceber.InfoAdic
FROM         dbo.tbContasPagarReceber INNER JOIN
                      dbo.tbPostos ON dbo.tbContasPagarReceber.idPosto = dbo.tbPostos.IdPosto INNER JOIN
                      dbo.tbHistoricos ON dbo.tbContasPagarReceber.idHistorico = dbo.tbHistoricos.IdHistorico INNER JOIN
                      dbo.tbEntidades ON dbo.tbContasPagarReceber.idEntidade = dbo.tbEntidades.IdEntidade INNER JOIN
                      dbo.tbCaixa ON dbo.tbContasPagarReceber.idPedCaixa = dbo.tbCaixa.idCaixa
WHERE     (dbo.tbContasPagarReceber.idPosto BETWEEN 3 AND 3) AND (dbo.tbCaixa.idCaixa BETWEEN 4000 AND 4500) AND 
                      (dbo.tbContasPagarReceber.Despesa = 1) AND (dbo.tbHistoricos.IdHistorico <> 123 AND dbo.tbHistoricos.IdHistorico <> 25)
GO
/****** Object:  View [dbo].[ViewEscalaTrabalho]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[ViewEscalaTrabalho]
	AS
	SELECT        TOP 100 PERCENT dbo.tbEscalaTrabalho.ID, dbo.tbEscalaTrabalho.IDEntidade, dbo.tbEscalaTrabalho.Folga, dbo.tbHorarios.Descricao, 
							 dbo.tbHorarios.Id IdHorario, RIGHT(CONVERT(char(10), dbo.tbEscalaTrabalho.Data, 103), 10) AS Data
	FROM            dbo.tbEscalaTrabalho INNER JOIN
							 dbo.tbHorarios ON dbo.tbEscalaTrabalho.IdHorario = dbo.tbHorarios.Id
	ORDER BY dbo.tbEscalaTrabalho.IDEntidade, dbo.tbEscalaTrabalho.Data
GO
/****** Object:  View [dbo].[viewFinal]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewFinal]
AS
SELECT     SUM(dbo.tbCaixaItens.ValorLido) AS Final
FROM         dbo.tbTanques INNER JOIN
                      dbo.tbBombas ON dbo.tbTanques.IdPosto = dbo.tbBombas.IdPosto AND dbo.tbTanques.NumTanque = dbo.tbBombas.NumTanque INNER JOIN
                      dbo.tbCaixaItens ON dbo.tbTanques.NumTanque = dbo.tbCaixaItens.idObjeto
WHERE     (dbo.tbCaixaItens.TipoLeitura = 'T') AND (dbo.tbCaixaItens.idCaixa = 8)
GROUP BY dbo.tbBombas.NumTanque
HAVING      (dbo.tbBombas.NumTanque = 4)
GO
/****** Object:  View [dbo].[viewFormasRecebimento]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewFormasRecebimento]
AS
SELECT     TOP 100 PERCENT dbo.tbCaixaItens.idObjeto AS Descricao, SUM(dbo.tbCaixaItens.ValorLido) AS Valor
FROM         dbo.tbCaixaItens INNER JOIN
                      dbo.tbCaixa ON dbo.tbCaixaItens.idCaixa = dbo.tbCaixa.idCaixa
WHERE     (dbo.tbCaixa.idCaixa BETWEEN 9 AND 13) AND (dbo.tbCaixaItens.TipoLeitura = 'V')
GROUP BY dbo.tbCaixaItens.idObjeto
HAVING      (dbo.tbCaixaItens.idObjeto <> 'Caixa')
ORDER BY SUM(dbo.tbCaixaItens.ValorLido) DESC
GO
/****** Object:  View [dbo].[viewLucro]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewLucro]
AS
SELECT     SUM(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoCusto) AS Custo, SUM(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda) 
                      AS Venda, ISNULL
                          ((SELECT     SUM(Valor)
                              FROM         tbContasPagarReceber
                              WHERE     Despesa = 1 AND idPedCaixa BETWEEN 6 AND 8), 0) AS Despesa
FROM         dbo.tbVendas INNER JOIN
                      dbo.tbVendasItens ON dbo.tbVendas.idVenda = dbo.tbVendasItens.idVenda
WHERE     (dbo.tbVendas.idCaixa BETWEEN 6 AND 8)
GO
/****** Object:  View [dbo].[viewMOv]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewMOv]
AS
SELECT     dbo.tbMovBancaria.idMov, dbo.tbMovBancaria.TipoMov AS Tipo, dbo.tbPostos.NomeUsual, dbo.tbMovBancaria.Descricao, dbo.tbMovBancaria.Valor, 
                      CONVERT(nvarchar(10), dbo.tbMovBancaria.DataHora, 103) AS Data
FROM         dbo.tbMovBancaria INNER JOIN
                      dbo.tbPostos ON dbo.tbMovBancaria.idPosto = dbo.tbPostos.IdPosto
GO
/****** Object:  View [dbo].[viewPedidos]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewPedidos]
AS
SELECT     TOP 100 PERCENT dbo.tbPedidos.IdPedido AS Pedido, CONVERT(varchar(10), dbo.tbPedidos.Dataped, 103) AS DataPedido, dbo.tbPostos.RzSocial, 
                      dbo.tbEntidades.RzSocial AS Fornecedor, dbo.tbPedidosItens.QTD, dbo.tbPedidosItens.VUPro, dbo.tbPedidosItens.VUFrete, 
                      dbo.tbPedidosItens.VUGNRE, dbo.tbPedidosItens.VUPro + dbo.tbPedidosItens.VUFrete + dbo.tbPedidosItens.VUGNRE AS Total, 
                      dbo.tbPedidosItens.NumeroNota, CONVERT(varchar(10), dbo.tbPedidosItens.DataNota, 103) AS DataNota
FROM         dbo.tbPedidos INNER JOIN
                      dbo.tbPedidosItens ON dbo.tbPedidos.IdPedido = dbo.tbPedidosItens.idPedido INNER JOIN
                      dbo.tbPostos ON dbo.tbPedidosItens.idPosto = dbo.tbPostos.IdPosto INNER JOIN
                      dbo.tbEntidades ON dbo.tbPedidos.IdEntidade = dbo.tbEntidades.IdEntidade
WHERE     (dbo.tbPedidosItens.idPosto IN (2, 3, 4)) AND (dbo.tbPedidosItens.idProduto = 3)
ORDER BY dbo.tbPedidosItens.idPosto, dbo.tbPedidos.IdPedido
GO
/****** Object:  View [dbo].[viewPontoEletronico]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewPontoEletronico]
AS
SELECT        TOP 100 PERCENT ID, IDEntidade, RIGHT(CONVERT(char(10), InicioTrabalho, 103), 10) AS Data, InicioAlmoco, FimAlmoco, FimTrabalho, Falta, Folga, 
                         InicioTrabalho, Ferias, Atestado, Afastado, Advertencia, MarcadoIniTrab, MarcadoIniDesc, MarcadoFimDesc, MarcadoFimTrab
FROM            dbo.tbEntidadesPonto
ORDER BY IDEntidade, data
GO
/****** Object:  View [dbo].[viewPrecosEspeciaos]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewPrecosEspeciaos]
AS
SELECT     SUM(dbo.tbVendasItens.PrecoVenda * dbo.tbVendasItens.Quantidade - dbo.tbVendasItens.PrecoEspecial * dbo.tbVendasItens.Quantidade) 
                      AS tOTAL
FROM         dbo.tbVendas INNER JOIN
                      dbo.tbVendasItens ON dbo.tbVendas.idVenda = dbo.tbVendasItens.idVenda INNER JOIN
                      dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.IdProduto INNER JOIN
                      dbo.tbProdutosPostos ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto AND 
                      dbo.tbVendasItens.idProduto = dbo.tbProdutosPostos.idProduto AND dbo.tbProdutos.IdProduto = dbo.tbProdutosPostos.idProduto
WHERE     (dbo.tbVendas.idPosto = 6) AND (dbo.tbVendas.idCaixa BETWEEN 1667 AND 1677) AND (dbo.tbVendasItens.PrecoEspecial > 0)
GO
/****** Object:  View [dbo].[viewRecebimento]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewRecebimento]
AS
SELECT     SUM(dbo.tbPedidosItens.QTDRecebido) AS Recebimento
FROM         dbo.tbPedidosItens INNER JOIN
                      dbo.tbBombas ON dbo.tbPedidosItens.idPosto = dbo.tbBombas.IdPosto INNER JOIN
                      dbo.tbTanques ON dbo.tbPedidosItens.idPosto = dbo.tbTanques.IdPosto AND dbo.tbBombas.IdPosto = dbo.tbTanques.IdPosto AND 
                      dbo.tbBombas.NumTanque = dbo.tbTanques.NumTanque AND dbo.tbPedidosItens.Tanque = dbo.tbTanques.NumTanque
WHERE     (dbo.tbPedidosItens.idCaixaRecebimento BETWEEN 6 AND 8) AND (dbo.tbTanques.NumTanque = 4)
GO
/****** Object:  View [dbo].[viewRelCartões]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewRelCartões]
AS
SELECT     TOP 100 PERCENT dbo.tbEntidades.NomeUsual, 
                      Tipo = CASE dbo.tbContasPagarReceber.IdTipoDocto WHEN 'CC' THEN 'Crédito' WHEN 'CD' THEN 'Débito' END, 
                      SUM(dbo.tbContasPagarReceber.Valor) AS Valor, SUM(dbo.tbContasPagarReceber.TaxaCartao) AS Desconto
FROM         dbo.tbContasPagarReceber INNER JOIN
                      dbo.tbEntidades ON dbo.tbContasPagarReceber.idEntidade = dbo.tbEntidades.IdEntidade
GROUP BY dbo.tbEntidades.NomeUsual, dbo.tbContasPagarReceber.IdTipoDocto, dbo.tbContasPagarReceber.DataVencto, dbo.tbContasPagarReceber.idPosto, 
                      dbo.tbContasPagarReceber.IdTipoDocto
HAVING      (dbo.tbContasPagarReceber.IdTipoDocto = N'CC' OR
                      dbo.tbContasPagarReceber.IdTipoDocto = N'CD') AND (dbo.tbContasPagarReceber.DataVencto BETWEEN GETDATE() AND GETDATE()) AND 
                      (dbo.tbContasPagarReceber.idPosto = 2)
ORDER BY dbo.tbEntidades.NomeUsual
GO
/****** Object:  View [dbo].[viewResDepositos]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewResDepositos]
AS
SELECT     SUM(ValorLido) AS Dinheiro, ISNULL
                          ((SELECT     SUM(ValorLido) AS Dinheiro
                              FROM         dbo.tbCaixaItens
                              WHERE     (idObjeto = 'Cheque a vista') AND (idCaixa BETWEEN 9 AND 13)), 0) AS Cheque, ISNULL
                          ((SELECT     SUM(ValorLido) AS Dinheiro
                              FROM         dbo.tbCaixaItens
                              WHERE     (idObjeto = 'Despesa') AND (idCaixa BETWEEN 9 AND 13)), 0) AS Despesas,
                          (SELECT     SUM(valor)
                            FROM          tbMovBancaria
                            WHERE      Descricao = 'Deposito' AND idCaixaPosto BETWEEN 9 AND 13 AND ativo = 1) AS Depositado,
                          (SELECT     200) AS ValorEmCaixa
FROM         dbo.tbCaixaItens
WHERE     (idObjeto = 'Dinheiro') AND (idCaixa BETWEEN 9 AND 13)
GO
/****** Object:  View [dbo].[viewResProdutosAReceber]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewResProdutosAReceber]
AS
SELECT     dbo.tbProdutos.Descricao, dbo.tbProdutos.Descricao + ' - ' + dbo.tbEntidades.RzSocial AS RzSocial, dbo.tbPedidosItens.QTD, 
                      dbo.tbPedidosItens.VUPro + dbo.tbPedidosItens.VUFrete + dbo.tbPedidosItens.VUGNRE AS PrecoCusto, dbo.tbPedidos.Dataped
FROM         dbo.tbPedidos INNER JOIN
                      dbo.tbPedidosItens ON dbo.tbPedidos.IdPedido = dbo.tbPedidosItens.idPedido INNER JOIN
                      dbo.tbProdutos ON dbo.tbPedidosItens.idProduto = dbo.tbProdutos.IdProduto INNER JOIN
                      dbo.tbEntidades ON dbo.tbPedidos.IdEntidade = dbo.tbEntidades.IdEntidade INNER JOIN
                      dbo.tbProdutosPostos ON dbo.tbPedidosItens.idPosto = dbo.tbProdutosPostos.idPosto AND 
                      dbo.tbProdutos.IdProduto = dbo.tbProdutosPostos.idProduto AND dbo.tbPedidosItens.idProduto = dbo.tbProdutosPostos.idProduto
WHERE     (dbo.tbPedidosItens.idCaixaRecebimento = 0) AND (dbo.tbPedidosItens.idPosto = 2)
GO
/****** Object:  View [dbo].[viewResProdutosRecebidos]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewResProdutosRecebidos]
AS
SELECT     dbo.tbPedidos.Dataped AS Comprado, dbo.tbProdutos.Descricao + ' - ' + dbo.tbEntidades.RzSocial AS Produto, dbo.tbPedidosItens.FaltaSobra, 
                      dbo.tbPedidosItens.Lacre, dbo.tbPedidosItens.NumeroNota, dbo.tbPedidosItens.QTDRecebido, dbo.tbPedidosItens.Hora AS HoraDescarga, 
                      dbo.tbPedidosItens.VUPro + dbo.tbPedidosItens.VUFrete + dbo.tbPedidosItens.VUGNRE AS Custo, dbo.tbCaixa.DataAbertura AS DataDescarga
FROM         dbo.tbProdutos INNER JOIN
                      dbo.tbPedidosItens INNER JOIN
                      dbo.tbPedidos INNER JOIN
                      dbo.tbEntidades ON dbo.tbPedidos.IdEntidade = dbo.tbEntidades.IdEntidade ON dbo.tbPedidosItens.idPedido = dbo.tbPedidos.IdPedido INNER JOIN
                      dbo.tbProdutosPostos ON dbo.tbPedidosItens.idPosto = dbo.tbProdutosPostos.idPosto AND 
                      dbo.tbPedidosItens.idProduto = dbo.tbProdutosPostos.idProduto ON dbo.tbProdutos.IdProduto = dbo.tbPedidosItens.idProduto AND 
                      dbo.tbProdutos.IdProduto = dbo.tbProdutosPostos.idProduto INNER JOIN
                      dbo.tbCaixa ON dbo.tbPedidosItens.idPosto = dbo.tbCaixa.idPosto AND dbo.tbProdutosPostos.idPosto = dbo.tbCaixa.idPosto AND 
                      dbo.tbPedidosItens.idCaixaRecebimento = dbo.tbCaixa.idCaixa
WHERE     (dbo.tbPedidosItens.idCaixaRecebimento BETWEEN 0 AND 100) AND (dbo.tbPedidosItens.idPosto = 2) AND 
                      (dbo.tbPedidosItens.QTD - dbo.tbPedidosItens.QTDRecebido = 0)
GO
/****** Object:  View [dbo].[viewSelecionaCaixa]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewSelecionaCaixa]
AS
SELECT     idCaixa
FROM         dbo.tbCaixa
WHERE     (NOT (DataFechamento IS NULL)) AND (idPosto = 3) AND (Dia = CONVERT(DATETIME, '2005-05-05 00:00:00', 102))
UNION
SELECT     idCaixa
FROM         dbo.tbCaixa
WHERE     (NOT (DataFechamento IS NULL)) AND (idPosto = 3) AND (Dia = CONVERT(DATETIME, '2005-05-04 00:00:00', 102)) AND Tcaixa = 3
GO
/****** Object:  View [dbo].[viewTeste]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewTeste]
AS
SELECT     SUM(ValorLido) AS Final
FROM         dbo.tbCaixaItens
WHERE     (idCaixa = 8) AND (TipoLeitura = 'T') AND (idObjeto = '4')
GO
/****** Object:  View [dbo].[viewTurnoCAixas]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewTurnoCAixas]
AS
SELECT     1 AS id, dbo.tbProdutos.Descricao, ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0) AS T1, ISNULL
                          ((SELECT     ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                              FROM         dbo.tbVendasItens INNER JOIN
                                                    dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.idVenda INNER JOIN
                                                    dbo.tbProdutosPostos ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto INNER JOIN
                                                    dbo.tbProdutos ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.IdProduto AND 
                                                    dbo.tbVendasItens.idProduto = dbo.tbProdutos.IdProduto
                              WHERE     (dbo.tbVendas.idCaixa = 11) AND (dbo.tbProdutos.TipoProd = 'CB')
                              GROUP BY dbo.tbProdutos.Descricao), 0) AS T2, ISNULL
                          ((SELECT     ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                              FROM         dbo.tbVendasItens INNER JOIN
                                                    dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.idVenda INNER JOIN
                                                    dbo.tbProdutosPostos ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto INNER JOIN
                                                    dbo.tbProdutos ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.IdProduto AND 
                                                    dbo.tbVendasItens.idProduto = dbo.tbProdutos.IdProduto
                              WHERE     (dbo.tbVendas.idCaixa = 13) AND (dbo.tbProdutos.TipoProd = 'CB')
                              GROUP BY dbo.tbProdutos.Descricao), 0) AS T3
FROM         dbo.tbVendasItens INNER JOIN
                      dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.idVenda INNER JOIN
                      dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.IdProduto
WHERE     (dbo.tbVendas.idCaixa = 12) AND (dbo.tbProdutos.TipoProd = 'CB')
GROUP BY dbo.tbProdutos.Descricao
GO
/****** Object:  View [dbo].[viewValorReceberCartao]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewValorReceberCartao]
AS
SELECT     SUM(Valor) AS ValorReceber
FROM         dbo.tbContasPagarReceber
WHERE     (IdTipoDocto = N'CD') AND (DataVencto = CONVERT(DATETIME, '2005-01-12 00:00:00', 102))
GROUP BY idEntidade, DataVencto
HAVING      (idEntidade = 3)
GO
/****** Object:  View [dbo].[viewVendaPrecoEspecial]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewVendaPrecoEspecial]
AS
SELECT     dbo.tbEntidades.NomeUsual, dbo.tbVendasItensPagamento.TipoPagamento, dbo.tbProdutos.Descricao, dbo.tbVendasItens.Quantidade, 
                      dbo.tbVendasItens.PrecoVenda, dbo.tbVendasItens.PrecoEspecial, dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda AS TotalVenda, 
                      dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoEspecial AS TotalEspecial, dbo.tbVendas.idVenda
FROM         dbo.tbVendas INNER JOIN
                      dbo.tbVendasItens ON dbo.tbVendas.idVenda = dbo.tbVendasItens.idVenda INNER JOIN
                      dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.IdProduto INNER JOIN
                      dbo.tbVendasItensPagamento ON dbo.tbVendas.idVenda = dbo.tbVendasItensPagamento.idVenda AND 
                      dbo.tbVendasItens.idVenda = dbo.tbVendasItensPagamento.idVenda INNER JOIN
                      dbo.tbEntidades ON dbo.tbVendasItensPagamento.Entidade = dbo.tbEntidades.IdEntidade
WHERE     (dbo.tbVendasItens.PrecoEspecial > 0) AND (dbo.tbVendas.idCaixa BETWEEN 0 AND 1000) AND (dbo.tbVendas.idPosto = 14)
GO
/****** Object:  View [dbo].[viewVendas]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewVendas]
AS
SELECT     TOP 100 PERCENT dbo.tbVendasItensPagamento.TipoPagamento, dbo.tbVendasItensPagamento.Valor, dbo.tbVendasItensPagamento.Entidade, 
                      dbo.tbVendas.idCaixa
FROM         dbo.tbVendas INNER JOIN
                      dbo.tbVendasItensPagamento ON dbo.tbVendas.idVenda = dbo.tbVendasItensPagamento.idVenda
WHERE     (dbo.tbVendas.idCaixa BETWEEN 775 AND 782) AND (dbo.tbVendas.idPosto = 3)
ORDER BY dbo.tbVendasItensPagamento.TipoPagamento
GO
/****** Object:  View [dbo].[viewVendasCaixa]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewVendasCaixa]
AS
SELECT     *
FROM         dbo.tbContasPagarReceber
WHERE     (idPedCaixa = 5791)
GO
/****** Object:  View [dbo].[ViewVendasCaixa1]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[ViewVendasCaixa1]
AS
SELECT     SUM(dbo.tbVendasItens.Quantidade) AS Expr1
FROM         dbo.tbVendas INNER JOIN
                      dbo.tbVendasItens ON dbo.tbVendas.idVenda = dbo.tbVendasItens.idVenda
WHERE     (dbo.tbVendas.idCaixa = 329) AND (dbo.tbVendasItens.idBomba = 1 OR
                      dbo.tbVendasItens.idBomba = 3)
GO
/****** Object:  View [dbo].[viewVendasDiariaGeral]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--viewVendasDiariaGeral
CREATE VIEW [dbo].[viewVendasDiariaGeral]
AS
SELECT     dbo.tbVendas.idPosto, dbo.tbPostos.RzSocial AS Posto, CONVERT(smalldatetime, CONVERT(nvarchar(10), dbo.tbVendas.DataMovimento, 103), 103) 
                      AS Data, dbo.tbVendasItens.Quantidade, dbo.tbVendasItens.PrecoVenda, dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda AS Total, 
                      dbo.tbVendasItens.idProduto, dbo.tbProdutos.Descricao, dbo.tbProdutos.ordem
FROM         dbo.tbVendasItens INNER JOIN
                      dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id INNER JOIN
                      dbo.tbPostos ON dbo.tbVendas.idPosto = dbo.tbPostos.Id INNER JOIN
                      dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
WHERE     (dbo.tbProdutos.TipoProd = 'CB') AND (dbo.tbVendas.Cupom > 0)

GO
/****** Object:  View [dbo].[viewVendasDiariaGeralConv]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--viewVendasDiariaGeralConv
CREATE VIEW [dbo].[viewVendasDiariaGeralConv]
AS
SELECT     dbo.tbVendas.idPosto, dbo.tbPostos.RzSocial AS Posto, CONVERT(smalldatetime, CONVERT(nvarchar(10), dbo.tbVendas.DataMovimento, 103), 103) 
                      AS Data, SUM(dbo.tbVendasItens.Quantidade) AS Quantidade, SUM(dbo.tbVendasItens.PrecoVenda) AS PrecoVenda, 
                      SUM(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda) AS Total, 999 AS IDProduto, 
                      'Conveniência' COLLATE SQL_Latin1_General_CP1_CI_AS AS Descricao, 999 AS Ordem
FROM         dbo.tbVendasItens INNER JOIN
                      dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id INNER JOIN
                      dbo.tbPostos ON dbo.tbVendas.idPosto = dbo.tbPostos.Id INNER JOIN
                      dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
WHERE     (dbo.tbProdutos.TipoProd = N'LC') AND (dbo.tbVendas.Cupom > 0)
GROUP BY dbo.tbVendas.idPosto, dbo.tbPostos.RzSocial, CONVERT(smalldatetime, CONVERT(nvarchar(10), dbo.tbVendas.DataMovimento, 103), 103)

GO
/****** Object:  View [dbo].[viewVendasDiariaGeralLub]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--viewVendasDiariaGeralLub
CREATE VIEW [dbo].[viewVendasDiariaGeralLub]
AS
SELECT     dbo.tbVendas.idPosto, dbo.tbPostos.RzSocial AS Posto, CONVERT(smalldatetime, CONVERT(nvarchar(10), dbo.tbVendas.DataMovimento, 103), 103) 
                      AS Data, SUM(dbo.tbVendasItens.Quantidade) AS Quantidade, SUM(dbo.tbVendasItens.PrecoVenda) AS PrecoVenda, 
                      SUM(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda) AS Total, 999 AS IDProduto, 
                      'Lubrificante' COLLATE SQL_Latin1_General_CP1_CI_AS AS Descricao, 999 AS Ordem
FROM         dbo.tbVendasItens INNER JOIN
                      dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id INNER JOIN
                      dbo.tbPostos ON dbo.tbVendas.idPosto = dbo.tbPostos.Id INNER JOIN
                      dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
WHERE  (dbo.tbProdutos.TipoProd = N'LB') AND (dbo.tbVendas.Cupom > 0)
GROUP BY dbo.tbVendas.idPosto, dbo.tbPostos.RzSocial, CONVERT(smalldatetime, CONVERT(nvarchar(10), dbo.tbVendas.DataMovimento, 103), 103)

GO
/****** Object:  View [dbo].[viewVendasItensPLR]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewVendasItensPLR]
AS
SELECT     idVenda, Item, idProduto, Quantidade, CASE PrecoEspecial WHEN 0 THEN PrecoVenda ELSE PrecoEspecial END AS PrecoVenda, Cancelado
FROM         dbo.tbVendasItens
GO
/****** Object:  View [dbo].[viewVendasPorCAixa]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewVendasPorCAixa]
AS
SELECT     TOP 100 PERCENT idLancamento, idPosto, idTipo, idContaBancaria, idPedCaixa, CodConta, idEntidade, Data, DataVencto, DataPagamento, 
                      IdTipoDocto, NumDocto, DataDoc, VrUDespesa, Valor, Pago, Juros, Desconto, TaxaCartao, idHistorico, Despesa, Ativa, InfoAdic, idProduto, 
                      idCaixaRecebimento, idVenda, Autorizado, Placa, idChequeDev
FROM         dbo.tbContasPagarReceber
WHERE     (idEntidade = 399)
ORDER BY idLancamento
GO
/****** Object:  View [dbo].[viewVendasporCaixaOK]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viewVendasporCaixaOK]
AS
SELECT     dbo.tbVendasItensPagamento.Valor, dbo.tbVendasItensPagamento.Entidade, dbo.tbVendasItensPagamento.TipoPagamento, 
                      dbo.tbVendasItensPagamento.Linha, dbo.tbVendas.Data, dbo.tbVendas.idVenda
FROM         dbo.tbVendas INNER JOIN
                      dbo.tbVendasItensPagamento ON dbo.tbVendas.idVenda = dbo.tbVendasItensPagamento.idVenda
WHERE     (dbo.tbVendas.idCaixa IN (2770)) AND (dbo.tbVendasItensPagamento.TipoPagamento = 'CD')
GO
/****** Object:  View [dbo].[viwVendasItensPagamento]    Script Date: 20/05/2024 14:44:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[viwVendasItensPagamento]
AS
SELECT     dbo.tbVendasItensPagamento.idVenda AS Expr1, dbo.tbVendasItensPagamento.TipoPagamento AS Expr2, 
                      dbo.tbVendasItensPagamento.Valor AS Expr3
FROM         dbo.tbVendas RIGHT OUTER JOIN
                      dbo.tbVendasItensPagamento ON dbo.tbVendas.idVenda = dbo.tbVendasItensPagamento.idVenda
WHERE     (dbo.tbVendas.idCaixa IN (165, 168, 175))
GO
/****** Object:  Index [IX_Data_IdPosto]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_Data_IdPosto] ON [dbo].[tbAbastecimentos]
(
	[Data] ASC,
	[IdPosto] ASC
)
INCLUDE([TotalLitros],[ppu],[Hora]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_NumAbastecimento]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_NumAbastecimento] ON [dbo].[tbAbastecimentos]
(
	[NumAbastecimento] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_tbAbastecimentos_IdCaixa]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbAbastecimentos_IdCaixa] ON [dbo].[tbAbastecimentos]
(
	[IdCaixa] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [ix_tbAbastecimentos_IdVenda]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [ix_tbAbastecimentos_IdVenda] ON [dbo].[tbAbastecimentos]
(
	[Idvenda] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [IX_tbAbastecimentos_Satus_Canal_IdPosto]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbAbastecimentos_Satus_Canal_IdPosto] ON [dbo].[tbAbastecimentos]
(
	[Status] ASC,
	[Canal] ASC,
	[IdPosto] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [IX_tbAbastecimentos_Status]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbAbastecimentos_Status] ON [dbo].[tbAbastecimentos]
(
	[Status] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_tbAbastecimentos_UltAbast_IdCaixa]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbAbastecimentos_UltAbast_IdCaixa] ON [dbo].[tbAbastecimentos]
(
	[UltimoAbastecimentoCaixa] ASC,
	[IdCaixa] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IdBico]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IdBico] ON [dbo].[tbBombas]
(
	[NumBomba] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_NumBomba]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_NumBomba] ON [dbo].[tbBombas]
(
	[NumBomba] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_CaixaDataAbertura]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_CaixaDataAbertura] ON [dbo].[tbCaixa]
(
	[DataAbertura] ASC,
	[IdPosto] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_CaixaId]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_CaixaId] ON [dbo].[tbCaixa]
(
	[DataAbertura] ASC,
	[IdPosto] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_tbCaixa_Dia]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbCaixa_Dia] ON [dbo].[tbCaixa]
(
	[Dia] ASC,
	[IdPosto] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [<IXtbCaixaItens_TipoLeitura_IdCaixa, sysname,>]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [<IXtbCaixaItens_TipoLeitura_IdCaixa, sysname,>] ON [dbo].[tbCaixaItens]
(
	[TipoLeitura] ASC,
	[IdCaixa] ASC
)
INCLUDE([idObjeto],[ValorLido]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_tbCaixaItens_IdObjeto]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbCaixaItens_IdObjeto] ON [dbo].[tbCaixaItens]
(
	[idObjeto] ASC
)
INCLUDE([ValorLido]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [tbCaixas_IdCaixa]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [tbCaixas_IdCaixa] ON [dbo].[tbCaixaItens]
(
	[IdCaixa] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [IdCarreteiro]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IdCarreteiro] ON [dbo].[tbCartaFrete]
(
	[NumNota] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [tbCarreteirotbRPA]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [tbCarreteirotbRPA] ON [dbo].[tbCartaFrete]
(
	[NumNota] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_tbChequeSemFundo_IdEntidade]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbChequeSemFundo_IdEntidade] ON [dbo].[tbChequeSemFundo]
(
	[IdEntidade] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_tbChequeSemFundo_IdPosto]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbChequeSemFundo_IdPosto] ON [dbo].[tbChequeSemFundo]
(
	[IdPosto] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_tbChequeSemFundo_Pago]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbChequeSemFundo_Pago] ON [dbo].[tbChequeSemFundo]
(
	[pago] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_tbContasPagarReceber_DataVencto_DESC]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbContasPagarReceber_DataVencto_DESC] ON [dbo].[tbContasPagarReceber]
(
	[DataVencto] DESC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_tbContasPagarReceber_Despesa]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbContasPagarReceber_Despesa] ON [dbo].[tbContasPagarReceber]
(
	[Despesa] ASC
)
INCLUDE([Valor],[IdPedCaixa]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_TBCONTASPAGARRECEBER_IDENTIDADE]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_TBCONTASPAGARRECEBER_IDENTIDADE] ON [dbo].[tbContasPagarReceber]
(
	[IdEntidade] ASC
)
INCLUDE([idTipo],[Valor],[IdVenda]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_TBCONTASPAGARRECEBER_IDENTIDADE>]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_TBCONTASPAGARRECEBER_IDENTIDADE>] ON [dbo].[tbContasPagarReceber]
(
	[IdEntidade] ASC
)
INCLUDE([idTipo],[Valor],[IdVenda]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_tbContasPagarReceber_IdPosto]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbContasPagarReceber_IdPosto] ON [dbo].[tbContasPagarReceber]
(
	[IdPosto] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [IX_tbContasPagarReceber_IdTipo]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbContasPagarReceber_IdTipo] ON [dbo].[tbContasPagarReceber]
(
	[idTipo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_tbDepositoChequePre_IdVendaItemPagamento]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbDepositoChequePre_IdVendaItemPagamento] ON [dbo].[tbDepositoChequePre]
(
	[IdVendaItemPagamento] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_tbDepositos_IdCaixa]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbDepositos_IdCaixa] ON [dbo].[tbDepositos]
(
	[IdCaixa] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_tbDepositos_IdPosto]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbDepositos_IdPosto] ON [dbo].[tbDepositos]
(
	[IdPosto] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [idx_entidade_tipo]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [idx_entidade_tipo] ON [dbo].[tbEntidades]
(
	[Tipo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [Descricao]    Script Date: 20/05/2024 14:44:59 ******/
CREATE UNIQUE NONCLUSTERED INDEX [Descricao] ON [dbo].[tbGrupos]
(
	[Descricao] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_NumProduto]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_NumProduto] ON [dbo].[tbProdutos]
(
	[NumProduto] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [tbTipoProdtbProdutos]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [tbTipoProdtbProdutos] ON [dbo].[tbProdutos]
(
	[TipoProd] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_NumTanque]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_NumTanque] ON [dbo].[tbTanques]
(
	[NumTanque] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [IdTipoDoc]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IdTipoDoc] ON [dbo].[tbTipoDoc]
(
	[IdTipoDoc] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [IdTipoProd]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IdTipoProd] ON [dbo].[tbTipoProd]
(
	[IdTipoProd] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_DataMovimento]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_DataMovimento] ON [dbo].[tbVendas]
(
	[DataMovimento] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [IX_tbVendas_Data_NomeCliente_IdNotaFiscal_Status_IdPosto]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbVendas_Data_NomeCliente_IdNotaFiscal_Status_IdPosto] ON [dbo].[tbVendas]
(
	[Data] ASC,
	[NomeCliente] ASC,
	[IdNotaFiscal] ASC,
	[Status] ASC,
	[IdPosto] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_tbVendas_IdCaixa]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbVendas_IdCaixa] ON [dbo].[tbVendas]
(
	[IdCaixa] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [IX_tbVendas_IdCaixa_Status]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbVendas_IdCaixa_Status] ON [dbo].[tbVendas]
(
	[IdCaixa] ASC,
	[Status] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [IX_tbVendas_Status_IdPosto]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbVendas_Status_IdPosto] ON [dbo].[tbVendas]
(
	[Status] ASC,
	[IdPosto] ASC
)
INCLUDE([Id],[IdCaixa]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [IX_TbVendasTbPontoVenda]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_TbVendasTbPontoVenda] ON [dbo].[tbVendas]
(
	[Status] ASC,
	[IdPosto] ASC,
	[IdPontoVenda] ASC
)
INCLUDE([Id],[IdCaixa]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_TbVendasTbPosto]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_TbVendasTbPosto] ON [dbo].[tbVendas]
(
	[IdPosto] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_tbVendasItens_Cancelado]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbVendasItens_Cancelado] ON [dbo].[tbVendasItens]
(
	[Cancelado] ASC
)
INCLUDE([Quantidade],[PrecoCusto],[PrecoVenda],[IdVenda],[IdProduto]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_tbVendasItens_Cancelado_PrecoEspecial]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbVendasItens_Cancelado_PrecoEspecial] ON [dbo].[tbVendasItens]
(
	[Cancelado] ASC,
	[PrecoEspecial] ASC
)
INCLUDE([Quantidade],[PrecoVenda],[IdVenda],[IdProduto]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_tbVendasItens_IdProduto]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbVendasItens_IdProduto] ON [dbo].[tbVendasItens]
(
	[IdProduto] ASC
)
INCLUDE([Quantidade],[PrecoVenda],[PrecoEspecial],[Cancelado],[Id],[IdVenda]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_TbVendasVendasItens_IdVenda]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_TbVendasVendasItens_IdVenda] ON [dbo].[tbVendasItens]
(
	[IdVenda] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IXtbVendasItens_Cancelado, sysname,>]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IXtbVendasItens_Cancelado, sysname,>] ON [dbo].[tbVendasItens]
(
	[Cancelado] ASC
)
INCLUDE([Quantidade],[PrecoVenda],[IdVenda],[IdBomba]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IXtbVendasItens_IdVenda, sysname,>]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IXtbVendasItens_IdVenda, sysname,>] ON [dbo].[tbVendasItens]
(
	[IdVenda] ASC
)
INCLUDE([Quantidade]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [tbVendasItens_IdBomba_IdVenda]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [tbVendasItens_IdBomba_IdVenda] ON [dbo].[tbVendasItens]
(
	[IdVenda] ASC,
	[IdBomba] ASC
)
INCLUDE([Quantidade],[PrecoVenda],[PrecoEspecial],[Cancelado],[Status],[PrecoPromocao]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_tbVendasItensPagamento_IdVenda]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbVendasItensPagamento_IdVenda] ON [dbo].[tbVendasItensPagamento]
(
	[IdVenda] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [IX_tbVendasItensPagamento_IdVenda_TipoPagamento]    Script Date: 20/05/2024 14:44:59 ******/
CREATE NONCLUSTERED INDEX [IX_tbVendasItensPagamento_IdVenda_TipoPagamento] ON [dbo].[tbVendasItensPagamento]
(
	[TipoPagamento] ASC,
	[IdVenda] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
ALTER TABLE [dbo].[Calendario] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbAbastecimentos] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbAcessos] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbAcessosSupernet] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbAdiantamento] ADD  CONSTRAINT [DF_tbAdiantamento_Finalizado]  DEFAULT ((0)) FOR [Finalizado]
GO
ALTER TABLE [dbo].[tbAdiantamento] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbAdiantamentoItem] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbAfericao] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbAlertas] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbalinea] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbAlteracaoPrecoPorBicoAgendamentoItens] ADD  DEFAULT ((0)) FOR [Inutilizada]
GO
ALTER TABLE [dbo].[tbAlteracaoProduto] ADD  CONSTRAINT [DF_tbAlteracaoProduto_Id]  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbAnalistaFornecedorCombustivel] ADD  CONSTRAINT [DF_tbAnalistaFornecedorCombustivel_Id]  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbBancos] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbBloqueio] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbBombaLacres] ADD  CONSTRAINT [DF_tbBombaLacres_id]  DEFAULT (newid()) FOR [id]
GO
ALTER TABLE [dbo].[tbBombas] ADD  CONSTRAINT [DF__Temporary__Ativo__42ACE4D4]  DEFAULT ((1)) FOR [Ativo]
GO
ALTER TABLE [dbo].[tbBombas] ADD  CONSTRAINT [DF_tbBombas_DiferencaPreco]  DEFAULT ((0)) FOR [DiferencaPreco]
GO
ALTER TABLE [dbo].[tbBombas] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbBombas] ADD  DEFAULT ((0)) FOR [PrecoDiferenciado]
GO
ALTER TABLE [dbo].[tbBombas] ADD  DEFAULT ((3)) FOR [CasasDecPreco]
GO
ALTER TABLE [dbo].[tbCaixa] ADD  CONSTRAINT [DF_tbCaixa_TCaixa]  DEFAULT ((0)) FOR [TCaixa]
GO
ALTER TABLE [dbo].[tbCaixa] ADD  CONSTRAINT [DF_tbCaixa_PodeFechar]  DEFAULT ((0)) FOR [PodeFechar]
GO
ALTER TABLE [dbo].[tbCaixa] ADD  CONSTRAINT [DF_tbCaixa_PrimeiroAcesso]  DEFAULT ((1)) FOR [PrimeiroAcesso]
GO
ALTER TABLE [dbo].[tbCaixa] ADD  CONSTRAINT [DF__tbCaixa__IdTemp__11558062]  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbCaixaItens] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbCarretaTransportadora] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbCarretaTransportadora] ADD  DEFAULT ((1)) FOR [Ativo]
GO
ALTER TABLE [dbo].[tbCartaFrete] ADD  CONSTRAINT [DF_tbRPA_NumRpa]  DEFAULT ((0)) FOR [idCarta]
GO
ALTER TABLE [dbo].[tbCartaFrete] ADD  CONSTRAINT [DF__Temporary__Credi__78D3EB5B]  DEFAULT ((0)) FOR [ValorLiquido]
GO
ALTER TABLE [dbo].[tbCartaFrete] ADD  CONSTRAINT [DF__Temporary__Adian__79C80F94]  DEFAULT ((0)) FOR [ValorAbastecimento]
GO
ALTER TABLE [dbo].[tbCartaFrete] ADD  CONSTRAINT [DF__TemporaryUp__ISS__7ABC33CD]  DEFAULT ((0)) FOR [ValorAdiantamento]
GO
ALTER TABLE [dbo].[tbCartaFrete] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbCartaFreteContaCorrente] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbCartaFreteEnvio] ADD  CONSTRAINT [DF_tbCartaFreteEnvio_Pago]  DEFAULT ((0)) FOR [Pago]
GO
ALTER TABLE [dbo].[tbCartaFreteEnvio] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbCartoes] ADD  CONSTRAINT [DF_tbCartoes_Conciiadao]  DEFAULT ((0)) FOR [Conciliado]
GO
ALTER TABLE [dbo].[tbCartoes] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbCEST] ADD  CONSTRAINT [DF_tbCEST_Nova_Id]  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbCFOP] ADD  CONSTRAINT [DF_tbCFOP_Ativo]  DEFAULT ((0)) FOR [Ativo]
GO
ALTER TABLE [dbo].[tbCheques] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbChequeSemFundo] ADD  CONSTRAINT [DF_tbChequeSemFundo_PrimeiraApresentacao]  DEFAULT ((0)) FOR [PrimeiraApresentacao]
GO
ALTER TABLE [dbo].[tbChequeSemFundo] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbCidades] ADD  CONSTRAINT [DF_tbCidades_DestinoFrete]  DEFAULT ((0)) FOR [DestinoFrete]
GO
ALTER TABLE [dbo].[tbCidades] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbColaboradoresDifCaixa] ADD  CONSTRAINT [DF_tbColaboradoresDifCaixa_Pagp]  DEFAULT ((0)) FOR [Pago]
GO
ALTER TABLE [dbo].[tbColaboradoresDifCaixa] ADD  CONSTRAINT [DF_tbColaboradoresDifCaixa_Tipo]  DEFAULT ('C') FOR [Tipo]
GO
ALTER TABLE [dbo].[tbColaboradoresDifCaixa] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbConcorrentes] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbConcorrentesPreco] ADD  CONSTRAINT [DF_tbConcorrentesPreco_Gasolina]  DEFAULT ((0)) FOR [Gasolina]
GO
ALTER TABLE [dbo].[tbConcorrentesPreco] ADD  CONSTRAINT [DF_tbConcorrentesPreco_GasolinaAditivada]  DEFAULT ((0)) FOR [GasolinaAditivada]
GO
ALTER TABLE [dbo].[tbConcorrentesPreco] ADD  CONSTRAINT [DF_tbConcorrentesPreco_Alcool]  DEFAULT ((0)) FOR [Etanol]
GO
ALTER TABLE [dbo].[tbConcorrentesPreco] ADD  CONSTRAINT [DF_tbConcorrentesPreco_Diesel]  DEFAULT ((0)) FOR [DieselS500]
GO
ALTER TABLE [dbo].[tbConcorrentesPreco] ADD  CONSTRAINT [DF_tbConcorrentesPreco_DieselFiltrado]  DEFAULT ((0)) FOR [DieselS10]
GO
ALTER TABLE [dbo].[tbConcorrentesPreco] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbConcorrentesPrecoAlteracao] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbConcorrentesPrecoHistorico] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbConfiguracao] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbConfiguracaoEmail] ADD  CONSTRAINT [DF_tbConfiguracaoEmail_Id]  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbConfiguracaoPAF_ECF] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbContadores] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbContadoresPosto] ADD  CONSTRAINT [DF_tbContadoresPosto_Id]  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbContasBancarias] ADD  CONSTRAINT [DF_tbContasBancarias_Saldo]  DEFAULT ((0)) FOR [Saldo]
GO
ALTER TABLE [dbo].[tbContasBancarias] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbContasBancarias] ADD  DEFAULT ((0)) FOR [RecebePix]
GO
ALTER TABLE [dbo].[tbContasPagarReceber] ADD  CONSTRAINT [DF_tbContasPagarReceber_NumDocto]  DEFAULT ((0)) FOR [NumDocto]
GO
ALTER TABLE [dbo].[tbContasPagarReceber] ADD  CONSTRAINT [DF_tbContasPagarReceber_VrUDespesa]  DEFAULT ((0)) FOR [VrUDespesa]
GO
ALTER TABLE [dbo].[tbContasPagarReceber] ADD  CONSTRAINT [DF_tbContasPagarReceber_ValorOrig]  DEFAULT ((0)) FOR [Valor]
GO
ALTER TABLE [dbo].[tbContasPagarReceber] ADD  CONSTRAINT [DF_tbContasPagarReceber_Pago]  DEFAULT ((0)) FOR [Pago]
GO
ALTER TABLE [dbo].[tbContasPagarReceber] ADD  CONSTRAINT [DF_tbContasPagarReceber_Juros]  DEFAULT ((0)) FOR [Juros]
GO
ALTER TABLE [dbo].[tbContasPagarReceber] ADD  CONSTRAINT [DF_tbContasPagarReceber_Desconto]  DEFAULT ((0)) FOR [Desconto]
GO
ALTER TABLE [dbo].[tbContasPagarReceber] ADD  CONSTRAINT [DF_tbContasPagarReceber_TaxaCartao]  DEFAULT ((0)) FOR [TaxaCartao]
GO
ALTER TABLE [dbo].[tbContasPagarReceber] ADD  CONSTRAINT [DF_tbContasPagarReceber_Despesa]  DEFAULT ((0)) FOR [Despesa]
GO
ALTER TABLE [dbo].[tbContasPagarReceber] ADD  CONSTRAINT [DF_tbContasPagarReceber_Ativa]  DEFAULT ((1)) FOR [Ativa]
GO
ALTER TABLE [dbo].[tbContasPagarReceber] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbContasPagarReceberItens] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbControlePix] ADD  CONSTRAINT [DF_tbControlePix_Id]  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbControleRetiradaAtendente] ADD  CONSTRAINT [DF_tbControleRetiradaAtendente_Id]  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbControleRetiradaAtendenteItens] ADD  CONSTRAINT [DF_tbControleRetiradaAtendenteItens_Id]  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbControleRetiradaCaixa] ADD  CONSTRAINT [DF_tbControleRetiradaCaixa_Id]  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbControleTelas] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbConvenios] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbCotacao] ADD  CONSTRAINT [DF_tbCotacao_Gasolina]  DEFAULT ((0)) FOR [Gasolina]
GO
ALTER TABLE [dbo].[tbCotacao] ADD  CONSTRAINT [DF_tbCotacao_GasolinaAditivada]  DEFAULT ((0)) FOR [GasolinaAditivada]
GO
ALTER TABLE [dbo].[tbCotacao] ADD  CONSTRAINT [DF_tbCotacao_Alcool]  DEFAULT ((0)) FOR [Alcool]
GO
ALTER TABLE [dbo].[tbCotacao] ADD  CONSTRAINT [DF_tbCotacao_Diesel0]  DEFAULT ((0)) FOR [Diesel]
GO
ALTER TABLE [dbo].[tbCotacao] ADD  CONSTRAINT [DF_tbCotacao_DieselFiltrado]  DEFAULT ((0)) FOR [DieselFiltrado]
GO
ALTER TABLE [dbo].[tbCotacao] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbDepositoChequePre] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbDepositos] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbDepRet] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbDescontoFormaPagamento] ADD  CONSTRAINT [DF_tbDescontoFormaPagamento_Id]  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbDespesa] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbDespesaItens] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbDespesasLimite] ADD  CONSTRAINT [DF_tbDespesasLimite_Acrescimo]  DEFAULT ((0)) FOR [Acrescimo]
GO
ALTER TABLE [dbo].[tbDespesasLimite] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbDias] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbDocumentos] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbDocumentosEmitidos] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbEcfs] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbEnroll] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbEntidadeDiaPagamento] ADD  CONSTRAINT [DF_tbEntidadeDiaPagamento_uso]  DEFAULT ((0)) FOR [uso]
GO
ALTER TABLE [dbo].[tbEntidadeDiaPagamento] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbEntidadeFormaPagPrazo] ADD  CONSTRAINT [DF_tbEntidadeFormaPagPrazo_Id]  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbEntidadeRefBanc] ADD  CONSTRAINT [DF_tbEntidadeRefBanc_Ativo]  DEFAULT ((1)) FOR [Ativo]
GO
ALTER TABLE [dbo].[tbEntidadeRefBanc] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbEntidadeRefComl] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  CONSTRAINT [DF__TemporaryU__Tipo__477199F1]  DEFAULT ('CL') FOR [Tipo]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  CONSTRAINT [DF__TemporaryUps__PJ__4865BE2A]  DEFAULT ((1)) FOR [Pessoa]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  CONSTRAINT [DF_tbEntidades_Prazo]  DEFAULT ((0)) FOR [Prazo]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  CONSTRAINT [DF_tbEntidades_CartaFrete]  DEFAULT ((0)) FOR [CartaFrete]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  CONSTRAINT [DF_tbEntidades_Cheque3]  DEFAULT ((0)) FOR [Cheque3]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  CONSTRAINT [DF_tbEntidades_Limite]  DEFAULT ((0)) FOR [Limite]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  CONSTRAINT [DF_tbEntidades_SaldoLimite]  DEFAULT ((0)) FOR [SaldoLimite]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  CONSTRAINT [DF_tbEntidades_DiaFechamento]  DEFAULT ((0)) FOR [DiaFechamento]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  CONSTRAINT [DF_tbEntidades_Tolerancia]  DEFAULT ((0)) FOR [Tolerancia]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  CONSTRAINT [DF_tbEntidades_Ativo]  DEFAULT ((0)) FOR [Ativo]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  CONSTRAINT [DF_tbEntidades_Especial]  DEFAULT ((0)) FOR [Especial]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  CONSTRAINT [DF_tbEntidades_FornComb]  DEFAULT ((0)) FOR [FornComb]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  CONSTRAINT [DF_tbEntidades_Transportadora]  DEFAULT ((0)) FOR [Transportadora]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  CONSTRAINT [DF_tbEntidades_NVendasPrazo]  DEFAULT ((0)) FOR [NVendasPrazo]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  CONSTRAINT [DF_tbEntidades_PagaChequePrazo]  DEFAULT ((0)) FOR [PagaChequePrazo]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  CONSTRAINT [DF_tbEntidades_DataExpiracao]  DEFAULT (((1)/(1))/(1900)) FOR [DataExpiracao]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  CONSTRAINT [DF_tbEntidades_Combustivel]  DEFAULT ((0)) FOR [Combustivel]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  CONSTRAINT [DF_tbEntidades_Lubrificante]  DEFAULT ((0)) FOR [Lubrificante]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  CONSTRAINT [DF_tbEntidades_Conveniencia]  DEFAULT ((0)) FOR [Conveniencia]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  CONSTRAINT [DF_tbEntidades_PrazoFornecedor]  DEFAULT ((0)) FOR [PrazoFornecedor]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  CONSTRAINT [DF_tbEntidades_Contator]  DEFAULT ((0)) FOR [Contador]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  CONSTRAINT [DF_tbEntidades_Cheque]  DEFAULT ((1)) FOR [Cheque]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  CONSTRAINT [DF_tbEntidades_OperadoraCartao]  DEFAULT ((0)) FOR [OperadoraCartao]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  CONSTRAINT [DF_tbEntidades_LiberadoPagarComCartao]  DEFAULT ((0)) FOR [LiberadoPagarComCartao]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  DEFAULT ((0)) FOR [TipoFornecedorAguaCanalizada]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  DEFAULT ((0)) FOR [TipoFornecedorEnergiaEletrica]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  DEFAULT ((0)) FOR [TipoFornecedorTelecomunicacao]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  DEFAULT ((0)) FOR [TipoFornecedorComunicacao]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  DEFAULT ((0)) FOR [PrazoBloqueadoData]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  DEFAULT ((0)) FOR [LiberadoPagarComCartaoCredito]
GO
ALTER TABLE [dbo].[tbEntidades] ADD  DEFAULT ((0)) FOR [Banco]
GO
ALTER TABLE [dbo].[tbEntidadesFone] ADD  CONSTRAINT [DF_tbEntidadesFone_Principal]  DEFAULT ((0)) FOR [Principal]
GO
ALTER TABLE [dbo].[tbEntidadesFone] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbEntidadesPonto] ADD  CONSTRAINT [DF_tbEntidadesPonto_Feriado]  DEFAULT ((0)) FOR [Falta]
GO
ALTER TABLE [dbo].[tbEntidadesPonto] ADD  CONSTRAINT [DF_tbEntidadesPonto_Folga]  DEFAULT ((0)) FOR [Folga]
GO
ALTER TABLE [dbo].[tbEntidadesPonto] ADD  CONSTRAINT [DF_tbEntidadesPonto_Ferias]  DEFAULT ((0)) FOR [Ferias]
GO
ALTER TABLE [dbo].[tbEntidadesPonto] ADD  CONSTRAINT [DF_tbEntidadesPonto_Atestado]  DEFAULT ((0)) FOR [Atestado]
GO
ALTER TABLE [dbo].[tbEntidadesPonto] ADD  CONSTRAINT [DF_tbEntidadesPonto_Afastado]  DEFAULT ((0)) FOR [Afastado]
GO
ALTER TABLE [dbo].[tbEntidadesPonto] ADD  CONSTRAINT [DF_tbEntidadesPonto_Advertencia]  DEFAULT ((0)) FOR [Advertencia]
GO
ALTER TABLE [dbo].[tbEntidadesPonto] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbEquipamentoPostos] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbEquipamentos] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbEscalaTrabalho] ADD  CONSTRAINT [DF_tbEscalaTrabalho_Folga]  DEFAULT ((0)) FOR [Folga]
GO
ALTER TABLE [dbo].[tbEscalaTrabalho] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbFeriados] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbFormaPagamento] ADD  CONSTRAINT [DF_tbFormaPagamento_Id]  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbFrete] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbFuncs] ADD  CONSTRAINT [DF__Temporary__Salar__4F12BBB9]  DEFAULT ((0)) FOR [Salario]
GO
ALTER TABLE [dbo].[tbFuncs] ADD  CONSTRAINT [DF__Temporary__PercP__5006DFF2]  DEFAULT ((0)) FOR [PercPericulosidade]
GO
ALTER TABLE [dbo].[tbFuncs] ADD  CONSTRAINT [DF__Temporary__AdicN__50FB042B]  DEFAULT ((0)) FOR [AdicNoturno]
GO
ALTER TABLE [dbo].[tbFuncs] ADD  CONSTRAINT [DF__Temporary__QCaix__51EF2864]  DEFAULT ((0)) FOR [QCaixa]
GO
ALTER TABLE [dbo].[tbFuncs] ADD  CONSTRAINT [DF__Temporary__SalFa__52E34C9D]  DEFAULT ((0)) FOR [SalFamilia]
GO
ALTER TABLE [dbo].[tbFuncs] ADD  CONSTRAINT [DF_tbFuncs_Bonificacao]  DEFAULT ((0)) FOR [Bonificacao]
GO
ALTER TABLE [dbo].[tbFuncs] ADD  CONSTRAINT [DF_tbFuncs_Premio]  DEFAULT ((0)) FOR [Premio]
GO
ALTER TABLE [dbo].[tbFuncs] ADD  CONSTRAINT [DF_tbFuncs_AjudaCusto]  DEFAULT ((0)) FOR [AjudaCusto]
GO
ALTER TABLE [dbo].[tbFuncs] ADD  CONSTRAINT [DF__Temporary__Folgu__53D770D6]  DEFAULT ((0)) FOR [Folguista]
GO
ALTER TABLE [dbo].[tbFuncs] ADD  CONSTRAINT [DF_tbFuncs_Gerente]  DEFAULT ((0)) FOR [Gerente]
GO
ALTER TABLE [dbo].[tbFuncs] ADD  CONSTRAINT [DF_tbFuncs_Contador]  DEFAULT ((0)) FOR [Contador]
GO
ALTER TABLE [dbo].[tbFuncs] ADD  CONSTRAINT [DF_tbFuncs_Frentista]  DEFAULT ((0)) FOR [Frentista]
GO
ALTER TABLE [dbo].[tbFuncs] ADD  CONSTRAINT [DF_tbFuncs_CestaBasica]  DEFAULT ((0)) FOR [CestaBasica]
GO
ALTER TABLE [dbo].[tbFuncs] ADD  CONSTRAINT [DF_tbFuncs_Administrativa]  DEFAULT ((0)) FOR [Administrativa]
GO
ALTER TABLE [dbo].[tbFuncs] ADD  CONSTRAINT [DF_tbFuncs_FrentistaCaixa]  DEFAULT ((0)) FOR [FrentistaCaixa]
GO
ALTER TABLE [dbo].[tbFuncs] ADD  CONSTRAINT [DF_tbFuncs_FrentistaCaixaNoturno]  DEFAULT ((0)) FOR [FrentistaCaixaNoturno]
GO
ALTER TABLE [dbo].[tbFuncs] ADD  CONSTRAINT [DF_tbFuncs_Atendimento]  DEFAULT ((0)) FOR [Atendimento]
GO
ALTER TABLE [dbo].[tbFuncs] ADD  CONSTRAINT [DF_tbFuncs_Marketing]  DEFAULT ((0)) FOR [Marketing]
GO
ALTER TABLE [dbo].[tbFuncs] ADD  CONSTRAINT [DF_tbFuncs_Vendas]  DEFAULT ((0)) FOR [Vendas]
GO
ALTER TABLE [dbo].[tbFuncs] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbFuncs] ADD  DEFAULT ((1)) FOR [Ativo]
GO
ALTER TABLE [dbo].[tbGARE] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbGNRE] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbGrupo] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbGrupos] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbHashesArquivos] ADD  CONSTRAINT [DF_tbHashesArquivos_Id]  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbHistoricos] ADD  CONSTRAINT [DF__Temporary__Despe__5D60DB10]  DEFAULT ((1)) FOR [Despesa]
GO
ALTER TABLE [dbo].[tbHistoricos] ADD  CONSTRAINT [DF_tbHistoricos_Ativo]  DEFAULT ((1)) FOR [Ativo]
GO
ALTER TABLE [dbo].[tbHistoricos] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbHistoricos] ADD  DEFAULT ((0)) FOR [UsadoSistema]
GO
ALTER TABLE [dbo].[tbHoleriteHistoricos] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbHorarios] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbItemPendenciaSincronizacao] ADD  CONSTRAINT [DF_tbItemPendenciaSincronizacao_Id]  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbLMC] ADD  CONSTRAINT [DF_tbLMC_Tipo]  DEFAULT ('D') FOR [Tipo]
GO
ALTER TABLE [dbo].[tbLMC] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbLocalEstoque] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbLocalEstoquePosto] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbLogs] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbManutencaoBomba] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbMedicao] ADD  CONSTRAINT [DF__tbMedicao__IdTem__75AD65ED]  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbMensagens] ADD  CONSTRAINT [DF__tbMensage__IdTem__73C51D7B]  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbMetas] ADD  CONSTRAINT [DF_tbMetas_PercentualTurno1]  DEFAULT ((0)) FOR [PercentualTurno1]
GO
ALTER TABLE [dbo].[tbMetas] ADD  CONSTRAINT [DF_tbMetas_PercentualTurno2]  DEFAULT ((0)) FOR [PercentualTurno2]
GO
ALTER TABLE [dbo].[tbMetas] ADD  CONSTRAINT [DF_tbMetas_PercentualTurno3]  DEFAULT ((0)) FOR [PercentualTurno3]
GO
ALTER TABLE [dbo].[tbMetas] ADD  CONSTRAINT [DF_tbMetas_PercentualTurno4]  DEFAULT ((0)) FOR [PercentualTurno4]
GO
ALTER TABLE [dbo].[tbMetas] ADD  CONSTRAINT [DF_tbMetas_PercentualTurno5]  DEFAULT ((0)) FOR [PercentualTurno5]
GO
ALTER TABLE [dbo].[tbMetas] ADD  CONSTRAINT [DF_tbMetas_PercentualTurno6]  DEFAULT ((0)) FOR [PercentualTurno6]
GO
ALTER TABLE [dbo].[tbMetas] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbMotorista] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbMotoristaTransportadora] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbMotoristaTransportadora] ADD  DEFAULT ((1)) FOR [Ativo]
GO
ALTER TABLE [dbo].[tbMovBancaria] ADD  CONSTRAINT [DF_tbMovBancaria_Conciliado]  DEFAULT ((0)) FOR [Conciliado]
GO
ALTER TABLE [dbo].[tbMovBancaria] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbMovBancaria] ADD  CONSTRAINT [DF_tbMovBancaria_LancamentoManual]  DEFAULT ((0)) FOR [LancamentoManual]
GO
ALTER TABLE [dbo].[tbMovimentacaoEstoque] ADD  CONSTRAINT [DF_tbMovimentacaoEstoque_Data]  DEFAULT (getdate()) FOR [Data]
GO
ALTER TABLE [dbo].[tbMovimentacaoEstoque] ADD  CONSTRAINT [DF_tbMovimentacaoEstoque_Estoque]  DEFAULT ((0)) FOR [Estoque]
GO
ALTER TABLE [dbo].[tbMovimentacaoEstoque] ADD  CONSTRAINT [DF_tbMovimentacaoEstoque_Almoxarifado]  DEFAULT ((0)) FOR [Almoxarifado]
GO
ALTER TABLE [dbo].[tbNCM] ADD  CONSTRAINT [DF_tbNCM_Id]  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbNotaFiscalEletronica] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbNotaFiscalEletronica] ADD  CONSTRAINT [DefaultValorNota]  DEFAULT ((0)) FOR [ValorTotalNota]
GO
ALTER TABLE [dbo].[tbNotasFiscaisEmitidas] ADD  CONSTRAINT [DF_tbNotasFiscaisEmitidas_Valor]  DEFAULT ((0)) FOR [Valor]
GO
ALTER TABLE [dbo].[tbNotasFiscaisEmitidas] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbNotasFiscaisEmitidasDetalhes] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbOcorrencias] ADD  CONSTRAINT [DF_tbOcorrencias_Numero]  DEFAULT ((0)) FOR [Numero]
GO
ALTER TABLE [dbo].[tbOcorrencias] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbOperadoras] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbOperadoras] ADD  DEFAULT ((0)) FOR [TEF]
GO
ALTER TABLE [dbo].[tbOperadoras] ADD  DEFAULT ((1)) FOR [Ativo]
GO
ALTER TABLE [dbo].[tbPagamentoColaborador] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbPagamentosClientes] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbPagamentosItens] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbPatrimonio] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbPatrimonioManutencao] ADD  CONSTRAINT [DF_tbManutencao_Valor]  DEFAULT ((0)) FOR [Valor]
GO
ALTER TABLE [dbo].[tbPatrimonioManutencao] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbPatrimonioTipo] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbPedidoRecebimentoCombustivelVendas] ADD  CONSTRAINT [DF_tbPedidoRecebimentoCombustivelVendas_FinalizadoAdministrativo]  DEFAULT ((0)) FOR [FinalizadoAdministrativo]
GO
ALTER TABLE [dbo].[tbPedidoRecebimentoCombustivelVendas] ADD  DEFAULT ((0)) FOR [EncerramentoConferencia]
GO
ALTER TABLE [dbo].[tbPedidos] ADD  CONSTRAINT [DF_tbPedidos_ValorProduto]  DEFAULT ((0)) FOR [ValorProduto]
GO
ALTER TABLE [dbo].[tbPedidos] ADD  CONSTRAINT [DF_tbPedidos_Valorfrete]  DEFAULT ((0)) FOR [Valorfrete]
GO
ALTER TABLE [dbo].[tbPedidos] ADD  CONSTRAINT [DF_tbPedidos_ValorGNRE]  DEFAULT ((0)) FOR [ValorGNRE]
GO
ALTER TABLE [dbo].[tbPedidos] ADD  CONSTRAINT [DF_tbPedidos_ValorGARE]  DEFAULT ((0)) FOR [ValorGARE]
GO
ALTER TABLE [dbo].[tbPedidos] ADD  CONSTRAINT [DF_tbPedidos_ValorTotal]  DEFAULT ((0)) FOR [ValorTotal]
GO
ALTER TABLE [dbo].[tbPedidos] ADD  CONSTRAINT [DF_tbPedidos_PagarReceberGerados]  DEFAULT ((0)) FOR [PgRc]
GO
ALTER TABLE [dbo].[tbPedidos] ADD  CONSTRAINT [DF_tbPedidos_Despesa]  DEFAULT ((0)) FOR [Despesa]
GO
ALTER TABLE [dbo].[tbPedidos] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbPedidosItens] ADD  CONSTRAINT [DF_tbPedidosItens_QTDRecebido]  DEFAULT ((0)) FOR [QTDRecebido]
GO
ALTER TABLE [dbo].[tbPedidosItens] ADD  CONSTRAINT [DF_tbPedidosItens_VUFrete]  DEFAULT ((0)) FOR [VUFrete]
GO
ALTER TABLE [dbo].[tbPedidosItens] ADD  CONSTRAINT [DF_tbPedidosItens_VUGNRE]  DEFAULT ((0)) FOR [VUGNRE]
GO
ALTER TABLE [dbo].[tbPedidosItens] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbPedidosItensRecebidos] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbPerdaComunicacaoBico] ADD  CONSTRAINT [DF__tbPerdaCo__Retor__20E1DCB5]  DEFAULT ((0)) FOR [Retorno]
GO
ALTER TABLE [dbo].[tbPermissoesPrazo] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbPlanoContas] ADD  CONSTRAINT [DF_tbPlanoContas_Nivel]  DEFAULT ((0)) FOR [Nivel]
GO
ALTER TABLE [dbo].[tbPlanoContas] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbPLR] ADD  CONSTRAINT [DF_tbPLR_Total]  DEFAULT ((0)) FOR [Total]
GO
ALTER TABLE [dbo].[tbPLR] ADD  CONSTRAINT [DF_tbPLR_Percentual]  DEFAULT ((0)) FOR [Percentual]
GO
ALTER TABLE [dbo].[tbPLR] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbPLRTabela] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbPontoVenda] ADD  CONSTRAINT [DF_tbPontoVenda_LerAbastecimentos]  DEFAULT ((0)) FOR [LerAbastecimentos]
GO
ALTER TABLE [dbo].[tbPontoVenda] ADD  DEFAULT ((0)) FOR [CaixaSeparado]
GO
ALTER TABLE [dbo].[tbPontoVenda] ADD  DEFAULT ((0)) FOR [FDSeparado]
GO
ALTER TABLE [dbo].[tbPontoVenda] ADD  DEFAULT ((0)) FOR [Principal]
GO
ALTER TABLE [dbo].[tbPostos] ADD  CONSTRAINT [DF__Temporary__Ativo__15DA3E5D]  DEFAULT ((1)) FOR [Ativo]
GO
ALTER TABLE [dbo].[tbPostos] ADD  CONSTRAINT [DF__Temporary__Alugu__18B6AB08]  DEFAULT ((0)) FOR [AluguelMensal]
GO
ALTER TABLE [dbo].[tbPostos] ADD  CONSTRAINT [DF_tbPostos_HorarioAlmoco]  DEFAULT ((0)) FOR [HorarioAlmoco]
GO
ALTER TABLE [dbo].[tbPostos] ADD  CONSTRAINT [DF_tbPostos_PLR]  DEFAULT ((0)) FOR [PLR]
GO
ALTER TABLE [dbo].[tbPostos] ADD  CONSTRAINT [DF_tbPostos_ValeAlimentacao]  DEFAULT ((0)) FOR [ValeAlimentacao]
GO
ALTER TABLE [dbo].[tbPostos] ADD  CONSTRAINT [DF_tbPostos_Automacao]  DEFAULT ((0)) FOR [Automacao]
GO
ALTER TABLE [dbo].[tbPostos] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbPostos] ADD  DEFAULT ((0)) FOR [tef]
GO
ALTER TABLE [dbo].[tbPostos] ADD  CONSTRAINT [DF_tbPostos_EstiloNegocioCombustivel]  DEFAULT ((0)) FOR [EstiloNegocioCombustivel]
GO
ALTER TABLE [dbo].[tbPostos] ADD  CONSTRAINT [DF_tbPostos_EstiloNegocioLubrificante]  DEFAULT ((0)) FOR [EstiloNegocioLubrificante]
GO
ALTER TABLE [dbo].[tbPostos] ADD  CONSTRAINT [DF_tbPostos_EstiloNegocioConveniencia]  DEFAULT ((0)) FOR [EstiloNegocioConveniencia]
GO
ALTER TABLE [dbo].[tbPostos] ADD  CONSTRAINT [DF_tbPostos_EstiloNegocioServico]  DEFAULT ((0)) FOR [EstiloNegocioServico]
GO
ALTER TABLE [dbo].[tbPostos] ADD  DEFAULT ((0)) FOR [EmissaoECF]
GO
ALTER TABLE [dbo].[tbPostos] ADD  DEFAULT ((0)) FOR [EmissaoSAT]
GO
ALTER TABLE [dbo].[tbPostos] ADD  DEFAULT ((0)) FOR [EmissaoNFCE]
GO
ALTER TABLE [dbo].[tbPostos] ADD  DEFAULT ((0)) FOR [QuantificaVendaColaborador]
GO
ALTER TABLE [dbo].[tbPostos] ADD  DEFAULT ((0)) FOR [Lio]
GO
ALTER TABLE [dbo].[tbPostos] ADD  DEFAULT ((0)) FOR [PermitirReimpressaoRetirada]
GO
ALTER TABLE [dbo].[tbPostos] ADD  DEFAULT ((0)) FOR [PermitirExclusaoRetirada]
GO
ALTER TABLE [dbo].[tbPostos] ADD  DEFAULT ('2024-01-01') FOR [DataVencimento]
GO
ALTER TABLE [dbo].[tbPrecosEspeciais] ADD  CONSTRAINT [DF_tbPrecosEspeciais_Diferenca]  DEFAULT ((0)) FOR [Diferenca]
GO
ALTER TABLE [dbo].[tbPrecosEspeciais] ADD  CONSTRAINT [DF_tbPrecosEspeciais_Fixo]  DEFAULT ((0)) FOR [Fixo]
GO
ALTER TABLE [dbo].[tbPrecosEspeciais] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbPrecosPedidos] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbProdutos] ADD  CONSTRAINT [DF_tbProdutos_Aliquota]  DEFAULT ((0)) FOR [Aliquota]
GO
ALTER TABLE [dbo].[tbProdutos] ADD  CONSTRAINT [DF_tbProdutos_Ativo]  DEFAULT ((1)) FOR [Ativo]
GO
ALTER TABLE [dbo].[tbProdutos] ADD  CONSTRAINT [DF_tbProdutos_UnidadeMedida]  DEFAULT (N'UN') FOR [UnidadeMedida]
GO
ALTER TABLE [dbo].[tbProdutos] ADD  CONSTRAINT [DF__tbProduto__IdTem__3F51553C]  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbProdutos] ADD  DEFAULT ((0)) FOR [QuantidadeFracionada]
GO
ALTER TABLE [dbo].[tbProdutosAlteracaoPreco] ADD  DEFAULT (getdate()) FOR [DataCadastro]
GO
ALTER TABLE [dbo].[tbProdutosAlteracaoPrecoAgendamento] ADD  CONSTRAINT [DF_tbProdutosAlteracaoPreco_Efetuada]  DEFAULT ((0)) FOR [Efetuada]
GO
ALTER TABLE [dbo].[tbProdutosAlteracaoPrecoAgendamento] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbProdutosAlteracaoPrecoAgendamento] ADD  DEFAULT ((0)) FOR [Inutilizada]
GO
ALTER TABLE [dbo].[tbProdutosAlteracaoPrecoHistorico] ADD  CONSTRAINT [DF_tbProdutosAlteracaoPrecoProdutoHistoricoDetalhe_Id]  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbProdutosConversaoCodigo] ADD  CONSTRAINT [DF_tbProdutoConversaoCodigo_Id]  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbProdutosDestinacao] ADD  CONSTRAINT [DF_tbProdutosDestinacao_ID]  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbProdutosDestinacao] ADD  CONSTRAINT [DF_tbProdutosDestinacao_CodigoDestinacao]  DEFAULT ((0)) FOR [CodigoDestinacao]
GO
ALTER TABLE [dbo].[tbProdutosDestinacao] ADD  CONSTRAINT [DF_tbProdutosDestinacao_Ativo]  DEFAULT ((0)) FOR [Ativo]
GO
ALTER TABLE [dbo].[tbProdutosEstoqueTeto] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbProdutosImpostoNCM] ADD  CONSTRAINT [DF_tbProdutosImpostoNCM_id]  DEFAULT (newid()) FOR [id]
GO
ALTER TABLE [dbo].[tbProdutosImpostoNCM] ADD  CONSTRAINT [DF__tbProduto__ativo__55959C16]  DEFAULT ((1)) FOR [ativo]
GO
ALTER TABLE [dbo].[tbProdutosPostos] ADD  CONSTRAINT [DF_tbProdutosPostos_Almoxarifado]  DEFAULT ((0)) FOR [Almoxarifado]
GO
ALTER TABLE [dbo].[tbProdutosPostos] ADD  CONSTRAINT [DF_tbProdutosPostos_Atualizado]  DEFAULT ((0)) FOR [Atualizado]
GO
ALTER TABLE [dbo].[tbProdutosPostos] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbRedes] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbReducao] ADD  CONSTRAINT [DF_tbReducao_TotalizadorGeral]  DEFAULT ((0)) FOR [TotalizadorGeral]
GO
ALTER TABLE [dbo].[tbReducao] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbReducaodetalhes] ADD  CONSTRAINT [DF_tbReducaodetalhes_TipoTributo]  DEFAULT ((0)) FOR [TipoTributo]
GO
ALTER TABLE [dbo].[tbReducaodetalhes] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbReducaoMedicao] ADD  CONSTRAINT [DF_tbReducaoMedicao_Id]  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbRetiradaObrigacao] ADD  CONSTRAINT [DF_tbRetiradaObrigacao_ObrigadoInformarRetirada]  DEFAULT ((0)) FOR [ObrigadoInformarRetirada]
GO
ALTER TABLE [dbo].[tbRetiradas] ADD  CONSTRAINT [DF_tbRetiradas_Depositado]  DEFAULT ((0)) FOR [Depositado]
GO
ALTER TABLE [dbo].[tbRetiradas] ADD  CONSTRAINT [DF_tbRetiradas_Especie]  DEFAULT ('DI') FOR [Especie]
GO
ALTER TABLE [dbo].[tbRetiradas] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbRetiradas] ADD  DEFAULT ((0)) FOR [Removida]
GO
ALTER TABLE [dbo].[tbSumarizacaoCaixa] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbSuprimento] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbTanques] ADD  CONSTRAINT [DF__Temporary__Capac__2F9A1060]  DEFAULT ((0)) FOR [Capacidade]
GO
ALTER TABLE [dbo].[tbTanques] ADD  CONSTRAINT [DF__Temporary__Ativo__32767D0B]  DEFAULT ((1)) FOR [Ativo]
GO
ALTER TABLE [dbo].[tbTanques] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbTanquesMovEstoque] ADD  CONSTRAINT [DF_tbTanquesMovEstoque_QuantVend]  DEFAULT ((0)) FOR [QuantVend]
GO
ALTER TABLE [dbo].[tbTanquesMovEstoque] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbTanquesMovEstoque] ADD  CONSTRAINT [DF_tbTanquesMovEstoque_DataRecebimentoPedido]  DEFAULT (getdate()) FOR [DataRecebimentoPedido]
GO
ALTER TABLE [dbo].[tbTarefas] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbTarefaTipo] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbTipoConta] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbTipoContasPGRec] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbTipoDoc] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbTipoEnt] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbTipoProd] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbTiposOcorrencia] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbTotalizadorTributado] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbTurno] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbUF] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbUnidadeMedidas] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbUniformes] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbUsuarios] ADD  CONSTRAINT [DF_tbUsuarios_Turno]  DEFAULT ((1)) FOR [Turno]
GO
ALTER TABLE [dbo].[tbUsuarios] ADD  CONSTRAINT [DF_tbUsuarios_Bloqueado]  DEFAULT ('N') FOR [Bloqueado]
GO
ALTER TABLE [dbo].[tbUsuarios] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbUsuarios] ADD  DEFAULT ((1)) FOR [Ativo]
GO
ALTER TABLE [dbo].[tbUsuariosPostos] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbValidacaoRegistros] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbVeiculoTransportadora] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbVeiculoTransportadora] ADD  DEFAULT ((1)) FOR [Ativo]
GO
ALTER TABLE [dbo].[tbVendas] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbVendas] ADD  DEFAULT ((0)) FOR [EmitidaEmContingencia]
GO
ALTER TABLE [dbo].[tbVendas] ADD  DEFAULT ((0)) FOR [FinalizadoEnvioContingencia]
GO
ALTER TABLE [dbo].[tbVendas] ADD  DEFAULT ((0)) FOR [CanceladaContingencia]
GO
ALTER TABLE [dbo].[tbVendas] ADD  DEFAULT ((0)) FOR [FinalizadoCancelamentoContingencia]
GO
ALTER TABLE [dbo].[tbVendasItens] ADD  CONSTRAINT [DF_tbVendasItens_Quantidade]  DEFAULT ((0)) FOR [Quantidade]
GO
ALTER TABLE [dbo].[tbVendasItens] ADD  CONSTRAINT [DF_tbVendasItens_PrecoCusto]  DEFAULT ((0)) FOR [PrecoCusto]
GO
ALTER TABLE [dbo].[tbVendasItens] ADD  CONSTRAINT [DF_tbVendasItens_PrecoVenda]  DEFAULT ((0)) FOR [PrecoVenda]
GO
ALTER TABLE [dbo].[tbVendasItens] ADD  CONSTRAINT [DF_tbVendasItens_Cancelado]  DEFAULT ((0)) FOR [Cancelado]
GO
ALTER TABLE [dbo].[tbVendasItens] ADD  CONSTRAINT [DF_tbVendasItens_ValorItem]  DEFAULT ((0)) FOR [ValorItem]
GO
ALTER TABLE [dbo].[tbVendasItens] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbVendasItensPagamento] ADD  DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [dbo].[tbVendasItensPagamento] ADD  DEFAULT ((1)) FOR [FeitoRetiradaCartao]
GO
ALTER TABLE [dbo].[tbVendasLIO] ADD  DEFAULT ((0)) FOR [Cancelada]
GO
ALTER TABLE [dbo].[tbVendasLIO] ADD  DEFAULT ((0)) FOR [EmitidaOrigemVendas]
GO
ALTER TABLE [dbo].[tbVendasCelular]  WITH CHECK ADD  CONSTRAINT [FK_tbVendas_tbVendasCelular] FOREIGN KEY([VendaId])
REFERENCES [dbo].[tbVendas] ([Id])
GO
ALTER TABLE [dbo].[tbVendasCelular] CHECK CONSTRAINT [FK_tbVendas_tbVendasCelular]
GO
/****** Object:  StoredProcedure [dbo].[AberturaCaixa]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[AberturaCaixa]	@pIdCaixa	UNIQUEIDENTIFIER
										,@pIdposto    UNIQUEIDENTIFIER
										,@pIDEntidade UNIQUEIDENTIFIER
										,@pDia        SMALLDATETIME
										,@pValorTroco  FLOAT
AS

	--com a informação do caixa na mão, faz um update com os valores IdEntidade e Dia	
	UPDATE dbo.tbCaixa
    SET    dbo.tbCaixa.Dia=@pDia, dbo.tbCaixa.IdEntidade=@pIDEntidade, dbo.tbCaixa.Troco=@pValorTroco, dbo.tbCaixa.DataAbertura = GETDATE(),sincronizado=0
    WHERE	dbo.tbCaixa.Id=@pIdCaixa and dbo.tbCaixa.IdPosto=@pIdposto

GO
/****** Object:  StoredProcedure [dbo].[AcessosExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--AcessosExclui      
CREATE PROCEDURE [dbo].[AcessosExclui] @pID UNIQUEIDENTIFIER
AS
    DELETE FROM tbAcessos
    WHERE  ID = @pID 
GO
/****** Object:  StoredProcedure [dbo].[AcessosSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--AcessosSalva
CREATE PROCEDURE [dbo].[AcessosSalva] @pID          UNIQUEIDENTIFIER
                                     ,@pidUsuario  UNIQUEIDENTIFIER
                                     ,@pDescricao  NVARCHAR(50)
                                     ,@pMaquinario NVARCHAR(20)
                                     ,@pUsuario    NVARCHAR(20)
AS
    IF @pID = dbo.GuidEmpty()
      BEGIN
		  SET @pID = newid()
          INSERT INTO tbAcessos
                      (IDUsuario
                       ,Descricao
                       ,Maquinario
                       ,Usuario)
          VALUES      (@pIDUsuario
                       ,@pDescricao
                       ,@pMaquinario
                       ,@pUsuario)

          SELECT @pID
      END
    ELSE
      BEGIN
          UPDATE tbAcessos
          SET    Descricao = @pDescricao
                 ,Maquinario = @pMaquinario
                 ,Usuario = @pUsuario
                 ,idUsuario = @pIDUsuario
          WHERE  ID = @pID

          SELECT @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[AcessosSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
    
--AcessosSeleciona
CREATE PROCEDURE [dbo].[AcessosSeleciona] @pID UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbAcessos
    WHERE  ID = @pID 
GO
/****** Object:  StoredProcedure [dbo].[AdiantamentoExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--AdiantamentoExclui
CREATE PROCEDURE [dbo].[AdiantamentoExclui] @pID UNIQUEIDENTIFIER
AS
    DELETE FROM tbAdiantamento
    WHERE  id = @pID

    DELETE FROM tbAdiantamentoItem
    WHERE  idAdiantamento = @pID 
GO
/****** Object:  StoredProcedure [dbo].[AdiantamentoItemExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--AdiantamentoItemExclui
CREATE PROCEDURE [dbo].[AdiantamentoItemExclui] @pID UNIQUEIDENTIFIER
AS
    DELETE FROM tbAdiantamentoItem
    WHERE  id = @pID 
GO
/****** Object:  StoredProcedure [dbo].[AdiantamentoItemSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--AdiantamentoItemSalva
CREATE PROCEDURE [dbo].[AdiantamentoItemSalva] @pOP              CHAR
                                              ,@pID             UNIQUEIDENTIFIER
                                              ,@pIDAdiantamento UNIQUEIDENTIFIER
                                              ,@pDescricao      VARCHAR(50)
                                              ,@pNotaFiscal     VARCHAR(50)
                                              ,@pData           SMALLDATETIME
                                              ,@pValor          MONEY
AS
    IF @pOP = 'I'
      BEGIN
          INSERT INTO tbAdiantamentoItem
                      (idAdiantamento
                       ,Descricao
                       ,NotaFiscal
                       ,Data
                       ,Valor)
          VALUES     (@pIDAdiantamento
                      ,@pDescricao
                      ,@pNotaFiscal
                      ,@pData
                      ,@pValor)
      END
    ELSE
      BEGIN
          UPDATE tbAdiantamentoItem
          SET    IDAdiantamento = @pIDAdiantamento
                 ,Descricao = @pDescricao
                 ,NotaFiscal = @pNotaFiscal
                 ,Data = @pData
                 ,Valor = @pValor
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[AdiantamentoItemSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--AdiantamentoItemSeleciona
CREATE PROCEDURE [dbo].[AdiantamentoItemSeleciona] @pIDAdiantamento UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbAdiantamentoItem
    WHERE  IDAdiantamento = @pIDAdiantamento 
GO
/****** Object:  StoredProcedure [dbo].[AdiantamentoSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--AdiantamentoSalva    
CREATE PROCEDURE [dbo].[AdiantamentoSalva] @pOP               CHAR
                                          ,@pID              UNIQUEIDENTIFIER
                                          ,@pIDPessoa        UNIQUEIDENTIFIER
                                          ,@pIDContabancaria UNIQUEIDENTIFIER
                                          ,@pDescricao       VARCHAR(50)
                                          ,@pData            SMALLDATETIME
                                          ,@pValor           MONEY
                                          ,@pFinalizado      BIT
AS
    IF @pOP = 'I'
      BEGIN
          INSERT INTO tbAdiantamento
                      (idPessoa
                       ,idContabancaria
                       ,Descricao
                       ,Data
                       ,Valor
                       ,Finalizado)
          VALUES     (@pidPessoa
                      ,@pIDContabancaria
                      ,@pDescricao
                      ,@pData
                      ,@pValor
                      ,0)
      END
    ELSE
      BEGIN
          UPDATE tbAdiantamento
          SET    IDPessoa = @pIDPessoa
                 ,idContabancaria = @pIDContabancaria
                 ,Descricao = @pDescricao
                 ,Data = @pData
                 ,Valor = @pValor
                 ,Finalizado = @pFinalizado
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[AdiantamentoSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
    
--AdiantamentoSeleciona
CREATE PROCEDURE [dbo].[AdiantamentoSeleciona] @pID UNIQUEIDENTIFIER
AS
    SELECT *
           ,dbo.tbEntidades.RzSocial AS Pessoa
    FROM   dbo.tbAdiantamento
           INNER JOIN dbo.tbEntidades
                   ON dbo.tbAdiantamento.idPessoa = dbo.tbEntidades.Id
    WHERE  tbAdiantamento.ID = @pID 
GO
/****** Object:  StoredProcedure [dbo].[AfericaoExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--AfericaoExclui
CREATE PROCEDURE [dbo].[AfericaoExclui] @pIDAfericao UNIQUEIDENTIFIER
AS
    DELETE tbAfericao
    WHERE  tbAfericao.Id = @pIDAfericao 
GO
/****** Object:  StoredProcedure [dbo].[AfericaoSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--AfericaoSalva
CREATE PROCEDURE [dbo].[AfericaoSalva] @pOP          CHAR
                                      ,@pidAfericao UNIQUEIDENTIFIER
                                      ,@pIdposto    UNIQUEIDENTIFIER
                                      ,@pNumBomba   UNIQUEIDENTIFIER
                                      ,@pQTD        FLOAT
                                      ,@pIDCaixa    UNIQUEIDENTIFIER
AS
    IF @pOP = 'I'
      BEGIN
          INSERT INTO tbAfericao
                      (idPosto
                       ,IdBomba
                       ,QTD
                       ,idCaixa
                       ,sincronizado)
          VALUES     (@pidPosto
                      ,@pNumBomba
                      ,@pQTD
                      ,@pIDCaixa
                      ,0)

          UPDATE tbBombas
          SET    Encerrante = Encerrante + @pQTD
          WHERE  idPosto = @pIDPosto
             AND Id = @pNumBomba
      END
    ELSE
      BEGIN
          UPDATE tbAfericao
          SET    IdBomba = @pNumBomba
                 ,QTD = @pQTD
          WHERE  tbAfericao.Id = @pIDAfericao
      END 
GO
/****** Object:  StoredProcedure [dbo].[AfericaoSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--AfericaoSeleciona
CREATE PROCEDURE [dbo].[AfericaoSeleciona] @pidAfericao UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbAfericao
    WHERE  tbAfericao.Id = @pIDAfericao 
GO
/****** Object:  StoredProcedure [dbo].[AlineaExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--AlineaExclui
CREATE PROCEDURE [dbo].[AlineaExclui] @pIDAlinea UNIQUEIDENTIFIER
AS
    DELETE tbAlinea
    WHERE  tbAlinea.Id = @pIDAlinea 
GO
/****** Object:  StoredProcedure [dbo].[AlineaSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--AlineaSalva
CREATE PROCEDURE [dbo].[AlineaSalva] @pOP         CHAR
                                    ,@pIDAlinea  UNIQUEIDENTIFIER
                                    ,@pDescricao VARCHAR(50)
AS
    IF @pOP = 'I'
      BEGIN
          INSERT INTO tbAlinea
                      (Descricao)
          VALUES     (@pDescricao)
      END
    ELSE
      BEGIN
          UPDATE tbAlinea
          SET    Descricao = @pDescricao
          WHERE  tbAlinea.Id = @pIDAlinea
      END 
GO
/****** Object:  StoredProcedure [dbo].[AlineaSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--AlineaSeleciona
CREATE PROCEDURE [dbo].[AlineaSeleciona] @pIDAlinea UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbAlinea
    WHERE  tbAlinea.Id = @pIDAlinea 
GO
/****** Object:  StoredProcedure [dbo].[AlteradadosArquivoEncerrantes]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[AlteradadosArquivoEncerrantes]
	@pIdposto int,
	@pIncremento int,
	@pValidacaoAbastecimento nvarchar(max)
AS
	UPDATE    tbAbastecimentos
SET              ValidacaoAbastecimento = @pValidacaoAbastecimento, NumeroSerieECF = 'BE050669200010001913'
WHERE     (Incremento = @pIncremento) AND (IdPosto = IDPosto)
GO
/****** Object:  StoredProcedure [dbo].[BairroExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Esdras Pavan
-- Create date: 26/07/2006
-- Description:	Exclui Bairro da tabela de Bairros
-- =============================================
CREATE PROCEDURE [dbo].[BairroExclui]
	@pID int
AS
BEGIN
	Delete from Bairros where ID=@pID
END
GO
/****** Object:  StoredProcedure [dbo].[BairroSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[BairroSalva] @pID int, @pCidade int, @pNome varchar(50) AS
If @pID=0
   begin
        insert into Bairros values(@pCidade, @pNome) 
        Select @@Identity
   end
else
   begin
       update Bairros set Cidade=@pCidade, Nome=@pNome where ID=@pID
      Select @pID
   end
GO
/****** Object:  StoredProcedure [dbo].[BairroSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Esdras Pavan
-- Create date: 26/07/2006
-- Description:	Seleciona Bairro da tabela de Bairros
-- =============================================
CREATE PROCEDURE [dbo].[BairroSeleciona]
	@pID int
AS
BEGIN
	If @pID=0
        begin
			Select Bairros.ID, Bairros.Nome, Cast(Bairros.Cidade as varchar(7)) + ' - ' +  Cidades.Cidade as Cidade , Cidades.UF from Bairros, Cidades where Bairros.Cidade=Cidades.ID
		end
	else
		begin
			Select Bairros.ID, Bairros.Nome, CAst(Bairros.Cidade as varchar(7)) + ' - ' +  Cidades.Cidade as Cidade , Cidades.UF from Bairros, Cidades where Bairros.Cidade=Cidades.ID and Bairros.id=@pID
		end

END
GO
/****** Object:  StoredProcedure [dbo].[BombaExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--BombaExclui
CREATE PROCEDURE [dbo].[BombaExclui] @pIdposto   UNIQUEIDENTIFIER
                                    ,@pNumBomba INT
AS
    UPDATE tbBombas
    SET    ativo = 0
           ,InativoEM = getdate()
    WHERE  idPosto = @pIDPosto
       AND NumBomba = @pNumBomba 
GO
/****** Object:  StoredProcedure [dbo].[BombaSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--BombaSalva
CREATE PROCEDURE [dbo].[BombaSalva] @pOP          CHAR
                                   ,@pIdposto    UNIQUEIDENTIFIER
                                   ,@pNumBomba   INT
                                   ,@pNumTanque  UNIQUEIDENTIFIER
                                   ,@pEncerrante FLOAT
AS
    IF @pOP = 'I'
      BEGIN
          INSERT INTO tbBombas
                      (idPosto
                       ,NumBomba
                       ,IdTanque
                       ,Encerrante
                       ,Ativo
                       ,InativoEM)
          VALUES     (@pIDPosto
                      ,@pNumBomba
                      ,@pNumTanque
                      ,@pEncerrante
                      ,1
                      ,NULL)
      END
    ELSE
      BEGIN
          UPDATE tbBombas
          SET    IdTanque = @pNumTanque
                 ,Encerrante = @pEncerrante
                 ,Ativo = 1
                 ,InativoEM = NULL
          WHERE  idPosto = @pidPosto
             AND NumBomba = @pNumBomba
      END 
GO
/****** Object:  StoredProcedure [dbo].[BombasSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--BombasSeleciona
CREATE PROCEDURE [dbo].[BombasSeleciona] @pIdposto UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbBombas
    WHERE  IDPosto = @pIDPosto 
GO
/****** Object:  StoredProcedure [dbo].[BuscaValorEstoque]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--BuscaValorEstoque
CREATE PROCEDURE [dbo].[BuscaValorEstoque] @idPosto    UNIQUEIDENTIFIER
                                  ,@idProduto UNIQUEIDENTIFIER
AS
  BEGIN
      SELECT a.Estoque AS Estoque
      FROM   tbProdutosPostos a
             INNER JOIN tbProdutos b
                     ON a.idProduto = b.Id
                        AND b.UnidadeMedida IN ( 'LT', 'M' )
      WHERE  a.idPosto = @idPosto
         AND a.idProduto = @idProduto
  END 
GO
/****** Object:  StoredProcedure [dbo].[CaixaAbertoSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

	
CREATE PROCEDURE [dbo].[CaixaAbertoSeleciona] @pPosto UNIQUEIDENTIFIER
AS
    SELECT dbo.tbCaixa.Id
    FROM   dbo.tbCaixa
    WHERE  
		dbo.tbCaixa.idPosto = @pPosto and 
		dbo.tbCaixa.IdEntidade <> dbo.GuidEmpty() and
		not(dbo.tbCaixa.DataAbertura Is NULL) and 
		dbo.tbCaixa.DataFechamento IS NULL 

GO
/****** Object:  StoredProcedure [dbo].[CaixaAbertoSelecionaDia]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[CaixaAbertoSelecionaDia] @pPosto UNIQUEIDENTIFIER
AS
    SELECT dbo.tbCaixa.dia
    FROM   dbo.tbCaixa
    WHERE  
		dbo.tbCaixa.idPosto = @pPosto and 
		dbo.tbCaixa.IdEntidade <> dbo.GuidEmpty() and
		not(dbo.tbCaixa.DataAbertura Is NULL) and 
		dbo.tbCaixa.DataFechamento IS NULL 

GO
/****** Object:  StoredProcedure [dbo].[CaixaAbertoValida]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--CaixaAbertoValida
CREATE PROCEDURE [dbo].[CaixaAbertoValida] @pCaixaTurnoAnt UNIQUEIDENTIFIER
                                          ,@pCaixaIni     UNIQUEIDENTIFIER
                                          ,@pCaixaFim     UNIQUEIDENTIFIER
                                          ,@pIdposto      UNIQUEIDENTIFIER
AS
    SELECT Caixa.idObjeto
           ,(SELECT Tcaixa
             FROM   tbCaixa
             WHERE  tbCaixa.Id = @pCaixaINI)                               AS
            TCaixa
           ,dbo.tbProdutos.Descricao                                       AS
            Imagem
           ,RTRIM(dbo.tbProdutos.Descricao + ' ' + '('
                  + Cast(Caixa.idObjeto AS VARCHAR) + ')')                 AS
            Descricao
           ,Caixa.ValorLido                                                AS
            Inicial
           ,ISNULL ((SELECT AVG(dbo.tbVendasItens.PrecoVenda)
                     FROM   dbo.tbVendas
                            INNER JOIN dbo.tbVendasItens
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                            INNER JOIN dbo.tbTanques
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbTanques.IdPosto
                            INNER JOIN dbo.tbBombas
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbVendasItens.idBomba =
                                           dbo.tbBombas.Id
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
                     WHERE  ( dbo.tbVendas.idCaixa BETWEEN
                              @pCaixaIni AND @pCaixaFim
                            )
                        AND ( dbo.tbVendasItens.cancelado = 0 )
                        AND ( dbo.tbvendas.Status IS NULL )
                     GROUP  BY dbo.tbTanques.NumTanque
                               ,dbo.tbTanques.IdPosto
                     HAVING ( dbo.tbTanques.NumTanque = Caixa.idObjeto )
                            AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0) AS
            Preco
           ,ISNULL ((SELECT AVG(dbo.tbVendasItens.PrecoCusto)
                     FROM   dbo.tbVendas
                            INNER JOIN dbo.tbVendasItens
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                            INNER JOIN dbo.tbTanques
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbTanques.IdPosto
                            INNER JOIN dbo.tbBombas
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbVendasItens.idBomba =
                                           dbo.tbBombas.Id
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
                     WHERE  ( dbo.tbVendas.idCaixa BETWEEN
                              @pCaixaIni AND @pCaixaFim
                            )
                        AND ( dbo.tbVendasItens.cancelado = 0 )
                        AND ( dbo.tbvendas.Status IS NULL )
                     GROUP  BY dbo.tbTanques.NumTanque
                               ,dbo.tbTanques.IdPosto
                     HAVING ( dbo.tbTanques.NumTanque = Caixa.idObjeto )
                            AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0) AS
            PrecoCusto
           ,ISNULL ((SELECT SUM(dbo.tbVendasItens.Quantidade)
                     FROM   dbo.tbVendas
                            INNER JOIN dbo.tbVendasItens
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                            INNER JOIN dbo.tbTanques
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbTanques.IdPosto
                            INNER JOIN dbo.tbBombas
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbVendasItens.idBomba =
                                           dbo.tbBombas.Id
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
                     WHERE  ( dbo.tbVendas.idCaixa BETWEEN
                              @pCaixaIni AND @pCaixaFim
                            )
                        AND ( dbo.tbVendasItens.cancelado = 0 )
                        AND ( dbo.tbvendas.Status IS NULL )
                     GROUP  BY dbo.tbTanques.NumTanque
                               ,dbo.tbTanques.IdPosto
                     HAVING ( dbo.tbTanques.NumTanque = Caixa.idObjeto )
                            AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0) AS
            Venda
           ,ISNULL ((SELECT SUM(dbo.tbPedidosItensRecebidos.qtd) AS Recebimento
                     FROM   dbo.tbPedidosItens
                            INNER JOIN dbo.tbTanques
                                    ON dbo.tbPedidosItens.idPosto =
                                       dbo.tbTanques.IdPosto
                                       AND dbo.tbPedidosItens.idProduto =
                                           dbo.tbTanques.IdProduto
                            INNER JOIN dbo.tbPedidosItensRecebidos
                                    ON dbo.tbPedidosItens.idPedido =
                                       dbo.tbPedidosItensRecebidos.idPedido
                                       AND dbo.tbPedidosItens.idPosto =
                                           dbo.tbPedidosItensRecebidos.idPosto
                                       AND dbo.tbTanques.Id =
                                           dbo.tbPedidosItensRecebidos.IdTanque
                     WHERE  ( dbo.tbPedidosItens.idCaixaRecebimento BETWEEN
                              @pCaixaINI AND @pCaixaFIM )
                        AND ( dbo.tbTanques.NumTanque = caixa.idOBjeto )
                        AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0)     AS
            Recebimento
           ,(SELECT Medicao
             FROM   dbo.tbTanques
             WHERE  ( idPosto = @pIDPosto )
                AND ( NumTanque = Caixa.idObjeto ))                        AS
            Final
           ,Isnull ((SELECT SUM(0)
                     FROM   dbo.tbTanques
                            INNER JOIN dbo.tbBombas
                                    ON dbo.tbTanques.IdPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
                            INNER JOIN dbo.tbAfericao
                                    ON dbo.tbBombas.IdPosto =
                                       dbo.tbAfericao.idPosto
                                       AND dbo.tbBombas.Id =
                                           dbo.tbAfericao.IdBomba
                     WHERE  ( dbo.tbBombas.IdPosto = @pIDPosto )
                        AND ( dbo.tbTanques.NumTanque = Caixa.idObjeto )
                        AND ( dbo.tbAfericao.idCaixa BETWEEN
                              @pCaixaINI AND @pCaixaFIM )),
            0
            )                                                              AS
            Afericao
           ,ROUND(ISNULL ((SELECT AVG(dbo.tbVendasItens.PrecoVenda)
                           FROM   dbo.tbVendas
                                  INNER JOIN dbo.tbVendasItens
                                          ON dbo.tbVendas.Id =
                                             dbo.tbVendasItens.idVenda
                                  INNER JOIN dbo.tbTanques
                                          ON dbo.tbVendas.idPosto =
                                             dbo.tbTanques.IdPosto
                                  INNER JOIN dbo.tbBombas
                                          ON dbo.tbVendas.idPosto =
                                             dbo.tbBombas.IdPosto
                                             AND dbo.tbVendasItens.idBomba =
                                                 dbo.tbBombas.Id
                                             AND dbo.tbTanques.Id =
                                                 dbo.tbBombas.IdTanque
                           WHERE  ( dbo.tbVendas.idCaixa BETWEEN
                                    @pCaixaIni AND @pCaixaFim
                                  )
                           GROUP  BY dbo.tbTanques.NumTanque
                                     ,dbo.tbTanques.IdPosto
                           HAVING ( dbo.tbTanques.NumTanque = Caixa.idObjeto )
                                  AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0)
                  *
                         ISNULL ((SELECT SUM(dbo.tbVendasItens.Quantidade)
                                  FROM   dbo.tbVendas
                                         INNER JOIN dbo.tbVendasItens
                                                 ON dbo.tbVendas.Id =
                                                    dbo.tbVendasItens.idVenda
                                         INNER JOIN dbo.tbTanques
                                                 ON dbo.tbVendas.idPosto =
                                                    dbo.tbTanques.IdPosto
                                         INNER JOIN dbo.tbBombas
                                                 ON dbo.tbVendas.idPosto =
                                                    dbo.tbBombas.IdPosto
                                                    AND
                                         dbo.tbVendasItens.idBomba =
                                         dbo.tbBombas.Id
                                                    AND dbo.tbTanques.Id =
                                                        dbo.tbBombas.IdTanque
                                  WHERE  ( dbo.tbVendas.idCaixa BETWEEN
                                           @pCaixaIni AND @pCaixaFim
                                         )
                                     AND ( dbo.tbVendasItens.cancelado = 0 )
                                     AND ( dbo.tbvendas.Status IS NULL )
                                  GROUP  BY dbo.tbTanques.NumTanque
                                            ,dbo.tbTanques.IdPosto
                                  HAVING ( dbo.tbTanques.NumTanque = Caixa.idObjeto )
                                         AND ( dbo.tbTanques.IdPosto = @pIDPosto
                                             )),
                         0), 1)
                                                                          AS
            Total
           ,tbProdutos.Ordem
    FROM   dbo.tbProdutosPostos
           INNER JOIN dbo.tbProdutos
                   ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbCaixa
                      INNER JOIN dbo.tbCaixaItens Caixa
                              ON dbo.tbCaixa.Id = Caixa.idCaixa
                   ON dbo.tbProdutosPostos.idPosto = dbo.tbCaixa.idPosto
           INNER JOIN dbo.tbTanques
                   ON dbo.tbProdutosPostos.idPosto = dbo.tbTanques.IdPosto
                      AND Caixa.idObjeto = dbo.tbTanques.NumTanque
                      AND dbo.tbProdutos.Id = dbo.tbTanques.IdProduto
                      AND dbo.tbProdutosPostos.idProduto =
                          dbo.tbTanques.IdProduto
    WHERE  ( Caixa.idCaixa = @pCaixaTurnoAnt )
       AND ( Caixa.TipoLeitura = 'T' )
       AND ( dbo.tbTanques.IdPosto = @pIDPosto )
    UNION
    SELECT 20
           ,4
           ,'LB'
           ,'Lubrificantes'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbVendasItens.PrecoVenda *
                               dbo.tbVendasItens.Quantidade)
                    FROM   dbo.tbVendas
                           INNER JOIN dbo.tbVendasItens
                                   ON dbo.tbVendas.Id =
                                      dbo.tbVendasItens.idVenda
                           INNER JOIN dbo.tbProdutos
                                   ON dbo.tbVendasItens.idProduto =
                                      dbo.tbProdutos.Id
                           INNER JOIN dbo.tbProdutosPostos
                                   ON dbo.tbVendas.idPosto =
                                      dbo.tbProdutosPostos.idPosto
                                      AND dbo.tbVendasItens.idProduto =
                                          dbo.tbProdutosPostos.idProduto
                                      AND dbo.tbProdutos.Id =
                                          dbo.tbProdutosPostos.idProduto
                    WHERE  dbo.tbVendas.idPosto = @pIDPosto
                       AND ( dbo.tbVendasItens.cancelado = 0 )
                       AND ( dbo.tbvendas.Status IS NULL )
                    GROUP  BY dbo.tbProdutos.TipoProd
                              ,dbo.tbVendas.idCaixa
                    HAVING ( dbo.tbVendas.idCaixa BETWEEN
                             @pCaixaINI AND @pCaixaFIM
                           )
                           AND ( dbo.tbProdutos.TipoProd = 'LB' )), 0)
           ,21
    UNION
    SELECT 21
           ,4
           ,'LC'
           ,'Conveniência'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbVendasItens.PrecoVenda *
                               dbo.tbVendasItens.Quantidade)
                    FROM   dbo.tbVendas
                           INNER JOIN dbo.tbVendasItens
                                   ON dbo.tbVendas.Id =
                                      dbo.tbVendasItens.idVenda
                           INNER JOIN dbo.tbProdutos
                                   ON dbo.tbVendasItens.idProduto =
                                      dbo.tbProdutos.Id
                           INNER JOIN dbo.tbProdutosPostos
                                   ON dbo.tbVendas.idPosto =
                                      dbo.tbProdutosPostos.idPosto
                                      AND dbo.tbVendasItens.idProduto =
                                          dbo.tbProdutosPostos.idProduto
                                      AND dbo.tbProdutos.Id =
                                          dbo.tbProdutosPostos.idProduto
                    WHERE  dbo.tbVendas.idPosto = @pIDPosto
                       AND ( dbo.tbVendasItens.cancelado = 0 )
                       AND ( dbo.tbvendas.Status IS NULL )
                    GROUP  BY dbo.tbProdutos.TipoProd
                              ,dbo.tbVendas.idCaixa
                    HAVING ( dbo.tbVendas.idCaixa BETWEEN
                             @pCaixaINI AND @pCaixaFIM
                           )
                           AND ( dbo.tbProdutos.TipoProd = 'LC' )), 0)
           ,22
    UNION
    SELECT 22
           ,4
           ,'TOT'
           ,'Total Vendas'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,22
    UNION
    SELECT 23
           ,4
           ,'DP'
           ,'Desconto Cliente Esp.'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbVendasItens.PrecoEspecial *
                                dbo.tbVendasItens.Quantidade) -
                                           SUM(dbo.tbVendasItens.PrecoVenda *
                                               dbo.tbVendasItens.Quantidade)
                    FROM   dbo.tbVendas
                           INNER JOIN dbo.tbVendasItens
                                   ON dbo.tbVendas.Id =
                                      dbo.tbVendasItens.idVenda
                           INNER JOIN dbo.tbProdutos
                                   ON dbo.tbVendasItens.idProduto =
                                      dbo.tbProdutos.Id
                           INNER JOIN dbo.tbProdutosPostos
                                   ON dbo.tbVendas.idPosto =
                                      dbo.tbProdutosPostos.idPosto
                                      AND dbo.tbVendasItens.idProduto =
                                          dbo.tbProdutosPostos.idProduto
                                      AND dbo.tbProdutos.Id =
                                          dbo.tbProdutosPostos.idProduto
                    WHERE  dbo.tbVendas.idPosto = @pIDPosto
                       AND precoEspecial > 0
                       AND tbvendasItens.cancelado = 0
                       AND tbvendas.status IS NULL
                    GROUP  BY dbo.tbProdutos.TipoProd
                              ,dbo.tbVendas.idCaixa
                    HAVING ( dbo.tbVendas.idCaixa BETWEEN
                             @pCaixaIni AND @pCAixaFim
                           )), 0)
           ,23
    UNION
    SELECT 24
           ,4
           ,'CV'
           ,'Cheque Vista'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas
                    INNER JOIN dbo.tbVendasItensPagamento
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CV' ))
           ,24
    UNION
    SELECT 25
           ,4
           ,'CP'
           ,'Cheque Prazo'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas
                    INNER JOIN dbo.tbVendasItensPagamento
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CP' ))
           ,25
    UNION
    SELECT 26
           ,4
           ,'CC'
           ,'Cartão Crédito'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas
                    INNER JOIN dbo.tbVendasItensPagamento
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CC' ))
           ,26
    UNION
    SELECT 27
           ,4
           ,'CD'
           ,'Cartão Débito'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas
                    INNER JOIN dbo.tbVendasItensPagamento
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CD' ))
           ,27
    UNION
    SELECT 28
           ,4
           ,'PR'
           ,'Prazo'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas
                    INNER JOIN dbo.tbVendasItensPagamento
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'PR' ))
           ,28
    UNION
    SELECT 29
           ,4
           ,'CF'
           ,'Carta Frete'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas
                    INNER JOIN dbo.tbVendasItensPagamento
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CF' ))
           ,29
    UNION
    SELECT 30
           ,4
           ,'AF'
           ,'Troco Frete'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbCartaFrete.ValorAdiantamento) *- 1
                    FROM   dbo.tbCartaFrete
                           INNER JOIN dbo.tbVendas
                                   ON dbo.tbCartaFrete.idVenda = dbo.tbVendas.Id
                    WHERE  dbo.tbVendas.idCaixa BETWEEN
                           @pCaixaFIM AND @pCaixaFIM),
            0)
           ,30
    UNION
    SELECT 31
           ,4
           ,'RF'
           ,'Retorno Carta Frete'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbCartaFrete.ValorRetorno) *- 1
                    FROM   dbo.tbCartaFrete
                    WHERE  dbo.tbCartaFrete.idCaixaRetorno BETWEEN
                           @pCaixaINI AND @pCaixaFIM
                    ), 0)
           ,31
    /*union  Select 32,4,'NF', 'Notas fiscais', 0,0,0,0 ,0,0,0, (Select(ISnull(Sum(dbo.tbVendasItensPagamento.Valor),0))  FROM dbo.tbVendas INNER JOIN dbo.tbVendasItensPagamento ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda  WHERE  (tbVendas.IDposto=@pIDPosto) and  (dbo.tbVendas.idCaixa between @pCaixaINI and @pCaixaFIM) AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'SD' or dbo.tbVendasItensPagamento.TipoPagamento = 'M1') ),32  */
    UNION
    SELECT 33
           ,4
           ,'DI'
           ,'Dinheiro'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas
                    INNER JOIN dbo.tbVendasItensPagamento
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'DI' ))
           ,33
    UNION
    SELECT 34
           ,4
           ,'TO'
           ,'Total Vendido'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,34
    UNION
    SELECT 35
           ,4
           ,'RT'
           ,'Retiradas'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT Sum(Valor) *- 1
                    FROM   tbRetiradas
                    WHERE  idPosto = @pIDPosto
                       AND idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM), 0)
           ,35
    UNION
    SELECT 36
           ,5
           ,'SD'
           ,'Saldo Retirar'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,36
    ORDER  BY tbProdutos.ordem 
GO
/****** Object:  StoredProcedure [dbo].[CaixaAbre]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



--CaixaAbre
CREATE PROCEDURE [dbo].[CaixaAbre] @pIDCaixa     UNIQUEIDENTIFIER
                                  ,@pIdposto    UNIQUEIDENTIFIER
                                  ,@pIDEntidade UNIQUEIDENTIFIER
                                  ,@pTCaixa     INT
                                  ,@pDia        SMALLDATETIME
AS

	declare @novoID uniqueidentifier 
	set @novoID = NEWID()
	
    UPDATE tbCAixa
    SET    DataFechamento = getDate(), Sincronizado = 0
    WHERE  Id = @pIDCaixa

    INSERT INTO tbCaixa
				(id
                 ,idPosto
                 ,idEntidade
                 ,Tcaixa
                 ,Dia
				 ,Sincronizado)
    VALUES     (@novoID
				,@pIDPosto
                ,@pIDEntidade
                ,@pTcaixa
                ,@pDia
				,0) 
                
	select @novoID

GO
/****** Object:  StoredProcedure [dbo].[CaixaFechadoValida]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--CaixaFechadoValida
CREATE PROCEDURE [dbo].[CaixaFechadoValida] @pCaixaTurnoAnt UNIQUEIDENTIFIER
                                           ,@pCaixaIni     UNIQUEIDENTIFIER
                                           ,@pCaixaFim     UNIQUEIDENTIFIER
                                           ,@pIdposto      UNIQUEIDENTIFIER
AS
    SELECT Caixa.idObjeto
           ,(SELECT Tcaixa
             FROM   tbCaixa
             WHERE  idCaixa = @pCaixaINI)                                  AS
            TCaixa
           ,dbo.tbProdutos.Descricao                                       AS
            Imagem
           ,RTRIM(dbo.tbProdutos.Descricao + ' ' + '('
                  + Cast(Caixa.idObjeto AS VARCHAR) + ')')                 AS
            Descricao
           ,Caixa.ValorLido                                                AS
            Inicial
           ,ISNULL ((SELECT AVG(dbo.tbVendasItens.PrecoVenda)
                     FROM   dbo.tbVendas
                            INNER JOIN dbo.tbVendasItens
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                            INNER JOIN dbo.tbTanques
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbTanques.IdPosto
                            INNER JOIN dbo.tbBombas
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbVendasItens.idBomba =
                                           dbo.tbBombas.Id
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
                     WHERE  ( dbo.tbVendas.idCaixa BETWEEN
                              @pCaixaIni AND @pCaixaFim
                            )
                        AND ( dbo.tbVendasItens.cancelado = 0 )
                        AND ( dbo.tbvendas.Status IS NULL )
                     GROUP  BY dbo.tbTanques.Id
                               ,dbo.tbTanques.IdPosto
                     HAVING ( dbo.tbTanques.Id = Caixa.idObjeto )
                            AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0) AS
            Preco
           ,ISNULL ((SELECT AVG(dbo.tbVendasItens.PrecoCusto)
                     FROM   dbo.tbVendas
                            INNER JOIN dbo.tbVendasItens
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                            INNER JOIN dbo.tbTanques
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbTanques.IdPosto
                            INNER JOIN dbo.tbBombas
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbVendasItens.idBomba =
                                           dbo.tbBombas.Id
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
                     WHERE  ( dbo.tbVendas.idCaixa BETWEEN
                              @pCaixaIni AND @pCaixaFim
                            )
                        AND ( dbo.tbVendasItens.cancelado = 0 )
                        AND ( dbo.tbvendas.Status IS NULL )
                     GROUP  BY dbo.tbTanques.Id
                               ,dbo.tbTanques.IdPosto
                     HAVING ( dbo.tbTanques.Id = Caixa.idObjeto )
                            AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0) AS
            PrecoCusto
           ,ISNULL ((SELECT SUM(dbo.tbVendasItens.Quantidade)
                     FROM   dbo.tbVendas
                            INNER JOIN dbo.tbVendasItens
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                            INNER JOIN dbo.tbTanques
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbTanques.IdPosto
                            INNER JOIN dbo.tbBombas
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbVendasItens.idBomba =
                                           dbo.tbBombas.Id
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
                     WHERE  ( dbo.tbVendas.idCaixa BETWEEN
                              @pCaixaIni AND @pCaixaFim
                            )
                        AND ( dbo.tbVendasItens.cancelado = 0 )
                        AND ( dbo.tbvendas.Status IS NULL )
                     GROUP  BY dbo.tbTanques.Id
                               ,dbo.tbTanques.IdPosto
                     HAVING ( dbo.tbTanques.Id = Caixa.idObjeto )
                            AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0) AS
            Venda
           ,ISNULL ((SELECT SUM(dbo.tbPedidosItensRecebidos.qtd) AS Recebimento
                     FROM   dbo.tbPedidosItens
                            INNER JOIN dbo.tbTanques
                                    ON dbo.tbPedidosItens.idPosto =
                                       dbo.tbTanques.IdPosto
                                       AND dbo.tbPedidosItens.idProduto =
                                           dbo.tbTanques.IdProduto
                            INNER JOIN dbo.tbPedidosItensRecebidos
                                    ON dbo.tbPedidosItens.idPedido =
                                       dbo.tbPedidosItensRecebidos.idPedido
                                       AND dbo.tbPedidosItens.idPosto =
                                           dbo.tbPedidosItensRecebidos.idPosto
                                       AND dbo.tbTanques.Id =
                                           dbo.tbPedidosItensRecebidos.IdTanque
                     WHERE  ( dbo.tbPedidosItens.idCaixaRecebimento BETWEEN
                              @pCaixaINI AND @pCaixaFIM )
                        AND ( dbo.tbTanques.Id = caixa.idOBjeto )
                        AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0)     AS
            Recebimento
           ,(SELECT ValorLido
             FROM   tbCaixaItens
             WHERE  idCaixa = @pCaixaFIM
                AND idObjeto = Caixa.idObjeto
                AND TipoLeitura = 'T')                                     AS
            Final
           ,Isnull ((SELECT SUM(0)
                     FROM   dbo.tbTanques
                            INNER JOIN dbo.tbBombas
                                    ON dbo.tbTanques.IdPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
                            INNER JOIN dbo.tbAfericao
                                    ON dbo.tbBombas.IdPosto =
                                       dbo.tbAfericao.idPosto
                                       AND dbo.tbBombas.Id =
                                           dbo.tbAfericao.IdBomba
                     WHERE  ( dbo.tbBombas.IdPosto = @pIDPosto )
                        AND ( dbo.tbTanques.Id = Caixa.idObjeto )
                        AND ( dbo.tbAfericao.idCaixa BETWEEN
                              @pCaixaINI AND @pCaixaFIM )),
            0
            )                                                              AS
            Afericao
           ,ROUND(ISNULL ((SELECT AVG(dbo.tbVendasItens.PrecoVenda)
                           FROM   dbo.tbVendas
                                  INNER JOIN dbo.tbVendasItens
                                          ON dbo.tbVendas.Id =
                                             dbo.tbVendasItens.idVenda
                                  INNER JOIN dbo.tbTanques
                                          ON dbo.tbVendas.idPosto =
                                             dbo.tbTanques.IdPosto
                                  INNER JOIN dbo.tbBombas
                                          ON dbo.tbVendas.idPosto =
                                             dbo.tbBombas.IdPosto
                                             AND dbo.tbVendasItens.idBomba =
                                                 dbo.tbBombas.Id
                                             AND dbo.tbTanques.Id =
                                                 dbo.tbBombas.IdTanque
                           WHERE  ( dbo.tbVendas.idCaixa BETWEEN
                                    @pCaixaIni AND @pCaixaFim
                                  )
                           GROUP  BY dbo.tbTanques.Id
                                     ,dbo.tbTanques.IdPosto
                           HAVING ( dbo.tbTanques.Id = Caixa.idObjeto )
                                  AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0)
                  *
                         ISNULL ((SELECT SUM(dbo.tbVendasItens.Quantidade)
                                  FROM   dbo.tbVendas
                                         INNER JOIN dbo.tbVendasItens
                                                 ON dbo.tbVendas.Id =
                                                    dbo.tbVendasItens.idVenda
                                         INNER JOIN dbo.tbTanques
                                                 ON dbo.tbVendas.idPosto =
                                                    dbo.tbTanques.IdPosto
                                         INNER JOIN dbo.tbBombas
                                                 ON dbo.tbVendas.idPosto =
                                                    dbo.tbBombas.IdPosto
                                                    AND
                                         dbo.tbVendasItens.idBomba =
                                         dbo.tbBombas.Id
                                                    AND dbo.tbTanques.Id =
                                                        dbo.tbBombas.IdTanque
                                  WHERE  ( dbo.tbVendas.idCaixa BETWEEN
                                           @pCaixaIni AND @pCaixaFim
                                         )
                                     AND ( dbo.tbVendasItens.cancelado = 0 )
                                     AND ( dbo.tbvendas.Status IS NULL )
                                  GROUP  BY dbo.tbTanques.Id
                                            ,dbo.tbTanques.IdPosto
                                  HAVING ( dbo.tbTanques.Id = Caixa.idObjeto )
                                         AND ( dbo.tbTanques.IdPosto = @pIDPosto
                                             )),
                         0), 1)
                                                                          AS
            Total
           ,tbProdutos.Ordem
           ,(SELECT ValorCalculado
             FROM   tbCaixaItens
             WHERE  idCaixa = @pCaixaFIM
                AND idObjeto = Caixa.idObjeto
                AND TipoLeitura = 'T')                                     AS
            Medicao
    FROM   dbo.tbProdutosPostos
           INNER JOIN dbo.tbProdutos
                   ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbCaixa
                      INNER JOIN dbo.tbCaixaItens Caixa
                              ON dbo.tbCaixa.Id = Caixa.idCaixa
                   ON dbo.tbProdutosPostos.idPosto = dbo.tbCaixa.idPosto
           INNER JOIN dbo.tbTanques
                   ON dbo.tbProdutosPostos.idPosto = dbo.tbTanques.IdPosto
                      AND Caixa.idObjeto = dbo.tbTanques.Id
                      AND dbo.tbProdutos.Id = dbo.tbTanques.IdProduto
                      AND dbo.tbProdutosPostos.idProduto =
                          dbo.tbTanques.IdProduto
    WHERE  ( Caixa.idCaixa = @pCaixaTurnoAnt )
       AND ( Caixa.TipoLeitura = 'T' )
       AND ( dbo.tbTanques.IdPosto = @pIDPosto )
    UNION
    SELECT 20
           ,4
           ,'LB'
           ,'Lubrificantes'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbVendasItens.PrecoVenda *
                               dbo.tbVendasItens.Quantidade)
                    FROM   dbo.tbVendas
                           INNER JOIN dbo.tbVendasItens
                                   ON dbo.tbVendas.Id =
                                      dbo.tbVendasItens.idVenda
                           INNER JOIN dbo.tbProdutos
                                   ON dbo.tbVendasItens.idProduto =
                                      dbo.tbProdutos.Id
                           INNER JOIN dbo.tbProdutosPostos
                                   ON dbo.tbVendas.idPosto =
                                      dbo.tbProdutosPostos.idPosto
                                      AND dbo.tbVendasItens.idProduto =
                                          dbo.tbProdutosPostos.idProduto
                                      AND dbo.tbProdutos.Id =
                                          dbo.tbProdutosPostos.idProduto
                    WHERE  dbo.tbVendas.idPosto = @pIDPosto
                       AND ( dbo.tbVendasItens.cancelado = 0 )
                       AND ( dbo.tbvendas.Status IS NULL )
                    GROUP  BY dbo.tbProdutos.TipoProd
                              ,dbo.tbVendas.idCaixa
                    HAVING ( dbo.tbVendas.idCaixa BETWEEN
                             @pCaixaINI AND @pCaixaFIM
                           )
                           AND ( dbo.tbProdutos.TipoProd = 'LB' )), 0)
           ,21
           ,0
    UNION
    SELECT 21
           ,4
           ,'LC'
           ,'Conveniência'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbVendasItens.PrecoVenda *
                               dbo.tbVendasItens.Quantidade)
                    FROM   dbo.tbVendas
                           INNER JOIN dbo.tbVendasItens
                                   ON dbo.tbVendas.Id =
                                      dbo.tbVendasItens.idVenda
                           INNER JOIN dbo.tbProdutos
                                   ON dbo.tbVendasItens.idProduto =
                                      dbo.tbProdutos.Id
                           INNER JOIN dbo.tbProdutosPostos
                                   ON dbo.tbVendas.idPosto =
                                      dbo.tbProdutosPostos.idPosto
                                      AND dbo.tbVendasItens.idProduto =
                                          dbo.tbProdutosPostos.idProduto
                                      AND dbo.tbProdutos.Id =
                                          dbo.tbProdutosPostos.idProduto
                    WHERE  dbo.tbVendas.idPosto = @pIDPosto
                       AND ( dbo.tbVendasItens.cancelado = 0 )
                       AND ( dbo.tbvendas.Status IS NULL )
                    GROUP  BY dbo.tbProdutos.TipoProd
                              ,dbo.tbVendas.idCaixa
                    HAVING ( dbo.tbVendas.idCaixa BETWEEN
                             @pCaixaINI AND @pCaixaFIM
                           )
                           AND ( dbo.tbProdutos.TipoProd = 'LC' )), 0)
           ,22
           ,0
    UNION
    SELECT 22
           ,4
           ,'TOT'
           ,'Total Vendas'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,22
           ,0
    UNION
    SELECT 23
           ,4
           ,'DP'
           ,'Desconto Cliente Esp.'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbVendasItens.PrecoEspecial *
                                dbo.tbVendasItens.Quantidade) -
                                           SUM(dbo.tbVendasItens.PrecoVenda *
                                               dbo.tbVendasItens.Quantidade)
                    FROM   dbo.tbVendas
                           INNER JOIN dbo.tbVendasItens
                                   ON dbo.tbVendas.Id =
                                      dbo.tbVendasItens.idVenda
                           INNER JOIN dbo.tbProdutos
                                   ON dbo.tbVendasItens.idProduto =
                                      dbo.tbProdutos.Id
                           INNER JOIN dbo.tbProdutosPostos
                                   ON dbo.tbVendas.idPosto =
                                      dbo.tbProdutosPostos.idPosto
                                      AND dbo.tbVendasItens.idProduto =
                                          dbo.tbProdutosPostos.idProduto
                                      AND dbo.tbProdutos.Id =
                                          dbo.tbProdutosPostos.idProduto
                    WHERE  dbo.tbVendas.idPosto = @pIDPosto
                       AND precoEspecial > 0
                       AND tbvendasItens.cancelado = 0
                       AND tbvendas.status IS NULL
                    GROUP  BY dbo.tbProdutos.TipoProd
                              ,dbo.tbVendas.idCaixa
                    HAVING ( dbo.tbVendas.idCaixa BETWEEN
                             @pCaixaIni AND @pCAixaFim
                           )), 0)
           ,23
           ,0
    UNION
    SELECT 24
           ,4
           ,'CV'
           ,'Cheque Vista'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas
                    INNER JOIN dbo.tbVendasItensPagamento
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CV' ))
           ,24
           ,0
    UNION
    SELECT 25
           ,4
           ,'CP'
           ,'Cheque Prazo'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas
                    INNER JOIN dbo.tbVendasItensPagamento
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CP' ))
           ,25
           ,0
    UNION
    SELECT 26
           ,4
           ,'CC'
           ,'Cartão Crédito'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas
                    INNER JOIN dbo.tbVendasItensPagamento
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CC' ))
           ,26
           ,0
    UNION
    SELECT 27
           ,4
           ,'CD'
           ,'Cartão Débito'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas
                    INNER JOIN dbo.tbVendasItensPagamento
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CD' ))
           ,27
           ,0
    UNION
    SELECT 28
           ,4
           ,'PR'
           ,'Prazo'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas
                    INNER JOIN dbo.tbVendasItensPagamento
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'PR' ))
           ,28
           ,0
    UNION
    SELECT 29
           ,4
           ,'CF'
           ,'Carta Frete'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas
                    INNER JOIN dbo.tbVendasItensPagamento
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CF' ))
           ,29
           ,0
    UNION
    SELECT 30
           ,4
           ,'AF'
           ,'Troco Frete'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbCartaFrete.ValorAdiantamento)*-1 FROM
            dbo.tbCartaFrete
            INNER JOIN dbo.tbVendas ON dbo.tbCartaFrete.idVenda =
            dbo.tbVendas.Id
            WHERE
            dbo.tbVendas.idCaixa BETWEEN @pCaixaFIM AND @pCaixaFIM), 0)
            + Isnull((SELECT SUM(dbo.tbCartaFrete.ValorRetorno)*-1 FROM
            dbo.tbCartaFrete
            WHERE dbo.tbCartaFrete.idCaixaRetorno BETWEEN @pCaixaINI AND
            @pCaixaFIM)
            , 0)
           ,30
           ,0
    UNION
    SELECT 31
           ,4
           ,'RF'
           ,'Retorno Carta Frete'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbCartaFrete.ValorRetorno) *- 1
                    FROM   dbo.tbCartaFrete
                    WHERE  dbo.tbCartaFrete.idCaixaRetorno BETWEEN
                           @pCaixaINI AND @pCaixaFIM
                    ), 0)
           ,31
           ,0
    /*union  Select 32,4,'NF', 'Notas fiscais', 0,0,0,0 ,0,0,0, (Select(ISnull(Sum(dbo.tbVendasItensPagamento.Valor),0))  FROM dbo.tbVendas INNER JOIN dbo.tbVendasItensPagamento ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda  WHERE  (tbVendas.IDposto=@pIDPosto) and  (dbo.tbVendas.idCaixa between @pCaixaINI and @pCaixaFIM) AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'SD' or dbo.tbVendasItensPagamento.TipoPagamento = 'M1') ),32,0   */
    UNION
    SELECT 33
           ,4
           ,'DI'
           ,'Dinheiro'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas
                    INNER JOIN dbo.tbVendasItensPagamento
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'DI' ))
           ,33
           ,0
    UNION
    SELECT 34
           ,4
           ,'TO'
           ,'Total Vendido'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,34
           ,0
    UNION
    SELECT 35
           ,4
           ,'RT'
           ,'Retiradas'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT Sum(Valor) *- 1
                    FROM   tbRetiradas
                    WHERE  idPosto = @pIDPosto
                       AND idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM), 0)
           ,35
           ,0
    UNION
    SELECT 36
           ,5
           ,'SD'
           ,'Saldo Retirar'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,36
           ,0
    ORDER  BY tbProdutos.ordem 
GO
/****** Object:  StoredProcedure [dbo].[CaixaItensSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--CaixaItensSalva
CREATE PROCEDURE [dbo].[CaixaItensSalva] @pIDCaixa         UNIQUEIDENTIFIER
                                        ,@pTipoLeitura    CHAR(1)
                                        ,@pIDObjeto       VARCHAR(15)
                                        ,@pValorLido      FLOAT
                                        ,@pValorCalculado FLOAT
AS

	declare @id uniqueidentifier
	set @id = NEWID()
    INSERT INTO tbCaixaitens
                (id
			     ,IDCaixa
                 ,TipoLeitura
                 ,IDObjeto
                 ,ValorLido
                 ,ValorCalculado)
    VALUES     (
				@id
				,@pIDCaixa
                ,@pTipoLeitura
                ,@pIDObjeto
                ,@pValorLido
                ,@pValorCalculado) 
                
    SELECT @id 

GO
/****** Object:  StoredProcedure [dbo].[CaixaPendenteAberturaSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

		
--CaixaPendenteAberturaSeleciona
CREATE PROCEDURE [dbo].[CaixaPendenteAberturaSeleciona] @pPosto UNIQUEIDENTIFIER
AS
    SELECT dbo.tbCaixa.Id
    FROM   dbo.tbCaixa
    WHERE  
		dbo.tbCaixa.idPosto = @pPosto and 
		dbo.tbCaixa.IdEntidade = dbo.GuidEmpty() and
		dbo.tbCaixa.DataAbertura IS NULL and 
		dbo.tbCaixa.DataFechamento IS NULL 

GO
/****** Object:  StoredProcedure [dbo].[CaixaSelecionaDiaePosto]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--CaixaSelecionaDiaePosto
CREATE PROCEDURE [dbo].[CaixaSelecionaDiaePosto] @pDia    SMALLDATETIME
                                                ,@pPosto UNIQUEIDENTIFIER
AS
    SELECT TOP 1 tbCaixa.Id
                 ,tbCaixa.DataAbertura
                 ,tbEntidades.NomeUsual
                 ,tbCaixa.Dia
    FROM   tbCaixa
           INNER JOIN tbEntidades
                   ON tbCaixa.idEntidade = tbEntidades.Id
    WHERE  ( tbCaixa.Dia = @pDia )
       AND ( tbCaixa.idPosto = @pposto ) 
GO
/****** Object:  StoredProcedure [dbo].[CarregaDadosArquivoEstoque]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--CarregaDadosArquivoEstoque
CREATE PROCEDURE [dbo].[CarregaDadosArquivoEstoque] @pIdposto UNIQUEIDENTIFIER
AS
    SELECT tbProdutos.Id
           ,tbProdutos.CodigoBarras
           ,tbProdutos.Descricao
           ,tbProdutos.UnidadeMedida
           ,tbProdutos.TipoAliquota
           ,tbProdutos.Aliquota
           ,tbProdutos.IdGrupo
           ,tbProdutos.IAT
           ,tbProdutos.IPPT
           ,tbProdutos.TipoProd
           ,tbProdutos.CST
           ,tbProdutosPostos.Estoque
           ,tbProdutosPostos.PrecoVenda
           ,tbProdutosPostos.IdLocal
           ,tbProdutosPostos.Almoxarifado
           ,tbProdutos.ValidacaoProdutos
           ,tbProdutosPostos.ValidacaoEstoque
           ,tbProdutosPostos.Data
           ,tbProdutosPostos.EstoqueFimDia
           ,tbProdutosPostos.ValidacaoEstoqueFimdia
           ,tbEcfs.NumeroSerie
           ,tbEcfs.Modelo
           ,tbEcfs.MFAdicional
           ,tbEcfs.Marca
           ,tbEcfs.Tipo
           ,tbEcfs.NumeroCaixa
           ,tbEcfs.Ativo
           ,tbEcfs.ValidacaoECF
           ,tbPostos.RzSocial
           ,tbPostos.CNPJ
           ,tbPostos.IM
           ,tbPostos.IE
    FROM   tbProdutos
           INNER JOIN tbProdutosPostos
                   ON tbProdutos.Id = tbProdutosPostos.idProduto
           INNER JOIN tbEcfs
                   ON tbProdutosPostos.idPosto = tbEcfs.IDPosto
                      AND tbProdutosPostos.IDECF = tbEcfs.Id
           INNER JOIN tbPostos
                   ON tbEcfs.IDPosto = tbPostos.Id
    WHERE  ( tbProdutosPostos.idPosto = @pIdposto )
       AND ( NOT ( tbProdutos.ValidacaoProdutos IS NULL ) )
       AND ( NOT ( tbProdutosPostos.ValidacaoEstoque IS NULL ) )
    ORDER  BY tbProdutos.Descricao 
GO
/****** Object:  StoredProcedure [dbo].[CarregaValoresRelatorioGerencialEncerrantes]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--CarregaValoresRelatorioGerencialEncerrantes
CREATE PROCEDURE [dbo].[CarregaValoresRelatorioGerencialEncerrantes]
 
@pIdposto   UNIQUEIDENTIFIER
,@pNumbomba INT
,@pData     NVARCHAR(10)
,@pHora     NVARCHAR(5)
 
AS
 
    SELECT TOP (1) abas.EncerranteInicial
                   ,Abas.NumTanque
                   ,bomba.NumeroBomba
                   ,bomba.NumBomba
                   ,tbProdutos.Descricao
                   ,abas.id
                 
                   ,(SELECT TOP 1( Encerrante )
                     FROM   tbAbastecimentos
                     WHERE  ( Status = 'EMITIDO CF' )
                        AND ( NumBomba = bomba.NumBomba )
                     ORDER  BY NumAbastecimento DESC)                        AS  EncerranteFinal
                           
    FROM   tbBombas AS bomba
           INNER JOIN tbAbastecimentos AS abas
                   ON bomba.IdPosto = abas.IdPosto
                      AND bomba.Canal = abas.Canal
           INNER JOIN tbTanques
                   ON bomba.IdPosto = tbTanques.IdPosto
                      AND bomba.IdTanque = tbTanques.Id
           INNER JOIN tbProdutos
                   ON tbTanques.IdProduto = tbProdutos.Id
    WHERE  ( abas.IdPosto = @pIdPosto )
       AND ( bomba.NumBomba = @pNumbomba )
       AND ( CONVERT(DATE, abas.Data, 103) >= ( CONVERT(DATE, @pData, 103) ) )
       AND ( abas.Hora > @pHora )
    ORDER  BY Numabastecimento
GO
/****** Object:  StoredProcedure [dbo].[CartaFreteEnvioExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--CartaFreteEnvioExclui
CREATE PROCEDURE [dbo].[CartaFreteEnvioExclui] @pID UNIQUEIDENTIFIER
AS
    DELETE tbCartaFreteEnvio
    WHERE  ID = @pID 
GO
/****** Object:  StoredProcedure [dbo].[CartaFreteEnvioSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--CartaFreteEnvioSalva
CREATE PROCEDURE [dbo].[CartaFreteEnvioSalva] @pID          UNIQUEIDENTIFIER
                                             ,@pIDEntidade UNIQUEIDENTIFIER
                                             ,@pIdposto    UNIQUEIDENTIFIER
                                             ,@pData       SMALLDATETIME
                                             ,@pValor      MONEY
                                             ,@pConta      UNIQUEIDENTIFIER = NULL
AS
    IF @pID = dbo.GuidEmpty()
      BEGIN
		  SET @pID = newid()
          INSERT INTO tbCartaFreteEnvio
                      (id
                       ,idEntidade
                       ,idPosto
                       ,Data
                       ,Valor
                       ,IdContaPagamento)
          VALUES     (@pID
                      ,@pidEntidade
                      ,@pidPosto
                      ,@pData
                      ,@pValor
                      ,@pConta)

          SELECT @pID
      END
    ELSE
      BEGIN
          UPDATE tbCartaFreteEnvio
          SET    idEntidade = @pidEntidade
                 ,idPosto = @pIDposto
                 ,Data = @pData
                 ,Valor = @pValor
                 ,IdContaPagamento = @pConta
          WHERE  id = @pID

          SELECT @pid
      END 
GO
/****** Object:  StoredProcedure [dbo].[CartaFreteEnvioSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--CartaFreteEnvioSeleciona
CREATE PROCEDURE [dbo].[CartaFreteEnvioSeleciona] @pID UNIQUEIDENTIFIER
AS
    SELECT tbCartaFreteEnvio.id
           ,tbCartaFreteEnvio.idEntidade AS idEntidade
           ,RzSocial                    AS Cliente
           ,idPosto
           ,data
           ,Valor
    FROM   tbCartaFreteEnvio
           ,tbEntidades
    WHERE  tbEntidades.Id = tbCartaFreteEnvio.idENtidade AND tbCartaFreteEnvio.id = @pID
GO
/****** Object:  StoredProcedure [dbo].[CartaFreteSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

  
--CartaFreteSalva  
CREATE PROCEDURE [dbo].[CartaFreteSalva] @pIdposto             UNIQUEIDENTIFIER  
                                        ,@pNumCupom           int  
                                        ,@pIDEntidade         UNIQUEIDENTIFIER  
                                        ,@pIDCarta            VARCHAR(40)  
                                        ,@pDataEmissao        SMALLDATETIME  
                                        ,@pNumNota            VARCHAR(20)  
                                        ,@pValorLiquido       MONEY  
                                        ,@pValorAbastecimento MONEY  
                                        ,@pValorAdiantamento  MONEY  
                                        ,@pValorRetorno       MONEY  
                                        ,@pPlaca              VARCHAR(20)  
                                        ,@pMotorista          NVARCHAR(100) = NULL  
                                                           ,@pIdNotaFiscal      UNIQUEIDENTIFIER = NULL  
AS  
    DECLARE @pIDVenda UNIQUEIDENTIFIER  
 DECLARE @pID UNIQUEIDENTIFIER  
   
    IF (@pIDNotaFiscal IS NOT NULL AND @pIDNotaFiscal <> dbo.GuidEmpty())  
      BEGIN  
          SET @pIDVenda = (SELECT TOP 1 Id  
                           FROM   tbVendas  
                           WHERE  IDNotaFiscal = @pIDNotaFiscal  
                              AND idPosto = @pIDposto  
                           ORDER BY Data DESC)  
      END  
    ELSE  
      BEGIN  
          SET @pIDVenda = (SELECT TOP 1 Id  
                           FROM   tbVendas  
                           WHERE  Cupom = @pNumCupom  
                              AND idPosto = @pIDposto  
                           ORDER BY Data DESC)  
      END  
      
 SET @pID = newid()  
    INSERT INTO tbCartaFrete  
                (Id  
     ,IDPosto  
                 ,IDVenda  
                 ,IDEntidade  
                 ,IDCarta  
                 ,DataEmissao  
                 ,NumNota  
                 ,ValorLiquido  
                 ,ValorAbastecimento  
                 ,ValorAdiantamento  
                 ,ValorRetorno  
                 ,Placa  
                 ,Motorista)  
    VALUES     (@pID  
             ,@pIDPosto  
                ,@pIDVenda  
                ,@pIDEntidade  
                ,@pIDCarta  
                ,@pDataEmissao  
                ,@pNumNota  
                ,@pValorLiquido  
                ,@pValorAbastecimento  
                ,@pValorAdiantamento  
                ,@pValorRetorno  
                ,@pPlaca  
                ,@pMotorista)  
   
    INSERT INTO tbContasPagarReceber  
                (idPosto  
                 ,idTipo  
                 ,idPedCaixa  
                 ,idEntidade  
                 ,data  
                 ,idTipoDocto  
                 ,Valor  
                 ,TaxaCartao  
                 ,idVenda  
                 ,Autorizado
                 ,Placa)  
    VALUES      (@pIDPosto  
                 ,'AR'  
                 ,dbo.GuidEmpty()  
                 ,@pIDEntidade  
                 ,getdate()  
                 ,'CF'  
                 ,@pValorLiquido  
                 ,0  
                 ,@pIDVenda  
                 ,@pMotorista
                 ,@pPlaca)  
   
    IF @pValorAdiantamento > 0  
      BEGIN  
          UPDATE tbDepRet  
          SET    ret = ret - @pValorAdiantamento  
          WHERE  idPosto = @pIDposto  
      END     
   
 SELECT @pID  
 
GO
/****** Object:  StoredProcedure [dbo].[ChequeDevolvidoSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ChequeDevolvidoSeleciona
CREATE PROCEDURE [dbo].[ChequeDevolvidoSeleciona] @pIdposto UNIQUEIDENTIFIER
AS
    SELECT dbo.tbChequeSemFundo.Id         AS ID
           ,dbo.tbEntidades.RzSocial       AS Cliente
           ,dbo.tbEntidadeRefBanc.Conta1   AS Conta
           ,dbo.tbChequeSemFundo.nCheque   AS [Nº cheque]
           ,dbo.tbEntidadeRefBanc.Banco1   AS Banco
           ,dbo.tbEntidadeRefBanc.Agencia1 AS Agência
           ,dbo.tbChequeSemFundo.valor
    FROM   dbo.tbChequeSemFundo
           INNER JOIN dbo.tbEntidades
                   ON dbo.tbChequeSemFundo.idEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbEntidadeRefBanc
                   ON dbo.tbEntidades.Id = dbo.tbEntidadeRefBanc.IdEntidade
                      AND dbo.tbChequeSemFundo.idRefBancaria =
                          dbo.tbEntidadeRefBanc.Id
    WHERE  ( dbo.tbChequeSemFundo.pago = 0 )
       AND ( dbo.tbChequeSemFundo.idPosto = @pIdPosto ) 
GO
/****** Object:  StoredProcedure [dbo].[ChequeExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ChequeExclui
CREATE PROCEDURE [dbo].[ChequeExclui] @pID UNIQUEIDENTIFIER
AS
    DELETE tbCheques
    WHERE  ID = @pID 
GO
/****** Object:  StoredProcedure [dbo].[ChequeSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ChequeSalva
CREATE PROCEDURE [dbo].[ChequeSalva] @pID             UNIQUEIDENTIFIER
                                    ,@pNumero        CHAR(10)
                                    ,@pData          SMALLDATETIME
                                    ,@pvalor         FLOAT
                                    ,@pContabancaria UNIQUEIDENTIFIER
                                    ,@pNominal       VARCHAR(20)
                                    ,@pUtilizacao    VARCHAR(200)
                                    ,@pAssinatura    VARCHAR(20)
AS
    IF @pID = dbo.GuidEmpty()
      BEGIN
		  SET @pID = newid()
          INSERT INTO tbCheques
                      (Id
                       ,NumeroCheque
                       ,Data
                       ,Valor
                       ,IdContabancaria
                       ,Nominal
                       ,Utilizacao
                       ,Assinatura)
          VALUES     (@pID
                      ,@pNumero
                      ,@pData
                      ,@pValor
                      ,@pContabancaria
                      ,@pNominal
                      ,@pUtilizacao
                      ,@pAssinatura)

          SELECT @pID
      END
    ELSE
      BEGIN
          UPDATE tbCheques
          SET    NumeroCheque = @pNumero
                 ,Data = @pData
                 ,Valor = @pValor
                 ,IdContabancaria = @pContabancaria
                 ,Nominal = @pNominal
                 ,Utilizacao = @pUtilizacao
                 ,Assinatura = @pAssinatura
          WHERE  id = @pID

          SELECT @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[ChequesDetalhesSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ChequesDetalhesSeleciona
CREATE PROCEDURE [dbo].[ChequesDetalhesSeleciona] @pNumDoc VARCHAR(10)
AS
    SELECT dbo.tbCaixa.Dia
           ,CASE dbo.tbCaixa.TCaixa
              WHEN 1 THEN '14 as 22'
              WHEN 2 THEN '22 as 06'
              WHEN 3 THEN '06 as 14'
            END                                 AS Turno
           ,dbo.tbEntidades.NomeUsual
           ,dbo.tbVendas.Id
           ,dbo.tbCaixa.idPosto
           ,dbo.tbVendasItensPagamento.ContaBancaria
           ,dbo.tbVendasItensPagamento.IdEntidade AS Cliente
           ,tbEntidades_1.NomeUsual             AS DescricaoCliente
           ,dbo.tbVendasItensPagamento.Valor
           ,dbo.tbVendasItensPagamento.Id
           ,dbo.tbPostos.NomeUsual              AS Posto
           ,'Venda'                             AS Descricao
    FROM   dbo.tbVendasItensPagamento
           INNER JOIN dbo.tbVendas
                   ON dbo.tbVendasItensPagamento.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbCaixa
                   ON dbo.tbVendas.idCaixa = dbo.tbCaixa.Id
           INNER JOIN dbo.tbEntidades
                   ON dbo.tbCaixa.idEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbEntidades tbEntidades_1
                   ON dbo.tbVendasItensPagamento.IdEntidade =
                      tbEntidades_1.Id
           INNER JOIN dbo.tbPostos
                   ON dbo.tbVendas.idPosto = dbo.tbPostos.Id
    WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'CP'
              OR dbo.tbVendasItensPagamento.TipoPagamento = 'CV' )
       AND ( dbo.tbVendasItensPagamento.NumDoc LIKE '%' + @pNumDoc + '%' )
    UNION
    SELECT dbo.tbCaixa.Dia                    AS Dia
           ,CASE dbo.tbCaixa.TCaixa
              WHEN 1 THEN '14 as 22'
              WHEN 2 THEN '22 as 06'
              WHEN 3 THEN '06 as 14'
            END                               AS Turno
           ,dbo.tbEntidades.NomeUsual
           ,dbo.GuidEmpty()                   AS idVenda
           ,dbo.tbContasPagarReceber.idPosto
           ,dbo.tbContasPagarReceber.idContaBancaria AS Contabancaria
           ,tbEntidades_1.Id                  AS Cliente
           ,tbEntidades_1.NomeUsual           AS DescricaoCliente
           ,dbo.tbContasPagarReceber.Valor
           ,dbo.GuidEmpty()                   AS Linha
           ,dbo.tbPostos.NomeUsual            AS Posto
           ,'Recebimento'                     AS Descricao
    FROM   dbo.tbCaixa
           INNER JOIN dbo.tbEntidades
                   ON dbo.tbCaixa.idEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbContasPagarReceber
                   ON dbo.tbCaixa.Id = dbo.tbContasPagarReceber.idPedCaixa
           INNER JOIN dbo.tbEntidades tbEntidades_1
                   ON dbo.tbContasPagarReceber.idEntidade =
                      tbEntidades_1.Id
           INNER JOIN dbo.tbPostos
                   ON dbo.tbCaixa.idPosto = dbo.tbPostos.Id
    WHERE  ( dbo.tbContasPagarReceber.idTipo = 'RC' )
       AND ( dbo.tbContasPagarReceber.IdTipoDocto IN ( 'CV', 'CP' ) )
       AND ( dbo.tbContasPagarReceber.NumDocto LIKE '%' + @pNumDoc + '%' )
    ORDER  BY Descricao DESC
              ,Dia 
GO
/****** Object:  StoredProcedure [dbo].[ChequeSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ChequeSeleciona
CREATE PROCEDURE [dbo].[ChequeSeleciona] @pID UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbCheques
    WHERE  id = @pID 
GO
/****** Object:  StoredProcedure [dbo].[ChequeSemFundoExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ChequeSemFundoExclui
CREATE PROCEDURE [dbo].[ChequeSemFundoExclui] @pIDChequeDev UNIQUEIDENTIFIER
AS
    DELETE FROM tbChequeSemFundo
    WHERE  Id = @pIDChequeDev 
GO
/****** Object:  StoredProcedure [dbo].[ChequeSemFundoSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ChequeSemFundoSalva
CREATE PROCEDURE [dbo].[ChequeSemFundoSalva] @pIDChequeDev           UNIQUEIDENTIFIER
                                            ,@pIdposto              UNIQUEIDENTIFIER
                                            ,@pIDEntidade           UNIQUEIDENTIFIER
                                            ,@pIDRefBancaria        UNIQUEIDENTIFIER
                                            ,@pnCheque              VARCHAR(10)
                                            ,@pValor                MONEY
                                            ,@pQTD                  UNIQUEIDENTIFIER
                                            ,@pPago                 BIT
                                            ,@pDataAtualizacao      SMALLDATETIME
                                            ,@pResponsavel          UNIQUEIDENTIFIER
                                            ,@pHistoricoAtualizacao VARCHAR(50)
                                            ,@pIDContaBancaria      UNIQUEIDENTIFIER
                                            ,@pLinhaRastreamento    UNIQUEIDENTIFIER
                                            ,@pPrimeiraApresentacao BIT
                                            ,@pDataEstorno          SMALLDATETIME
                                            ,@pTipoEstorno          NVARCHAR(3)
AS
    IF @pIDChequeDev = dbo.GuidEmpty()
      BEGIN
		SET @pIDChequeDev = newid()
          INSERT INTO tbChequeSemFundo
                      (Id
                       ,idPosto
                       ,idEntidade
                       ,idRefbancaria
                       ,nCheque
                       ,Valor
                       ,pago
                       ,DataAtualizacao
                       ,IdResponsavel
                       ,IdAlinea
                       ,HistoricoAtualizacao
                       ,idContaBancaria
                       ,IdLinhaRastreamento
                       ,PrimeiraApresentacao
                       ,DataEstorno
                       ,TipoEstorno)
          VALUES     (@pIDChequeDev
                      ,@pidPosto
                      ,@pidEntidade
                      ,@pidRefbancaria
                      ,@pnCheque
                      ,@pValor
                      ,0
                      ,@pDataAtualizacao
                      ,@pResponsavel
                      ,@pQTD
                      ,@pHistoricoAtualizacao
                      ,@pIDContaBancaria
                      ,@pLinhaRastreamento
                      ,1
                      ,@pDataEstorno
                      ,@pTipoEstorno)

          SELECT @pIDChequeDev
      END
    ELSE
      BEGIN
          UPDATE tbChequeSemFundo
          SET    idPosto = @pIDPosto
                 ,idEntidade = @pidEntidade
                 ,idRefbancaria = @pidRefbancaria
                 ,nCheque = @pnCheque
                 ,Valor = @pValor
                 ,pago = @pPago
                 ,DataAtualizacao = @pDataAtualizacao
                 ,IdResponsavel = @pResponsavel
                 ,idContaBancaria = @pIDContaBancaria
                 ,IdLinhaRastreamento = @pLinhaRastreamento
                 ,HistoricoAtualizacao = @pHistoricoAtualizacao
                 ,PrimeiraApresentacao = @pPrimeiraApresentacao
                 ,IdAlinea = @pQTD
                 ,DataEstorno = @pDataEstorno
                 ,TipoEstorno = @pTipoEstorno
          WHERE  Id = @pIDChequeDev

          SELECT @pIDChequeDev
      END 
GO
/****** Object:  StoredProcedure [dbo].[ChequeSemFundoSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ChequeSemFundoSeleciona
CREATE PROCEDURE [dbo].[ChequeSemFundoSeleciona] @pIDChequeDev UNIQUEIDENTIFIER
AS
    SELECT *
           ,dbo.tbEntidades.NomeUsual AS NomeUsual
    FROM   dbo.tbChequeSemFundo
           LEFT JOIN dbo.tbEntidades
                   ON dbo.tbChequeSemFundo.idEntidade = dbo.tbEntidades.Id
    WHERE  tbChequeSemFundo.ID = @pIDChequeDev 
GO
/****** Object:  StoredProcedure [dbo].[CidadeExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--CidadeExclui
CREATE PROCEDURE [dbo].[CidadeExclui] @pID UNIQUEIDENTIFIER
AS
    DELETE tbCidades
    WHERE  id = @pID 
GO
/****** Object:  StoredProcedure [dbo].[CidadeSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--CidadeSalva
CREATE PROCEDURE [dbo].[CidadeSalva] @pOP         CHAR
                                    ,@pID        UNIQUEIDENTIFIER
                                    ,@pDescricao VARCHAR(50)
                                    ,@pUF        VARCHAR(2)
AS
    IF @pOP = 'I'
      BEGIN
          INSERT INTO tbCidades
                      (Descricao
                       ,UF)
          VALUES     (@pDescricao
                      ,@pUF)
      END
    ELSE
      BEGIN
          UPDATE tbCidades
          SET    Descricao = @pDescricao
                 ,UF = @pUF
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[CidadeSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--CidadeSeleciona
CREATE PROCEDURE [dbo].[CidadeSeleciona] @pID UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbCidades
    WHERE  ID = @pID 
GO
/****** Object:  StoredProcedure [dbo].[ColaboradoresDifCaixaSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ColaboradoresDifCaixaSalva] 
										@pIDCaixa         UNIQUEIDENTIFIER
										,@pIdPosto         UNIQUEIDENTIFIER
										,@pIdEntidade         UNIQUEIDENTIFIER
                                        ,@pDescricao    VARCHAR(150)
                                        ,@pvalor        money
                                        ,@pTipoLeitura      char(1)
                                        
AS


	declare @id uniqueidentifier
	set @id = NEWID()
    INSERT INTO [dbo].[tbColaboradoresDifCaixa]
           (id
           ,[Descricao]
           ,[valor]
           ,[Pago]
           ,[Tipo]
           ,[IdPosto]
           ,[IdEntidade]
           ,[IdCaixa])
     VALUES
           (@id
           ,@pDescricao
           ,@pvalor
           ,0 -- nao pago
           ,@pTipoLeitura
           ,@pIdPosto
           ,@pIdEntidade
           ,@pIdCaixa)
                
    SELECT @id 


GO
/****** Object:  StoredProcedure [dbo].[ColaboradorExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ColaboradorExclui
CREATE PROCEDURE [dbo].[ColaboradorExclui] @pIDEntidade UNIQUEIDENTIFIER
AS
    DELETE tbFuncs
    WHERE  idEntidade = @pIDEntidade

    DELETE FROM tbUsuariosPostos
    WHERE  idEntidade = @pIDEntidade

    DELETE FROM tbUsuarios
    WHERE  idEntidade = @pIDEntidade

    DELETE FROM tbUniformes
    WHERE  idEntidade = @pIDEntidade

    UPDATE tbEntidades
    SET    Tipo = 'CL'
           ,obs = 'Ex-funcionário'
    WHERE  Id = @pIDEntidade 
GO
/****** Object:  StoredProcedure [dbo].[ColaboradorSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ColaboradorSalva
CREATE PROCEDURE [dbo].[ColaboradorSalva] @pOP                     CHAR
                                         ,@pIDEntidade            UNIQUEIDENTIFIER
                                         ,@pIdposto               UNIQUEIDENTIFIER
                                         ,@pCTPS                  VARCHAR(20)
                                         ,@pPIS                   VARCHAR(30)
                                         ,@pTitEleitor            VARCHAR(30)
                                         ,@pFuncao                VARCHAR(40)
                                         ,@pAdmissao              SMALLDATETIME
                                         ,@pSalario               MONEY
                                         ,@pPercPericulosidade    FLOAT
                                         ,@pAdicNoturno           FLOAT
                                         ,@pQCAixa                FLOAT
                                         ,@pSalFamilia            MONEY
                                         ,@pIDHorario             UNIQUEIDENTIFIER
                                         ,@pFolguista             BIT
                                         ,@pGerente               BIT
                                         ,@pFrentista             BIT
                                         ,@pContador              BIT
                                         ,@pFerias                SMALLDATETIME
                                         ,@pAdministrativa        BIT
                                         ,@pTipoContrato          NVARCHAR(20)
                                         ,@pFrentistaCaixa        BIT = 0
                                         ,@pFrentistaCaixaNoturno BIT = 0
                                         ,@pAtendimento           BIT = 0
                                         ,@pMarketing             BIT = 0
                                         ,@pVendas                BIT = 0
                                         ,@pEstadoCivil           NVARCHAR(50)
                                         ,@pConjuge               NVARCHAR(50)
                                         ,@pNumeroCartaoIdentifid NVARCHAR(16)
AS
    IF @pOP = 'A'
      BEGIN
          UPDATE tbFuncs
          SET    idPosto = @pIDPosto
                 ,CTPS = @pCTPS
                 ,PIS = @pPIS
                 ,TitEleitor = @pTitEleitor
                 ,Funcao = @pFuncao
                 ,Admissao = @pAdmissao
                 ,Salario = @pSalario
                 ,PercPericulosidade = @pPercPericulosidade
                 ,AdicNoturno = @pAdicNoturno
                 ,QCAixa = @pQCaixa
                 ,SalFamilia = @pSalfamilia
                 ,IDHorario = @pIDHorario
                 ,Folguista = @pFolguista
                 ,Gerente = @pGerente
                 ,Frentista = @pFrentista
                 ,Contador = @pContador
                 ,Ferias = @pFerias
                 ,Administrativa = @pAdministrativa
                 ,TipoContrato = @pTipoContrato
                 ,FrentistaCaixa = @pFrentistaCaixa
                 ,FrentistaCaixaNoturno = @pFrentistaCaixaNoturno
                 ,Atendimento = @pAtendimento
                 ,Marketing = @pMarketing
                 ,Vendas = @pVendas
                 ,EstadoCivil = @pEstadoCivil
                 ,Conjuge = @pConjuge
                 ,Identifid = @pNumeroCartaoIdentifid
          WHERE  idEntidade = @piDEntidade
      END
    ELSE
      BEGIN
          INSERT INTO tbFuncs
                      (idEntidade
                       ,idPosto
                       ,CTPS
                       ,PIS
                       ,TitEleitor
                       ,Funcao
                       ,Admissao
                       ,Salario
                       ,PercPericulosidade
                       ,AdicNoturno
                       ,QCAixa
                       ,SalFamilia
                       ,IDHorario
                       ,Folguista
                       ,Gerente
                       ,Frentista
                       ,Contador
                       ,Ferias
                       ,Administrativa
                       ,TipoContrato
                       ,FrentistaCaixa
                       ,FrentistaCaixaNoturno
                       ,Atendimento
                       ,Marketing
                       ,Vendas
                       ,EstadoCivil
                       ,Conjuge
                       ,Identifid)
          VALUES      (@pIDEntidade
                       ,@pIDPosto
                       ,@pCTPS
                       ,@pPIS
                       ,@pTitEleitor
                       ,@pFuncao
                       ,@pAdmissao
                       ,@pSalario
                       ,@pPercPericulosidade
                       ,@pAdicNoturno
                       ,@pQCaixa
                       ,@pSalfamilia
                       ,@pIDHorario
                       ,@pFolguista
                       ,@pGerente
                       ,@pFrentista
                       ,@pContador
                       ,@pFerias
                       ,@pAdministrativa
                       ,@pTipoContrato
                       ,@pFrentistaCaixa
                       ,@pFrentistaCaixaNoturno
                       ,@pAtendimento
                       ,@pMarketing
                       ,@pVendas
                       ,@pEstadoCivil
                       ,@pConjuge
                       ,@pNumeroCartaoIdentifid)
      END 
      
      -- atualiza nome usuario de colaboradores
      UPDATE tbEntidades set NomeUsual = RzSocial where Id = @piDEntidade 
	  
	  
GO
/****** Object:  StoredProcedure [dbo].[ColaboradorSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ColaboradorSeleciona
CREATE PROCEDURE [dbo].[ColaboradorSeleciona] @pIDEntidade UNIQUEIDENTIFIER
AS
    SELECT *
           ,(SELECT RzSocial
             FROM   tbEntidades
             WHERE  id = @pIDEntidade) AS nome
    FROM   tbFuncs
    WHERE  IDEntidade = @pIDEntidade
GO
/****** Object:  StoredProcedure [dbo].[ConcorrenteExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ConcorrenteExclui
CREATE PROCEDURE [dbo].[ConcorrenteExclui] @pID UNIQUEIDENTIFIER
AS
    DELETE FROM tbConcorrentes
    WHERE  id = @pid

    DELETE FROM tbConcorrentesPreco
    WHERE  idConcorrente = @pID 
GO
/****** Object:  StoredProcedure [dbo].[ConcorrentePrecoExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ConcorrentePrecoExclui
CREATE PROCEDURE [dbo].[ConcorrentePrecoExclui] @pID UNIQUEIDENTIFIER
AS
    DELETE FROM tbConcorrentesPreco
    WHERE  id = @pid 
GO
/****** Object:  StoredProcedure [dbo].[ConcorrentePrecoSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ConcorrentePrecoSeleciona
CREATE PROCEDURE [dbo].[ConcorrentePrecoSeleciona] @pID UNIQUEIDENTIFIER
AS
    SELECT*
    FROM   tbConcorrentesPreco
    WHERE  id = @pid 
GO
/****** Object:  StoredProcedure [dbo].[ConcorrenteSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ConcorrenteSeleciona
CREATE PROCEDURE [dbo].[ConcorrenteSeleciona] @pID UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbConcorrentes
    WHERE  id = @pid 
GO
/****** Object:  StoredProcedure [dbo].[ContaBancariaExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ContaBancariaExclui
CREATE PROCEDURE [dbo].[ContaBancariaExclui] @pIDConta  UNIQUEIDENTIFIER
                                            ,@pIdposto UNIQUEIDENTIFIER
AS
    DELETE FROM tbContasBancarias
    WHERE  Id = @pIdConta
       AND idPosto = @pIDPosto 
GO
/****** Object:  StoredProcedure [dbo].[ContaBancariaExtrato]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ContaBancariaExtrato
CREATE PROCEDURE [dbo].[ContaBancariaExtrato] @pIDContaBancaria UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbContasPagarReceber
    WHERE  IDContaBancaria = @pIDContaBancaria 
GO
/****** Object:  StoredProcedure [dbo].[ContaBancariaSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ContaBancariaSalva
CREATE PROCEDURE [dbo].[ContaBancariaSalva] @pOP         CHAR
                                           ,@pidConta   UNIQUEIDENTIFIER
                                           ,@pIdposto   UNIQUEIDENTIFIER
                                           ,@pDescricao VARCHAR(20)
                                           ,@pBanco     VARCHAR(10)
                                           ,@pAgencia   VARCHAR(20)
                                           ,@pConta     VARCHAR(20)
                                           ,@pSaldo     MONEY
AS
    IF @pOP = 'I'
      BEGIN
          INSERT INTO tbContasBancarias
                      (idPosto
                       ,Descricao
                       ,Banco
                       ,Agencia
                       ,Conta
                       ,Saldo)
          VALUES     (@pidPosto
                      ,@pDescricao
                      ,@pBanco
                      ,@pAgencia
                      ,@pConta
                      ,@pSaldo)
      END
    ELSE
      BEGIN
          UPDATE tbContasBancarias
          SET    Descricao = @pDescricao
                 ,Banco = @pBanco
                 ,Agencia = @pAgencia
                 ,Conta = @pConta
                 ,Saldo = @pSaldo
          WHERE  Id = @pIDConta
      END 
GO
/****** Object:  StoredProcedure [dbo].[ContaBancariaSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ContaBancariaSeleciona
CREATE PROCEDURE [dbo].[ContaBancariaSeleciona] @pIdposto UNIQUEIDENTIFIER
AS
    SELECT Id
           ,Banco
           ,Descricao
           ,Agencia
           ,Conta
           ,(SELECT Sum(Valor)
             FROM   tbMovBancaria
             WHERE  idContaBancaria = tbContasBancarias.Id
                AND Conciliado = 1) AS Saldo
    FROM   tbContasBancarias
    WHERE  idPosto = @pIDPosto 
GO
/****** Object:  StoredProcedure [dbo].[ContaDespesaSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ContaDespesaSalva
CREATE PROCEDURE [dbo].[ContaDespesaSalva] @pidTipo           CHAR(2)
                                          ,@pIdposto         UNIQUEIDENTIFIER
                                          ,@pIDEntidade      UNIQUEIDENTIFIER
                                          ,@pvruDespesa      MONEY
                                          ,@pValor           MONEY
                                          ,@pidHistorico     UNIQUEIDENTIFIER
                                          ,@pInfoAdic        NVARCHAR(100)
                                          ,@pDespesa         BIT
                                          ,@pAtiva           BIT
                                          ,@pidPedCaixa      UNIQUEIDENTIFIER
                                          ,@pCodConta        INT
                                          ,@pidContaBancaria UNIQUEIDENTIFIER
                                          ,@pDataVencto      SMALLDATETIME
                                          ,@pDatapagamento   SMALLDATETIME
                                          ,@pidTipoDocto     CHAR(2)
                                          ,@pidProduto       UNIQUEIDENTIFIER
                                          ,@pDataDoc         SMALLDATETIME = NULL
                                          ,@pNumDoc          NVARCHAR(10) = NULL
AS
	DECLARE @pID uniqueidentifier
	
	SET @pID = newid()
	
    INSERT INTO tbContasPagarReceber
                (Id
				 ,idTipo
                 ,idPosto
                 ,idEntidade
                 ,vruDespesa
                 ,Valor
                 ,idHistorico
                 ,InfoAdic
                 ,Despesa
                 ,Ativa
                 ,idPedCaixa
                 ,CodConta
                 ,idContaBancaria
                 ,DataVencto
                 ,Datapagamento
                 ,idTipoDocto
                 ,idProduto
                 ,data
                 ,DataDoc
                 ,NumDocto
                 ,sincronizado)
    VALUES      (@pID
	             ,@pidTipo
                 ,@pidPosto
                 ,@pidEntidade
                 ,@pvruDespesa
                 ,@pValor
                 ,@pidHistorico
                 ,@pInfoAdic
                 ,@pDespesa
                 ,@pAtiva
                 ,@pidPedCaixa
                 ,@pCodConta
                 ,@pidContaBancaria
                 ,@pDataVencto
                 ,@pDatapagamento
                 ,@pidTipoDocto
                 ,@pidProduto
                 ,getdate()
                 ,@pDataDoc
                 ,@pNUmDoc
                 ,1)
SELECT @pID
GO
/****** Object:  StoredProcedure [dbo].[ContaPagarPaga]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ContaPagarPaga
CREATE PROCEDURE [dbo].[ContaPagarPaga] @pIDTipo           AS VARCHAR(2)
                                       ,@pIDLancamento    UNIQUEIDENTIFIER
                                       ,@pIDContaBancaria UNIQUEIDENTIFIER
                                       ,@pIDTipoDoc       VARCHAR(3)
                                       ,@pNumDocto        VARCHAR(10)
                                       ,@pDataDoc         DATETIME
                                       ,@pDataPagamento   DATETIME
                                       ,@pCodConta        INT
                                       ,@pValorOrig       MONEY
                                       ,@pJuros           MONEY
                                       ,@pDesconto        MONEY
                                       ,@pValorAtual      MONEY
AS
    UPDATE tbContasPagarReceber
    SET    idTipo = @pIDTipo
           ,idContaBancaria = @pidContabancaria
           ,idTipoDocto = @pIDTipoDoc
           ,NumDocto = @pNumDocto
           ,DataDoc = @pDataDoc
           ,DataPagamento = @pDataPagamento
           ,CodConta = @pCodConta
           ,Valor = @pValorOrig
           ,Juros = @pJuros
           ,Desconto = @pDesconto
    WHERE  Id = @pIDLancamento 
GO
/****** Object:  StoredProcedure [dbo].[ContaPagarPagaNew]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ContaPagarPagaNew
CREATE PROCEDURE [dbo].[ContaPagarPagaNew] @pIDTipo           AS VARCHAR(2)
                                          ,@pIDLancamento    UNIQUEIDENTIFIER
                                          ,@pIDContaBancaria UNIQUEIDENTIFIER
                                          ,@pIDTipoDoc       VARCHAR(3)
                                          ,@pNumDocto        VARCHAR(10)
                                          ,@pDataDoc         DATETIME
                                          ,@pDataPagamento   DATETIME
                                          ,@pCodConta        INT
                                          ,@pValorOrig       MONEY
                                          ,@pJuros           MONEY
                                          ,@pDesconto        MONEY
                                          ,@pValorAtual      MONEY
AS
    UPDATE tbContasPagarReceber
    SET    idTipo = @pIDTipo
           ,idContaBancaria = @pidContabancaria
           ,idTipoDocto = @pIDTipoDoc
           ,NumDocto = @pNumDocto
           ,DataDoc = @pDataDoc
           ,DataPagamento = @pDataPagamento
           ,CodConta = @pCodConta
           ,Juros = @pJuros
           ,Desconto = @pDesconto
    WHERE  Id = @pIDLancamento 
GO
/****** Object:  StoredProcedure [dbo].[ContaPagarSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ContaPagarSeleciona
CREATE PROCEDURE [dbo].[ContaPagarSeleciona] @pIDLancamento UNIQUEIDENTIFIER
AS
    SELECT *
           ,dbo.tbEntidades.NomeUsual  AS Pessoa1
           ,dbo.tbHistoricos.Descricao AS Historico
    FROM   dbo.tbContasPagarReceber
           INNER JOIN dbo.tbHistoricos
                   ON dbo.tbContasPagarReceber.idHistorico = dbo.tbHistoricos.Id
           INNER JOIN dbo.tbEntidades
                   ON dbo.tbContasPagarReceber.idEntidade = dbo.tbEntidades.Id
    WHERE  tbContasPagarReceber.Id = @pIDlancamento 
GO
/****** Object:  StoredProcedure [dbo].[CotacaoSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--CotacaoSalva
CREATE PROCEDURE [dbo].[CotacaoSalva] @pIDEntidade         UNIQUEIDENTIFIER
                                     ,@pGasolina          MONEY
                                     ,@pGasolinaAditivada MONEY
                                     ,@pAlcool            MONEY
                                     ,@pDiesel            MONEY
                                     ,@pDieselFiltrado    MONEY
                                     ,@pDataAlteracao     SMALLDATETIME
AS
    DECLARE @pExiste INT

    SET @pExiste = (SELECT count(idEntidade)
                    FROM   tbCotacao
                    WHERE  idEntidade = @pIDEntidade)

    IF @pExiste = 0
      BEGIN
          INSERT INTO tbCotacao
                     (IdEntidade
                      ,Gasolina
                      ,GasolinaAditivada
                      ,Alcool
                      ,Diesel
                      ,DieselFiltrado
                      ,DataAlteracao) 
          VALUES     (@pIDEntidade
                      ,@pGasolina
                      ,@pGasolinaAditivada
                      ,@pAlcool
                      ,@pDiesel
                      ,@pDieselFiltrado
                      ,@pDataAlteracao)
      END 
GO
/****** Object:  StoredProcedure [dbo].[DebitoColaboradorExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--DebitoColaboradorExclui
CREATE PROCEDURE [dbo].[DebitoColaboradorExclui] @pID UNIQUEIDENTIFIER
AS
    DELETE tbColaboradoresDifCaixa
    WHERE  id = @pID 
GO
/****** Object:  StoredProcedure [dbo].[DebitoColaboradorSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--DebitoColaboradorSalva
CREATE PROCEDURE [dbo].[DebitoColaboradorSalva] @pID          UNIQUEIDENTIFIER
                                               ,@pIDEntidade UNIQUEIDENTIFIER
                                               ,@pIdposto    UNIQUEIDENTIFIER
                                               ,@pDescricao  VARCHAR(150)
                                               ,@pIDCaixa    UNIQUEIDENTIFIER
                                               ,@pvalor      MONEY
                                               ,@pPago       BIT
                                               ,@pTipo       CHAR(1)
AS
    IF @pID = dbo.GuidEmpty()
      BEGIN
	      SET @pID = newid()
          INSERT INTO tbColaboradoresDifCaixa
                      (Id
					   ,idEntidade
                       ,idPOsto
                       ,Descricao
                       ,idCaixa
                       ,Valor
                       ,Pago
                       ,Tipo)
          VALUES     (@pID
		              ,@pIDEntidade
                      ,@pIDPosto
                      ,@pDescricao
                      ,@pIDCaixa
                      ,@pValor
                      ,@pPago
                      ,@pTipo)
		  
		  SELECT @pID
      END
    ELSE
      BEGIN
          UPDATE tbColaboradoresDifCaixa
          SET    Descricao = @pDescricao
                 ,Valor = @pValor
          WHERE  id = @pID
		  
		  SELECT @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[DebitoColaboradorSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--DebitoColaboradorSeleciona
CREATE PROCEDURE [dbo].[DebitoColaboradorSeleciona] @pID UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbColaboradoresDifCaixa
    WHERE  idEntidade = @pID
GO
/****** Object:  StoredProcedure [dbo].[DespesaExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--DespesaExclui
CREATE PROCEDURE [dbo].[DespesaExclui] @pID UNIQUEIDENTIFIER
AS
    DELETE FROM tbDespesa
    WHERE  id = @pID 
GO
/****** Object:  StoredProcedure [dbo].[DespesaItensExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--DespesaItensExclui
CREATE PROCEDURE [dbo].[DespesaItensExclui] @pID UNIQUEIDENTIFIER
AS
    DELETE FROM tbDespesaItens
    WHERE  id = @pID 
GO
/****** Object:  StoredProcedure [dbo].[DespesaItensSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--DespesaItensSalva
CREATE PROCEDURE [dbo].[DespesaItensSalva] @pID          UNIQUEIDENTIFIER
                                          ,@pIDDespesa  UNIQUEIDENTIFIER
                                          ,@pIdProduto  UNIQUEIDENTIFIER
                                          ,@pQTD        INT
                                          ,@pPrecoCusto MONEY
                                          ,@pPrecoVenda MONEY
AS
    IF @pID = dbo.GuidEmpty()
      BEGIN
	      SET @pID = newid()
          INSERT INTO tbDespesaItens
                      (Id
					   ,idDespesa
                       ,idProduto
                       ,QTD
                       ,PrecoCusto
                       ,PrecoVenda)
          VALUES     (@pID
		              ,@pidDespesa
                      ,@pidProduto
                      ,@pQTD
                      ,@pPrecoCusto
                      ,@pPrecoVenda)
      END
    ELSE
      BEGIN
          UPDATE tbDepesaItens
          SET    idProduto = @pIDProduto
                 ,QTD = @pQTD
                 ,PrecoCusto = @pPrecoCusto
                 ,PrecoVenda = @pPrecoVenda
          WHERE  ID = @pID
      END
    
    SELECT @pID	
GO
/****** Object:  StoredProcedure [dbo].[DespesaItensSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--DespesaItensSeleciona
CREATE PROCEDURE [dbo].[DespesaItensSeleciona] @pID UNIQUEIDENTIFIER
AS
    SELECT dbo.tbDespesa.IDPOSTO                                   AS idPosto
           ,dbo.tbPostos.NomeUsual                                 AS Posto
           ,dbo.tbDespesaItens.IDPRODUTO                           AS Produto
           ,dbo.tbProdutos.Descricao                               AS
            ProdutoDescricao
           ,dbo.tbDespesaItens.QTD                                 AS Quantidade
           ,dbo.tbDespesaItens.PRECOCUSTO                          AS PrecoUNP
           ,dbo.tbDespesaItens.QTD * dbo.tbDespesaItens.PRECOCUSTO AS PrecoTotal
           ,dbo.tbDespesaItens.PRECOVENDA                          AS PrecoUNF
           ,tbProdutos.Aliquota
           ,tbProdutos.TipoAliquota
    FROM   dbo.tbProdutos
           INNER JOIN dbo.tbDespesaItens
                   ON dbo.tbProdutos.Id = dbo.tbDespesaItens.IDPRODUTO
           INNER JOIN dbo.tbDespesa
                      INNER JOIN dbo.tbPostos
                              ON dbo.tbDespesa.IDPOSTO = dbo.tbPostos.Id
                   ON dbo.tbDespesaItens.IDDESPESA = dbo.tbDespesa.ID
    WHERE  ( dbo.tbDespesa.ID = @pID ) 
GO
/****** Object:  StoredProcedure [dbo].[DespesaSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--DespesaSalva
CREATE PROCEDURE [dbo].[DespesaSalva] @pID          UNIQUEIDENTIFIER
                                     ,@pIDEntidade UNIQUEIDENTIFIER
                                     ,@pIdposto    UNIQUEIDENTIFIER
                                     ,@pIDCaixa    UNIQUEIDENTIFIER
                                     ,@pValor      MONEY
AS
    IF @pID = dbo.GuidEmpty()
      BEGIN
		  SET @pID = newid()
          INSERT INTO tbDespesa
                      (Id
                       ,idEntidade
                       ,idPosto
                       ,idCaixa
                       ,Valor)
          VALUES     (@pID
                      ,@pIDEntidade
                      ,@pIDPosto
                      ,@pIDCaixa
                      ,@pValor)
      END
    ELSE
      BEGIN
          UPDATE tbDespesa
          SET    idEntidade = @pIDEntidade
                 ,Valor = @pValor
          WHERE  ID = @pID
      END

    SELECT @pID
GO
/****** Object:  StoredProcedure [dbo].[DespesaSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--DespesaSeleciona
CREATE PROCEDURE [dbo].[DespesaSeleciona] @pID UNIQUEIDENTIFIER
AS
    SELECT tbDespesa.id
           ,idPosto
           ,tbDespesa.idEntidade  AS idEntidade
           ,tbEntidades.RZSocial AS Fornecedor
           ,idCaixa
           ,Valor
    FROM   tbDespesa
           ,tbEntidades
    WHERE  tbDespesa.idEntidade = tbEntidades.Id
       AND tbDespesa.id = @pID
GO
/****** Object:  StoredProcedure [dbo].[DocumentoExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--DocumentoExclui
CREATE PROCEDURE [dbo].[DocumentoExclui] @pID UNIQUEIDENTIFIER
AS
  BEGIN
      SET nocount ON;

      DELETE FROM tbDocumentos
      WHERE  id = @pID
  END 
GO
/****** Object:  StoredProcedure [dbo].[DocumentoListaFiltro]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--DocumentoListaFiltro
CREATE PROCEDURE [dbo].[DocumentoListaFiltro] @pIdposto UNIQUEIDENTIFIER
                                             ,@pTipo   NVARCHAR(20)
                                             ,@pFiltro INT
AS
  BEGIN
      SET nocount ON;

      SELECT *
      FROM   tbDocumentos
      WHERE  idPOsto = @pIDPosto
         AND Tipo LIKE @pTipo
         AND Filtro = @pFiltro
  END 
GO
/****** Object:  StoredProcedure [dbo].[DocumentoSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--DocumentoSeleciona
CREATE PROCEDURE [dbo].[DocumentoSeleciona] @pID UNIQUEIDENTIFIER
AS
  BEGIN
      SET nocount ON;

      SELECT *
      FROM   tbDocumentos
      WHERE  id = @pID
  END 
GO
/****** Object:  StoredProcedure [dbo].[dt_addtosourcecontrol]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
create proc [dbo].[dt_addtosourcecontrol]
    @vchSourceSafeINI varchar(255) = '',
    @vchProjectName   varchar(255) ='',
    @vchComment       varchar(255) ='',
    @vchLoginName     varchar(255) ='',
    @vchPassword      varchar(255) =''

as

set nocount on

declare @iReturn int
declare @iObjectId int
select @iObjectId = 0

declare @iStreamObjectId int
select @iStreamObjectId = 0

declare @VSSGUID varchar(100)
select @VSSGUID = 'SQLVersionControl.VCS_SQL'

declare @vchDatabaseName varchar(255)
select @vchDatabaseName = db_name()

declare @iReturnValue int
select @iReturnValue = 0

declare @iPropertyObjectId int
declare @vchParentId varchar(255)

declare @iObjectCount int
select @iObjectCount = 0

    exec @iReturn = master.dbo.sp_OACreate @VSSGUID, @iObjectId OUT
    if @iReturn <> 0 GOTO E_OAError


    /* Create Project in SS */
    exec @iReturn = master.dbo.sp_OAMethod @iObjectId,
											'AddProjectToSourceSafe',
											NULL,
											@vchSourceSafeINI,
											@vchProjectName output,
											@@SERVERNAME,
											@vchDatabaseName,
											@vchLoginName,
											@vchPassword,
											@vchComment


    if @iReturn <> 0 GOTO E_OAError

    /* Set Database Properties */

    begin tran SetProperties

    /* add high level object */

    exec @iPropertyObjectId = dbo.dt_adduserobject_vcs 'VCSProjectID'

    select @vchParentId = CONVERT(varchar(255),@iPropertyObjectId)

    exec dbo.dt_setpropertybyid @iPropertyObjectId, 'VCSProjectID', @vchParentId , NULL
    exec dbo.dt_setpropertybyid @iPropertyObjectId, 'VCSProject' , @vchProjectName , NULL
    exec dbo.dt_setpropertybyid @iPropertyObjectId, 'VCSSourceSafeINI' , @vchSourceSafeINI , NULL
    exec dbo.dt_setpropertybyid @iPropertyObjectId, 'VCSSQLServer', @@SERVERNAME, NULL
    exec dbo.dt_setpropertybyid @iPropertyObjectId, 'VCSSQLDatabase', @vchDatabaseName, NULL

    if @@error <> 0 GOTO E_General_Error

    commit tran SetProperties
    
    select @iObjectCount = 0;

CleanUp:
    select @vchProjectName
    select @iObjectCount
    return

E_General_Error:
    /* this is an all or nothing.  No specific error messages */
    goto CleanUp

E_OAError:
    exec dbo.dt_displayoaerror @iObjectId, @iReturn
    goto CleanUp
GO
/****** Object:  StoredProcedure [dbo].[dt_addtosourcecontrol_u]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
create proc [dbo].[dt_addtosourcecontrol_u]
    @vchSourceSafeINI nvarchar(255) = '',
    @vchProjectName   nvarchar(255) ='',
    @vchComment       nvarchar(255) ='',
    @vchLoginName     nvarchar(255) ='',
    @vchPassword      nvarchar(255) =''

as
	-- This procedure should no longer be called;  dt_addtosourcecontrol should be called instead.
	-- Calls are forwarded to dt_addtosourcecontrol to maintain backward compatibility
	set nocount on
	exec dbo.dt_addtosourcecontrol 
		@vchSourceSafeINI, 
		@vchProjectName, 
		@vchComment, 
		@vchLoginName, 
		@vchPassword
GO
/****** Object:  StoredProcedure [dbo].[dt_adduserobject]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
**	Add an object to the dtproperties table
*/
create procedure [dbo].[dt_adduserobject]
as
	set nocount on
	/*
	** Create the user object if it does not exist already
	*/
	begin transaction
		insert dbo.dtproperties (property) VALUES ('DtgSchemaOBJECT')
		update dbo.dtproperties set objectid=@@identity 
			where id=@@identity and property='DtgSchemaOBJECT'
	commit
	return @@identity
GO
/****** Object:  StoredProcedure [dbo].[dt_adduserobject_vcs]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
create procedure [dbo].[dt_adduserobject_vcs]
    @vchProperty varchar(64)

as

set nocount on

declare @iReturn int
    /*
    ** Create the user object if it does not exist already
    */
    begin transaction
        select @iReturn = objectid from dbo.dtproperties where property = @vchProperty
        if @iReturn IS NULL
        begin
            insert dbo.dtproperties (property) VALUES (@vchProperty)
            update dbo.dtproperties set objectid=@@identity
                    where id=@@identity and property=@vchProperty
            select @iReturn = @@identity
        end
    commit
    return @iReturn
GO
/****** Object:  StoredProcedure [dbo].[dt_checkinobject]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
create proc [dbo].[dt_checkinobject]
    @chObjectType  char(4),
    @vchObjectName varchar(255),
    @vchComment    varchar(255)='',
    @vchLoginName  varchar(255),
    @vchPassword   varchar(255)='',
    @iVCSFlags     int = 0,
    @iActionFlag   int = 0,   /* 0 => AddFile, 1 => CheckIn */
    @txStream1     Text = '', /* drop stream   */ /* There is a bug that if items are NULL they do not pass to OLE servers */
    @txStream2     Text = '', /* create stream */
    @txStream3     Text = ''  /* grant stream  */


as

	set nocount on

	declare @iReturn int
	declare @iObjectId int
	select @iObjectId = 0
	declare @iStreamObjectId int

	declare @VSSGUID varchar(100)
	select @VSSGUID = 'SQLVersionControl.VCS_SQL'

	declare @iPropertyObjectId int
	select @iPropertyObjectId  = 0

    select @iPropertyObjectId = (select objectid from dbo.dtproperties where property = 'VCSProjectID')

    declare @vchProjectName   varchar(255)
    declare @vchSourceSafeINI varchar(255)
    declare @vchServerName    varchar(255)
    declare @vchDatabaseName  varchar(255)
    declare @iReturnValue	  int
    declare @pos			  int
    declare @vchProcLinePiece varchar(255)

    
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSProject',       @vchProjectName   OUT
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSourceSafeINI', @vchSourceSafeINI OUT
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSQLServer',     @vchServerName    OUT
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSQLDatabase',   @vchDatabaseName  OUT

    if @chObjectType = 'PROC'
    begin
        if @iActionFlag = 1
        begin
            /* Procedure Can have up to three streams
            Drop Stream, Create Stream, GRANT stream */

            begin tran compile_all

            /* try to compile the streams */
            exec (@txStream1)
            if @@error <> 0 GOTO E_Compile_Fail

            exec (@txStream2)
            if @@error <> 0 GOTO E_Compile_Fail

            exec (@txStream3)
            if @@error <> 0 GOTO E_Compile_Fail
        end

        exec @iReturn = master.dbo.sp_OACreate @VSSGUID, @iObjectId OUT
        if @iReturn <> 0 GOTO E_OAError

        exec @iReturn = master.dbo.sp_OAGetProperty @iObjectId, 'GetStreamObject', @iStreamObjectId OUT
        if @iReturn <> 0 GOTO E_OAError
        
        if @iActionFlag = 1
        begin
            
            declare @iStreamLength int
			
			select @pos=1
			select @iStreamLength = datalength(@txStream2)
			
			if @iStreamLength > 0
			begin
			
				while @pos < @iStreamLength
				begin
						
					select @vchProcLinePiece = substring(@txStream2, @pos, 255)
					
					exec @iReturn = master.dbo.sp_OAMethod @iStreamObjectId, 'AddStream', @iReturnValue OUT, @vchProcLinePiece
            		if @iReturn <> 0 GOTO E_OAError
            		
					select @pos = @pos + 255
					
				end
            
				exec @iReturn = master.dbo.sp_OAMethod @iObjectId,
														'CheckIn_StoredProcedure',
														NULL,
														@sProjectName = @vchProjectName,
														@sSourceSafeINI = @vchSourceSafeINI,
														@sServerName = @vchServerName,
														@sDatabaseName = @vchDatabaseName,
														@sObjectName = @vchObjectName,
														@sComment = @vchComment,
														@sLoginName = @vchLoginName,
														@sPassword = @vchPassword,
														@iVCSFlags = @iVCSFlags,
														@iActionFlag = @iActionFlag,
														@sStream = ''
                                        
			end
        end
        else
        begin
        
            select colid, text into #ProcLines
            from syscomments
            where id = object_id(@vchObjectName)
            order by colid

            declare @iCurProcLine int
            declare @iProcLines int
            select @iCurProcLine = 1
            select @iProcLines = (select count(*) from #ProcLines)
            while @iCurProcLine <= @iProcLines
            begin
                select @pos = 1
                declare @iCurLineSize int
                select @iCurLineSize = len((select text from #ProcLines where colid = @iCurProcLine))
                while @pos <= @iCurLineSize
                begin                
                    select @vchProcLinePiece = convert(varchar(255),
                        substring((select text from #ProcLines where colid = @iCurProcLine),
                                  @pos, 255 ))
                    exec @iReturn = master.dbo.sp_OAMethod @iStreamObjectId, 'AddStream', @iReturnValue OUT, @vchProcLinePiece
                    if @iReturn <> 0 GOTO E_OAError
                    select @pos = @pos + 255                  
                end
                select @iCurProcLine = @iCurProcLine + 1
            end
            drop table #ProcLines

            exec @iReturn = master.dbo.sp_OAMethod @iObjectId,
													'CheckIn_StoredProcedure',
													NULL,
													@sProjectName = @vchProjectName,
													@sSourceSafeINI = @vchSourceSafeINI,
													@sServerName = @vchServerName,
													@sDatabaseName = @vchDatabaseName,
													@sObjectName = @vchObjectName,
													@sComment = @vchComment,
													@sLoginName = @vchLoginName,
													@sPassword = @vchPassword,
													@iVCSFlags = @iVCSFlags,
													@iActionFlag = @iActionFlag,
													@sStream = ''
        end

        if @iReturn <> 0 GOTO E_OAError

        if @iActionFlag = 1
        begin
            commit tran compile_all
            if @@error <> 0 GOTO E_Compile_Fail
        end

    end

CleanUp:
	return

E_Compile_Fail:
	declare @lerror int
	select @lerror = @@error
	rollback tran compile_all
	RAISERROR (@lerror,16,-1)
	goto CleanUp

E_OAError:
	if @iActionFlag = 1 rollback tran compile_all
	exec dbo.dt_displayoaerror @iObjectId, @iReturn
	goto CleanUp
GO
/****** Object:  StoredProcedure [dbo].[dt_checkinobject_u]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
create proc [dbo].[dt_checkinobject_u]
    @chObjectType  char(4),
    @vchObjectName nvarchar(255),
    @vchComment    nvarchar(255)='',
    @vchLoginName  nvarchar(255),
    @vchPassword   nvarchar(255)='',
    @iVCSFlags     int = 0,
    @iActionFlag   int = 0,   /* 0 => AddFile, 1 => CheckIn */
    @txStream1     text = '',  /* drop stream   */ /* There is a bug that if items are NULL they do not pass to OLE servers */
    @txStream2     text = '',  /* create stream */
    @txStream3     text = ''   /* grant stream  */

as	
	-- This procedure should no longer be called;  dt_checkinobject should be called instead.
	-- Calls are forwarded to dt_checkinobject to maintain backward compatibility.
	set nocount on
	exec dbo.dt_checkinobject
		@chObjectType,
		@vchObjectName,
		@vchComment,
		@vchLoginName,
		@vchPassword,
		@iVCSFlags,
		@iActionFlag,   
		@txStream1,		
		@txStream2,		
		@txStream3
GO
/****** Object:  StoredProcedure [dbo].[dt_checkoutobject]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
create proc [dbo].[dt_checkoutobject]
    @chObjectType  char(4),
    @vchObjectName varchar(255),
    @vchComment    varchar(255),
    @vchLoginName  varchar(255),
    @vchPassword   varchar(255),
    @iVCSFlags     int = 0,
    @iActionFlag   int = 0/* 0 => Checkout, 1 => GetLatest, 2 => UndoCheckOut */

as

	set nocount on

	declare @iReturn int
	declare @iObjectId int
	select @iObjectId =0

	declare @VSSGUID varchar(100)
	select @VSSGUID = 'SQLVersionControl.VCS_SQL'

	declare @iReturnValue int
	select @iReturnValue = 0

	declare @vchTempText varchar(255)

	/* this is for our strings */
	declare @iStreamObjectId int
	select @iStreamObjectId = 0

    declare @iPropertyObjectId int
    select @iPropertyObjectId = (select objectid from dbo.dtproperties where property = 'VCSProjectID')

    declare @vchProjectName   varchar(255)
    declare @vchSourceSafeINI varchar(255)
    declare @vchServerName    varchar(255)
    declare @vchDatabaseName  varchar(255)
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSProject',       @vchProjectName   OUT
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSourceSafeINI', @vchSourceSafeINI OUT
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSQLServer',     @vchServerName    OUT
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSQLDatabase',   @vchDatabaseName  OUT

    if @chObjectType = 'PROC'
    begin
        /* Procedure Can have up to three streams
           Drop Stream, Create Stream, GRANT stream */

        exec @iReturn = master.dbo.sp_OACreate @VSSGUID, @iObjectId OUT

        if @iReturn <> 0 GOTO E_OAError

        exec @iReturn = master.dbo.sp_OAMethod @iObjectId,
												'CheckOut_StoredProcedure',
												NULL,
												@sProjectName = @vchProjectName,
												@sSourceSafeINI = @vchSourceSafeINI,
												@sObjectName = @vchObjectName,
												@sServerName = @vchServerName,
												@sDatabaseName = @vchDatabaseName,
												@sComment = @vchComment,
												@sLoginName = @vchLoginName,
												@sPassword = @vchPassword,
												@iVCSFlags = @iVCSFlags,
												@iActionFlag = @iActionFlag

        if @iReturn <> 0 GOTO E_OAError


        exec @iReturn = master.dbo.sp_OAGetProperty @iObjectId, 'GetStreamObject', @iStreamObjectId OUT

        if @iReturn <> 0 GOTO E_OAError

        create table #commenttext (id int identity, sourcecode varchar(255))


        select @vchTempText = 'STUB'
        while @vchTempText is not null
        begin
            exec @iReturn = master.dbo.sp_OAMethod @iStreamObjectId, 'GetStream', @iReturnValue OUT, @vchTempText OUT
            if @iReturn <> 0 GOTO E_OAError
            
            if (@vchTempText = '') set @vchTempText = null
            if (@vchTempText is not null) insert into #commenttext (sourcecode) select @vchTempText
        end

        select 'VCS'=sourcecode from #commenttext order by id
        select 'SQL'=text from syscomments where id = object_id(@vchObjectName) order by colid

    end

CleanUp:
    return

E_OAError:
    exec dbo.dt_displayoaerror @iObjectId, @iReturn
    GOTO CleanUp
GO
/****** Object:  StoredProcedure [dbo].[dt_checkoutobject_u]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
create proc [dbo].[dt_checkoutobject_u]
    @chObjectType  char(4),
    @vchObjectName nvarchar(255),
    @vchComment    nvarchar(255),
    @vchLoginName  nvarchar(255),
    @vchPassword   nvarchar(255),
    @iVCSFlags     int = 0,
    @iActionFlag   int = 0/* 0 => Checkout, 1 => GetLatest, 2 => UndoCheckOut */

as

	-- This procedure should no longer be called;  dt_checkoutobject should be called instead.
	-- Calls are forwarded to dt_checkoutobject to maintain backward compatibility.
	set nocount on
	exec dbo.dt_checkoutobject
		@chObjectType,  
		@vchObjectName, 
		@vchComment,    
		@vchLoginName,  
		@vchPassword,  
		@iVCSFlags,    
		@iActionFlag
GO
/****** Object:  StoredProcedure [dbo].[dt_displayoaerror]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[dt_displayoaerror]
    @iObject int,
    @iresult int
as

set nocount on

declare @vchOutput      varchar(255)
declare @hr             int
declare @vchSource      varchar(255)
declare @vchDescription varchar(255)

    exec @hr = master.dbo.sp_OAGetErrorInfo @iObject, @vchSource OUT, @vchDescription OUT

    select @vchOutput = @vchSource + ': ' + @vchDescription
    raiserror (@vchOutput,16,-1)

    return
GO
/****** Object:  StoredProcedure [dbo].[dt_displayoaerror_u]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE PROCEDURE [dbo].[dt_displayoaerror_u]
    @iObject int,
    @iresult int
as
	-- This procedure should no longer be called;  dt_displayoaerror should be called instead.
	-- Calls are forwarded to dt_displayoaerror to maintain backward compatibility.
	set nocount on
	exec dbo.dt_displayoaerror
		@iObject,
		@iresult
GO
/****** Object:  StoredProcedure [dbo].[dt_droppropertiesbyid]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
**	Drop one or all the associated properties of an object or an attribute 
**
**	dt_dropproperties objid, null or '' -- drop all properties of the object itself
**	dt_dropproperties objid, property -- drop the property
*/
create procedure [dbo].[dt_droppropertiesbyid]
	@id int,
	@property varchar(64)
as
	set nocount on

	if (@property is null) or (@property = '')
		delete from dbo.dtproperties where objectid=@id
	else
		delete from dbo.dtproperties 
			where objectid=@id and property=@property
GO
/****** Object:  StoredProcedure [dbo].[dt_dropuserobjectbyid]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
**	Drop an object from the dbo.dtproperties table
*/
create procedure [dbo].[dt_dropuserobjectbyid]
	@id int
as
	set nocount on
	delete from dbo.dtproperties where objectid=@id
GO
/****** Object:  StoredProcedure [dbo].[dt_generateansiname]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/* 
**	Generate an ansi name that is unique in the dtproperties.value column 
*/ 
create procedure [dbo].[dt_generateansiname](@name varchar(255) output) 
as 
	declare @prologue varchar(20) 
	declare @indexstring varchar(20) 
	declare @index integer 
 
	set @prologue = 'MSDT-A-' 
	set @index = 1 
 
	while 1 = 1 
	begin 
		set @indexstring = cast(@index as varchar(20)) 
		set @name = @prologue + @indexstring 
		if not exists (select value from dtproperties where value = @name) 
			break 
		 
		set @index = @index + 1 
 
		if (@index = 10000) 
			goto TooMany 
	end 
 
Leave: 
 
	return 
 
TooMany: 
 
	set @name = 'DIAGRAM' 
	goto Leave
GO
/****** Object:  StoredProcedure [dbo].[dt_getobjwithprop]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
**	Retrieve the owner object(s) of a given property
*/
create procedure [dbo].[dt_getobjwithprop]
	@property varchar(30),
	@value varchar(255)
as
	set nocount on

	if (@property is null) or (@property = '')
	begin
		raiserror('Must specify a property name.',-1,-1)
		return (1)
	end

	if (@value is null)
		select objectid id from dbo.dtproperties
			where property=@property

	else
		select objectid id from dbo.dtproperties
			where property=@property and value=@value
GO
/****** Object:  StoredProcedure [dbo].[dt_getobjwithprop_u]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
**	Retrieve the owner object(s) of a given property
*/
create procedure [dbo].[dt_getobjwithprop_u]
	@property varchar(30),
	@uvalue nvarchar(255)
as
	set nocount on

	if (@property is null) or (@property = '')
	begin
		raiserror('Must specify a property name.',-1,-1)
		return (1)
	end

	if (@uvalue is null)
		select objectid id from dbo.dtproperties
			where property=@property

	else
		select objectid id from dbo.dtproperties
			where property=@property and uvalue=@uvalue
GO
/****** Object:  StoredProcedure [dbo].[dt_getpropertiesbyid]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
**	Retrieve properties by id's
**
**	dt_getproperties objid, null or '' -- retrieve all properties of the object itself
**	dt_getproperties objid, property -- retrieve the property specified
*/
create procedure [dbo].[dt_getpropertiesbyid]
	@id int,
	@property varchar(64)
as
	set nocount on

	if (@property is null) or (@property = '')
		select property, version, value, lvalue
			from dbo.dtproperties
			where  @id=objectid
	else
		select property, version, value, lvalue
			from dbo.dtproperties
			where  @id=objectid and @property=property
GO
/****** Object:  StoredProcedure [dbo].[dt_getpropertiesbyid_u]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
**	Retrieve properties by id's
**
**	dt_getproperties objid, null or '' -- retrieve all properties of the object itself
**	dt_getproperties objid, property -- retrieve the property specified
*/
create procedure [dbo].[dt_getpropertiesbyid_u]
	@id int,
	@property varchar(64)
as
	set nocount on

	if (@property is null) or (@property = '')
		select property, version, uvalue, lvalue
			from dbo.dtproperties
			where  @id=objectid
	else
		select property, version, uvalue, lvalue
			from dbo.dtproperties
			where  @id=objectid and @property=property
GO
/****** Object:  StoredProcedure [dbo].[dt_getpropertiesbyid_vcs]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
create procedure [dbo].[dt_getpropertiesbyid_vcs]
    @id       int,
    @property varchar(64),
    @value    varchar(255) = NULL OUT

as

    set nocount on

    select @value = (
        select value
                from dbo.dtproperties
                where @id=objectid and @property=property
                )
GO
/****** Object:  StoredProcedure [dbo].[dt_getpropertiesbyid_vcs_u]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
create procedure [dbo].[dt_getpropertiesbyid_vcs_u]
    @id       int,
    @property varchar(64),
    @value    nvarchar(255) = NULL OUT

as

    -- This procedure should no longer be called;  dt_getpropertiesbyid_vcsshould be called instead.
	-- Calls are forwarded to dt_getpropertiesbyid_vcs to maintain backward compatibility.
	set nocount on
    exec dbo.dt_getpropertiesbyid_vcs
		@id,
		@property,
		@value output
GO
/****** Object:  StoredProcedure [dbo].[dt_isundersourcecontrol]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
create proc [dbo].[dt_isundersourcecontrol]
    @vchLoginName varchar(255) = '',
    @vchPassword  varchar(255) = '',
    @iWhoToo      int = 0 /* 0 => Just check project; 1 => get list of objs */

as

	set nocount on

	declare @iReturn int
	declare @iObjectId int
	select @iObjectId = 0

	declare @VSSGUID varchar(100)
	select @VSSGUID = 'SQLVersionControl.VCS_SQL'

	declare @iReturnValue int
	select @iReturnValue = 0

	declare @iStreamObjectId int
	select @iStreamObjectId   = 0

	declare @vchTempText varchar(255)

    declare @iPropertyObjectId int
    select @iPropertyObjectId = (select objectid from dbo.dtproperties where property = 'VCSProjectID')

    declare @vchProjectName   varchar(255)
    declare @vchSourceSafeINI varchar(255)
    declare @vchServerName    varchar(255)
    declare @vchDatabaseName  varchar(255)
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSProject',       @vchProjectName   OUT
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSourceSafeINI', @vchSourceSafeINI OUT
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSQLServer',     @vchServerName    OUT
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSQLDatabase',   @vchDatabaseName  OUT

    if (@vchProjectName = '')	set @vchProjectName		= null
    if (@vchSourceSafeINI = '') set @vchSourceSafeINI	= null
    if (@vchServerName = '')	set @vchServerName		= null
    if (@vchDatabaseName = '')	set @vchDatabaseName	= null
    
    if (@vchProjectName is null) or (@vchSourceSafeINI is null) or (@vchServerName is null) or (@vchDatabaseName is null)
    begin
        RAISERROR('Not Under Source Control',16,-1)
        return
    end

    if @iWhoToo = 1
    begin

        /* Get List of Procs in the project */
        exec @iReturn = master.dbo.sp_OACreate @VSSGUID, @iObjectId OUT
        if @iReturn <> 0 GOTO E_OAError

        exec @iReturn = master.dbo.sp_OAMethod @iObjectId,
												'GetListOfObjects',
												NULL,
												@vchProjectName,
												@vchSourceSafeINI,
												@vchServerName,
												@vchDatabaseName,
												@vchLoginName,
												@vchPassword

        if @iReturn <> 0 GOTO E_OAError

        exec @iReturn = master.dbo.sp_OAGetProperty @iObjectId, 'GetStreamObject', @iStreamObjectId OUT

        if @iReturn <> 0 GOTO E_OAError

        create table #ObjectList (id int identity, vchObjectlist varchar(255))

        select @vchTempText = 'STUB'
        while @vchTempText is not null
        begin
            exec @iReturn = master.dbo.sp_OAMethod @iStreamObjectId, 'GetStream', @iReturnValue OUT, @vchTempText OUT
            if @iReturn <> 0 GOTO E_OAError
            
            if (@vchTempText = '') set @vchTempText = null
            if (@vchTempText is not null) insert into #ObjectList (vchObjectlist ) select @vchTempText
        end

        select vchObjectlist from #ObjectList order by id
    end

CleanUp:
    return

E_OAError:
    exec dbo.dt_displayoaerror @iObjectId, @iReturn
    goto CleanUp
GO
/****** Object:  StoredProcedure [dbo].[dt_isundersourcecontrol_u]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
create proc [dbo].[dt_isundersourcecontrol_u]
    @vchLoginName nvarchar(255) = '',
    @vchPassword  nvarchar(255) = '',
    @iWhoToo      int = 0 /* 0 => Just check project; 1 => get list of objs */

as
	-- This procedure should no longer be called;  dt_isundersourcecontrol should be called instead.
	-- Calls are forwarded to dt_isundersourcecontrol to maintain backward compatibility.
	set nocount on
	exec dbo.dt_isundersourcecontrol
		@vchLoginName,
		@vchPassword,
		@iWhoToo
GO
/****** Object:  StoredProcedure [dbo].[dt_removefromsourcecontrol]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
create procedure [dbo].[dt_removefromsourcecontrol]

as

    set nocount on

    declare @iPropertyObjectId int
    select @iPropertyObjectId = (select objectid from dbo.dtproperties where property = 'VCSProjectID')

    exec dbo.dt_droppropertiesbyid @iPropertyObjectId, null

    /* -1 is returned by dt_droppopertiesbyid */
    if @@error <> 0 and @@error <> -1 return 1

    return 0
GO
/****** Object:  StoredProcedure [dbo].[dt_setpropertybyid]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
**	If the property already exists, reset the value; otherwise add property
**		id -- the id in sysobjects of the object
**		property -- the name of the property
**		value -- the text value of the property
**		lvalue -- the binary value of the property (image)
*/
create procedure [dbo].[dt_setpropertybyid]
	@id int,
	@property varchar(64),
	@value varchar(255),
	@lvalue image
as
	set nocount on
	declare @uvalue nvarchar(255) 
	set @uvalue = convert(nvarchar(255), @value) 
	if exists (select * from dbo.dtproperties 
			where objectid=@id and property=@property)
	begin
		--
		-- bump the version count for this row as we update it
		--
		update dbo.dtproperties set value=@value, uvalue=@uvalue, lvalue=@lvalue, version=version+1
			where objectid=@id and property=@property
	end
	else
	begin
		--
		-- version count is auto-set to 0 on initial insert
		--
		insert dbo.dtproperties (property, objectid, value, uvalue, lvalue)
			values (@property, @id, @value, @uvalue, @lvalue)
	end
GO
/****** Object:  StoredProcedure [dbo].[dt_setpropertybyid_u]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
**	If the property already exists, reset the value; otherwise add property
**		id -- the id in sysobjects of the object
**		property -- the name of the property
**		uvalue -- the text value of the property
**		lvalue -- the binary value of the property (image)
*/
create procedure [dbo].[dt_setpropertybyid_u]
	@id int,
	@property varchar(64),
	@uvalue nvarchar(255),
	@lvalue image
as
	set nocount on
	-- 
	-- If we are writing the name property, find the ansi equivalent. 
	-- If there is no lossless translation, generate an ansi name. 
	-- 
	declare @avalue varchar(255) 
	set @avalue = null 
	if (@uvalue is not null) 
	begin 
		if (convert(nvarchar(255), convert(varchar(255), @uvalue)) = @uvalue) 
		begin 
			set @avalue = convert(varchar(255), @uvalue) 
		end 
		else 
		begin 
			if 'DtgSchemaNAME' = @property 
			begin 
				exec dbo.dt_generateansiname @avalue output 
			end 
		end 
	end 
	if exists (select * from dbo.dtproperties 
			where objectid=@id and property=@property)
	begin
		--
		-- bump the version count for this row as we update it
		--
		update dbo.dtproperties set value=@avalue, uvalue=@uvalue, lvalue=@lvalue, version=version+1
			where objectid=@id and property=@property
	end
	else
	begin
		--
		-- version count is auto-set to 0 on initial insert
		--
		insert dbo.dtproperties (property, objectid, value, uvalue, lvalue)
			values (@property, @id, @avalue, @uvalue, @lvalue)
	end
GO
/****** Object:  StoredProcedure [dbo].[dt_validateloginparams]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
create proc [dbo].[dt_validateloginparams]
    @vchLoginName  varchar(255),
    @vchPassword   varchar(255)
as

set nocount on

declare @iReturn int
declare @iObjectId int
select @iObjectId =0

declare @VSSGUID varchar(100)
select @VSSGUID = 'SQLVersionControl.VCS_SQL'

    declare @iPropertyObjectId int
    select @iPropertyObjectId = (select objectid from dbo.dtproperties where property = 'VCSProjectID')

    declare @vchSourceSafeINI varchar(255)
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSourceSafeINI', @vchSourceSafeINI OUT

    exec @iReturn = master.dbo.sp_OACreate @VSSGUID, @iObjectId OUT
    if @iReturn <> 0 GOTO E_OAError

    exec @iReturn = master.dbo.sp_OAMethod @iObjectId,
											'ValidateLoginParams',
											NULL,
											@sSourceSafeINI = @vchSourceSafeINI,
											@sLoginName = @vchLoginName,
											@sPassword = @vchPassword
    if @iReturn <> 0 GOTO E_OAError

CleanUp:
    return

E_OAError:
    exec dbo.dt_displayoaerror @iObjectId, @iReturn
    GOTO CleanUp
GO
/****** Object:  StoredProcedure [dbo].[dt_validateloginparams_u]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
create proc [dbo].[dt_validateloginparams_u]
    @vchLoginName  nvarchar(255),
    @vchPassword   nvarchar(255)
as

	-- This procedure should no longer be called;  dt_validateloginparams should be called instead.
	-- Calls are forwarded to dt_validateloginparams to maintain backward compatibility.
	set nocount on
	exec dbo.dt_validateloginparams
		@vchLoginName,
		@vchPassword
GO
/****** Object:  StoredProcedure [dbo].[dt_vcsenabled]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
create proc [dbo].[dt_vcsenabled]

as

set nocount on

declare @iObjectId int
select @iObjectId = 0

declare @VSSGUID varchar(100)
select @VSSGUID = 'SQLVersionControl.VCS_SQL'

    declare @iReturn int
    exec @iReturn = master.dbo.sp_OACreate @VSSGUID, @iObjectId OUT
    if @iReturn <> 0 raiserror('', 16, -1) /* Can't Load Helper DLLC */
GO
/****** Object:  StoredProcedure [dbo].[dt_verstamp006]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
**	This procedure returns the version number of the stored
**    procedures used by legacy versions of the Microsoft
**	Visual Database Tools.  Version is 7.0.00.
*/
create procedure [dbo].[dt_verstamp006]
as
	select 7000
GO
/****** Object:  StoredProcedure [dbo].[dt_verstamp007]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
/*
**	This procedure returns the version number of the stored
**    procedures used by the the Microsoft Visual Database Tools.
**	Version is 7.0.05.
*/
create procedure [dbo].[dt_verstamp007]
as
	select 7005
GO
/****** Object:  StoredProcedure [dbo].[dt_whocheckedout]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
create proc [dbo].[dt_whocheckedout]
        @chObjectType  char(4),
        @vchObjectName varchar(255),
        @vchLoginName  varchar(255),
        @vchPassword   varchar(255)

as

set nocount on

declare @iReturn int
declare @iObjectId int
select @iObjectId =0

declare @VSSGUID varchar(100)
select @VSSGUID = 'SQLVersionControl.VCS_SQL'

    declare @iPropertyObjectId int

    select @iPropertyObjectId = (select objectid from dbo.dtproperties where property = 'VCSProjectID')

    declare @vchProjectName   varchar(255)
    declare @vchSourceSafeINI varchar(255)
    declare @vchServerName    varchar(255)
    declare @vchDatabaseName  varchar(255)
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSProject',       @vchProjectName   OUT
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSourceSafeINI', @vchSourceSafeINI OUT
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSQLServer',     @vchServerName    OUT
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSQLDatabase',   @vchDatabaseName  OUT

    if @chObjectType = 'PROC'
    begin
        exec @iReturn = master.dbo.sp_OACreate @VSSGUID, @iObjectId OUT

        if @iReturn <> 0 GOTO E_OAError

        declare @vchReturnValue varchar(255)
        select @vchReturnValue = ''

        exec @iReturn = master.dbo.sp_OAMethod @iObjectId,
												'WhoCheckedOut',
												@vchReturnValue OUT,
												@sProjectName = @vchProjectName,
												@sSourceSafeINI = @vchSourceSafeINI,
												@sObjectName = @vchObjectName,
												@sServerName = @vchServerName,
												@sDatabaseName = @vchDatabaseName,
												@sLoginName = @vchLoginName,
												@sPassword = @vchPassword

        if @iReturn <> 0 GOTO E_OAError

        select @vchReturnValue

    end

CleanUp:
    return

E_OAError:
    exec dbo.dt_displayoaerror @iObjectId, @iReturn
    GOTO CleanUp
GO
/****** Object:  StoredProcedure [dbo].[dt_whocheckedout_u]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
create proc [dbo].[dt_whocheckedout_u]
        @chObjectType  char(4),
        @vchObjectName nvarchar(255),
        @vchLoginName  nvarchar(255),
        @vchPassword   nvarchar(255)

as

	-- This procedure should no longer be called;  dt_whocheckedout should be called instead.
	-- Calls are forwarded to dt_whocheckedout to maintain backward compatibility.
	set nocount on
	exec dbo.dt_whocheckedout
		@chObjectType, 
		@vchObjectName,
		@vchLoginName, 
		@vchPassword
GO
/****** Object:  StoredProcedure [dbo].[EntidadeSelecionaCPF]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--EntidadeSelecionaCPF
CREATE PROCEDURE [dbo].[EntidadeSelecionaCPF] @pDOC VARCHAR(20)
AS
    SELECT dbo.tbEntidadeRefBanc.Banco1
           ,dbo.tbEntidadeRefBanc.Agencia1
           ,dbo.tbEntidadeRefBanc.Conta1
           ,dbo.tbEntidadeRefBanc.FoneBanco1
           ,dbo.tbEntidadeRefBanc.ContatoBanco1
           ,dbo.tbEntidadeRefBanc.ContaDesde1
    FROM   dbo.tbEntidades
           INNER JOIN dbo.tbEntidadeRefBanc
                   ON dbo.tbEntidades.Id = dbo.tbEntidadeRefBanc.IdEntidade
    WHERE  ( dbo.tbEntidades.CNPJ = @pDOC ) 
GO
/****** Object:  StoredProcedure [dbo].[EntidadeSelecionaDOC]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--EntidadeSelecionaDOC
CREATE PROCEDURE [dbo].[EntidadeSelecionaDOC] @pDOC VARCHAR(20)
AS
    SELECT Id AS idEntidade
    FROM   dbo.tbEntidades
    WHERE  CNPJ = @pDOC 
GO
/****** Object:  StoredProcedure [dbo].[EquipamentoExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--EquipamentoExclui
CREATE PROCEDURE [dbo].[EquipamentoExclui] @pIDEquipamento UNIQUEIDENTIFIER
AS
    DELETE tbEquipamentos
    WHERE  id = @pIDEquipamento 
GO
/****** Object:  StoredProcedure [dbo].[EquipamentoPostoExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--EquipamentoPostoExclui
CREATE PROCEDURE [dbo].[EquipamentoPostoExclui] @pIDEquipamentoPosto UNIQUEIDENTIFIER
AS
    DELETE tbEquipamentoPostos
    WHERE  id = @pIDEquipamentoPosto 
GO
/****** Object:  StoredProcedure [dbo].[EquipamentoPostoSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--EquipamentoPostoSalva
CREATE PROCEDURE [dbo].[EquipamentoPostoSalva] @pOP                  CHAR
                                              ,@pIDEquipamentoPosto UNIQUEIDENTIFIER
                                              ,@pIDEquipamento      UNIQUEIDENTIFIER
                                              ,@pNumero             INT
                                              ,@pPosto              UNIQUEIDENTIFIER
                                              ,@pStatus             INT
                                              ,@pObs                VARCHAR(200)
                                              ,@pValor              MONEY
AS
    IF @pOP = 'I'
      BEGIN
          INSERT INTO tbEquipamentoPostos
                      (idEquipamento
                       ,Codigo
                       ,IdPosto
                       ,Status
                       ,Obs
                       ,Preco)
          VALUES     (@pIDEquipamento
                      ,@pNumero
                      ,@pPosto
                      ,@pStatus
                      ,@pObs
                      ,@pvalor)
      END
    ELSE
      BEGIN
          UPDATE tbEquipamentoPostos
          SET    idEquipamento = @pIDEquipamento
                 ,Codigo = @pNumero
                 ,IdPosto = @pPosto
                 ,Status = @pStatus
                 ,Obs = @pObs
                 ,Preco = @pValor
          WHERE  id = @pIDEquipamentoPosto
      END 
GO
/****** Object:  StoredProcedure [dbo].[EquipamentoPostoSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--EquipamentoPostoSeleciona
CREATE PROCEDURE [dbo].[EquipamentoPostoSeleciona] @pIDEquipamentoPosto UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbEquipamentoPostos
    WHERE  ID = @pIDEquipamentoPosto 
GO
/****** Object:  StoredProcedure [dbo].[EquipamentoSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[EquipamentoSalva] @pOP             CHAR
                                         ,@pIDEquipamento UNIQUEIDENTIFIER
                                         ,@pDescricao     VARCHAR(50)
AS
    IF @pOP = 'I'
      BEGIN
          INSERT INTO tbEquipamentos
                      (Descricao)
          VALUES     (@pDescricao)
      END
    ELSE
      BEGIN
          UPDATE tbEquipamentos
          SET    Descricao = @pDescricao
          WHERE  id = @pIDEquipamento
      END 
GO
/****** Object:  StoredProcedure [dbo].[EquipamentoSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--EquipamentoSeleciona
CREATE PROCEDURE [dbo].[EquipamentoSeleciona] @pIDEquipamento UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbEquipamentos
    WHERE  ID = @pIDEquipamento 
GO
/****** Object:  StoredProcedure [dbo].[EstoquesSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--EstoquesSeleciona
CREATE PROCEDURE [dbo].[EstoquesSeleciona] @pIdposto UNIQUEIDENTIFIER
AS
    SELECT 11 AS ID
           ,ISNULL(SUM(dbo.tbProdutosPostos.Estoque *
                       dbo.tbProdutosPostos.PrecoCusto), 0)
             AS Custo
           ,ISNULL(SUM(dbo.tbProdutosPostos.Estoque *
                       dbo.tbProdutosPostos.PrecoVenda), 0)
             AS Venda
    FROM   dbo.tbProdutosPostos
           INNER JOIN dbo.tbProdutos
                   ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbProdutosPostos.idPosto = @pIDPosto )
       AND ( dbo.tbProdutos.TipoProd = 'LC' )
    UNION
    SELECT 12 AS ID
           ,ISNULL(SUM(dbo.tbProdutosPostos.Estoque *
                       dbo.tbProdutosPostos.PrecoCusto), 0)
             AS Custo
           ,ISNULL(SUM(dbo.tbProdutosPostos.Estoque *
                       dbo.tbProdutosPostos.PrecoVenda), 0)
             AS Venda
    FROM   dbo.tbProdutosPostos
           INNER JOIN dbo.tbProdutos
                   ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbProdutosPostos.idPosto = @pIDPosto )
       AND ( dbo.tbProdutos.TipoProd = 'LB' )
    ORDER  BY ID 
GO
/****** Object:  StoredProcedure [dbo].[Extenso_s]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[Extenso_s] (@VALOR FLOAT)
AS
DECLARE  
	@TEXTOFINAL VARCHAR(250) ,
        @Unidade    VARCHAR(255),
        @Dezenas    VARCHAR(255),
        @Centenas   VARCHAR(255),
        @Radical    VARCHAR(255),
        @RadUnit    VARCHAR(255),
        @VALORFORMT VARCHAR(13), 
        @GRUPO1     VARCHAR(3), 
        @TEXTO1     VARCHAR(100),
        @GRUPO2     VARCHAR(3), 
        @TEXTO2     VARCHAR(100),
        @GRUPO3     VARCHAR(3), 
        @TEXTO3     VARCHAR(100),
        @GRUPO4     VARCHAR(3),
        @TEXTO4     VARCHAR(100),
        @TAMANHO    INT
       
-- Gerando Matrizes
-- Não mudar nada aqui!!!!
   SET @Unidade  = 'UM           DOIS         TRÊS         QUATRO       CINCO        SEIS         SETE         OITO         NOVE         DEZ          ONZE         DOZE         TREZE        QUATORZE     QUINZE       DEZESSEIS    DEZESSETE    DEZOITO      DEZENOVE     '
   SET @Dezenas  = '             VINTE        TRINTA       QUARENTA     CINQUENTA    SESSENTA     SETENTA      OITENTA      NOVENTA      '
   SET @Centenas = 'CENTO        DUZENTOS     TREZENTOS    QUATROCENTOS QUINHENTOS   SEISCENTOS   SETECENTOS   OITOCENTOS   NOVECENTOS   '
   SET @Radical  = 'MIL          MILHÕES      BILHÕES      TRILHÕES     '
   SET @RadUnit  = 'MIL          MILHÃO       BILHÃO       TRILHÃO      '
--Formatando o valar de entrada
  SELECT @VALORFORMT = REPLICATE('0',9 - LEN(CONVERT(INT,@VALOR))) + CONVERT(VARCHAR(15),CONVERT(INT,@VALOR)) + '.' + SUBSTRING((CONVERT(VARCHAR(15),@VALOR - CONVERT(INT, @VALOR))),3,2)
--Criando os grupos
   SELECT @GRUPO1 =       SUBSTRING(@VALORFORMT, 1, 3)
   SELECT @GRUPO2 =       SUBSTRING(@VALORFORMT, 4, 3)
   SELECT @GRUPO3 =       SUBSTRING(@VALORFORMT, 7, 3)
   SELECT @GRUPO4 = '0' + SUBSTRING(@VALORFORMT, 11, 2)
   IF @VALOR - CONVERT(INT, @VALOR) = 0      
      SELECT @GRUPO4 = '000'
   ELSE
      SELECT @GRUPO4 =  @GRUPO4 + REPLICATE('0',3 - LEN(@GRUPO4))
-- Geração do grupo 1
---------------------
   IF CONVERT(INT,@GRUPO1) < 100
      IF CONVERT(INT,@GRUPO1) < 10
         SELECT @TAMANHO = 1
      ELSE
         SELECT @TAMANHO = 2   
   ELSE
      SELECT @TAMANHO = 3
   IF @TAMANHO = 3
      BEGIN
         IF RIGHT(@GRUPO1, 2) <> '00'
             BEGIN
                SELECT @TEXTO1 = ISNULL(@TEXTO1,'') + ISNULL(RTRIM(SUBSTRING(@Centenas,((CONVERT(INT,LEFT(@GRUPO1, 1)) - 1) * 13) + 1, 13)) + ' E','') + ' '
                SELECT @TAMANHO = 2
             END
          ELSE
             BEGIN
                SELECT @TEXTO1 = ISNULL(@TEXTO1,'') + RTRIM(CASE LEFT(@GRUPO1, 1) 
                                                               WHEN '1' THEN 'CEM ' 
                                                               ELSE  ISNULL(RTRIM(SUBSTRING(@Centenas,((LEFT(@GRUPO1, 1) - 1)*13)+1,13)),'')
                                                            END) 
             END
      END
   IF @TAMANHO = 2
      BEGIN
         If CONVERT(INT, RIGHT(@GRUPO1, 2)) < 20
            BEGIN  
               SET @TEXTO1 = ISNULL(@TEXTO1,'') + RTRIM(ISNULL(SUBSTRING(@UNIDADE,((RIGHT(@GRUPO1, 2)-1) * 13) + 1, 13), ''))+ ' '
            END
         ELSE
            BEGIN         
               SELECT @TEXTO1 = ISNULL(@TEXTO1,'') + ISNULL(RTRIM(SUBSTRING(@Dezenas,((SUBSTRING(@GRUPO1, 2, 1) - 1) * 13) + 1, 13)), '') + ' '
               If CONVERT(INT,RIGHT(@GRUPO1, 1)) <> 0
                  BEGIN
                     SELECT @TEXTO1 = ISNULL(@TEXTO1,'') + 'E '
                     SELECT @TAMANHO = 1
                  END
            END
      END
   IF @TAMANHO = 1
      BEGIN
         SELECT @TEXTO1 = ISNULL(@TEXTO1,'') + LTRIM(SUBSTRING(@UNIDADE,((RIGHT(@GRUPO1, 1)-1)*13)+1,13)) + ' '
      END
-- Geração do grupo 2
---------------------
select @TAMANHO = NULL
   IF CONVERT(INT,@GRUPO2) < 100
      IF CONVERT(INT,@GRUPO2) < 10
         SELECT @TAMANHO = 1
      ELSE
         SELECT @TAMANHO = 2   
   ELSE
      SELECT @TAMANHO = 3
   IF @TAMANHO = 3
      BEGIN
         IF RIGHT(@GRUPO2, 2) <> '00'
             BEGIN
                SELECT @TEXTO2 = ISNULL(@TEXTO2,'') + ISNULL(RTRIM(SUBSTRING(@Centenas,((CONVERT(INT,LEFT(@GRUPO2, 1)) - 1) * 13) + 1, 13)) + ' E','') + ' '
                SELECT @TAMANHO = 2
             END
          ELSE
             BEGIN
                SELECT @TEXTO2 = ISNULL(@TEXTO2,'') + RTRIM(CASE LEFT(@GRUPO2, 1) 
                                                               WHEN '1' THEN 'CEM ' 
                                                               ELSE  ISNULL(RTRIM(SUBSTRING(@Centenas,((LEFT(@GRUPO2, 1) - 1)*13)+1,13)),'')
                                                            END) 
             END
      END
   IF @TAMANHO = 2
      BEGIN
         If CONVERT(INT, RIGHT(@GRUPO2, 2)) < 20
            BEGIN  
               SET @TEXTO2 = ISNULL(@TEXTO2,'') + RTRIM(ISNULL(SUBSTRING(@UNIDADE,((RIGHT(@GRUPO2, 2)-1) * 13) + 1, 13), ''))+ ' '
            END
         ELSE
            BEGIN         
               SELECT @TEXTO2 = ISNULL(@TEXTO2,'') + ISNULL(RTRIM(SUBSTRING(@Dezenas,((SUBSTRING(@GRUPO2, 2, 1) - 1) * 13) + 1, 13)), '') + ' '
               If CONVERT(INT,RIGHT(@GRUPO2, 1)) <> 0
                  BEGIN
                     SELECT @TEXTO2 = ISNULL(@TEXTO2,'') + 'E '
                     SELECT @TAMANHO = 1
                  END
            END
      END
   IF @TAMANHO = 1
      BEGIN
         SELECT @TEXTO2 = ISNULL(@TEXTO2,'') + LTRIM(SUBSTRING(@UNIDADE,((RIGHT(@GRUPO2, 1)-1)*13)+1,13)) + ' '
      END
-- Geração do grupo 3
---------------------
select @TAMANHO = NULL
   IF CONVERT(INT,@GRUPO3) < 100
      IF CONVERT(INT,@GRUPO3) < 10
         SELECT @TAMANHO = 1
      ELSE
         SELECT @TAMANHO = 2   
   ELSE
      SELECT @TAMANHO = 3
   IF @TAMANHO = 3
      BEGIN
         IF RIGHT(@GRUPO3, 2) <> '00'
             BEGIN
                SELECT @TEXTO3 = ISNULL(@TEXTO3,'') + ISNULL(RTRIM(SUBSTRING(@Centenas,((CONVERT(INT,LEFT(@GRUPO3, 1)) - 1) * 13) + 1, 13)) + ' E','') + ' '
                SELECT @TAMANHO = 2
             END
          ELSE
             BEGIN
                SELECT @TEXTO3 = ISNULL(@TEXTO3,'') + RTRIM(CASE LEFT(@GRUPO3, 1) 
                                                               WHEN '1' THEN 'CEM ' 
                                                               ELSE  ISNULL(RTRIM(SUBSTRING(@Centenas,((LEFT(@GRUPO3, 1) - 1)*13)+1,13)),'')
                                                            END) 
             END
      END
   IF @TAMANHO = 2
      BEGIN
         If CONVERT(INT, RIGHT(@GRUPO3, 2)) < 20
            BEGIN  
               SET @TEXTO3 = ISNULL(@TEXTO3,'') + RTRIM(ISNULL(SUBSTRING(@UNIDADE,((RIGHT(@GRUPO3, 2)-1) * 13) + 1, 13), ''))+ ' '
            END
         ELSE
            BEGIN         
               SELECT @TEXTO3 = ISNULL(@TEXTO3,'') + ISNULL(RTRIM(SUBSTRING(@Dezenas,((SUBSTRING(@GRUPO3, 2, 1) - 1) * 13) + 1, 13)), '') + ' '
               If CONVERT(INT,RIGHT(@GRUPO3, 1)) <> 0
                  BEGIN
                     SELECT @TEXTO3 = ISNULL(@TEXTO3,'') + 'E '
                     SELECT @TAMANHO = 1
                  END
            END
      END
   IF @TAMANHO = 1
      BEGIN
         SELECT @TEXTO3 = ISNULL(@TEXTO3,'') + LTRIM(SUBSTRING(@UNIDADE,((RIGHT(@GRUPO3, 1)-1)*13)+1,13)) + ' '
      END
-- Geração do grupo 4
---------------------
select @TAMANHO = NULL
   IF CONVERT(INT,@GRUPO4) < 100
      IF CONVERT(INT,@GRUPO4) < 10
         SELECT @TAMANHO = 1
      ELSE
         SELECT @TAMANHO = 2   
   ELSE
      SELECT @TAMANHO = 3
   IF @TAMANHO = 3
      BEGIN
         IF RIGHT(@GRUPO4, 2) <> '00'
             BEGIN
                SELECT @TEXTO4 = ISNULL(@TEXTO4,'') + ISNULL(RTRIM(SUBSTRING(@Centenas,((CONVERT(INT,LEFT(@GRUPO4, 1)) - 1) * 13) + 1, 13)) + ' E','') + ' '
SELECT @TAMANHO = 2
             END
          ELSE
             BEGIN
                SELECT @TEXTO4 = ISNULL(@TEXTO4,'') + RTRIM(CASE LEFT(@GRUPO4, 1) 
                                                               WHEN '1' THEN 'CEM ' 
                                                               ELSE  ISNULL(RTRIM(SUBSTRING(@Centenas,((LEFT(@GRUPO4, 1) - 1)*13)+1,13)),'')
                                                            END) 
             END
      END
   IF @TAMANHO = 2
      BEGIN
         If CONVERT(INT, RIGHT(@GRUPO4, 2)) < 20
            BEGIN  
               SET @TEXTO4 = ISNULL(@TEXTO4,'') + RTRIM(ISNULL(SUBSTRING(@UNIDADE,((RIGHT(@GRUPO4, 2)-1) * 13) + 1, 13), ''))+ ' '
            END
         ELSE
            BEGIN         
               SELECT @TEXTO4 = ISNULL(@TEXTO4,'') + ISNULL(RTRIM(SUBSTRING(@Dezenas,((SUBSTRING(@GRUPO4, 2, 1) - 1) * 13) + 1, 13)), '') + ' '
               If CONVERT(INT,RIGHT(@GRUPO4, 1)) <> 0
                  BEGIN
                     SELECT @TEXTO4 = ISNULL(@TEXTO4,'') + 'E '
                     SELECT @TAMANHO = 1
                  END
            END
      END
   IF @TAMANHO = 1
      BEGIN
         SELECT @TEXTO4 = ISNULL(@TEXTO4,'') + LTRIM(SUBSTRING(@UNIDADE,((RIGHT(@GRUPO4, 1)-1)*13)+1,13)) + ' '
      END
-- Gerando o formato final do texto
-----------------------------------
SELECT @TEXTOFINAL = ISNULL(@TEXTOFINAL, '')
IF CONVERT(INT, @GRUPO1 + @GRUPO2 + @GRUPO3) = 0  AND CONVERT(INT, @GRUPO4) <> 0 
   BEGIN
      SELECT @TEXTOFINAL = RTRIM(@TEXTO4) + CASE CONVERT(INT, @GRUPO4) WHEN 1 THEN ' CENTAVO' ELSE ' CENTAVOS' END
   END
ELSE
   BEGIN
      SELECT @TEXTOFINAL = ISNULL(RTRIM(''),'') + ' ' + CASE CONVERT(INT, @GRUPO1) 
                                                                    WHEN 0 THEN '' 
                                                                 ELSE 
                                                                    CASE CONVERT(INT, @GRUPO1) 
                                                                       WHEN 1 THEN RTRIM(@TEXTO1) + ' MILHÃO' 
                                                                       ELSE RTRIM(@TEXTO1) + ' MILHÕES' 
                                                                    END
                                                                 END
      IF CONVERT(INT, @GRUPO2) = 0 AND CONVERT(INT, @GRUPO3) <> 0 AND CONVERT(INT, @GRUPO1)<> 0
         SELECT @TEXTOFINAL = RTRIM(@TEXTOFINAL) + ' E '
      ELSE
         SELECT @TEXTOFINAL = RTRIM(@TEXTOFINAL) + ' '
      IF CONVERT(INT, @GRUPO2 + @GRUPO3) = 0 
         BEGIN
            SELECT @TEXTOFINAL = RTRIM(@TEXTOFINAL) + ' DE'
         END
      ELSE
         BEGIN
            SELECT @TEXTOFINAL = @TEXTOFINAL + CASE CONVERT(INT, @GRUPO2) 
                                                         WHEN 0 THEN '' 
                                                         ELSE RTRIM(@TEXTO2) + ' MIL '
                                                      END
            IF CONVERT(INT, @GRUPO2) < 100 AND CONVERT(INT,@GRUPO2) <> 0
               BEGIN
                  IF CONVERT(INT, @GRUPO2) <> 1 AND CONVERT(INT, @GRUPO3 + @GRUPO1) <> 0
                     SELECT @TEXTOFINAL = @TEXTOFINAL + ' E '
               END
         END
      SELECT @TEXTOFINAL = ISNULL(@TEXTOFINAL,'') + ISNULL(RTRIM(@TEXTO3),'') + CASE CONVERT(INT, ISNULL(@GRUPO1,'0') + ISNULL(@GRUPO2,'0') + ISNULL(@GRUPO3,'0')) 
                                                                    WHEN 1 THEN ' REAL' 
                                                                    ELSE ' REAIS' 
                                                                 END
      SELECT @TEXTOFINAL = ISNULL(@TEXTOFINAL,'') + ' ' + CASE CONVERT(INT, @GRUPO4) 
                                                             WHEN 0 THEN '' 
                                                                ELSE CASE CONVERT(INT, @GRUPO4)
                                                                   WHEN 1 THEN + 'E ' + ISNULL(RTRIM(@TEXTO4),'') + ' CENTAVO'
                                                                   ELSE + 'E ' + ISNULL(RTRIM(@TEXTO4),'') + ' CENTAVOS'
                                                                END
                                                             END
   
 END
set @TEXTOFINAL =   RTRIM(LTRIM(@TEXTOFINAL))  
select @TEXTOFINAL  Valorext
GO
/****** Object:  StoredProcedure [dbo].[FoneSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--FoneSalva
CREATE PROCEDURE [dbo].[FoneSalva] @pID          UNIQUEIDENTIFIER
                                  ,@pIDEntidade UNIQUEIDENTIFIER
                                  ,@pDescricao  VARCHAR(40)
                                  ,@pFone       VARCHAR(40 )
                                  ,@pPrincipal  BIT
AS
    IF @pID = dbo.GuidEmpty()
      BEGIN
	      SET @pID = newid()
          INSERT INTO tbEntidadesFone
                      (Id
                       ,idEntidade
                       ,Descricao
                       ,Fone
                       ,Principal)
          VALUES     (@pID
                      ,@pIDEntidade
                      ,@pDescricao
                      ,@pFone
                      ,@pPrincipal)
      END
    ELSE
      BEGIN
          UPDATE tbEntidadesFone
          SET    Descricao = @pDescricao
                 ,Fone = @pFone
                 ,Principal = @pPrincipal
          WHERE  Id = @pID
      END 
	
	SELECT @pID
GO
/****** Object:  StoredProcedure [dbo].[FoneSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--FoneSeleciona
CREATE PROCEDURE [dbo].[FoneSeleciona] @pIDEntidade UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbEntidadesFone
    WHERE  IdEntidade = @pIDEntidade
    ORDER  BY principal 
GO
/****** Object:  StoredProcedure [dbo].[HistoricoExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--HistoricoExclui
CREATE PROCEDURE [dbo].[HistoricoExclui] @pIDHistorico UNIQUEIDENTIFIER
AS
    DELETE tbHistoricos
    WHERE  Id = @pIDHistorico 
GO
/****** Object:  StoredProcedure [dbo].[HistoricoSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--HistoricoSalva
CREATE PROCEDURE [dbo].[HistoricoSalva] @pOP           CHAR
                                       ,@pIDHistorico UNIQUEIDENTIFIER
                                       ,@pDescricao   VARCHAR(50)
                                       ,@pDespesa     BIT
                                       ,@pTipo        CHAR(1)
AS
    IF @pOP = 'I'
      BEGIN
          INSERT INTO tbHistoricos
                      (Descricao
                       ,Despesa
                       ,Tipo)
          VALUES     (@pDescricao
                      ,@pDespesa
                      ,@pTipo)
      END
    ELSE
      BEGIN
          UPDATE tbHistoricos
          SET    Descricao = @pDescricao
                 ,Despesa = @pDespesa
                 ,Tipo = @pTipo
          WHERE  Id = @pIDHistorico
      END 
GO
/****** Object:  StoredProcedure [dbo].[HistoricoSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--HistoricoSeleciona
CREATE PROCEDURE [dbo].[HistoricoSeleciona] @pIDHistorico UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbHistoricos
    WHERE  Id = @pIDHistorico 
GO
/****** Object:  StoredProcedure [dbo].[HorarioExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--HorarioExclui
CREATE PROCEDURE [dbo].[HorarioExclui] @pIDHorario UNIQUEIDENTIFIER
AS
    DELETE tbHorarios
    WHERE  Id = @pIDHorario 
GO
/****** Object:  StoredProcedure [dbo].[HorarioSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--HorarioSalva
CREATE PROCEDURE [dbo].[HorarioSalva] @pOP         CHAR
                                     ,@pIDHorario UNIQUEIDENTIFIER
                                     ,@pDescricao VARCHAR(50)
AS
    IF @pOP = 'I'
      BEGIN
          INSERT INTO tbHorarios
                      (Descricao)
          VALUES     (@pDescricao)
      END
    ELSE
      BEGIN
          UPDATE tbHorarios
          SET    Descricao = @pDescricao
          WHERE  Id = @pIDHorario
      END 
GO
/****** Object:  StoredProcedure [dbo].[HorarioSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--HorarioSeleciona
CREATE PROCEDURE [dbo].[HorarioSeleciona] @pIDHorario UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbHorarios
    WHERE  Id = @pIDHorario 
GO
/****** Object:  StoredProcedure [dbo].[LogSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--LogSalva
CREATE PROCEDURE [dbo].[LogSalva] @pIDEntidade UNIQUEIDENTIFIER
                                 ,@pIdposto   UNIQUEIDENTIFIER
                                 ,@pTabela    VARCHAR(50)
                                 ,@pOperacao  VARCHAR (50)
                                 ,@pDescricao VARCHAR (300)
AS
    INSERT INTO tbLogs
                (idEntidade
                 ,idPosto
                 ,tabela
                 ,operacao
                 ,descricao
                 ,data)
    VALUES      (@pIDEntidade
                 ,@pIDPosto
                 ,@pTabela
                 ,@pOperacao
                 ,@pDescricao
                 ,getdate()) 
GO
/****** Object:  StoredProcedure [dbo].[ManutencaoExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ManutencaoExclui] @pID  int AS
Delete tbManutencao where id=@pID
GO
/****** Object:  StoredProcedure [dbo].[ManutencaoSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ManutencaoSalva] @pOP char,@pID int, @pIDEquipamento int, @pDescricao varchar(100), @pData smalldatetime, @pValor money AS
If @pOP='I'
   begin
        insert into tbManutencao(idEquipamentoPosto,Descricao,Data,Valor)values(@pidEquipamento,@pDescricao,@pData,@pValor)
   end
else
   begin
       update tbManutencao set Descricao=@pDescricao, Data=@pData, Valor=@pValor  where id=@pID
   end
GO
/****** Object:  StoredProcedure [dbo].[ManutencaoSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ManutencaoSeleciona] @pIDEquipamentoPosto int AS
Select id, Descricao, Convert(nvarchar(10),Data,103) as data  from tbManutencao where IDEquipamentoPosto=@pIDEquipamentoPosto
GO
/****** Object:  StoredProcedure [dbo].[MostraLimiteConveniencia]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--MostraLimiteConveniencia
CREATE PROCEDURE [dbo].[MostraLimiteConveniencia]
AS
    SELECT SUM(dbo.tbProdutosPostos.Estoque * dbo.tbProdutosPostos.PrecoVenda)
           AS Estoque
           ,dbo.tbPostos.NomeUsual
           ,dbo.tbProdutosEstoqueTeto.Conveniencia
    FROM   dbo.tbProdutosPostos
           INNER JOIN dbo.tbProdutos
                   ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbPostos
                   ON dbo.tbProdutosPostos.idPosto = dbo.tbPostos.Id
           INNER JOIN dbo.tbProdutosEstoqueTeto
                   ON dbo.tbProdutosPostos.idPosto =
                      dbo.tbProdutosEstoqueTeto.IdPosto
    WHERE  ( dbo.tbProdutosPostos.Estoque > 0 )
       AND ( dbo.tbPostos.Ativo = 1 )
       AND ( dbo.tbProdutos.TipoProd = N'LC' )
    GROUP  BY dbo.tbProdutosPostos.idPosto
              ,dbo.tbPostos.NomeUsual
              ,dbo.tbProdutosEstoqueTeto.Conveniencia
    ORDER  BY dbo.tbProdutosPostos.idPosto 
GO
/****** Object:  StoredProcedure [dbo].[MostraLimiteLubrificante]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--[MostraLimiteLubrificante]
CREATE PROCEDURE [dbo].[MostraLimiteLubrificante]
AS
    SELECT SUM(dbo.tbProdutosPostos.Estoque * dbo.tbProdutosPostos.PrecoVenda)
           AS Estoque
           ,dbo.tbPostos.NomeUsual
           ,dbo.tbProdutosEstoqueTeto.Lubrificante
    FROM   dbo.tbProdutosPostos
           INNER JOIN dbo.tbProdutos
                   ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbPostos
                   ON dbo.tbProdutosPostos.idPosto = dbo.tbPostos.Id
           INNER JOIN dbo.tbProdutosEstoqueTeto
                   ON dbo.tbProdutosPostos.idPosto =
                      dbo.tbProdutosEstoqueTeto.IdPosto
    WHERE  ( dbo.tbProdutosPostos.Estoque > 0 )
       AND ( dbo.tbPostos.Ativo = 1 )
       AND ( dbo.tbProdutos.TipoProd = N'LB' )
    GROUP  BY dbo.tbProdutosPostos.idPosto
              ,dbo.tbPostos.NomeUsual
              ,dbo.tbProdutosEstoqueTeto.Lubrificante
    ORDER  BY dbo.tbProdutosPostos.idPosto 
GO
/****** Object:  StoredProcedure [dbo].[MovBancariaCancela]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--MovBancariaCancela
CREATE PROCEDURE [dbo].[MovBancariaCancela] @pIDMov UNIQUEIDENTIFIER
AS /*update tbMovBancaria set ativo=0 where idMov=@pIDMov*/
    DELETE FROM tbMovBancaria
    WHERE  Id = @pIDMov 
GO
/****** Object:  StoredProcedure [dbo].[MovBancariaExtrato]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--MovBancariaExtrato
CREATE PROCEDURE [dbo].[MovBancariaExtrato] @pIDContaBancaria UNIQUEIDENTIFIER
                                           ,@pDataINI        SMALLDATETIME
                                           ,@pDataFim        SMALLDATETIME
AS
    SELECT Descricao
           ,Valor = CASE TipoMov
                      WHEN 'C' THEN Valor
                      WHEN 'D' THEN Valor * ( -1 )
                    END
    FROM   tbMovBancaria
    WHERE  idContaBancaria = @pIDContaBancaria
       AND DataHora BETWEEN @pDataINI AND @pDataFIM 
GO
/****** Object:  StoredProcedure [dbo].[MovBancariaSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



--MovBancariaSalva
CREATE PROCEDURE [dbo].[MovBancariaSalva] @pIDMov            UNIQUEIDENTIFIER
                                         ,@pTipoMov         VARCHAR(1)
                                         ,@pDescricao       VARCHAR(50)
                                         ,@pIdposto         UNIQUEIDENTIFIER
                                         ,@pIDCaixaPosto    UNIQUEIDENTIFIER
                                         ,@pIDContaBancaria UNIQUEIDENTIFIER
                                         ,@pNDoc            VARCHAR(30)
                                         ,@pValor           MONEY
                                         ,@pDataHora        DATETIME
AS
    IF @pIDMov = dbo.GuidEmpty()
      BEGIN
          IF @pTipoMov = 'C'
            BEGIN
				SET @pIDMov = newid()
                INSERT INTO tbMovBancaria
                            (Id
                             ,tipoMov
                             ,idPosto
                             ,idCaixaPosto
                             ,Descricao
                             ,idContaBancaria
                             ,Valor
                             ,DataHora
                             ,Ativo
                             ,NumeroDoc)
                VALUES     (@pIDMov
                            ,@pTipoMov
                            ,@pidPosto
                            ,@pIDCaixaPosto
                            ,@pDescricao
                            ,@pIDContabancaria
                            ,@pValor
                            ,@pDataHora
                            ,1
                            ,@pNDoc)

                SELECT @pIDMov
            END
          ELSE
            BEGIN
                SET @pIDMov = newid()
                INSERT INTO tbMovBancaria
                            (Id
                             ,tipoMov
                             ,idPosto
                             ,idCaixaPosto
                             ,Descricao
                             ,idContaBancaria
                             ,Valor
                             ,DataHora
                             ,Ativo
                             ,NumeroDoc)
                VALUES     (@pIDMov
                            ,@pTipoMov
                            ,@pidPosto
                            ,@pIDCaixaPosto
                            ,@pDescricao
                            ,@pIDContabancaria
                            ,@pValor *- 1
                            ,@pDataHora
                            ,1
                            ,@pNDoc)

                SELECT @pIDMov
            END
      END
    ELSE
      BEGIN
	   SET @pIDMov = newid()
          IF @pTipoMov = 'C'
            BEGIN
                UPDATE tbMovBancaria
                SET    Descricao = @pDescricao
                       ,Valor = @pValor
                       ,NumeroDoc = @pNDoc
                WHERE  Id = @pIDMov
            END
          ELSE
            BEGIN
                UPDATE tbMovBancaria
                SET    Descricao = @pDescricao
                       ,Valor = @pValor *- 1
                       ,NumeroDoc = @pNDoc
                WHERE  Id = @pIDMov
            END
			SELECT @pIDMov
      END 


GO
/****** Object:  StoredProcedure [dbo].[MovBancariaSalvaNew]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--MovBancariaSalvaNew
CREATE PROCEDURE [dbo].[MovBancariaSalvaNew] @pIDMov            UNIQUEIDENTIFIER
                                            ,@pTipoMov         VARCHAR(1)
                                            ,@pDescricao       VARCHAR(50)
                                            ,@pIdposto         UNIQUEIDENTIFIER
                                            ,@pIDCaixaPosto    UNIQUEIDENTIFIER
                                            ,@pIDContaBancaria UNIQUEIDENTIFIER
                                            ,@pNDoc            VARCHAR(30)
                                            ,@pValor           MONEY
                                            ,@pDataHora        DATETIME
                                            ,@pConciliado      INT
                                            ,@pDataBancaria    SMALLDATETIME
AS
    IF @pIDMov = dbo.GuidEmpty()
      BEGIN
          IF @pTipoMov = 'C'
            BEGIN
			    SET @pIDMov = newid()
                INSERT INTO tbMovBancaria
                            (Id
							 ,tipoMov
                             ,idPosto
                             ,idCaixaPosto
                             ,Descricao
                             ,idContaBancaria
                             ,Valor
                             ,DataHora
                             ,Ativo
                             ,NumeroDoc
                             ,Conciliado
                             ,DataBancaria)
                VALUES     (@pIDMov
				            ,@pTipoMov
                            ,@pidPosto
                            ,@pIDCaixaPosto
                            ,@pDescricao
                            ,@pIDContabancaria
                            ,@pValor
                            ,@pDataHora
                            ,1
                            ,@pNDoc
                            ,@pConciliado
                            ,@pDataBancaria)
			    SELECT @pIDMov
            END
          ELSE
            BEGIN
			    SET @pIDMov = newid()
                INSERT INTO tbMovBancaria
                            (Id
							 ,tipoMov
                             ,idPosto
                             ,idCaixaPosto
                             ,Descricao
                             ,idContaBancaria
                             ,Valor
                             ,DataHora
                             ,Ativo
                             ,NumeroDoc
                             ,Conciliado
                             ,DataBancaria)
                VALUES     (@pIDMov
				            ,@pTipoMov
                            ,@pidPosto
                            ,@pIDCaixaPosto
                            ,@pDescricao
                            ,@pIDContabancaria
                            ,@pValor *- 1
                            ,@pDataHora
                            ,1
                            ,@pNDoc
                            ,@pConciliado
                            ,@pDataBancaria)
			    SELECT @pIDMov
            END
      END

    ELSE
      BEGIN
          IF @pTipoMov = 'C'
            BEGIN
                UPDATE tbMovBancaria
                SET    Descricao = @pDescricao
                       ,Valor = @pValor
                       ,NumeroDoc = @pNDoc
                       ,Conciliado = @pConciliado
                       ,DataBancaria = @pDataBancaria
                WHERE  Id = @pIDMov
            END
          ELSE
            BEGIN
                UPDATE tbMovBancaria
                SET    Descricao = @pDescricao
                       ,Valor = @pValor *- 1
                       ,NumeroDoc = @pNDoc
                       ,Conciliado = @pConciliado
                       ,DataBancaria = @pDataBancaria
                WHERE  Id = @pIDMov
            END
	      
		  SELECT @pIDMov
      END 
GO
/****** Object:  StoredProcedure [dbo].[MovBancariaSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--MovBancariaSeleciona
CREATE PROCEDURE [dbo].[MovBancariaSeleciona] @pIDMov UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbMovBancaria
    WHERE  Id = @pidMov 
GO
/****** Object:  StoredProcedure [dbo].[OcorrenciaExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--OcorrenciaExclui
CREATE PROCEDURE [dbo].[OcorrenciaExclui] @pID UNIQUEIDENTIFIER
AS
    DELETE tbOcorrencias
    WHERE  ID = @pID 
GO
/****** Object:  StoredProcedure [dbo].[OcorrenciaSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--OcorrenciaSalva
CREATE PROCEDURE [dbo].[OcorrenciaSalva] @pID          UNIQUEIDENTIFIER
                                        ,@pIdposto    UNIQUEIDENTIFIER
                                        ,@pIDCaixa    UNIQUEIDENTIFIER
                                        ,@pDataHora   SMALLDATETIME
                                        ,@pAssunto    NVARCHAR(100)
                                        ,@pDescricao  TEXT
                                        ,@pIDEntidade UNIQUEIDENTIFIER = NULL
AS
    IF @pID = dbo.GuidEmpty()
      BEGIN
          DECLARE @numero INT
 
          SET @numero = (SELECT ISNULL(MAX(Numero), 0) + 1 AS Expr1
                         FROM   tbOcorrencias)
                                        --WHERE  ( idPosto = @pIDPosto ))
 
          SET @pID = newid()
         
          INSERT INTO tbOcorrencias
                      (Id
                       ,idPosto
                       ,Numero
                       ,idCaixa
                       ,DataHora
                       ,Assunto
                       ,Descricao
                       ,IDEntidade)
          VALUES     (@pID
                      ,@pidPosto
                      ,@numero
                      ,@pIDCaixa
                      ,@pDataHora
                      ,@pAssunto
                      ,@pDescricao
                      ,@pIDEntidade)
 
          SELECT @pID
      END
    ELSE
      BEGIN
          UPDATE tbOcorrencias
          SET    idPosto = @pIDPosto
                 ,idCaixa = @pIDCAixa
                 ,DataHora = @pDataHora
                 ,Assunto = @pAssunto
                 ,Descricao = @pDescricao
                 ,IDEntidade = @pIDEntidade
          WHERE  id = @pID
 
          SELECT @pID
      END
GO
/****** Object:  StoredProcedure [dbo].[OcorrenciaSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--OcorrenciaSeleciona
CREATE PROCEDURE [dbo].[OcorrenciaSeleciona] @pID UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbOcorrencias
    WHERE  ID = @pID 
GO
/****** Object:  StoredProcedure [dbo].[OperadoraExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--OperadoraExclui
CREATE PROCEDURE [dbo].[OperadoraExclui] @pIDOperadora UNIQUEIDENTIFIER
AS
    DELETE tbOperadoras
    WHERE  Id = @pIDOperadora 
GO
/****** Object:  StoredProcedure [dbo].[OperadoraSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--OperadoraSalva
CREATE PROCEDURE [dbo].[OperadoraSalva] @pOP            CHAR
                                       ,@pIDOperadora  UNIQUEIDENTIFIER
                                       ,@pIDEntidade   UNIQUEIDENTIFIER
                                       ,@pOperadora    VARCHAR(50)
                                       ,@pTaxaCredito  FLOAT
                                       ,@pPrazoCredito INT
                                       ,@pTaxaDebito   FLOAT
                                       ,@pPrazoDebito  INT
                                       ,@pIdposto      UNIQUEIDENTIFIER
AS
    IF @pOP = 'I'
      BEGIN
          INSERT INTO tbOperadoras
                      (idEntidade
                       ,Operadora
                       ,TaxaCredito
                       ,PrazoCredito
                       ,TaxaDebito
                       ,PrazoDebito
                       ,IdPosto)
          VALUES     (@pidEntidade
                      ,@pOperadora
                      ,@pTaxaCredito
                      ,@pPrazoCredito
                      ,@pTaxaDebito
                      ,@pPrazoDebito
                      ,@pIdPOsto)
      END
    ELSE
      BEGIN
          UPDATE tbOperadoras
          SET    idEntidade = @pIDEntidade
                 ,Operadora = @pOperadora
                 ,TaxaCredito = @pTaxaCredito
                 ,PrazoCredito = @pPrazoCredito
                 ,TaxaDebito = @pTaxaDebito
                 ,PrazoDebito = @pPrazoDebito
                 ,IdPosto = @pIdPosto
          WHERE  Id = @pIDOperadora
      END 
GO
/****** Object:  StoredProcedure [dbo].[OperadoraSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--OperadoraSeleciona
CREATE PROCEDURE [dbo].[OperadoraSeleciona] @pIDOperadora UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbOperadoras
    WHERE  Id = @pIDOperadora 
GO
/****** Object:  StoredProcedure [dbo].[PedidoExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PedidoExclui
CREATE PROCEDURE [dbo].[PedidoExclui] @pID UNIQUEIDENTIFIER
AS
    DELETE FROM tbPedidos
    WHERE  Id = @pID

    DELETE FROM tbPedidosItens
    WHERE  Id = @pID 
GO
/****** Object:  StoredProcedure [dbo].[PedidoItensExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PedidoItensExclui
CREATE PROCEDURE [dbo].[PedidoItensExclui] @pID         UNIQUEIDENTIFIER
                                          ,@pIdposto   UNIQUEIDENTIFIER
                                          ,@pIDProduto UNIQUEIDENTIFIER
AS
    DELETE FROM tbPedidosItens
    WHERE  idPedido = @pID
       AND idPosto = @pIDPosto
       AND IDProduto = @pIDProduto 
GO
/****** Object:  StoredProcedure [dbo].[PedidoItensExcluiP]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PedidoItensExcluiP
CREATE PROCEDURE [dbo].[PedidoItensExcluiP] @pID UNIQUEIDENTIFIER
AS
    DELETE FROM tbPedidosItensP
    WHERE  id = @pID 
GO
/****** Object:  StoredProcedure [dbo].[PedidoItensRecebe]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--PedidoItensRecebe
CREATE PROCEDURE [dbo].[PedidoItensRecebe] @pIDPedido            UNIQUEIDENTIFIER
                                          ,@pIdposto            UNIQUEIDENTIFIER
                                          ,@pIdProduto          UNIQUEIDENTIFIER
                                          ,@pHora               VARCHAR(20)
                                          ,@pNumeroNota         VARCHAR(20)
                                          ,@pDataNota           SMALLDATETIME
                                          ,@pidCaixaRecebimento UNIQUEIDENTIFIER
                                          ,@pTanque             UNIQUEIDENTIFIER
                                          ,@pFaltaSobra         INT
                                          ,@pObs                TEXT
                                          ,@pTipoProd           VARCHAR(2)
                                          ,@pQuantidade         FLOAT
                                          ,@pPrecoCusto         AS MONEY
                                          ,@pLacre              AS NVARCHAR(20)
                                          ,@pPlaca              NVARCHAR(15)
                                          ,@pMotorista          NVARCHAR(50)
                                          ,@pRG                 NVARCHAR(15)
                                          ,@pAnalista           VARCHAR(60)
                                          ,@pAspecto            NVARCHAR(100)
                                          ,@pCor                NVARCHAR(50)
                                          ,@pDensidade          FLOAT
                                          ,@pMassa              FLOAT
                                          ,@pTeor               FLOAT
                                          ,@pTeor1              FLOAT
                                          ,@pTemperatura        FLOAT
                                          ,@pFrentistaDescarga  NVARCHAR(50)
                                          ,@NumTanque			INT
                                          ,@pIdItem             UNIQUEIDENTIFIER
AS
    UPDATE tbPedidosItens
    SET    hora = @pHora
           ,NumeroNota = @pNumeroNota
           ,DataNota = @pDataNota
           ,idCaixaRecebimento = dbo.GuidEmpty()
           ,IdTanque = dbo.GuidEmpty()
           ,FaltaSobra = @pFaltaSobra
           ,OBS = @pOBS
           ,QTDRecebido = QTDRecebido + @pQuantidade
           ,Lacre = @pLacre
           ,Placa = @pPlaca
           ,Motorista = @pMotorista
           ,RGMotorista = @pRG
           ,Analista = @pAnalista
           ,Aspecto = @pAspecto
           ,Cor = @pCor
           ,Densidade = @pDensidade
           ,Massa = @pmassa
           ,Teor = @pTeor
           ,Teor1 = @pTeor1
           ,Temperatura = @pTemperatura
           ,FrentistaDescarga = @pFrentistaDescarga
    WHERE  idPedido = @pIDPedido
       AND iDPOsto = @pIDPosto
       AND IDProduto = @pIDProduto
       AND Id = @pidItem

    IF @pTipoProd = 'CB'
      BEGIN
          EXEC TanquesEstoqueAtualiza
            '+',
            @NumTanque,
            @pQuantidade,
            @pIDPosto

          INSERT INTO tbTanquesMovEstoque
                      (idPosto
                       ,idTanque
                       ,PrecoCusto
                       ,Quantidade)
          VALUES      (@pidPosto
                       ,@pTanque
                       ,@pPrecoCusto
                       ,@pQuantidade)


		  --tt25 obter data do proximo movimento 
		  declare @proxDataMovimento as datetime
		  set @proxDataMovimento = (select top 1 datamovimento from tbReducaoEmissao where idPosto = @pIdposto order by 1 desc) + 1
		  
          INSERT INTO tbPedidosItensRecebidos
                      (idPedido
                       ,idPosto
                       ,Idtanque
                       ,QTD
                       ,datamovimento
                       ,IdCaixaRecebimento
                       ,idItem)
          VALUES      (@pidPedido
                       ,@pIDPosto
                       ,@pTanque
                       ,@pQuantidade
                       ,@proxDataMovimento
                       ,@pidCaixaRecebimento
                       ,@pIdItem)

          UPDATE tbProdutosPostos
          SET    PrecoCusto = @pPrecoCusto
                 ,Estoque = estoque + @pQuantidade
          WHERE  idPosto = @pIDPosto
             AND idProduto = @pIDProduto
      END

GO
/****** Object:  StoredProcedure [dbo].[PedidoItensSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--PedidoItensSalva
CREATE PROCEDURE [dbo].[PedidoItensSalva] @pOP               CHAR
                                         ,@pIDPedido        UNIQUEIDENTIFIER
                                         ,@pIdposto         UNIQUEIDENTIFIER
                                         ,@pIdProduto       UNIQUEIDENTIFIER
                                         ,@pQTD             FLOAT
                                         ,@pVUFrete         MONEY
                                         ,@pVUPro           MONEY
                                         ,@pVUGNRE          FLOAT
                                         ,@pPrevisaoEntrega NVARCHAR(50)
										 ,@pID              UNIQUEIDENTIFIER
AS
   -- DECLARE @pID UNIQUEIDENTIFIER
    IF @pOP = 'I'
      BEGIN 
	      SET @pID = newid()
          INSERT INTO tbPedidosItens
                      (Id
					   ,IDPedido
                       ,IDPosto
                       ,IDProduto
                       ,QTD
                       ,VUPro
                       ,VUFrete
                       ,VUGNRE
                       ,PrevisaoEntrega)
          VALUES      (@pID
		               ,@pIDPedido
                       ,@pIDPosto
                       ,@pIDProduto
                       ,@pQTD
                       ,@pVUPro
                       ,@pVUFrete
                       ,@pVUGNRE
                       ,@pPrevisaoEntrega)
		  
		  SELECT @pID
      END
    ELSE
      BEGIN
          UPDATE tbPedidosItens
          SET    QTD = @pQTD
                 ,VUPro = @pVUPro
                 ,VUFrete = @pVUFrete
                 ,VUGNRE = @pVUGNRE
                 ,PrevisaoEntrega = @pPrevisaoEntrega
          WHERE  idpedido = @pIDPedido
             AND IDPosto = @pIDPosto
             AND idProduto = @pIDProduto
			 AND id = @pID
		    SELECT @pID
	
	
		-- SET @pID = (SELECT Id From tbPedidosItens
		             -- WHERE idpedido = @pIDPedido
						-- AND IDPosto = @pIDPosto
						--AND idProduto = @pIDProduto)
		 -- SELECT @pID

      END 
GO
/****** Object:  StoredProcedure [dbo].[PedidoItensSalvaP]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PedidoItensSalvaP
CREATE PROCEDURE [dbo].[PedidoItensSalvaP] @pID          UNIQUEIDENTIFIER
                                          ,@pIDPedido   UNIQUEIDENTIFIER
                                          ,@pIdProduto  UNIQUEIDENTIFIER
                                          ,@pPercentual MONEY
                                          ,@pQTD        INT
                                          ,@pValor      MONEY
AS
    IF @pID = dbo.GuidEmpty()
      BEGIN
          SET @pID = newid()
          INSERT INTO tbPedidosItensP
                      (Id
                       ,IdPedido
                       ,IdProduto
                       ,Percentual
                       ,QTD
                       ,Valor)
          VALUES      (@pIDPedido
                       ,@pIDProduto
                       ,@pPercentual
                       ,@pQTD
                       ,@pValor)

          SELECT @pID
      END
    ELSE
      BEGIN
          UPDATE tbPedidosItensP
          SET    IDProduto = @pIDProduto
                 ,Percentual = @pPercentual
                 ,QTD = @pQTD
                 ,Valor = @pValor
          WHERE  id = @pID

          SELECT @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[PedidoItensSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PedidoItensSeleciona
CREATE PROCEDURE [dbo].[PedidoItensSeleciona] @pID UNIQUEIDENTIFIER
AS
    SELECT tbPedidosItens.Id
	       ,tbPedidosItens.idPedido
           ,tbPedidosItens.idPosto
           ,tbPostos.RzSocial
           ,tbPedidosItens.idProduto
           ,tbProdutos.Descricao
           ,tbPedidosItens.QTD
           ,Isnull(tbPedidosItens.VUPro, 0)   AS VUPro
           ,Isnull(tbPedidosItens.VUFrete, 0) AS VUFrete
           ,Isnull(tbPedidosItens.VUGNRE, 0)  AS vuGNRE
           ,Isnull(tbPedidosItens.VUGARE, 0)  AS vuGARE
           ,PrevisaoEntrega
    FROM   tbPedidosItens
           INNER JOIN tbProdutos
                   ON tbPedidosItens.idProduto = tbProdutos.Id
           INNER JOIN tbPostos
                   ON tbPedidosItens.idPosto = tbPostos.Id
    WHERE  IDPedido = @pID 
GO
/****** Object:  StoredProcedure [dbo].[PedidoItensSelecionaP]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PedidoItensSelecionaP
CREATE PROCEDURE [dbo].[PedidoItensSelecionaP] @pIDPedido UNIQUEIDENTIFIER
AS
    SELECT tbPedidosItensP.id
           ,idPedido
           ,idProduto
           ,Percentual
           ,QTD
           ,valor
           ,( valor * ( ( percentual / 100 ) + 1 ) )       AS ValorFinal
           ,Descricao
           ,( valor * ( ( percentual / 100 ) + 1 ) ) * QTD AS Total
           ,tbProdutosP.idSite
    FROM   tbPedidosItensp
           ,tbProdutosP
    WHERE  tbPedidosItensP.idProduto = tbProdutosP.id
       AND tbPedidosItensP.Id = @pIDPedido 
GO
/****** Object:  StoredProcedure [dbo].[PedidoSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PedidoSalva
CREATE PROCEDURE [dbo].[PedidoSalva] @pOP            VARCHAR(1)
                                    ,@pIDPedido     UNIQUEIDENTIFIER
                                    ,@pIDEntidade   UNIQUEIDENTIFIER
                                    ,@pIDEntidade1  UNIQUEIDENTIFIER
                                    ,@pDataped      SMALLDATETIME
                                    ,@pValorProduto MONEY
                                    ,@pValorfrete   MONEY
                                    ,@pValorGNRE    MONEY
                                    ,@pTipoPed      INT
                                    ,@pIdposto      UNIQUEIDENTIFIER
                                    ,@pValorGARE    MONEY
                                    ,@pValorTotal   MONEY
                                    ,@pDespesa      BIT
                                    ,@pIDMotorista  UNIQUEIDENTIFIER
                                    ,@pIDCavalo     UNIQUEIDENTIFIER
                                    ,@pIDCarreta    UNIQUEIDENTIFIER
AS
	DECLARE @pIdPostoCentral UNIQUEIDENTIFIER
	declare  @proxNumPedido int 
	
	set @proxNumPedido = (select max(numpedido) +1 from tbpedidos )
	SET @pIdPostoCentral = (SELECT Id FROM tbPostos WHERE NomeUsual = 'Central')
	
				
	
    IF @pOP = 'I'
      BEGIN
		  SET @pIDPedido = newid()
          INSERT INTO tbPedidos
                      (Id
                       ,IDEntidade
                       ,idEntidadeTransp
                       ,Dataped
                       ,ValorProduto
                       ,Valorfrete
                       ,ValorGNRE
                       ,ValorGare
                       ,ValorTotal
                       ,Despesa
                       ,idPosto
                       ,IDMotorista
                       ,IDCavalo
                       ,IDCarreta
					   ,NumPedido)
          VALUES     ( @pIDPedido
                       ,@pIDEntidade
                       ,@pidEntidade1
                       ,@pDataped
                       ,@pValorProduto
                       ,@pValorfrete
                       ,@pValorGNRE
                       ,@pValorGARE
                       ,@pValorTotal
                       ,@pDespesa
                       ,@pIDPosto
                       ,@pIDMotorista
                       ,@pIDCavalo
                       ,@pIDCarreta
					   ,@proxNumPedido)

          SELECT @pIDPedido

          IF @pTipoPed = 2
            BEGIN

                INSERT INTO tbContasPagarReceber
                            (idTipo
                             ,idPosto
                             ,idPedCaixa
                             ,idEntidade
                             ,Valor
                             ,idHistorico
                             ,InfoAdic
                             ,Despesa
                             ,Ativa
                             ,DataVencto
                             ,Data)
                VALUES      ('AP'
                             ,@pIdPostoCentral
                             ,@pIDPedido
                             ,@pIDEntidade
                             ,@pValorProduto + @pValorGNRE + @pValorGare
                             ,(select id from tbHistoricos where descricao = 'Combustível')
                             ,'Pedido nº ' + Cast(@proxNumPedido AS VARCHAR(5))
                             ,0
                             ,1
                             ,@pDataPed
                             ,@pDataPed)

                INSERT INTO tbContasPagarReceber
                            (idTipo
                             ,idPosto
                             ,idPedCaixa
                             ,idEntidade
                             ,Valor
                             ,idHistorico
                             ,InfoAdic
                             ,Despesa
                             ,Ativa
                             ,DataVencto
                             ,Data)
                VALUES      ('AP'
                             ,@pIdPostoCentral
                             ,@pIDPedido
                             ,@pIDEntidade1
                             ,@pValorFrete
                             ,(select id from tbHistoricos where descricao = 'Frete')
                             ,'Pedido nº '+ Cast(@proxNumPedido AS VARCHAR(5)) 
                             ,0
                             ,1
                             ,@pDataPed
                             ,@pDataPed)
            END
          ELSE IF @pTipoPed = 1
            BEGIN

                INSERT INTO tbContasPagarReceber
                            (idTipo
                             ,idPosto
                             ,idPedCaixa
                             ,idEntidade
                             ,Valor
                             ,idHistorico
                             ,InfoAdic
                             ,Despesa
                             ,Ativa
                             ,DataVencto
                             ,Data)
                VALUES      ('AP'
                             ,@pIdPostoCentral
                             ,@pIDPedido
                             ,@pIDEntidade
                             ,( @pValorProduto + @pValorFrete + @pValorGNRE
                                + @pValorGare )
                             ,(select id from tbHistoricos where descricao = 'Combustível')
                             ,'Pedido nº '+ Cast(@proxNumPedido AS VARCHAR(5)) 
                             ,0
                             ,1
                             ,@pDataPed
                             ,@pDataPed)
            END
      END
    ELSE
      BEGIN
          UPDATE tbPedidos
          SET    IDEntidade = @pIDEntidade
                 ,Dataped = @pDataped
                 ,ValorProduto = @pValorProduto
                 ,Valorfrete = @pValorfrete
                 ,ValorTotal = @pValorTotal
          WHERE  Id = @pIDPedido
          
          
          if @pTipoPed = 1
          begin
			update tbContasPagarReceber
			set Valor = @pValorProduto + @pValorGNRE + @pValorGare
			,DataVencto = @pDataped
            ,Data = @pDataped
			
			where idTipo = 'AP'
			and idPosto =@pIdPostoCentral
			and idPedCaixa = @pIDPedido
			and IdEntidade = @pIDEntidade
			and IdHistorico = (select id from tbHistoricos where descricao = 'Combustível')
         
          end 
          
          if @pTipoPed = 2
          begin
			--parte combustivel 
			update tbContasPagarReceber
			set Valor = @pValorProduto + @pValorGNRE + @pValorGare
			,DataVencto = @pDataped
            ,Data = @pDataped
			
			where idTipo = 'AP'
			and idPosto =@pIdPostoCentral
			and idPedCaixa = @pIDPedido
			and IdEntidade = @pIDEntidade
			and IdHistorico = (select id from tbHistoricos where descricao = 'Combustível')
			
			--parte frete
			update tbContasPagarReceber
			set Valor = @pValorFrete
			,DataVencto = @pDataped
            ,Data = @pDataped
			
			where idTipo = 'AP'
			and idPosto =@pIdPostoCentral
			and idPedCaixa = @pIDPedido
			and IdEntidade = @pIDEntidade
			and IdHistorico = (select id from tbHistoricos where descricao = 'Frete')
          
          
          end 
         
            

          SELECT @pIDPedido
      END

select @pIDPedido

GO
/****** Object:  StoredProcedure [dbo].[PedidoSalvaP]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PedidoSalvaP
CREATE PROCEDURE [dbo].[PedidoSalvaP] @pID      UNIQUEIDENTIFIER
                                     ,@pDAta   SMALLDATETIME
                                     ,@pTotal  MONEY
                                     ,@pCambio MONEY
AS
    IF @pID = dbo.GuidEmpty()
      BEGIN
          SET @pID = newid()
          INSERT INTO tbPedidosP
                      (Id
                       ,Data
                       ,Cambio
                       ,Total)
          VALUES      (@pID
                       ,@pData
                       ,@pCambio
                       ,@pTotal)

          SELECT @pID
      END
    ELSE
      BEGIN
          UPDATE tbPedidosP
          SET    Data = @pData
                 ,Total = @pTotal
                 ,Cambio = @pCambio
          WHERE  id = @pID

          SELECT @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[PedidoSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PedidoSeleciona
CREATE PROCEDURE [dbo].[PedidoSeleciona] @pID UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbPedidos
    WHERE  Id = @pID 
GO
/****** Object:  StoredProcedure [dbo].[PermissoesPrazoExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PermissoesPrazoExclui
CREATE PROCEDURE [dbo].[PermissoesPrazoExclui] @pID          UNIQUEIDENTIFIER
                                              ,@pIDEntidade UNIQUEIDENTIFIER = NULL
                                              ,@pNome       NVARCHAR(50) = NULL
                                              ,@pRG         NVARCHAR(50) = NULL
AS
    DELETE tbPermissoesPrazo
    WHERE  id = @pID

    DELETE tbEnroll
    WHERE  IDEntidade = @pIDEntidade
       AND NomeApresentado = @pNome
       AND RG = @pRG 
GO
/****** Object:  StoredProcedure [dbo].[PermissoesPrazoSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PermissoesPrazoSalva
CREATE PROCEDURE [dbo].[PermissoesPrazoSalva] @pID          UNIQUEIDENTIFIER
                                             ,@pIDEntidade UNIQUEIDENTIFIER
                                             ,@pTipo       VARCHAR(10)
                                             ,@pDescricao  VARCHAR(50)
                                             ,@pSenha      NVARCHAR(50) = NULL
                                             ,@pRG         NVARCHAR(20) = NULL
AS
    IF @pID = dbo.GuidEmpty()
      BEGIN
          SET @pID = newid()
          INSERT INTO tbPermissoesPrazo
                      (Id
                       ,idEntidade
                       ,Tipo
                       ,Descricao
                       ,Senha
                       ,RG)
          VALUES     (@pId
                      ,@pidEntidade
                      ,@pTipo
                      ,@pDescricao
                      ,@pSenha
                      ,@pRG)

          SELECT @pID
      END
    ELSE
      BEGIN
          UPDATE tbPermissoesPrazo
          SET    Tipo = @pTipo
                 ,Descricao = @pDescricao
                 ,Senha = @pSenha
                 ,RG = @pRG
          WHERE  id = @pID

          SELECT @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[PermissoesPrazoSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PermissoesPrazoSeleciona
CREATE PROCEDURE [dbo].[PermissoesPrazoSeleciona] @pID UNIQUEIDENTIFIER
AS
    IF @pID = dbo.GuidEmpty()
      BEGIN
          SELECT tbPermissoesPrazo.id
                 ,tbEntidades.Id IdEntidade
                 ,NomeUsual
                 ,tbPermissoesPrazo.Tipo
                 ,Descricao
          FROM   tbPermissoesPrazo
                 ,tbEntidades
          WHERE  tbPermissoesPrazo.idEntidade = tbEntidades.Id
      END
    ELSE
      BEGIN
          SELECT tbPermissoesPrazo.id
                 ,tbEntidades.Id IdEntidade
                 ,NomeUsual
                 ,tbPermissoesPrazo.Tipo
                 ,Descricao
          FROM   tbPermissoesPrazo
                 ,tbEntidades
          WHERE  tbPermissoesPrazo.idEntidade = tbEntidades.Id
             AND tbPermissoesPrazo.ID = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[PessoaExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PessoaExclui
CREATE PROCEDURE [dbo].[PessoaExclui] @pIDEntidade UNIQUEIDENTIFIER
AS
    UPDATE tbEntidades
    SET    Ativo = 0
    WHERE  Id = @pIDEntidade 
GO
/****** Object:  StoredProcedure [dbo].[PessoaSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--PessoaSalva
CREATE PROCEDURE [dbo].[PessoaSalva] @pOP               CHAR
                                    ,@pIDEntidade      UNIQUEIDENTIFIER
                                    ,@pRazaoSocial     VARCHAR(100)
                                    ,@pNomeUsual       VARCHAR(100)
                                    ,@pAtivo           BIT
                                    ,@pPessoa          VARCHAR(100)
                                    ,@pTipo            VARCHAR(100)
                                    ,@pCNPJ            VARCHAR(100)
                                    ,@pIE              VARCHAR(100)
                                    ,@pEndereco        VARCHAR(100)
                                    ,@pBairro          VARCHAR(100)
                                    ,@pMunicipio       VARCHAR(100)
                                    ,@pUF              CHAR(2)
                                    ,@pCep             VARCHAR(100)
                                    ,@pFone            VARCHAR(100)
                                    ,@pFax             VARCHAR(100)
                                    ,@pContato         VARCHAR(100)
                                    ,@pdtCadastro      VARCHAR(10)
                                    ,@pdtNascFund      VARCHAR(10)
                                    ,@pSerasa          VARCHAR(15)
                                    ,@pFone0800        VARCHAR(50)
                                    ,@pObs             NVARCHAR(300)
                                    ,@pEmail           VARCHAR(50)
                                    ,@pEmissor         VARCHAR(10)
                                    ,@pIdCidade        UNIQUEIDENTIFIER
                                    ,@pNumero          NVARCHAR(50)
                                    ,@pComplemento	   NVARCHAR(50)	
                                    ,@pSuframa         NVARCHAR(20)	
AS
    DECLARE @pID UNIQUEIDENTIFIER
    DECLARE @TemFunc INT

    IF @pOP = 'I'
      BEGIN
		  SET @pID = newid()
          INSERT INTO tbEntidades
                      (Id
                       ,Tipo
                       ,Pessoa
                       ,RzSocial
                       ,NomeUsual
                       ,Ativo
                       ,CNPJ
                       ,IE
                       ,Endereco
                       ,Bairro
                       ,Municipio
                       ,UF
                       ,Cep
                       ,Fone
                       ,Fax
                       ,Contato
                       ,dtCadastro
                       ,dtNascFund
                       ,Obs
                       ,Serasa
                       ,Fone0800
                       ,Email
                       ,Emissor
                       ,IdCidade
                       ,Numero
                       ,Complemento
                       ,Suframa)
          VALUES     ( @pID
                       ,@pTipo
                       ,@pPessoa
                       ,@pRazaoSocial
                       ,@pNomeUsual
                       ,@pAtivo
                       ,@pCNPJ
                       ,@pIE
                       ,@pEndereco
                       ,@pBairro
                       ,@pMunicipio
                       ,@pUF
                       ,@pCep
                       ,@pFone
                       ,@pFax
                       ,@pContato
                       ,CONVERT(SMALLDATETIME, @pdtCadastro, 103)
                       ,CONVERT(SMALLDATETIME, @pdtNascFund, 103)
                       ,@pObs
                       ,@pSerasa
                       ,@pFone0800
                       ,@pEmail
                       ,@pEmissor
                       ,@pIdCidade
                       ,@pNumero
                       ,@pComplemento
                       ,@pSuframa)

          IF @pTipo = 'FU'
            BEGIN
                INSERT INTO tbFuncs
                            (idPosto
                             ,idEntidade)
                VALUES      ((SELECT Id FROM tbPostos WHERE NomeUsual = 'Central')
                             ,@pID)
            END
      END
    ELSE
      BEGIN
	      SET @pID=@pIDEntidade
		  
          UPDATE tbEntidades
          SET    Pessoa = @pPessoa
                 ,Tipo = @pTipo
                 ,RzSocial = @pRazaoSocial
                 ,NomeUsual = @pNomeUsual
                 ,Ativo = @pAtivo
                 ,CNPJ = @pCNPJ
                 ,IE = @pIE
                 ,Endereco = @pEndereco
                 ,Bairro = @pBairro
                 ,Municipio = @pMunicipio
                 ,UF = @pUF
                 ,Cep = @pCep
                 ,Fone = @pFone
                 ,Fax = @pFax
                 ,Contato = @pContato
                 ,dtCadastro = CONVERT(SMALLDATETIME, @pdtCadastro, 103)
                 ,dtNascFund = CONVERT(SMALLDATETIME, @pdtNascFund, 103)
                 ,Obs = @pObs
                 ,Serasa = @pSerasa
                 ,Fone0800 = @pFone0800
                 ,email = @pEmail
                 ,Emissor = @pEmissor
                 ,IdCidade = @pIdCidade
                 ,Numero = @pNumero
                 ,Complemento = @pComplemento
                 ,Suframa = @pSuframa
          WHERE  Id = @pIDEntidade

          SET @TemFunc = Isnull((SELECT COUNT(idEntidade)
                                 FROM   tbFuncs
                                 WHERE  idEntidade = @pIDEntidade), 0)

          IF @pTipo = 'FU'
             AND @TemFunc = 0
            BEGIN
                INSERT INTO tbFuncs
                            (idPosto
                             ,idEntidade)
                VALUES      ((SELECT Id FROM tbPostos WHERE NomeUsual = 'Central')
                             ,@pID)
            END
      END 
	  
	  SELECT @pID
GO
/****** Object:  StoredProcedure [dbo].[PessoaSalvaDetalhes]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PessoaSalvaDetalhes
CREATE PROCEDURE [dbo].[PessoaSalvaDetalhes] @pPrazo                   BIT
                                            ,@pCartaFrete             BIT
                                            ,@pCheque3                BIT
                                            ,@pLimite                 MONEY
                                            ,@pProxFechamento         SMALLDATETIME
                                            ,@pTolerancia             INT
                                            ,@pEspecial               BIT
                                            ,@pFornComb               BIT
                                            ,@pTransportadora         BIT
                                            ,@pCombustivel            BIT
                                            ,@pLubrificante           BIT
                                            ,@pConveniencia           BIT
                                            ,@pIDEntidade             UNIQUEIDENTIFIER
                                            ,@pDiasCheque             INT
                                            ,@pPagaChequePrazo        INT
                                            ,@pPrazoFornecedor        BIT
                                            ,@pConvenio               UNIQUEIDENTIFIER = NULL
                                            ,@pContador               BIT = 0
                                            ,@pCheque                 BIT=0
                                            ,@pSenhaPrazo             NVARCHAR(15)
                                            ,@pVendaCadastrou         UNIQUEIDENTIFIER = NULL
                                            ,@pObsComercial           NVARCHAR(2000)
                                            ,@pNVendasPrazo           FLOAT
                                            ,@pOperadoraCartao        BIT
                                            ,@pLiberadoPagarComCartao BIT
                                            ,@pSerasa                 VARCHAR(15)
                                            ,@pIdPostoCadastro        UNIQUEIDENTIFIER
AS
    UPDATE tbEntidades
    SET    Prazo = @pPrazo
           ,CartaFrete = @pCartaFrete
           ,Cheque = @pCheque
           ,Cheque3 = @pCheque3
           ,Limite = @pLimite
           ,ProxFechamento = @pProxFechamento
           ,Tolerancia = @pTolerancia
           ,Especial = @pEspecial
           ,FornComb = @pFornComb
           ,Transportadora = @pTransportadora
           ,Combustivel = @pCombustivel
           ,Lubrificante = @pLubrificante
           ,Conveniencia = @pConveniencia
           ,DiaFechamento = @pDiasCheque
           ,PagaChequePrazo = @pPagaChequePrazo
           ,PrazoFornecedor = @pPrazoFornecedor
           ,IdConvenio = @pConvenio
           ,Contador = @pContador
           ,SenhaPrazo = @pSenhaPrazo
           ,IdVendaCadastrou = @pVendaCadastrou
           ,ObsComercial = @pObsComercial
           ,NvendasPrazo = @pNVendasPrazo
           ,OperadoraCartao = @pOperadoraCartao
           ,LiberadopagarComCartao = @pLiberadoPagarComCartao
           ,Serasa = @pSerasa
           ,IdPostoCadastro = @pIdPOstoCadastro
    WHERE  ( Id = @pIDEntidade )

    IF @pCombustivel = 0
      BEGIN
          DELETE FROM tbCotacao
          WHERE  idEntidade = @pIDENtidade
      END 
GO
/****** Object:  StoredProcedure [dbo].[PessoaSalvaPDV]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PessoaSalvaPDV
CREATE PROCEDURE [dbo].[PessoaSalvaPDV] @pOP           CHAR
                                       ,@pIDEntidade  UNIQUEIDENTIFIER
                                       ,@pRazaoSocial VARCHAR(100)
                                       ,@pNomeUsual   VARCHAR(100)
                                       ,@pPessoa      VARCHAR(100)
                                       ,@pTipo        VARCHAR(100)
                                       ,@pCNPJ        VARCHAR(100)
                                       ,@pIE          VARCHAR(100)
                                       ,@pEndereco    VARCHAR(100)
                                       ,@pBairro      VARCHAR(100)
                                       ,@pMunicipio   VARCHAR(100)
                                       ,@pUF          CHAR(2)
                                       ,@pCep         VARCHAR(100)
                                       ,@pdtNascFund  SMALLDATETIME
                                       ,@pOBS         VARCHAR(100)
                                       ,@pSerasa      VARCHAR(15)
                                       ,@pEmail       VARCHAR(50)
                                       ,@pEmissor     VARCHAR(20)
AS
    DECLARE @pID UNIQUEIDENTIFIER

    IF @pOP = 'I'
      BEGIN
		  SET @pID = newid()
          INSERT INTO tbEntidades
                      (Id
                       ,Tipo
                       ,Pessoa
                       ,RzSocial
                       ,NomeUsual
                       ,CNPJ
                       ,IE
                       ,Endereco
                       ,Bairro
                       ,Municipio
                       ,UF
                       ,Cep
                       ,dtNascFund
                       ,Obs
                       ,Serasa
                       ,Email
                       ,Ativo
                       ,Emissor)
          VALUES     ( @pID
                       ,@pTipo
                       ,@pPessoa
                       ,@pRazaoSocial
                       ,@pNomeUsual
                       ,@pCNPJ
                       ,@pIE
                       ,@pEndereco
                       ,@pBairro
                       ,@pMunicipio
                       ,@pUF
                       ,@pCep
                       ,@pdtNascFund
                       ,@pObs
                       ,@pSerasa
                       ,@pEmail
                       ,1
                       ,@pEmissor)

          SELECT @pID
      END
    ELSE
      BEGIN
          UPDATE tbEntidades
          SET    Pessoa = @pPessoa
                 ,RzSocial = @pRazaoSocial
                 ,NomeUsual = @pNomeUsual
                 ,CNPJ = @pCNPJ
                 ,IE = @pIE
                 ,Endereco = @pEndereco
                 ,Bairro = @pBairro
                 ,Municipio = @pMunicipio
                 ,UF = @pUF
                 ,Cep = @pCep
                 ,dtNascFund = @pdtNascFund
                 ,Obs = @pObs
                 ,Serasa = @pSerasa
                 ,Email = @pEmail
                 ,Emissor = @pEmissor
          WHERE  Id = @pIDEntidade

          SELECT @pIDEntidade
      END 
GO
/****** Object:  StoredProcedure [dbo].[PessoaSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PessoaSeleciona
CREATE PROCEDURE [dbo].[PessoaSeleciona] @pIDEntidade UNIQUEIDENTIFIER
AS
    SELECT *
           ,(SELECT Count(ID)
             FROM   tbPrecosEspeciais
             WHERE  idEntidade = @pIDEntidade)        AS PrecoEspecial
           ,Isnull(Limite, 0)                         AS LimiteCliente
           ,Isnull((SELECT Sum (CASE idTipo
                                  WHEN 'RC' THEN Valor
                                  WHEN 'AR' THEN Valor *- 1
                                END)
                    FROM   tbContasPagarReceber
                    WHERE  idEntidade = @pIDEntidade
                       AND ( idTipo = 'AR'
                              OR IDTIPO = 'RC' )), 0) AS SaldoContaCorrente
    FROM   tbEntidades
    WHERE  Id = @pIDEntidade 
GO
/****** Object:  StoredProcedure [dbo].[PlanodeContas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PlanodeContas
CREATE PROCEDURE [dbo].[PlanodeContas] @pCodConta UNIQUEIDENTIFIER
AS
    DELETE tbPlanoContas
    WHERE  Id = @pCodConta 
GO
/****** Object:  StoredProcedure [dbo].[PlanoDeContasExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PlanoDeContasExclui
CREATE PROCEDURE [dbo].[PlanoDeContasExclui] @pCodConta UNIQUEIDENTIFIER
AS
    DELETE FROM tbPlanoContas
    WHERE  Id = @pCodConta 
GO
/****** Object:  StoredProcedure [dbo].[PlanoDeContasSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PlanoDeContasSalva
CREATE PROCEDURE [dbo].[PlanoDeContasSalva] @pOP                 CHAR
                                           ,@pCodConta          UNIQUEIDENTIFIER
                                           ,@pDescricao         VARCHAR(50)
                                           ,@pTipo              VARCHAR(1)
                                           ,@pCodContaExtendido VARCHAR(10)
                                           ,@pNivel             INT
AS
    IF @pOP = 'I'
      BEGIN
          INSERT INTO tbPlanoContas
                      (Descricao
                       ,Tipo
                       ,CodContaExtendido
                       ,Nivel)
          VALUES     (@pDescricao
                      ,@pTipo
                      ,@pCodContaExtendido
                      ,@pNivel)
      END
    ELSE
      BEGIN
          UPDATE tbPlanoContas
          SET    Descricao = @pDescricao
                 ,Tipo = @pTipo
                 ,CodContaExtendido = @pCodContaExtendido
                 ,Nivel = @pNivel
          WHERE  Id = @pCodConta
      END 
GO
/****** Object:  StoredProcedure [dbo].[PlanoDeContasSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PlanoDeContasSeleciona
CREATE PROCEDURE [dbo].[PlanoDeContasSeleciona] @pCodConta UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbPlanoContas
    WHERE  Id = @pCodConta 
GO
/****** Object:  StoredProcedure [dbo].[PostoExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PostoExclui
CREATE PROCEDURE [dbo].[PostoExclui] @pIDPosto UNIQUEIDENTIFIER
AS
    UPDATE tbPostos
    SET    Ativo = 0
    WHERE  Id = @pIDPosto

    UPDATE tbTanques
    SET    Ativo = 0
           ,Inativoem = getDate()
    WHERE  idPosto = @pIDposto

    UPDATE tbBombas
    SET    Ativo = 0
           ,Inativoem = getDate()
    WHERE  idPosto = @pIDposto 
GO
/****** Object:  StoredProcedure [dbo].[PostoSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PostoSalva
CREATE PROCEDURE [dbo].[PostoSalva] @pOP             CHAR
                                   ,@pIdposto       UNIQUEIDENTIFIER
                                   ,@pRazaoSocial   VARCHAR(100)
                                   ,@pNomeUsual     VARCHAR(100)
                                   ,@pAtivo         BIT
                                   ,@pRede          VARCHAR(15)
                                   ,@pCNPJ          VARCHAR(20)
                                   ,@pIE            VARCHAR(16)
                                   ,@pEndereco      VARCHAR(100)
                                   ,@pBairro        VARCHAR(30)
                                   ,@pMunicipio     UNIQUEIDENTIFIER
                                   ,@pUF            CHAR(2)
                                   ,@pCep           VARCHAR(15)
                                   ,@pFone          VARCHAR(15)
                                   ,@pFax           VARCHAR(15)
                                   ,@pContato       UNIQUEIDENTIFIER
                                   ,@pContador      UNIQUEIDENTIFIER
                                   ,@pGerente       UNIQUEIDENTIFIER
                                   ,@pContaCorrente UNIQUEIDENTIFIER
                                   ,@pHorarioFunc   VARCHAR
                                   ,@pAluguelMensal FLOAT
                                   ,@pValorContador MONEY
                                   ,@pInternet      VARCHAR(50)
                                   ,@pValorInternet MONEY
                                   ,@pObs           VARCHAR(500)
                                   ,@pMetaDespesa   BIT
AS
    IF @pOP = 'I'
      BEGIN
          SET @pIdposto = newid()
          INSERT INTO tbPostos
                      (Id
                       ,RzSocial
                       ,NomeUsual
                       ,Ativo
                       ,Rede
                       ,CNPJ
                       ,IE
                       ,Endereco
                       ,Bairro
                       ,IdMunicipio
                       ,UF
                       ,Cep
                       ,Fone
                       ,Fax
                       ,IdContato
                       ,IdContador
                       ,IdGerenteGeral
                       ,IdContaCorrente
                       ,HorarioFunc
                       ,AluguelMensal
                       ,ValorContador
                       ,Internet
                       ,ValorInternet
                       ,Obs
                       ,MetaDespesa)
          VALUES     ( @pIdposto
                       ,@pRazaoSocial
                       ,@pNomeUsual
                       ,@pAtivo
                       ,@pRede
                       ,@pCNPJ
                       ,@pIE
                       ,@pEndereco
                       ,@pBairro
                       ,@pMunicipio
                       ,@pUF
                       ,@pCep
                       ,@pFone
                       ,@pFax
                       ,@pContato
                       ,@pContador
                       ,@pGerente
                       ,@pContaCorrente
                       ,@pHorarioFunc
                       ,@pAluguelMensal
                       ,@pValorContador
                       ,@pInternet
                       ,@pValorInternet
                       ,@pObs
                       ,@pMetaDespesa )

          INSERT INTO tbProdutosPostos
                      (idPosto
                       ,idProduto
                       ,Estoque
                       ,PrecoCusto
                       ,PrecoVenda)
          SELECT @pIdposto
                 ,Id
                 ,0
                 ,0
                 ,0
          FROM   tbProdutos
      END
    ELSE
      BEGIN
          UPDATE tbPostos
          SET    RzSocial = @pRazaoSocial
                 ,NomeUsual = @pNomeUsual
                 ,Ativo = @pAtivo
                 ,Rede = @pRede
                 ,CNPJ = @pCNPJ
                 ,IE = @pIE
                 ,Endereco = @pEndereco
                 ,Bairro = @pBairro
                 ,IdMunicipio = @pMunicipio
                 ,UF = @pUF
                 ,Cep = @pCep
                 ,Fone = @pFone
                 ,Fax = @pFax
                 ,IdContato = @pContato
                 ,IdContador = @pContador
                 ,IdGerenteGeral = @pGerente
                 ,IdContaCorrente = @pContaCorrente
                 ,HorarioFunc = @pHorarioFunc
                 ,AluguelMensal = @pAluguelMensal
                 ,ValorContador = @pValorContador
                 ,Internet = @pInternet
                 ,ValorInternet = @pValorInternet
                 ,Obs = @pObs
                 ,MetaDespesa = @pMetaDespesa
          WHERE  Id = @pIDPosto
      END 
GO
/****** Object:  StoredProcedure [dbo].[PostoSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PostoSeleciona
CREATE PROCEDURE [dbo].[PostoSeleciona] @pIdposto UNIQUEIDENTIFIER
AS
    SELECT *
           ,(SELECT TOP 1 Id
             FROM   tbCaixa
             WHERE  idPosto = @pidPosto
             ORDER BY DataFechamento DESC) AS IDCaixa
    FROM   tbPostos
    WHERE  Id = @pIDPosto 
GO
/****** Object:  StoredProcedure [dbo].[PrecoEspecialExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PrecoEspecialExclui
CREATE PROCEDURE [dbo].[PrecoEspecialExclui] @pID UNIQUEIDENTIFIER
AS
    DELETE tbPrecosEspeciais
    WHERE  id = @pID 
GO
/****** Object:  StoredProcedure [dbo].[PrecoEspecialSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PrecoEspecialSalva
CREATE PROCEDURE [dbo].[PrecoEspecialSalva] @pID             UNIQUEIDENTIFIER
                                           ,@pIDEntidade    UNIQUEIDENTIFIER
                                           ,@pIdProduto     UNIQUEIDENTIFIER
                                           ,@pPrecoEspecial MONEY
                                           ,@pDiferenca     MONEY
                                           ,@pFixo          BIT
AS
    IF @pID = dbo.GuidEmpty()
      BEGIN
          SET @pID = newid()
          INSERT INTO tbPrecosEspeciais
                      (Id
					   ,idEntidade
                       ,idProduto
                       ,PrecoEspecial
                       ,Diferenca
                       ,Fixo)
          VALUES     (@pID
		              ,@pIDEntidade
                      ,@pIDProduto
                      ,@pPrecoEspecial
                      ,@pDiferenca
                      ,@pFixo)
      END
    ELSE
      BEGIN
          UPDATE tbPrecosEspeciais
          SET    PrecoEspecial = @pPrecoEspecial
                 ,Diferenca = @pDiferenca
                 ,Fixo = @pFixo
          WHERE  id = @pID
      END 
	
	SELECT @pID
GO
/****** Object:  StoredProcedure [dbo].[PrecoEspecialSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--PrecoEspecialSeleciona
CREATE PROCEDURE [dbo].[PrecoEspecialSeleciona] @pID UNIQUEIDENTIFIER
AS
    SELECT dbo.tbPrecosEspeciais.idEntidade
           ,dbo.tbPrecosEspeciais.idProduto
           ,dbo.tbPrecosEspeciais.PrecoEspecial
           ,CONVERT(NVARCHAR(4), dbo.tbPrecosEspeciais.idEntidade)
            + ' - ' + dbo.tbEntidades.NomeUsual AS Cliente
           ,CONVERT(NVARCHAR(4), dbo.tbPrecosEspeciais.idProduto)
            + ' - ' + dbo.tbProdutos.Descricao  AS Produto
           ,Fixo
    FROM   dbo.tbPrecosEspeciais
           INNER JOIN dbo.tbEntidades
                   ON dbo.tbPrecosEspeciais.idEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbProdutos
                   ON dbo.tbPrecosEspeciais.idProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbPrecosEspeciais.id = @pID ) 
GO
/****** Object:  StoredProcedure [dbo].[procSelecionaSumarizacaoCaixaNoDia]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[procSelecionaSumarizacaoCaixaNoDia]
	@pIdPosto	uniqueidentifier,
	@pIdPontoVenda uniqueidentifier,
	@pDataMovimento	datetime
	AS

	/*
		Descrição: Seleciona a sumarização dos caixas no dia e retorna os dados.
		Autor....: MangaTech - Alysson Estevam
		Data.....: 17/05/2021
		Ex.......: EXEC [dbo].[procSelecionaSumarizacaoCaixaNoDia] 'A94EB478-1BCF-4A4E-9039-0748EC51BBE0', '2021-03-01 00:00:00'
	*/

	BEGIN
		SELECT SUM(TotalCombustivel) AS TotalCombustivel,
               SUM(TotalLubrificante) AS TotalLubrificante,
               SUM(TotalConveniencia) AS TotalConveniencia,
               SUM(TotalPrecoEspecial) AS TotalPrecoEspecial,
			   SUM(TotalPrecoFormaPag) As TotalPrecoFormaPag,
               SUM(TotalPromocao) AS TotalPromocao,
               SUM(TotalVendas) AS TotalVendas,
               SUM(TotalDinheiro) AS TotalDinheiro,
               SUM(TotalPrazo) AS TotalPrazo,
               SUM(TotalCartaoCredito) AS TotalCartaoCredito,
               SUM(TotalCartaoDebito) AS TotalCartaoDebito,
               SUM(TotalPix) AS TotalPix,
               SUM(TotalChequeVista) AS TotalChequeVista,
               SUM(TotalChequePrazo) AS TotalChequePrazo,
               SUM(TotalRetiradas) AS TotalRetiradas,
               SUM(TotalQuebraSobraCaixa) AS TotalQuebraSobraCaixa
			FROM [dbo].[tbSumarizacaoCaixa] tsc WITH(NOLOCK)
	            INNER JOIN [dbo].[tbCaixa] tc WITH(NOLOCK)
		            ON tc.Id = tsc.IdCaixa
            WHERE tsc.DataMovimento = @pDataMovimento
	              AND tc.IdPosto = @pIdPosto
				  AND tc.IdPontoVenda = @pIdPontoVenda
	END
GO
/****** Object:  StoredProcedure [dbo].[ProdutoBarraSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ProdutoBarraSeleciona
CREATE PROCEDURE [dbo].[ProdutoBarraSeleciona] @pBarra VARCHAR(50)
AS
    SELECT *
    FROM   tbProdutos
    WHERE  CodigoBarras = @pBarra 
GO
/****** Object:  StoredProcedure [dbo].[ProdutoExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ProdutoExclui
CREATE PROCEDURE [dbo].[ProdutoExclui] @pIDProduto UNIQUEIDENTIFIER
AS
    DELETE tbProdutos
    WHERE  Id = @pIDProduto 
GO
/****** Object:  StoredProcedure [dbo].[ProdutoPostoBarraSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ProdutoPostoBarraSeleciona
CREATE PROCEDURE [dbo].[ProdutoPostoBarraSeleciona] @pIdposto UNIQUEIDENTIFIER
                                                   ,@pBarra  VARCHAR(50)
AS
    SELECT dbo.tbProdutosPostos.idProduto
           ,dbo.tbProdutos.Descricao
           ,dbo.tbProdutosPostos.PrecoCusto
           ,dbo.tbProdutosPostos.PrecoVenda
           ,dbo.tbProdutosPostos.Estoque
    FROM   dbo.tbProdutos
           INNER JOIN dbo.tbProdutosPostos
                   ON dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
    GROUP  BY dbo.tbProdutosPostos.idProduto
              ,dbo.tbProdutos.Descricao
              ,dbo.tbProdutosPostos.PrecoCusto
              ,dbo.tbProdutosPostos.PrecoVenda
              ,dbo.tbProdutosPostos.Estoque
              ,dbo.tbProdutos.CodigoBarras
              ,dbo.tbProdutosPostos.idPosto
    HAVING ( dbo.tbProdutosPostos.idPosto = @pIDPosto )
           AND ( dbo.tbProdutos.CodigoBarras = @pBarra ) 
GO
/****** Object:  StoredProcedure [dbo].[ProdutoPostoBarraSelecionaNovo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--ProdutoPostoBarraSelecionaNovo
CREATE PROCEDURE [dbo].[ProdutoPostoBarraSelecionaNovo]
@pIdposto  UNIQUEIDENTIFIER
,@pProduto VARCHAR(50)
AS
    SELECT dbo.tbProdutosPostos.idProduto
           ,dbo.tbProdutos.Descricao
           ,dbo.tbProdutosPostos.PrecoCusto
           ,dbo.tbProdutosPostos.PrecoVenda
           ,dbo.tbProdutosPostos.Estoque
    FROM   dbo.tbProdutos
           INNER JOIN dbo.tbProdutosPostos
                   ON dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
    GROUP  BY dbo.tbProdutosPostos.idProduto
              ,dbo.tbProdutos.Descricao
              ,dbo.tbProdutosPostos.PrecoCusto
              ,dbo.tbProdutosPostos.PrecoVenda
              ,dbo.tbProdutosPostos.Estoque
              ,dbo.tbProdutos.CodigoBarras
              ,dbo.tbProdutosPostos.idPosto
    HAVING ( dbo.tbProdutosPostos.idPosto = @pIDPosto )
           AND ( dbo.tbProdutos.CodigoBarras = @pProduto ) 

GO
/****** Object:  StoredProcedure [dbo].[ProdutoPostoSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ProdutoPostoSalva
CREATE PROCEDURE [dbo].[ProdutoPostoSalva] @pIdProduto   UNIQUEIDENTIFIER
                                          ,@pIdposto    UNIQUEIDENTIFIER
                                          ,@pEstoque    FLOAT
                                          ,@pPrecoCusto MONEY
                                          ,@pPrecoVenda MONEY
AS
    DECLARE @existe INT

    SET @existe = (SELECT Isnull(count(idProduto), 0)
                   FROM   tbProdutosPostos
                   WHERE  idProduto = @pIDProduto
                      AND idPosto = @pIDPosto)

    IF @existe = 0
      BEGIN
          INSERT INTO tbProdutosPostos
                      (idPosto
                       ,idProduto
                       ,Estoque
                       ,PrecoCusto
                       ,PrecoVenda
                       ,ValidacaoEstoque)
          VALUES      (@pIDPosto
                       ,@pIDProduto
                       ,@pEstoque
                       ,@pPrecoCusto
                       ,@pPrecoVenda
                       ,CAST(@pIDProduto AS VARCHAR(max))
                        + CAST(@pPrecoVenda AS VARCHAR(max)))
      END
GO
/****** Object:  StoredProcedure [dbo].[ProdutoPostoSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ProdutoPostoSeleciona
CREATE PROCEDURE [dbo].[ProdutoPostoSeleciona] @pIdProduto UNIQUEIDENTIFIER
                                              ,@pIdposto  UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbProdutosPostos
    WHERE  IDProduto = @pIDProduto
       AND idPosto = @pIDPosto 
GO
/****** Object:  StoredProcedure [dbo].[ProdutoSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ProdutoSalva
CREATE PROCEDURE [dbo].[ProdutoSalva] @pOP                 CHAR
									,@pIdProduto         UNIQUEIDENTIFIER
									,@pCodigoBarra             VARCHAR(40)
									,@pUnidadeMedida     CHAR(2) = NULL
									,@pDescricao         VARCHAR(50)
									,@pPrecoCusto        FLOAT
									,@pPrecoVenda        FLOAT
									,@pTipoAliquota      NCHAR(4)
									,@pAliquota          MONEY

									,@pTipoProd          CHAR(2)
									,@pIAT               CHAR(1)
									,@pIPPT              CHAR(1)
									,@pCST               CHAR(3)
									,@pNCM               NCHAR(10)

									,@pPISCST            nchar(3)
									,@pPISAliquota       money
									,@pCOFINSCST         nchar(3)
									,@pCOFINSAliquota    money
									,@pIdGrupo           UNIQUEIDENTIFIER
									,@pValidacaoProdutos NVARCHAR(200)
									,@pIdUnidadeMedida   UNIQUEIDENTIFIER
AS


    IF @pOP = 'I'
      BEGIN
          SET @pIdProduto = newid()

           INSERT INTO   [dbo].[tbProdutos]
		   (Id
		   ,[CodigoBarras]
		   ,[Descricao]
		   ,[TipoProd]
		   ,[TipoAliquota]
		   ,[Aliquota]
		   ,[ordem]
		   ,[Ativo] 
		   ,[UnidadeMedida]
		   ,[IAT]
		   ,[IPPT]
		   ,[CST]
		   ,[ValidacaoProdutos]
		   ,[NCM]
		   ,[Sincronizado]
		   ,[PISCST]
		   ,[PISAliquota]
		   ,[COFINSCST]
		   ,[COFINSAliquota]
		   ,[IdGrupo]
		   ,[NumProduto]
		   ,[IdUnidadeMedida])
     VALUES
           (@pIdProduto
            ,@pCodigoBarra
           ,@pDescricao
           ,@pTipoProd
           ,@pTipoAliquota
           ,@pAliquota
           ,null
           ,1 --ativo
           ,@pUnidadeMedida
           ,@pIAT
           ,@pIPPT
           ,@pCST
           ,@pValidacaoProdutos
           ,@pNCM
           , 0
           ,@pPISCST
           ,@pPISAliquota
           ,@pCOFINSCST
           ,@pCOFINSAliquota
           ,@pIdGrupo
           ,(select MAX(numproduto) + 1 from tbProdutos)
           ,@pIdUnidadeMedida)
           
           
         INSERT INTO tbProdutosPostos
                      (idPosto
                       ,idProduto
                       ,Estoque
                       ,PrecoCusto
                       ,PrecoVenda
                       ,ValidacaoEstoque
                       ,IdLocal
                        ,Atualizado)
          SELECT Id
                 ,@pIdProduto
                 ,0
                 ,@pPrecoCusto
                 ,@pPrecovenda
                 ,CAST(@pIdProduto AS VARCHAR(max)) + CAST(@pPrecovenda AS VARCHAR(max))
                 ,(select id from tbLocalEstoque where Descricao = 'Indefinido')
                 ,1
          FROM   tbPostos
          WHERE  Ativo = 1
             AND NomeUsual <> 'Central'
      END
    ELSE
      BEGIN
          UPDATE tbProdutos
          SET    Descricao = @pDescricao
				,TipoProd = @pTipoProd
				,Codigobarras = @pCodigoBarra
				,TipoAliquota = @pTipoAliquota
				,Aliquota = @pAliquota
				,IdGrupo = @pIdGrupo
				,IAT = @pIAT
				,IPPT = @pIPPT
				,CST = @pCST
				,ValidacaoProdutos = @pValidacaoProdutos
				,NCM = @pNCM
				,[PISCST] = @pPISCST
				,[PISAliquota] = @pPISAliquota
				,[COFINSCST] = @pCOFINSCST
				,[COFINSAliquota] = @pCOFINSAliquota
				,[UnidadeMedida] = @pUnidadeMedida
				,[IdUnidadeMedida] = @pIdUnidadeMedida
                 
          WHERE  Id = @pIDProduto

      END 
      
SELECT @pIDProduto      
GO
/****** Object:  StoredProcedure [dbo].[ProdutoSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ProdutoSeleciona
CREATE PROCEDURE [dbo].[ProdutoSeleciona] @pIdProduto UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbProdutos
    WHERE  Id = @pIDProduto 
GO
/****** Object:  StoredProcedure [dbo].[ProdutoSelecionaVenda]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ProdutoSelecionaVenda
CREATE PROCEDURE [dbo].[ProdutoSelecionaVenda] @pIdposto    UNIQUEIDENTIFIER
                                              ,@pIdProduto UNIQUEIDENTIFIER
AS
    SELECT dbo.tbProdutos.Id
           ,dbo.tbProdutos.Descricao
           ,dbo.tbProdutosPostos.Estoque
           ,dbo.tbProdutosPostos.PrecoCusto
           ,dbo.tbProdutosPostos.PrecoVenda
    FROM   dbo.tbProdutos
           INNER JOIN dbo.tbProdutosPostos
                   ON dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
    WHERE  ( dbo.tbProdutosPostos.idPosto = @pIDPosto )
       AND ( dbo.tbProdutos.Id = @pIDProduto ) 
GO
/****** Object:  StoredProcedure [dbo].[ProdutosPSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
      
--ProdutosPSalva
CREATE PROCEDURE [dbo].[ProdutosPSalva] @pID         UNIQUEIDENTIFIER
                                       ,@pDescricao VARCHAR (50)
                                       ,@pPreco     MONEY
                                       ,@pIDSite    INT
AS
    DECLARE @Tem INT

    SET @Tem= (SELECT Count(id)
               FROM   tbProdutosP
               WHERE  id = @pID)

    IF @Tem = 0
      BEGIN
          INSERT INTO tbProdutosP
          VALUES      (@pID
                       ,@pDescricao
                       ,@pPreco
                       ,@pIDSite)
      END
    ELSE
      BEGIN
          UPDATE tbProdutosP
          SET    Descricao = @pDescricao
                 ,Preco = @pPreco
                 ,idSite = @pIDSite
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[RefBancExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--RefBancExclui
CREATE PROCEDURE [dbo].[RefBancExclui] @pIDEntidade UNIQUEIDENTIFIER
                                      ,@pItem      UNIQUEIDENTIFIER
AS
    DELETE tbEntidadeRefBanc
    WHERE  idEntidade = @pIDEntidade
       AND Id = @pItem 
GO
/****** Object:  StoredProcedure [dbo].[RefBancSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--RefBancSalva  
CREATE PROCEDURE [dbo].[RefBancSalva] @pOP          CHAR  
                                     ,@pIDEntidade UNIQUEIDENTIFIER  
                                     ,@pID       UNIQUEIDENTIFIER  
                                     ,@pBanco      NVARCHAR(20)  
                                     ,@pAgencia    NVARCHAR(20)  
                                     ,@pConta      NVARCHAR(20)  
                                     ,@pFone       NVARCHAR(20)  
                                     ,@pContato    NVARCHAR(50)  
                                     ,@pContaDesde SMALLDATETIME  
                                     ,@pDocumento  NVARCHAR(50)  
                                     ,@pSerasa     NVARCHAR(50)  
                                     ,@pAtivo      BIT  
AS  
 
    IF @pID = dbo.GuidEmpty()
      BEGIN  
          SET @pID = newid()  
          INSERT INTO tbEntidadeRefBanc  
                      (Id  
                       ,idEntidade  
                       ,banco1  
                       ,Agencia1  
                       ,Conta1  
                       ,FoneBanco1  
                       ,ContatoBanco1  
                       ,ContaDesde1  
                       ,Documento  
                       ,Serasa
					   ,Sincronizado)  
          VALUES     (@pID  
                      ,@pidEntidade  
                      ,@pbanco  
                      ,@pAgencia  
                      ,@pConta  
                      ,@pFone  
                      ,@pContato  
                      ,@pContaDesde  
                      ,@pDocumento  
                      ,@pSerasa
					  ,0)  
           SELECT @pID  
      END  
    ELSE  
      BEGIN  
          UPDATE tbEntidadeRefBanc  
          SET    banco1 = @pBanco  
                 ,Agencia1 = @pAgencia  
                 ,Conta1 = @pConta  
                 ,FoneBanco1 = @pFone  
                 ,ContatoBanco1 = @pContato  
                 ,ContaDesde1 = @pContaDesde  
                 ,Documento = @pDocumento  
                 ,Serasa = @pSerasa  
                 ,Ativo = @pAtivo  
				 ,Sincronizado = 0
          WHERE  idEntidade = @pidEntidade  
             AND Id = @pID  
            
          SELECT @pID  
      END   
GO
/****** Object:  StoredProcedure [dbo].[RefBancSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



create PROCEDURE [dbo].[RefBancSeleciona] @pIDEntidade uniqueidentifier AS
Select teb.*,tb.nome as banconome
from tbEntidadeRefBanc teb 
inner join tbbancos tb on teb.Banco1 = tb.numbanco
where teb.IDEntidade=@pIDEntidade

GO
/****** Object:  StoredProcedure [dbo].[RefComExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--RefComExclui
CREATE PROCEDURE [dbo].[RefComExclui] @pIDEntidade UNIQUEIDENTIFIER
                                     ,@pItem      UNIQUEIDENTIFIER
AS
    DELETE tbEntidadeRefComl
    WHERE  idEntidade = @pIDEntidade
       AND Id = @pItem 
GO
/****** Object:  StoredProcedure [dbo].[RefComSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--RefComSalva
CREATE PROCEDURE [dbo].[RefComSalva] @pOP          CHAR
                                    ,@pIDEntidade UNIQUEIDENTIFIER
                                    ,@pItem       UNIQUEIDENTIFIER
                                    ,@pReferencia VARCHAR(50)
                                    ,@pContato    VARCHAR(50)
                                    ,@pFone       VARCHAR(20)
                                    ,@pOBS        VARCHAR(200)
AS
    IF @pOP = 'I'
      BEGIN
          INSERT INTO tbEntidadeRefComl
                      (idEntidade
                       ,RefComercial
                       ,NomeContato
                       ,Fone
                       ,Obs)
          VALUES     (@pidEntidade
                      ,@pReferencia
                      ,@pContato
                      ,@pFone
                      ,@pObs)
      END
    ELSE
      BEGIN
          UPDATE tbEntidadeRefComl
          SET    RefComercial = @pReferencia
                 ,NomeContato = @pContato
                 ,Fone = @pFone
                 ,Obs = @pOBS
          WHERE  idEntidade = @pidEntidade
             AND Id = @pItem
      END 
GO
/****** Object:  StoredProcedure [dbo].[RefComSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--RefComSeleciona
CREATE PROCEDURE [dbo].[RefComSeleciona] @pIDEntidade UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbEntidadeRefComl
    WHERE  IDEntidade = @pIDEntidade 
GO
/****** Object:  StoredProcedure [dbo].[ResumoItensMovimentoDiario]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ResumoItensMovimentoDiario
CREATE PROCEDURE [dbo].[ResumoItensMovimentoDiario]
@pIdposto      UNIQUEIDENTIFIER
,@pData        SMALLDATETIME
,@pTotalizador NVARCHAR(10)
AS
    SELECT dbo.tbVendasItens.Item
           ,dbo.tbVendasItens.idProduto
           ,dbo.tbVendasItens.Quantidade
           ,dbo.tbVendasItens.PrecoVenda
           ,dbo.tbVendasItens.PrecoEspecial
           ,dbo.tbVendasItens.Cancelado
           ,dbo.tbVendas.Data
           ,dbo.tbProdutos.UnidadeMedida
           ,dbo.tbProdutos.TipoAliquota
           ,dbo.tbVendas.IdEcf
           ,dbo.tbVendas.DataMovimento
    FROM   dbo.tbVendas
           INNER JOIN dbo.tbVendasItens
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbVendas.idPosto = @pIdPOsto )
       AND ( dbo.tbProdutos.TipoAliquota = @pTotalizador )
       AND ( dbo.tbVendas.DataMovimento = @pData ) 
GO
/****** Object:  StoredProcedure [dbo].[RetiradasSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[RetiradasSalva] 
										 @pIDCaixa         UNIQUEIDENTIFIER
										,@pIdPosto         UNIQUEIDENTIFIER
										,@pvalor       money
                                        ,@pEspecie    VARCHAR(2)
                                        ,@pCOO int
AS

declare @id uniqueidentifier
set @id = NEWID()

INSERT INTO [dbo].[tbRetiradas]
           (id
		   ,[valor]
           ,[Depositado]
           ,[Especie]
           ,[COO]
           ,[IdPosto]
           ,[IdCaixa])
     VALUES
           (@id
           ,@pvalor
           ,0 -- DEPOSITADO
           ,@pEspecie
           ,@pCOO
           ,@pIdPosto
           ,@pIDCaixa)
           
select @id           
GO
/****** Object:  StoredProcedure [dbo].[rptAdiantamentos]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptAdiantamentos
CREATE PROCEDURE [dbo].[rptAdiantamentos] @pID UNIQUEIDENTIFIER
AS
    SELECT dbo.tbEntidades.NomeUsual
           ,dbo.tbAdiantamento.Descricao
           ,dbo.tbAdiantamento.Data
           ,dbo.tbAdiantamento.Valor
           ,dbo.tbAdiantamentoItem.NotaFiscal
           ,dbo.tbAdiantamentoItem.Descricao AS DescItem
           ,dbo.tbAdiantamentoItem.Data      AS DataItem
           ,dbo.tbAdiantamentoItem.Valor     AS ValorItem
    FROM   dbo.tbAdiantamento  with (nolock)
           INNER JOIN dbo.tbEntidades  with (nolock)
                   ON dbo.tbAdiantamento.idPessoa = dbo.tbEntidades.Id
           RIGHT OUTER JOIN dbo.tbAdiantamentoItem  with (nolock)
                         ON dbo.tbAdiantamento.id =
                            dbo.tbAdiantamentoItem.idAdiantamento
    WHERE  ( dbo.tbAdiantamento.id = @pID ) 

GO
/****** Object:  StoredProcedure [dbo].[rptAdmFazendariaLMC]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptAdmFazendariaLMC
CREATE PROCEDURE [dbo].[rptAdmFazendariaLMC] @pIdposto  UNIQUEIDENTIFIER
                                            ,@pDataFim SMALLDATETIME
AS
    SELECT dbo.tbLMC.Livro
           ,dbo.tbLMC.Data
           ,dbo.tbLMC.Pagina
           ,dbo.tbProdutos.Descricao
           ,dbo.tbPostos.NomeUsual
    FROM   dbo.tbLMC  with (nolock)
           INNER JOIN dbo.tbPostos  with (nolock)
                   ON dbo.tbLMC.IDPosto = dbo.tbPostos.Id
           INNER JOIN dbo.tbProdutos  with (nolock)
                   ON dbo.tbLMC.IDProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbLMC.IDPosto = @pIdPosto )
    GROUP  BY dbo.tbLMC.Livro
              ,dbo.tbLMC.Data
              ,dbo.tbLMC.Pagina
              ,dbo.tbLMC.Tipo
              ,dbo.tbProdutos.Descricao
              ,dbo.tbPostos.NomeUsual
              ,dbo.tbProdutos.Id
    HAVING ( dbo.tbLMC.Data = @pDataFim )
           AND ( dbo.tbLMC.Tipo = 'M' )
    ORDER  BY dbo.tbProdutos.Id 

GO
/****** Object:  StoredProcedure [dbo].[rptAdmFazendariaNotas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptAdmFazendariaNotas
CREATE PROCEDURE [dbo].[rptAdmFazendariaNotas] @pIdposto  UNIQUEIDENTIFIER
                                              ,@pDataIni SMALLDATETIME
                                              ,@pDataFim SMALLDATETIME
AS
    SELECT dbo.tbPedidosItens.idPosto
           ,dbo.tbPedidosItens.idPedido
           ,dbo.tbEntidades.RzSocial               AS Fornecedor
           ,tbProdutos_1.Descricao
           ,tbPostos_1.RzSocial                    AS Posto
           ,dbo.tbPedidosItens.QTD
           ,ISNULL(dbo.tbPedidosItens.VUPro, 0)
            + ISNULL(dbo.tbPedidosItens.VUFrete, 0)
            + ISNULL(dbo.tbPedidosItens.VUGNRE, 0)
            + ISNULL(dbo.tbPedidosItens.VUGARE, 0) AS ValorLitro
           ,dbo.tbPedidosItens.NumeroNota
           ,dbo.tbCaixa.Dia
           ,tbProdutos_1.ordem
           ,dbo.tbPedidosItens.DataNota
           ,tbEntidades_1.RzSocial                 AS NomeGerente
           ,tbEntidades_1.CNPJ                     AS CPFGerente
           ,tbPostos_1.CNPJ
    FROM   dbo.tbPedidosItens with (nolock)
           INNER JOIN dbo.tbPostos AS tbPostos_1  with (nolock) 
                   ON dbo.tbPedidosItens.idPosto = tbPostos_1.Id
           INNER JOIN dbo.tbPedidos  with (nolock)
                   ON dbo.tbPedidosItens.idPedido = dbo.tbPedidos.Id
           INNER JOIN dbo.tbEntidades  with (nolock)
                   ON dbo.tbPedidos.IdEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbProdutos   AS tbProdutos_1 with (nolock)
                   ON dbo.tbPedidosItens.idProduto = tbProdutos_1.Id
           INNER JOIN dbo.tbCaixa  with (nolock)
                   ON dbo.tbPedidosItens.idCaixaRecebimento = dbo.tbCaixa.Id
           INNER JOIN dbo.tbFuncs with (nolock)
                   ON tbPostos_1.Id = dbo.tbFuncs.IdPosto
           INNER JOIN dbo.tbEntidades AS tbEntidades_1 with (nolock)
                   ON dbo.tbFuncs.IdEntidade = tbEntidades_1.Id
    WHERE  ( dbo.tbCaixa.Dia BETWEEN @pDataINI AND @pDataFIM )
       AND ( dbo.tbFuncs.Administrativa = 1 )
       AND ( dbo.tbPedidosItens.idPosto = @pIdposto )
    ORDER  BY tbProdutos_1.Id 

GO
/****** Object:  StoredProcedure [dbo].[rptAmdFazendaria]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptAmdFazendaria
CREATE PROCEDURE [dbo].[rptAmdFazendaria] @pIdposto  UNIQUEIDENTIFIER
                                         ,@pDataIni SMALLDATETIME
                                         ,@pDataFim SMALLDATETIME
AS
    SELECT dbo.tbPostos.RzSocial     AS NomePosto
           ,dbo.tbPostos.CNPJ        AS DocumentoPosto
           ,dbo.tbCidades.Descricao
           ,dbo.tbEntidades.RzSocial AS NomeAdministrativo
           ,dbo.tbEntidades.CNPJ     AS DocumentoAdministrativo
    FROM   dbo.tbPostos   with (nolock)
           INNER JOIN dbo.tbCidades   with (nolock)
                   ON dbo.tbPostos.IdMunicipio = dbo.tbCidades.id
           INNER JOIN dbo.tbFuncs   with (nolock)
                   ON dbo.tbPostos.Id = dbo.tbFuncs.IdPosto
           INNER JOIN dbo.tbEntidades   with (nolock)
                   ON dbo.tbFuncs.IdEntidade = dbo.tbEntidades.Id
    WHERE  ( dbo.tbFuncs.Administrativa = 1 )
       AND ( @pDataFim = @pDataFim )
       AND ( @pDataIni = @pDataIni )
       AND ( dbo.tbPostos.Id = @pIdPOsto ) 

GO
/****** Object:  StoredProcedure [dbo].[rptAmostraTestemunha]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptAmostraTestemunha
CREATE PROCEDURE [dbo].[rptAmostraTestemunha] @pID UNIQUEIDENTIFIER
AS
    SELECT tbProdutos.Descricao
           ,CONVERT(NVARCHAR(15), tbCaixa.DataAbertura, 103) AS data
           ,tbPedidosItens.Lacre
           ,tbPedidosItens.NumeroNota
           ,tbPedidosItens.Motorista
           ,tbPedidosItens.RGMotorista
           ,tbPedidosItens.Placa
           ,tbPedidosItens.FrentistaDescarga                 AS Recebedor
           ,tbPostos.RzSocial
           ,tbPostos.CNPJ                                    AS CNPJP
           ,tbEntidades_1.RzSocial                           AS RecebedorNovo
           ,tbPostos.Endereco
           ,tbPostos.Bairro
           ,tbPostos.UF
           ,tbPostos.CEP
           ,tbPedidosItens.QTD
           ,tbPedidosItens.Aspecto
           ,tbPedidosItens.COR
           ,tbPedidosItens.densidade
           ,tbPedidosItens.Massa
           ,tbPedidosItens.Teor
           ,tbPedidosItens.Teor1
           ,tbPedidosItens.Analista
           ,tbEntidades.CNPJ                                 AS CNPJDistribuidor
           ,tbEntidades.RzSocial                             AS
            RZSocialDistribuidor
           ,tbEntidades_3.RzSocial                           AS RzSocialTransp
           ,tbEntidades_3.CNPJ                               AS CNPJTransp
           ,tbCidades.Descricao                              AS Municipio
    FROM   tbCaixa
           INNER JOIN tbPedidosItens  with (nolock)
                   ON tbCaixa.idPosto = tbPedidosItens.idPosto
                      --AND tbCaixa.Id = tbPedidosItens.idCaixaRecebimento
           INNER JOIN tbPedidosItensRecebidos  with (nolock)
                   ON tbPedidosItens.id = tbPedidosItensRecebidos.idItem
				     AND tbCaixa.Id = tbPedidosItensRecebidos.idCaixaRecebimento
           INNER JOIN tbPedidos  with (nolock)
                   ON tbPedidosItens.idPedido = tbPedidos.Id
           INNER JOIN tbProdutos  with (nolock)
                   ON tbPedidosItens.idProduto = tbProdutos.Id
           INNER JOIN tbEntidades  with (nolock)
                   ON tbPedidos.IdEntidade = tbEntidades.Id
           INNER JOIN tbPostos  with (nolock)
                   ON tbCaixa.idPosto = tbPostos.Id
           INNER JOIN tbEntidades AS tbEntidades_1  with (nolock)
                   ON tbCaixa.idEntidade = tbEntidades_1.Id
           INNER JOIN tbEntidades AS tbEntidades_3  with (nolock)
                   ON tbPedidos.idEntidadeTransp = tbEntidades_3.Id
           INNER JOIN tbCidades  with (nolock)
                   ON tbPostos.IdMunicipio = tbCidades.id
    WHERE  ( tbPedidosItens.Id = @pID ) 


GO
/****** Object:  StoredProcedure [dbo].[rptAniversariantes]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptAniversariantes
CREATE PROCEDURE [dbo].[rptAniversariantes]
AS
    SELECT dbo.tbEntidades.NomeUsual
           ,dbo.tbEntidades.DtNascFund
           ,MONTH(dbo.tbEntidades.DtNascFund) AS Mes
           ,DAY(dbo.tbEntidades.DtNascFund)   AS Dia
           ,dbo.tbFuncs.IdPosto
           ,dbo.tbPostos.NomeUsual            AS Posto
    FROM   dbo.tbFuncs  with (nolock)
           INNER JOIN dbo.tbEntidades  with (nolock)
                   ON dbo.tbFuncs.IdEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbPostos  with (nolock)
                   ON dbo.tbFuncs.IdPosto = dbo.tbPostos.Id
    WHERE  ( dbo.tbEntidades.Tipo = 'FU' ) 

GO
/****** Object:  StoredProcedure [dbo].[rptCadastradoPeloVendas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptCadastradoPeloVendas
CREATE PROCEDURE [dbo].[rptCadastradoPeloVendas] @pVendaCadastrou UNIQUEIDENTIFIER
                                                ,@pDataIni       SMALLDATETIME
                                                ,@pDataFim       SMALLDATETIME
AS
    IF @pVendaCadastrou = dbo.GuidEmpty()
      BEGIN
          SET @pVendaCadastrou = NULL
      END
    
    SELECT SUM(dbo.tbVendasItensPagamento.Valor) AS Valor
           ,dbo.tbProdutos.Descricao
           ,dbo.tbEntidades.RzSocial
           ,dbo.tbProdutos.TipoProd
           ,tbEntidades_1.NomeUsual
    FROM   dbo.tbVendasItensPagamento  with (nolock)
           INNER JOIN dbo.tbVendas  with (nolock)
                   ON dbo.tbVendasItensPagamento.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbVendasItens  with (nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos  with (nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbEntidades  with (nolock)
                   ON dbo.tbVendasItensPagamento.IdEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbEntidades AS tbEntidades_1  with (nolock)
                   ON dbo.tbEntidades.IdVendaCadastrou = tbEntidades_1.Id
    WHERE  ( dbo.tbVendas.DataMovimento BETWEEN @pDataIni AND @pDataFim )
       AND ( dbo.tbEntidades.IdVendaCadastrou = @pVendaCadastrou OR @pVendaCadastrou IS NULL )
    GROUP  BY dbo.tbVendasItens.idProduto
              ,dbo.tbVendasItensPagamento.IdEntidade
              ,dbo.tbEntidades.RzSocial
              ,dbo.tbProdutos.TipoProd
              ,dbo.tbProdutos.Descricao
              ,tbEntidades_1.NomeUsual 

GO
/****** Object:  StoredProcedure [dbo].[rptCartaFreteAReceber]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptCartaFreteAReceber
CREATE PROCEDURE [dbo].[rptCartaFreteAReceber] @pPostoINI    UNIQUEIDENTIFIER
                                              ,@pPostoFIM   UNIQUEIDENTIFIER
                                              ,@pClienteINI UNIQUEIDENTIFIER
                                              ,@pClienteFim UNIQUEIDENTIFIER
AS
    SELECT dbo.tbCartaFrete.idPosto
           ,dbo.tbCartaFrete.IDEntidade
           ,dbo.tbCartaFrete.DataEmissao
           ,dbo.tbCartaFrete.NumNota
           ,dbo.tbCartaFrete.ValorLiquido
           ,dbo.tbPostos.NomeUsual   AS Posto
           ,dbo.tbEntidades.RzSocial AS Cliente
           ,dbo.tbCartaFrete.idEnviada
    FROM   dbo.tbCartaFrete  with (nolock)
           INNER JOIN dbo.tbEntidades  with (nolock)
                   ON dbo.tbCartaFrete.idEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbPostos  with (nolock)
                   ON dbo.tbCartaFrete.IdPosto = dbo.tbPostos.Id
    WHERE  ( dbo.tbCartaFrete.idEnviada IS NULL )
       AND ( dbo.tbCartaFrete.IdPosto BETWEEN @pPostoINI AND @pPostoFIM )
       AND ( dbo.tbCartaFrete.idEntidade BETWEEN @pClienteINI AND @pClienteFIM ) 

GO
/****** Object:  StoredProcedure [dbo].[rptCartaFreteContaCorrente]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--[rptCartaFreteContaCorrente]
CREATE PROCEDURE [dbo].[rptCartaFreteContaCorrente] @pIdposto  UNIQUEIDENTIFIER
                                                   ,@pDataINI SMALLDATETIME
                                                   ,@pDataFIM SMALLDATETIME
AS
    SELECT dbo.tbCartaFreteContaCorrente.id
           ,dbo.tbCartaFreteContaCorrente.idPosto
           ,dbo.tbPostos.NomeUsual
           ,dbo.tbCartaFreteContaCorrente.Data
           ,dbo.tbCartaFreteContaCorrente.Descricao
           ,dbo.tbCartaFreteContaCorrente.Valor
           ,ISNULL ((SELECT SUM(Valor)
                     FROM   tbCartaFreteContaCorrente
                     WHERE  idPOsto = @pIDposto
                        AND data < @pDataINI), 0) AS SaldoAnterior
    FROM   dbo.tbCartaFreteContaCorrente   with (nolock)
           INNER JOIN dbo.tbPostos   with (nolock)
                   ON dbo.tbCartaFreteContaCorrente.idPosto = dbo.tbPostos.Id
    WHERE  ( dbo.tbCartaFreteContaCorrente.idPosto = @pIDPosto )
       AND ( dbo.tbCartaFreteContaCorrente.Data BETWEEN @pDataINI AND @pDataFIM
           ) 

GO
/****** Object:  StoredProcedure [dbo].[rptCartoes]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptCartoes
CREATE PROCEDURE [dbo].[rptCartoes] @pIDpostoINI  UNIQUEIDENTIFIER
                                   ,@pIDPostoFIM UNIQUEIDENTIFIER
                                   ,@pDataINI    SMALLDATETIME
                                   ,@pDataFIM    SMALLDATETIME
AS
    SELECT dbo.tbEntidades.NomeUsual + ' - ' + CASE
           dbo.tbContasPagarReceber.IdTipoDocto
           WHEN 'CC' THEN 'Crédito' WHEN 'CD' THEN 'Débito' END AS Descricao
           ,SUM(dbo.tbContasPagarReceber.Valor)                 AS Valor
           ,AVG(dbo.tbContasPagarReceber.TaxaCartao)            AS Desconto
           ,dbo.tbPostos.NomeUsual                              AS Posto
           ,dbo.tbContasPagarReceber.DataVencto
    FROM   dbo.tbContasPagarReceber
           INNER JOIN dbo.tbEntidades
                   ON dbo.tbContasPagarReceber.idEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbPostos
                   ON dbo.tbContasPagarReceber.idPosto = dbo.tbPostos.Id
    WHERE  ( dbo.tbContasPagarReceber.idTipo = 'AR' )
       AND ( dbo.tbContasPagarReceber.idPosto BETWEEN
             @pIDPostoINI AND @pIDPostoFIM )
    GROUP  BY dbo.tbEntidades.NomeUsual
              ,dbo.tbContasPagarReceber.IdTipoDocto
              ,dbo.tbContasPagarReceber.DataVencto
              ,dbo.tbContasPagarReceber.IdTipoDocto
              ,dbo.tbPostos.NomeUsual
    HAVING ( dbo.tbContasPagarReceber.IdTipoDocto = N'CC'
              OR dbo.tbContasPagarReceber.IdTipoDocto = N'CD' )
           AND ( dbo.tbContasPagarReceber.DataVencto BETWEEN
                 @pDataINI AND @pDataFIM
               )
    ORDER  BY dbo.tbContasPagarReceber.DataVencto
              ,dbo.tbEntidades.NomeUsual 

GO
/****** Object:  StoredProcedure [dbo].[rptCestaBasica]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptCestaBasica
CREATE PROCEDURE [dbo].[rptCestaBasica] @pIdposto      UNIQUEIDENTIFIER
                                       ,@pColaborador UNIQUEIDENTIFIER
                                       ,@pMes         NVARCHAR(2)
                                       ,@pAno         NVARCHAR(4)
AS
    IF @pIDPosto = dbo.GuidEmpty()
      BEGIN
          SET @pIDPosto = NULL
      END
    
    IF @pColaborador = dbo.GuidEmpty()
      BEGIN
          SET @pColaborador = NULL
      END
    
    SELECT dbo.tbEntidades.RzSocial AS Colaborador
           ,dbo.tbPostos.RzSocial   AS Posto
           ,dbo.tbPostos.CNPJ
           ,dbo.tbPostos.ValeAlimentacao
           ,tbEntidades_1.RzSocial  AS Administrativa
           ,dbo.tbEntidades.CNPJ    AS [Documento Colaborador]
           ,dbo.tbCidades.Descricao AS Cidade
    FROM   dbo.tbEntidades
           INNER JOIN dbo.tbPostos  with (nolock)
                   ON dbo.tbEntidades.idPostoCadastro = dbo.tbPostos.Id
           INNER JOIN dbo.tbEntidades AS tbEntidades_1  with (nolock)
                      INNER JOIN dbo.tbFuncs  with (nolock)
                              ON tbEntidades_1.Id = dbo.tbFuncs.IdEntidade
                   ON dbo.tbPostos.Id = dbo.tbFuncs.IdPosto
           INNER JOIN dbo.tbCidades  with (nolock)
                   ON dbo.tbPostos.IdMunicipio = dbo.tbCidades.id
    WHERE  ( dbo.tbEntidades.Tipo = 'FU' )
       AND ( dbo.tbFuncs.Administrativa = 1 )
       AND ( dbo.tbPostos.Id = @pIdPosto OR @pIdPosto IS NULL )
       AND ( dbo.tbEntidades.Id = @pColaborador OR @pColaborador IS NULL )
       AND @pMes = @pMes
       AND @pAno = @pAno
    ORDER  BY dbo.tbPostos.Id
              ,dbo.tbEntidades.Rzsocial 

GO
/****** Object:  StoredProcedure [dbo].[rptCFTaReceber]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptCFTaReceber
CREATE PROCEDURE [dbo].[rptCFTaReceber]
AS
    SELECT dbo.tbPostos.Id
           ,dbo.tbPostos.NomeUsual
           ,dbo.tbEntidades.RzSocial
           ,dbo.tbCartaFreteEnvio.Data
           ,dbo.tbCartaFreteEnvio.Valor
           ,(SELECT TOP 1 Fone
             FROM   tbEntidadesFone
             WHERE  tbEntidadesFone.idEntidade = tbEntidades.Id) AS Telefone
    FROM   dbo.tbCartaFreteEnvio  with (nolock)
           INNER JOIN dbo.tbEntidades  with (nolock)
                   ON dbo.tbCartaFreteEnvio.idEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbPostos  with (nolock)
                   ON dbo.tbCartaFreteEnvio.idPosto = dbo.tbPostos.Id
    WHERE  ( dbo.tbCartaFreteEnvio.Pago = 0 )
    ORDER  BY dbo.tbPostos.Id
              ,dbo.tbCartaFreteEnvio.id 
GO
/****** Object:  StoredProcedure [dbo].[rptChequeDevolvidoBuscar]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



--rptChequeDevolvidoBuscar
CREATE PROCEDURE [dbo].[rptChequeDevolvidoBuscar]
AS
    SELECT dbo.tbContasBancarias.Descricao
           ,dbo.tbChequeSemFundo.nCheque
           ,dbo.tbChequeSemFundo.valor
           ,dbo.tbChequeSemFundo.HistoricoAtualizacao
           ,dbo.tbChequeSemFundo.DataAtualizacao
           ,dataEstorno
           ,TipoEstorno
    FROM   dbo.tbChequeSemFundo  with (nolock)
           INNER JOIN dbo.tbContasBancarias  with (nolock)
                   ON dbo.tbChequeSemFundo.idContaBancaria =
                      dbo.tbContasBancarias.Id
    WHERE  ( dbo.tbChequeSemFundo.HistoricoAtualizacao LIKE '%Pegar%' ) 

GO
/****** Object:  StoredProcedure [dbo].[rptChequesAReceber]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptChequesAReceber
CREATE PROCEDURE [dbo].[rptChequesAReceber] @pPosto UNIQUEIDENTIFIER
AS
	DECLARE @GuidEmpty UNIQUEIDENTIFIER
	SET @GuidEmpty = dbo.GuidEmpty()
	
    SELECT tbVendasItensPagamento.Id
           ,tbVendasItensPagamento.DataVencimento
           ,RTRIM(tbEntidadeRefBanc.Banco1)
            + '   ' + ' AG '
            + RTRIM(tbEntidadeRefBanc.Agencia1) + '   '
            + ' CC  ' + tbEntidadeRefBanc.Conta1 AS Conta
           ,tbVendasItensPagamento.NumDoc
           ,tbVendasItensPagamento.Valor
           ,tbEntidades.RzSocial
           ,tbEntidades.Id
           ,tbPostos.Id
           ,tbPostos.NomeUsual
           ,tbVendas.Data                        AS DataVenda
           ,tbEntidades.DiaFechamento            AS Dias
    FROM   tbVendasItensPagamento   with (nolock)
           INNER JOIN tbDepositoChequePre   with (nolock)
                   ON tbVendasItensPagamento.Id = tbDepositoChequePre.IdVendaItemPagamento
           INNER JOIN tbVendas   with (nolock)
                   ON tbVendasItensPagamento.idVenda = tbVendas.Id
           INNER JOIN tbEntidadeRefBanc   with (nolock)
                   ON tbVendasItensPagamento.ContaBancaria =
                      tbEntidadeRefBanc.Id
           INNER JOIN tbEntidades   with (nolock)
                   ON tbEntidadeRefBanc.IdEntidade = tbEntidades.Id
           INNER JOIN tbPostos   with (nolock)
                   ON tbVendas.idPosto = tbPostos.Id
    WHERE  ( tbVendasItensPagamento.TipoPagamento = 'CP' )
       AND ( tbDepositoChequePre.Pago = 0 )
       AND ( @pPosto is null or @pPosto = @GuidEmpty or tbVendas.idPosto =  @pPosto )

GO
/****** Object:  StoredProcedure [dbo].[rptChequesDevolvidos]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




--rptChequesDevolvidos
CREATE PROCEDURE [dbo].[rptChequesDevolvidos] @pPosto UNIQUEIDENTIFIER
                                            
AS
	DECLARE @GuidEmpty UNIQUEIDENTIFIER
	SET @GuidEmpty = dbo.GuidEmpty()

    SELECT tbEntidades_1.RzSocial  AS Posto
           ,dbo.tbChequeSemFundo.nCheque
           ,dbo.tbChequeSemFundo.valor
           ,dbo.tbChequeSemFundo.HistoricoAtualizacao
           ,dbo.tbChequeSemFundo.DataAtualizacao
           ,dbo.tbChequeSemFundo.IdAlinea
           ,dbo.tbEntidadeRefBanc.Banco1
           ,dbo.tbEntidadeRefBanc.Agencia1
           ,dbo.tbEntidadeRefBanc.Conta1
           ,dbo.tbPostos.NomeUsual
           ,(SELECT NomeUsual
             FROM   dbo.tbEntidades   with (nolock)
             WHERE  ( Id = dbo.tbChequeSemFundo.IdResponsavel )) AS
            Responsavel
    FROM   dbo.tbChequeSemFundo   with (nolock)
           INNER JOIN dbo.tbPostos   with (nolock)
                   ON dbo.tbChequeSemFundo.idPosto = dbo.tbPostos.Id
           INNER JOIN dbo.tbEntidades AS tbEntidades_1   with (nolock)
                   ON dbo.tbChequeSemFundo.idEntidade = tbEntidades_1.Id
           INNER JOIN dbo.tbEntidadeRefBanc   with (nolock)
                   ON tbEntidades_1.Id = dbo.tbEntidadeRefBanc.IdEntidade
                      AND dbo.tbChequeSemFundo.idRefBancaria =
                          dbo.tbEntidadeRefBanc.Id
    WHERE  ( dbo.tbChequeSemFundo.pago = 0 )
       AND ( @pPosto is null or @pPosto = @GuidEmpty or dbo.tbChequeSemFundo.idPosto = @pPosto)
    ORDER  BY dbo.tbChequeSemFundo.DataAtualizacao 

GO
/****** Object:  StoredProcedure [dbo].[rptClientesConvenios]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptClientesConvenios
CREATE PROCEDURE [dbo].[rptClientesConvenios]
AS
    DECLARE @GuidEmpty UNIQUEIDENTIFIER
	SET @GuidEmpty = dbo.GuidEmpty()
    SELECT dbo.tbEntidades.Id
           ,dbo.tbEntidades.RzSocial
           ,dbo.tbEntidades.Fone
           ,dbo.tbEntidades.Contato
           ,dbo.tbEntidades.Email
           ,dbo.tbEntidades.IdConvenio
           ,dbo.tbConvenios.Descricao
    FROM   dbo.tbEntidades   with (nolock)
           INNER JOIN dbo.tbConvenios   with (nolock)
                   ON dbo.tbEntidades.IdConvenio = dbo.tbConvenios.ID
    WHERE  ( dbo.tbEntidades.IdConvenio IS NOT NULL AND dbo.tbEntidades.IdConvenio <> @GuidEmpty  )
GO
/****** Object:  StoredProcedure [dbo].[rptColaboradores]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptColaboradores
CREATE PROCEDURE [dbo].[rptColaboradores]
AS
    SELECT dbo.tbFuncs.IdPosto
           ,dbo.tbPostos.NomeUsual        AS Posto
           ,dbo.tbEntidades.RZSocial      AS Nome
           ,dbo.tbEntidades.Endereco
           ,dbo.tbEntidades.Bairro
           ,dbo.tbEntidades.Municipio
           ,dbo.tbEntidades.UF
           ,dbo.tbEntidades.CEP
           ,dbo.tbEntidadesFone.Descricao AS Fone
           ,dbo.tbEntidadesFone.Fone      AS Fone1
    FROM   dbo.tbFuncs  with (nolock)
           INNER JOIN dbo.tbEntidades  with (nolock)
                   ON dbo.tbFuncs.IdEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbPostos  with (nolock)
                   ON dbo.tbFuncs.IdPosto = dbo.tbPostos.Id
           LEFT OUTER JOIN dbo.tbEntidadesFone  with (nolock)
                        ON dbo.tbEntidades.Id = dbo.tbEntidadesFone.idEntidade
    WHERE  ( dbo.tbEntidades.Tipo = 'FU' )
    GROUP  BY dbo.tbFuncs.IdPosto
              ,dbo.tbPostos.NomeUsual
              ,dbo.tbEntidades.RZSocial
              ,dbo.tbEntidades.Endereco
              ,dbo.tbEntidades.Bairro
              ,dbo.tbEntidades.Municipio
              ,dbo.tbEntidades.UF
              ,dbo.tbEntidades.CEP
              ,dbo.tbEntidadesFone.Principal
              ,dbo.tbEntidadesFone.Descricao
              ,dbo.tbEntidadesFone.Fone
    HAVING ( dbo.tbEntidadesFone.Principal = 1 )
    ORDER  BY dbo.tbFuncs.IdPosto
              ,dbo.tbEntidades.RZSocial 

GO
/****** Object:  StoredProcedure [dbo].[rptColaboradoresUniformes]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptColaboradoresUniformes
CREATE PROCEDURE [dbo].[rptColaboradoresUniformes]
AS
    SELECT dbo.tbPostos.Id
           ,dbo.tbPostos.NomeUsual   AS Posto
           ,dbo.tbEntidades.RzSocial AS Colaborador
           ,dbo.tbUniformes.Tipo
           ,dbo.tbUniformes.Tamanho
           ,dbo.tbUniformes.Obs
    FROM   dbo.tbEntidades  with (nolock)
           INNER JOIN dbo.tbFuncs  with (nolock)
                   ON dbo.tbEntidades.Id = dbo.tbFuncs.IdEntidade
           INNER JOIN dbo.tbUniformes  with (nolock)
                   ON dbo.tbFuncs.IdEntidade = dbo.tbUniformes.idEntidade
           INNER JOIN dbo.tbPostos  with (nolock)
                   ON dbo.tbFuncs.IdPosto = dbo.tbPostos.Id
    WHERE  dbo.tbPostos.NomeUsual <> 'Central'

GO
/****** Object:  StoredProcedure [dbo].[rptConciliacaoBancaria]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptConciliacaoBancaria
CREATE PROCEDURE [dbo].[rptConciliacaoBancaria] @pIDConta  UNIQUEIDENTIFIER
                                               ,@pDataINI Datetime
                                               ,@pDataFim Datetime
AS
    SELECT dbo.tbMovBancaria.DataBancaria
           ,dbo.tbMovBancaria.DataHora
           ,dbo.tbMovBancaria.Descricao
           ,dbo.tbMovBancaria.Valor
           ,dbo.tbMovBancaria.TipoMov
           ,dbo.tbMovBancaria.NumeroDoc
           ,(SELECT Isnull(SUM(Valor), 0)
             FROM   dbo.tbMovBancaria m2
             WHERE  ( m2.idContaBancaria = @pIDConta )
                AND ( m2.conciliado = 1 )
                AND ( m2.DataBancaria < dbo.tbMovBancaria.DataBancaria )) AS
            SaldoInicial
           ,dbo.tbPostos.NomeUsual                                  AS
            PostoOrigem
           ,dbo.tbMovBancaria.LancamentoManual
    FROM   dbo.tbMovBancaria  with (nolock)
           INNER JOIN dbo.tbPostos  with (nolock)
                   ON dbo.tbMovBancaria.idPosto = dbo.tbPostos.Id
    WHERE  ( dbo.tbMovBancaria.DataBancaria BETWEEN @pDataINI AND @pDataFIM )
       AND ( dbo.tbMovBancaria.idContaBancaria = @pIDConta )
       AND ( dbo.tbMovBancaria.conciliado = 1 ) 


GO
/****** Object:  StoredProcedure [dbo].[rptContaCorrenteChequePreCliente]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptContaCorrenteChequePreCliente
CREATE PROCEDURE [dbo].[rptContaCorrenteChequePreCliente] @pIDEntidade UNIQUEIDENTIFIER
											  ,@pDataINI   datetime
											  ,@pDataFIM   datetime
AS

 
--calculo do saldo anterior
declare @valores_cc_antes_dtinic table (valor money, idPosto uniqueidentifier)
insert into @valores_cc_antes_dtinic
select Valor *-1.00,IdPosto from tbContasPagarReceber 
where IdEntidade = @pIDEntidade and data < @pDataINI and idTipo = 'AR' and IdVenda is not null
insert into @valores_cc_antes_dtinic
select Valor ,IdPosto from tbContasPagarReceber 
where IdEntidade = @pIDEntidade and data < @pDataINI and idTipo = 'RC'

-- Dados de compras feitas somente com cheque pre
SELECT 
		  dbo.tbPostos.NomeUsual as NomePosto
		  ,dbo.tbVendas.Data		  
		  ,dbo.tbVendasItens.IdVenda
	      ,dbo.tbVendasItens.Idproduto		   
		  ,dbo.tbProdutos.Descricao
		  ,dbo.tbVendasItens.Quantidade
		  ,dbo.tbVendasItens.PrecoVenda
		  ,dbo.tbVendasItens.PrecoEspecial
          ,PrecoVendaExecutado = (CASE dbo.tbVendasItens.PrecoEspecial 
			   WHEN 0 THEN dbo.tbVendasItens.PrecoVenda 
			   else   dbo.tbVendasItens.PrecoEspecial 
			   end )
          ,Valor = (CASE dbo.tbVendasItens.PrecoEspecial 
			   WHEN 0 THEN ROUND(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda, 2)
			   else   ROUND(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoEspecial, 2)
			   end )
          ,tcpr.Autorizado
          ,tcpr.Placa
          ,tcpr.Local as Setor
          ,SaldoAnterior = (select sum(vc.valor) from @valores_cc_antes_dtinic vc where vc.idPosto = dbo.tbPostos.id) 
          ,DescricaoCheque = (select 'Pago com o cheque pré-datado Nº' + tvip.NumDoc + ' de ' + te.RzSocial + ' .' + tbanc.Banco1 +  ' AG ' + tbanc.Agencia1 + ' CC ' +  tbanc.Conta1 + ' de R$ ' 
          + (select CASE dbo.tbVendasItens.PrecoEspecial 
			   WHEN 0 THEN convert(varchar(10),ROUND(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda, 2),102)
			   else   convert(varchar(10),ROUND(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoEspecial, 2),203)
			   end )
         )

    FROM   dbo.tbVendas  with (nolock)
           INNER JOIN dbo.tbVendasItens  with (nolock)
			on dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos  with (nolock)
             ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbPostos  with (nolock)
             ON dbo.tbVendas.idPosto = dbo.tbPostos.Id
           inner join dbo.tbVendasItensPagamento tvip on tvip.IdVenda = tbVendasItens.IdVenda
           inner join dbo.tbEntidades te on tvip.IdEntidade = te.id
           inner join dbo.tbEntidadeRefBanc tbanc on te.Id = tbanc.IdEntidade
           inner join dbo.tbContasPagarReceber tcpr on tvip.IdVenda = tcpr.IdVenda

where
 tvip.IdEntidade =@pIDEntidade
and tbvendas.Data >= @pDataINI and tbvendas.Data <= @pDataFIM
and tvip.TipoPagamento = 'CP'


/*
union

select dos dados de cheques ja depositados nao pagos

union 

select dos cheques que foram extornadas na 1a vez

union 

select dos cheques que foram enviados para o banco pela 2a vez

union

select dos cheques que foram extornados pela 2a vez

union

select dos cheques que foram compensados


*/
GO
/****** Object:  StoredProcedure [dbo].[rptContaCorrentePrazo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptContaCorrentePrazo
CREATE PROCEDURE [dbo].[rptContaCorrentePrazo] @pIDEntidade UNIQUEIDENTIFIER
											  ,@pDataINI   datetime
											  ,@pDataFIM   datetime
AS
DECLARE @GuidEmpty UNIQUEIDENTIFIER
SET @GuidEmpty = dbo.GuidEmpty()

SELECT tbContasPagarReceber.Id AS id ,
       tbEntidades.RzSocial AS NomeUsual ,
       tbEntidades.Limite ,
       tbEntidades.DiaFechamento ,
       tbEntidades.Tolerancia ,
       tbEntidades.CartaFrete ,
       tbEntidades.Cheque3 ,
       tbEntidades.Prazo ,
       tbEntidades.PagaChequePrazo ,
       tbContasPagarReceber.idVenda ,
       tbContasPagarReceber.IdTipoDocto ,
       tbContasPagarReceber.Data ,
       tbContasPagarReceber.InfoAdic ,
       tbPostos_1.NomeUsual AS PostoCadastro ,
       CASE dbo.tbContasPagarReceber.idTipo
           WHEN 'AR' THEN Valor * -1
           WHEN 'RC' THEN Valor
       END AS valor ,
       tbContasPagarReceber.idTipo ,
       tbContasPagarReceber.DataVencto ,
       tbEntidades.idPostoCadastro ,
       tbPostos.NomeUsual AS Posto ,
       dbo.tbContasPagarReceber.Local ,
       Isnull(
                (SELECT SUM (CASE idTipo WHEN 'RC' THEN Valor WHEN 'AR' THEN Valor *- 1 END)
                 FROM tbContasPagarReceber  with (nolock)
                 WHERE idEntidade = @pIDEntidade
                   AND (idTipo = 'AR'
                        OR IDTIPO = 'RC')), 0) AS SaldoContaCorrente ,
       dbo.tbEntidades.ProxFechamento ,
       dbo.tbContasPagarReceber.NumDocto ,
       Isnull(
                (SELECT SUM (CASE idTipo WHEN 'RC' THEN Valor WHEN 'AR' THEN Valor *- 1 END)
                 FROM tbContasPagarReceber  with (nolock)
                 WHERE idEntidade = @pIDEntidade
                   AND (idTipo = 'AR'
                        OR IDTIPO = 'RC')
                   AND DATA < @pDataINI), 0) AS SaldoContaAnterior ,
       Isnull(
                (SELECT SUM (CASE idTipo WHEN 'RC' THEN Valor WHEN 'AR' THEN Valor *- 1 END)
                 FROM tbContasPagarReceber  with (nolock)
                 WHERE idEntidade = @pIDEntidade
                   AND (idTipo = 'AR'
                        OR IDTIPO = 'RC') ), 0) AS SaldoTotal ,
       Isnull(
                (SELECT Count(Dia)
                 FROM tbEntidadeDiaPagamento AS tbEntidadeDiaPagamento  with (nolock)
                 WHERE (IDEntidade = @pIDEntidade)), '') AS Dia1 ,
       Isnull(
                (SELECT TOP 1 Dia AS Dia1
                 FROM tbEntidadeDiaPagamento AS tbEntidadeDiaPagamento  with (nolock)
                 WHERE (IDEntidade = @pIDEntidade)
                 ORDER BY Dia DESC), '') AS Dia2 ,
       Isnull(
                (SELECT TOP 1 Dia AS Dia1
                 FROM tbEntidadeDiaPagamento AS tbEntidadeDiaPagamento  with (nolock)
                 WHERE (IDEntidade = @pIDEntidade)
                 ORDER BY Dia), '') AS Dia3 ,
       Isnull(
                (SELECT top 1 Id AS Expr1
                 FROM tbContasPagarReceber AS tbContasPagarReceber1  with (nolock)
                 WHERE idTipoDocto NOT IN('MU', 'JU', 'LM', 'DE', 'PG')
                   AND (idEntidade = @pIDEntidade)
                   AND (idTipo = 'AR')
                   AND (DATA BETWEEN dbo.PrimeiroDiadoMes(month(tbContasPagarReceber.DATA), year( tbContasPagarReceber.DATA)) AND dbo.DiaQuinzedoMes(month(tbContasPagarReceber.DATA), year( tbContasPagarReceber.DATA)))), @GuidEmpty) AS Dia15 ,

  (SELECT top 1 Id AS Expr1
   FROM tbContasPagarReceber AS tbContasPagarRecebe2  with (nolock)
   WHERE idTipoDocto NOT IN('MU', 'JU', 'LM', 'DE', 'PG')
     AND (idEntidade = @pIDEntidade)
     AND (idTipo = 'AR')
     AND (DATA BETWEEN dbo.PrimeiroDiadoMes(month(tbContasPagarReceber.DATA), year( tbContasPagarReceber.DATA)) AND dbo.UltimoDiadoMes(month(tbContasPagarReceber.DATA), year( tbContasPagarReceber.DATA)))) AS Dia30
FROM tbContasPagarReceber  with (nolock)
INNER JOIN tbEntidades  with (nolock) ON tbContasPagarReceber.idEntidade = tbEntidades.Id
INNER JOIN tbPostos  with (nolock) ON tbContasPagarReceber.idPosto = tbPostos.Id
INNER JOIN dbo.tbPostos  AS tbPostos_1  with (nolock) ON dbo.tbEntidades.idPostoCadastro = tbPostos_1.Id
WHERE (tbEntidades.Id = @pIDEntidade)
  AND (tbContasPagarReceber.idTipo = 'AR'
       OR tbContasPagarReceber.idTipo = 'RC')
  AND (tbContasPagarReceber.DATA BETWEEN @pDataINI AND @pDataFIM)
ORDER BY tbContasPagarReceber.DATA	

GO
/****** Object:  StoredProcedure [dbo].[rptContaCorrentePrazoCliente]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptContaCorrentePrazoCliente
CREATE PROCEDURE [dbo].[rptContaCorrentePrazoCliente] 
	@pIDEntidade uniqueidentifier
	, @pDataINI datetime
	, @pDataFIM datetime
AS

	--calculo do saldo anterior
	DECLARE @valores_cc_antes_dtinic TABLE (
		valor money,
		idPosto uniqueidentifier
	)
	INSERT INTO @valores_cc_antes_dtinic
    SELECT
		cr.Valor * -1.00,
		cr.IdPosto
    FROM tbContasPagarReceber cr
		LEFT JOIN tbVendas v ON cr.IdVenda = v.Id
    WHERE cr.IdEntidade = @pIDEntidade AND cr.data < @pDataINI AND cr.idTipo = 'AR' AND cr.idTipoDocto IN ('PR', 'LM') AND v.Status IS NULL
	
	INSERT INTO @valores_cc_antes_dtinic
    SELECT
		Valor,
		IdPosto
    FROM tbContasPagarReceber
    WHERE IdEntidade = @pIDEntidade AND data < @pDataINI AND idTipo = 'RC'

	--Fechamentos
	DECLARE @tbFechamentos TABLE(DiaFechamento datetime, DiaVencimento datetime, Total float, IdEntidade uniqueidentifier, IdPosto uniqueidentifier)    
	DECLARE @dateFechamento datetime
	DECLARE @dateVencimento datetime
	DECLARE @qtdPrazo int
	DECLARE @proxDiaFechamento int
	DECLARE @proxDiaVencimento int

	IF (DATEPART(DAY, @pDataINI) < 15)
	BEGIN
		SET @proxDiaFechamento = (SELECT TOP 1 Dia FROM tbEntidadeDiaPagamento WHERE IdEntidade = @pIdEntidade ORDER BY Dia)
		SET @proxDiaVencimento = (SELECT TOP 1 DiaVencimento FROM tbEntidadeDiaPagamento WHERE IdEntidade = @pIdEntidade ORDER BY Dia)
	END
	ELSE
	BEGIN
		SET @proxDiaFechamento = (SELECT TOP 1 Dia FROM tbEntidadeDiaPagamento WHERE IdEntidade = @pIdEntidade ORDER BY Dia DESC)
		SET @proxDiaVencimento = (SELECT TOP 1 DiaVencimento FROM tbEntidadeDiaPagamento WHERE IdEntidade = @pIdEntidade ORDER BY Dia DESC)
	END

	IF @proxDiaFechamento = 15
		SET @dateFechamento = CAST(STR(DATEPART(YEAR, @pDataINI)) + '-' + STR(DATEPART(MONTH, @pDataINI)) + '-' + STR(@proxDiaFechamento) + ' 23:59:59' AS datetime)
	ELSE
		SET @dateFechamento = DATEADD(MINUTE, -1, DATEADD(DAY, 1, dbo.UltimoDiadoMes(DATEPART(MONTH, @pDataINI), DATEPART(YEAR, @pDataINI))))

	IF @proxDiaVencimento = 15
		SET @dateVencimento = CAST(STR(DATEPART(YEAR, @pDataINI)) + '-' + STR(DATEPART(MONTH, @pDataINI)) + '-' + STR(@proxDiaVencimento) AS datetime)
	ELSE
		SET @dateVencimento = dbo.UltimoDiadoMes(DATEPART(MONTH, @pDataINI), DATEPART(YEAR, @pDataINI))
		
	SET @qtdPrazo = (SELECT COUNT(Id) FROM tbEntidadeDiaPagamento WHERE IdEntidade = @pIdEntidade)
	
	WHILE (@dateFechamento <= @pDataFIM)
	BEGIN
		INSERT INTO @tbFechamentos
		SELECT 
			@dateFechamento,
			@dateVencimento,
			(
				SUM(CASE WHEN cr.IdTipo = 'AR' THEN cr.Valor * -1 ELSE cr.Valor END)
			),
			e.Id,
			p.Id
        FROM
			dbo.tbEntidades e 
			INNER JOIN tbContasPagarReceber cr ON e.Id = cr.IdEntidade
			INNER JOIN tbPostos p ON cr.IdPosto = p.Id
			LEFT JOIN tbVendas v ON cr.IdVenda = v.Id
		WHERE
			e.Id = @pIdEntidade
			AND cr.Data <= @dateFechamento
			AND ((IdTipo = 'AR' AND IdTipoDocto IN ('PR', 'LM')) OR IdTipo = 'RC')
			AND v.Status IS NULL
		GROUP BY
			e.Id, p.Id

		--Próximo fechamento (1 mensal, 2 quinzenal)
		IF (@qtdPrazo = 1)
		BEGIN
			IF (DATEPART(DAY, @dateFechamento) = 15)
			BEGIN
				SET @dateFechamento = DATEADD(MONTH, 1, @dateFechamento)
				SET @dateVencimento = DATEADD(MONTH, 1, @dateVencimento)
			END
			ELSE
			BEGIN
				SET @dateFechamento = dbo.UltimoDiadoMes(DATEPART(MONTH, DATEADD(MONTH, 1, @dateFechamento)), DATEPART(YEAR, DATEADD(MONTH, 1, @dateFechamento)))
				SET @dateVencimento = DATEADD(MONTH, 1, @dateVencimento)
			END
		END
		ELSE
		BEGIN
			IF (DATEPART(DAY, @dateFechamento) > 15)
			BEGIN
				SET @dateFechamento = CAST(STR(DATEPART(YEAR, DATEADD(MONTH, 1, @dateFechamento))) + '-' + STR(DATEPART(MONTH, DATEADD(MONTH, 1, @dateFechamento))) + '-15' AS datetime)
				SET @dateVencimento = CAST(STR(DATEPART(YEAR, @dateFechamento)) + '-' + STR(DATEPART(MONTH, @dateFechamento)) + '-' + (SELECT STR(DiaVencimento) FROM tbEntidadeDiaPagamento WHERE Dia = 15 AND IdEntidade = @pIdEntidade) AS datetime)
			END
			ELSE
			BEGIN
				SET @dateFechamento = dbo.UltimoDiadoMes(DATEPART(MONTH, @dateFechamento), DATEPART(YEAR, @dateFechamento))
				SET @dateVencimento = CAST(STR(DATEPART(YEAR, DATEADD(MONTH, 1, @dateFechamento))) + '-' + STR(DATEPART(MONTH, DATEADD(MONTH, 1, @dateFechamento))) + '-' + (SELECT STR(DiaVencimento) FROM tbEntidadeDiaPagamento WHERE Dia = 30 AND IdEntidade = @pIdEntidade) AS datetime)
			END
		END
	END

	-- AC: CONTAS A RECEBER
	SELECT
		dbo.tbContasPagarReceber.Id,
		RTRIM(LTRIM(dbo.tbContasPagarReceber.idTipo)) AS idTipo,
		RTRIM(LTRIM(dbo.tbContasPagarReceber.IdTipoDocto)) AS idTipoDocto,
		dbo.tbPostos.NomeUsual,
		dbo.tbVendas.Id AS IdVenda,
		dbo.tbContasPagarReceber.Data,
		RTRIM(LTRIM(ISNULL(dbo.tbVendas.Cupom, dbo.tbVendas.NumeroCupomSat))) AS Descricao,
		dbo.tbNotaFiscalEletronica.Numero AS NumeroNotaFiscal,
		dbo.tbContasPagarReceber.Valor * -1 AS Valor,
		dbo.tbContasPagarReceber.Autorizado,
		dbo.tbContasPagarReceber.Placa,
		dbo.tbContasPagarReceber.Local AS Setor,
		SaldoAnterior = ISNULL(
		(
			SELECT
				SUM(vc.valor)
			FROM @valores_cc_antes_dtinic vc
			WHERE vc.idPosto = dbo.tbPostos.id
		), 0)
	FROM dbo.tbContasPagarReceber WITH (NOLOCK)
		LEFT JOIN dbo.tbVendas ON dbo.tbVendas.Id = tbContasPagarReceber.IdVenda
		INNER JOIN dbo.tbPostos WITH (NOLOCK) ON dbo.tbContasPagarReceber.idPosto = dbo.tbPostos.Id
		LEFT JOIN dbo.tbNotaFiscalEletronica ON dbo.tbVendas.IdNotaFiscal = dbo.tbNotaFiscalEletronica.Id
	WHERE 
		tbContasPagarReceber.idTipo = 'AR'
		AND tbContasPagarReceber.IdEntidade = @pIDEntidade
		AND tbContasPagarReceber.Data >= @pDataINI AND tbContasPagarReceber.Data <= @pDataFIM
		AND tbContasPagarReceber.idTipoDocto in ('PR','LM')
		AND (dbo.tbVendas.Status IS NULL)

UNION ALL

	-- RC TODOS OS PAGAMENTOS RECEBIDOS
	SELECT
		tc1.Id,
		RTRIM(LTRIM(tc1.idTipo)) AS idTipo,
		RTRIM(LTRIM(tc1.IdTipoDocto)) AS idTipoDocto,
		tp1.NomeUsual,
		NULL,
		tc1.Data,
		Descricao =
			CASE 
				WHEN tc1.TipoIntencaoPagar = 'Movimento' AND tc1.idTipoDocto <> 'LM' THEN 'Recebimento de pagamento feito pelo Administrativo.'
				WHEN tc1.TipoIntencaoPagar <> 'Movimento ' AND tc1.idTipoDocto <> 'LM' THEN 'Recebimento de pagamento feito pelo Financeiro.' 
				ELSE tc1.InfoAdic
			END,
		NULL,
	    tc1.Valor,
		NULL,
		NULL,
		NULL,
		SaldoAnterior = ISNULL(
		(
			SELECT
				SUM(vc.valor)
			FROM @valores_cc_antes_dtinic vc
			WHERE vc.idPosto = tp1.id
		), 0)
	FROM tbContasPagarReceber tc1
		INNER JOIN tbPostos tp1 ON tc1.IdPosto = tp1.Id
	WHERE 
		tc1.IdEntidade = @pIDEntidade
		AND tc1.Data >= @pDataINI AND tc1.Data <= @pDataFIM
		AND idTipo = 'RC'
		--AND tc1.IdTipoDocto <> 'LM'

UNION ALL
	
	--FC FECHAMENTOS NO PERÍODO
	SELECT
		NULL,
		'FC' AS idTipo,
		NULL,
		p.NomeUsual,
		NULL,
		f.DiaFechamento AS Data,
		Descricao =
			CASE 
				WHEN @qtdPrazo = 1 AND DATEPART(DAY, f.DiaFechamento) > 15 THEN 
					'Fechamento do mês (do dia 1 ao dia ' + CONVERT(nvarchar(2), DATEPART(DAY, f.DiaFechamento)) + '). Data do vencimento ' + CONVERT(nvarchar(2), f.DiaVencimento, 103) + '. Valor a pagar: '
				WHEN @qtdPrazo = 1 AND DATEPART(DAY, f.DiaFechamento) = 15 THEN 
					'Fechamento do mês (do dia 16 ao dia 15). Data do vencimento ' + CONVERT(nvarchar(2), f.DiaVencimento, 103) + '. Valor a pagar: '
				WHEN @qtdPrazo = 2 AND DATEPART(DAY, f.DiaFechamento) > 15 THEN 
					'Fechamento da quinzena (do dia 16 ao dia ' + CONVERT(nvarchar(2),DATEPART(DAY, f.DiaFechamento)) +'). Data do vencimento ' + CONVERT(nvarchar(2), f.DiaVencimento, 103) + '. Valor a pagar: '
				WHEN @qtdPrazo = 2 AND DATEPART(DAY, f.DiaFechamento) = 15 THEN 
					'Fechamento da quinzena (do dia 1 ao dia 15). Data do vencimento ' + CONVERT(nvarchar(2), f.DiaVencimento, 103) + '. Valor a pagar: '
			END,
		NULL,
		f.Total AS Valor,
		NULL,
		NULL,
		NULL,
		SaldoAnterior = ISNULL(
		(
			SELECT
				SUM(vc.valor)
			FROM @valores_cc_antes_dtinic vc
			WHERE vc.idPosto = p.Id
		), 0)
	FROM @tbFechamentos f
		INNER JOIN tbEntidades e ON f.IdEntidade = e.Id
		INNER JOIN tbPostos p ON f.IdPosto = p.Id

ORDER BY NomeUsual, Data
GO
/****** Object:  StoredProcedure [dbo].[rptContaCorrentePrazoClienteCombustiveis]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[rptContaCorrentePrazoClienteCombustiveis] @pIDEntidade UNIQUEIDENTIFIER
AS

	SELECT 
		tp.Descricao AS NomeCombustivel
		,Valor = CASE WHEN Fixo = 0 THEN Diferenca ELSE PrecoEspecial END
		,Fixo
	FROM tbPrecosEspeciais tpe
		INNER JOIN tbProdutos tp ON tp.Id = tpe.IdProduto
	WHERE idEntidade = @pIDEntidade


GO
/****** Object:  StoredProcedure [dbo].[rptContaCorrentePrazoItens]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptContaCorrentePrazoItens
CREATE PROCEDURE [dbo].[rptContaCorrentePrazoItens] @pIDVenda UNIQUEIDENTIFIER
AS
    SELECT dbo.tbVendasItens.idVenda
           ,dbo.tbProdutos.Descricao
           ,dbo.tbVendasItens.Quantidade
           ,dbo.tbVendasItens.PrecoVenda
           ,dbo.tbVendasItens.Idproduto
           ,dbo.tbVendasItens.PrecoEspecial
           ,tbVendasitens.Item
           ,dbo.tbPostos.NomeUsual
           ,ROUND(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda, 1
            ) AS
            Tota
           ,dbo.tbContasPagarReceber.Autorizado
           ,dbo.tbContasPagarReceber.Placa
           ,dbo.tbVendas.Cupom
           ,dbo.tbContasPagarReceber.Local
		   ,dbo.tbProdutos.TipoProd
    FROM   dbo.tbVendas  with (nolock)
           INNER JOIN dbo.tbVendasItens  with (nolock)
                      INNER JOIN dbo.tbProdutos  with (nolock)
                              ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           CROSS JOIN dbo.tbContasPagarReceber  with (nolock)
           INNER JOIN dbo.tbPostos  with (nolock)
                   ON dbo.tbContasPagarReceber.idPosto = dbo.tbPostos.Id
    WHERE  ( dbo.tbVendasItens.idVenda = @pIDVenda )
       AND ( dbo.tbContasPagarReceber.idVenda = @pIDVenda )
    ORDER  BY dbo.tbVendasItens.Item 

GO
/****** Object:  StoredProcedure [dbo].[rptContaCorrenteRetaguarda]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptContaCorrenteRetaguarda
CREATE PROCEDURE [dbo].[rptContaCorrenteRetaguarda]
@pIdposto      UNIQUEIDENTIFIER
,@pDataINI     SMALLDATETIME
,@pDataFim     SMALLDATETIME
,@pColaborador UNIQUEIDENTIFIER
AS
    IF @pIDposto = dbo.GuidEmpty()
      BEGIN
          SET @pIdposto = NULL
      END

    IF @pColaborador = dbo.GuidEmpty()
      BEGIN
          SET @pColaborador = NULL
      END

    SELECT tbPostos.Id as idposto
           ,tbPostos.NomeUsual                               AS Posto
           ,Colaboradores.RzSocial                           AS Colaborador
           ,tbColaboradoresDifCaixa_1.valor
           ,tbColaboradoresDifCaixa_1.Descricao
           ,tbCaixa_1.Dia
           ,tbCaixa_1.Id as idcaixa
           ,tbCaixa_1.TCaixa
           ,tbColaboradoresDifCaixa_1.Tipo
           ,tbColaboradoresDifCaixa_1.idEntidade
           ,ISNULL ((SELECT SUM(tbColaboradoresDifCaixa.valor) AS Expr1
                     FROM   tbColaboradoresDifCaixa  with (nolock)
                            INNER JOIN tbCaixa  with (nolock)
                                    ON tbColaboradoresDifCaixa.idCaixa =
                                       tbCaixa.Id
                     WHERE  ( tbColaboradoresDifCaixa.Tipo = 'R' )
                        AND ( tbColaboradoresDifCaixa.idEntidade = @pColaborador )
                        AND ( tbCaixa.Dia < @pDataINI )), 0) AS SaldoAnterior
           ,tbColaboradoresDifCaixa_1.id
    FROM   tbColaboradoresDifCaixa AS tbColaboradoresDifCaixa_1  with (nolock)
           INNER JOIN tbEntidades AS Colaboradores  with (nolock)
                   ON tbColaboradoresDifCaixa_1.idEntidade =
                      Colaboradores.Id
           INNER JOIN tbPostos  with (nolock)
                   ON tbColaboradoresDifCaixa_1.idPosto = tbPostos.Id
           INNER JOIN tbCaixa AS tbCaixa_1  with (nolock)
                   ON tbColaboradoresDifCaixa_1.idCaixa = tbCaixa_1.Id
    WHERE  ( tbColaboradoresDifCaixa_1.Tipo = 'R' )
       AND ( tbColaboradoresDifCaixa_1.idEntidade = @pColaborador OR @pColaborador IS NULL )
       AND ( tbPostos.Id = @pIdposto OR @pIdposto IS NULL )
       AND ( tbCaixa_1.Dia BETWEEN @pDataINI AND @pDataFIM )
       AND ( tbColaboradoresDifCaixa_1.valor <> 0 )
    ORDER  BY tbPostos.NomeUsual
              ,tbCaixa_1.Dia
              ,Colaboradores.NomeUsual 


GO
/****** Object:  StoredProcedure [dbo].[rptContasPagarReceber]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptContasPagarReceber
CREATE PROCEDURE [dbo].[rptContasPagarReceber] @pIDpostoINI  UNIQUEIDENTIFIER
                                              ,@pIDPostoFIM UNIQUEIDENTIFIER
                                              ,@pTipoConta  VARCHAR(2)
                                              ,@pDataIni    SMALLDATETIME
                                              ,@pDataFim    SMALLDATETIME
AS
    SELECT dbo.tbContasPagarReceber.DataVencto AS DataVencimento
           ,dbo.tbEntidades.NomeUsual          AS Fornecedor
           ,dbo.tbContasPagarReceber.InfoAdic  AS Historico
           ,dbo.tbPostos.NomeUsual             AS Posto
           ,dbo.tbContasPagarReceber.Valor
           ,dbo.tbContasPagarReceber.Pago
    FROM   dbo.tbContasPagarReceber  with (nolock)
           INNER JOIN dbo.tbPostos  with (nolock)
                   ON dbo.tbContasPagarReceber.idPosto = dbo.tbPostos.Id
           INNER JOIN dbo.tbEntidades  with (nolock)
                   ON dbo.tbContasPagarReceber.idEntidade = dbo.tbEntidades.Id
    WHERE  ( dbo.tbContasPagarReceber.idTipo = @pTipoConta )
       AND ( dbo.tbPostos.Id BETWEEN @pIDPostoINI AND @pIDPostoFIM )
       AND ( dbo.tbContasPagarReceber.Data BETWEEN @pDataIni AND @pDataFim ) 

GO
/****** Object:  StoredProcedure [dbo].[rptControleTintas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptControleTintas
CREATE PROCEDURE [dbo].[rptControleTintas]
AS
    SELECT tbControleTintas.Cor
           ,tbControleTintas.Quantidade
           ,tbControleTintas.Data
           ,tbPostos.NomeUsual
    FROM   tbControleTintas  with (nolock)
           INNER JOIN tbPostos  with (nolock)
                   ON tbControleTintas.idPosto = tbPostos.Id 

GO
/****** Object:  StoredProcedure [dbo].[rptConvenios]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptConvenios
CREATE PROCEDURE [dbo].[rptConvenios]
AS
	DECLARE @GuidEmpty UNIQUEIDENTIFIER
	SET @GuidEmpty = dbo.GuidEmpty()
	
    SELECT dbo.tbConvenios.Descricao
           ,dbo.tbConvenios.Gasolina
           ,dbo.tbConvenios.Alcool
           ,dbo.tbConvenios.Diesel
           ,dbo.tbEntidades.RzSocial
           ,dbo.tbEntidades.NomeUsual
           ,dbo.tbEntidades.CNPJ
    FROM   dbo.tbEntidades  with(nolock)
           INNER JOIN dbo.tbConvenios   with(nolock)
                   ON dbo.tbEntidades.IdConvenio = dbo.tbConvenios.ID
    WHERE  ( dbo.tbEntidades.IdConvenio <> @GuidEmpty ) 

GO
/****** Object:  StoredProcedure [dbo].[rptCotacao]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptCotacao
CREATE PROCEDURE [dbo].[rptCotacao] @pIDCidade UNIQUEIDENTIFIER
AS
    SELECT dbo.tbConcorrentesPreco.id
           ,dbo.tbConcorrentes.Nome AS Concorrente
           ,dbo.tbConcorrentesPreco.Gasolina
           ,dbo.tbConcorrentesPreco.GasolinaAditivada
           ,dbo.tbConcorrentesPreco.Alcool
           ,dbo.tbConcorrentesPreco.Diesel
           ,dbo.tbConcorrentesPreco.DieselFiltrado
           ,dbo.tbConcorrentesPreco.Observacoes
           ,dbo.tbCidades.Descricao
    FROM   dbo.tbConcorrentes  with(nolock)
           INNER JOIN dbo.tbConcorrentesPreco  with(nolock)
                   ON dbo.tbConcorrentes.id =
                      dbo.tbConcorrentesPreco.idConcorrente
           INNER JOIN dbo.tbCidades  with(nolock)
                   ON dbo.tbConcorrentes.IdCidade = dbo.tbCidades.id
    WHERE  ( dbo.tbConcorrentes.IdCidade = @pIDCidade ) 

GO
/****** Object:  StoredProcedure [dbo].[rptCupons]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptCupons
CREATE PROCEDURE [dbo].[rptCupons] @pIDEntidade UNIQUEIDENTIFIER
                                  ,@pDataINI   SMALLDATETIME
                                  ,@pDataFIM   SMALLDATETIME
                                  ,@pLocal     NVARCHAR(100) = NULL
AS
    SELECT tbContasPagarReceber_1.Id
           ,dbo.tbEntidades.RzSocial AS NomeUsual
           ,tbContasPagarReceber_1.idVenda
           ,tbContasPagarReceber_1.Data
           ,tbContasPagarReceber_1.Local
           ,dbo.tbPostos.NomeUsual   AS Posto
           ,dbo.tbVendas.Cupom
           ,tbContasPagarReceber_1.Valor
    FROM   dbo.tbContasPagarReceber AS tbContasPagarReceber_1  with(nolock)
           INNER JOIN dbo.tbEntidades  with(nolock)
                   ON tbContasPagarReceber_1.idEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbPostos  with(nolock)
                   ON tbContasPagarReceber_1.idPosto = dbo.tbPostos.Id
           INNER JOIN dbo.tbVendas  with(nolock)
                   ON dbo.tbPostos.Id = dbo.tbVendas.idPosto
                      AND tbContasPagarReceber_1.idVenda = dbo.tbVendas.Id
    WHERE  ( dbo.tbEntidades.Id = @pIDEntidade )
       AND ( tbContasPagarReceber_1.idTipo = 'AR' )
       AND ( tbContasPagarReceber_1.Data BETWEEN @pDataINI AND @pDataFIM )
       AND ( tbContasPagarReceber_1.Local LIKE '%' + @pLocal + '%' )
    ORDER  BY tbContasPagarReceber_1.Data 

GO
/****** Object:  StoredProcedure [dbo].[rptCuponsFiscaisDeClientes]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptCuponsFiscaisDeClientes
CREATE PROCEDURE [dbo].[rptCuponsFiscaisDeClientes] @pDataInicial SMALLDATETIME
                                                   ,@pDataFinal  SMALLDATETIME
AS
    SELECT NomeCliente
           ,DocumentoCliente
           ,Cupom
    FROM   tbVendas with(nolock)
    WHERE  Data BETWEEN @pDataInicial AND @pDataFinal
       AND NOT NomeCliente IS NULL 

GO
/****** Object:  StoredProcedure [dbo].[rptCuponsPorCliente]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptCuponsPorCliente
CREATE PROCEDURE [dbo].[rptCuponsPorCliente] @pIDEntidade   UNIQUEIDENTIFIER
                                            ,@pDataInicial SMALLDATETIME
                                            ,@pDataFinal   SMALLDATETIME
AS
    SELECT tbCaixa.Dia
           ,tbVendas.Cupom
    FROM   tbProdutos
           INNER JOIN tbVendasItens  with (nolock)
                   ON tbProdutos.Id = tbVendasItens.idProduto
           INNER JOIN tbVendasItensPagamento  with (nolock)
                      INNER JOIN tbVendas  with (nolock)
                              ON tbVendasItensPagamento.idVenda = tbVendas.Id
                      INNER JOIN tbEntidades  with (nolock)
                              ON tbVendasItensPagamento.IdEntidade =
                                 tbEntidades.Id
                      INNER JOIN tbCaixa  with (nolock)
                              ON tbVendas.idCaixa = tbCaixa.Id
                   ON tbVendasItens.idVenda = tbVendas.Id
                      AND tbVendasItens.idVenda = tbVendasItensPagamento.idVenda
    WHERE  ( tbEntidades.Id = @pIDEntidade )
       AND ( tbProdutos.TipoProd = N'CB' )
       AND ( tbVendasItens.Cancelado = 0 )
    GROUP  BY tbVendas.Cupom
              ,tbProdutos.Descricao
              ,tbCaixa.Dia
              ,tbVendasItens.idBomba
              ,tbVendasItens.Quantidade
              ,tbVendasItens.PrecoVenda
              ,tbVendasItens.Id
              ,tbVendasItens.Item
              ,tbVendasItens.idVenda
    HAVING ( tbCaixa.Dia BETWEEN @pDataInicial AND @pDataFinal )
    ORDER  BY tbVendas.Cupom 

GO
/****** Object:  StoredProcedure [dbo].[rptDadosBancarios]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptDadosBancarios
CREATE PROCEDURE [dbo].[rptDadosBancarios] @pIdposto UNIQUEIDENTIFIER
AS
    SELECT '  Banco  '
           + CAST(dbo.tbContasBancarias.Banco AS VARCHAR(10))
           + '  AG '
           + CAST(dbo.tbContasBancarias.Agencia AS VARCHAR(10))
           + '  CC  '
           + CAST(dbo.tbContasBancarias.Conta AS VARCHAR(15)) AS Expr1
    FROM   dbo.tbContasBancarias  with (nolock)
           INNER JOIN dbo.tbPostos  with (nolock)
                   ON dbo.tbContasBancarias.idPosto = dbo.tbPostos.Id
    WHERE  ( dbo.tbContasBancarias.Ativo = 1 )
       AND ( dbo.tbPostos.Id = @pIdPosto ) 

GO
/****** Object:  StoredProcedure [dbo].[rptDadosColaboradores]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptDadosColaboradores
CREATE PROCEDURE [dbo].[rptDadosColaboradores] @pIdposto UNIQUEIDENTIFIER
AS
    IF @pIDPosto = dbo.GuidEmpty()
      BEGIN
          SET @pIDPosto = NULL
      END
    
    SELECT dbo.tbEntidades.Id
           ,dbo.tbEntidades.DtNascFund
           ,dbo.tbEntidades.RzSocial
           ,dbo.tbFuncs.IdPosto
           ,dbo.tbFuncs.CTPS
           ,dbo.tbFuncs.PIS
           ,dbo.tbFuncs.Funcao
           ,dbo.tbFuncs.Admissao
           ,dbo.tbFuncs.Salario
           ,dbo.tbFuncs.TipoContrato
           ,dbo.tbPostos.NomeUsual
           ,dbo.tbFuncs.Ferias
    FROM   dbo.tbEntidades  with (nolock)
           INNER JOIN dbo.tbFuncs  with (nolock)
                   ON dbo.tbEntidades.Id = dbo.tbFuncs.IdEntidade
           INNER JOIN dbo.tbPostos  with (nolock)
                   ON dbo.tbFuncs.IdPosto = dbo.tbPostos.Id
    WHERE  ( dbo.tbEntidades.Tipo = 'FU' )
       AND ( dbo.tbFuncs.IdPosto = @pIDPosto OR @pIDPosto IS NULL )
    ORDER  BY dbo.tbEntidades.RzSocial 

GO
/****** Object:  StoredProcedure [dbo].[rptDadosFuncionarios]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptDadosFuncionarios
CREATE PROCEDURE [dbo].[rptDadosFuncionarios]
AS
    SELECT dbo.tbEntidades.NomeUsual
           ,dbo.tbFuncs.IdPosto
           ,dbo.tbPostos.NomeUsual                               AS Posto
           ,dbo.tbEntidades.IE
           ,dbo.tbEntidades.CNPJ
           ,dbo.tbEntidades.Endereco
           ,dbo.tbEntidades.Bairro
           ,dbo.tbEntidades.Municipio
           ,dbo.tbEntidades.UF
           ,dbo.tbEntidades.CEP
           ,(SELECT TOP 1 Fone
             FROM   tbEntidadesFone  with (nolock)
             WHERE  tbEntidadesFone.idEntidade = tbEntidades.Id) AS Fone
    FROM   dbo.tbFuncs with (nolock)
           INNER JOIN dbo.tbEntidades  with (nolock)
                   ON dbo.tbFuncs.IdEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbPostos  with (nolock)
                   ON dbo.tbFuncs.IdPosto = dbo.tbPostos.Id
    WHERE  dbo.tbEntidades.Tipo = 'FU' 

GO
/****** Object:  StoredProcedure [dbo].[rptDadosTransporte]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--[rptDadosTransporte]
CREATE PROCEDURE [dbo].[rptDadosTransporte]
@pIDPedido uniqueidentifier
AS
SELECT     tbPedidos.id, tbCarretaTransportadora.Placa as PlacaCarreta, tbCarretaTransportadora.Compartimento, tbMotoristaTransportadora.Nome, 
                      tbMotoristaTransportadora.RG, tbMotoristaTransportadora.CPF, tbMotoristaTransportadora.CNH, tbVeiculoTransportadora.Descricao, 
                      tbVeiculoTransportadora.Placa AS PlacaCavalo
FROM         tbPedidos INNER JOIN
                      tbCarretaTransportadora ON tbPedidos.idEntidadeTransp = tbCarretaTransportadora.IDTransportadora AND 
                      tbPedidos.IDCarreta = tbCarretaTransportadora.Id INNER JOIN
                      tbMotoristaTransportadora ON tbPedidos.idEntidadeTransp = tbMotoristaTransportadora.IDTransportadora AND 
                      tbPedidos.IDMotorista = tbMotoristaTransportadora.Id INNER JOIN
                      tbVeiculoTransportadora ON tbPedidos.idEntidadeTransp = tbVeiculoTransportadora.IDTransportadora AND 
                      tbPedidos.IDCavalo = tbVeiculoTransportadora.Id
WHERE     (tbPedidos.Id = @pIDPedido)

GO
/****** Object:  StoredProcedure [dbo].[rptDeposito]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptDeposito
CREATE PROCEDURE [dbo].[rptDeposito] @pIdposto   UNIQUEIDENTIFIER
                                    ,@pCaixaIni UNIQUEIDENTIFIER
                                    ,@pCaixaFim UNIQUEIDENTIFIER
AS
    DECLARE @ValorRetirado MONEY
    DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
	DECLARE @pCaixaTurnoAnt UNIQUEIDENTIFIER
    DECLARE @pDataCaixa AS SMALLDATETIME
	DECLARE @tbvendas table (vendido money, idobjeto int, idproduto uniqueidentifier, valormedio money,faturado money, Afericao money, TotalVendas money, NumTanque  int)
	
    SET @pDataCaixa = (SELECT Dia
                       FROM   tbCaixa with(nolock)
                       WHERE  Id = @pCaixaINI)
	
	SET @diaIni = (SELECT DataAbertura
                    FROM   tbCaixa  with(nolock)
                    WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)
    SET @diaFim = (SELECT DataAbertura
                    FROM   tbCaixa  with(nolock)
                    WHERE  Id = @pCaixaFIM AND IdPosto = @pIdPosto)
                    
    SET @pCaixaTurnoAnt = ( SELECT id
	                         FROM tbCaixa with(nolock)
	                         WHERE dia = dateadd(day, -1, @pdataCaixa)
	                         AND TCaixa = (Select count(id) from tbTurno where idPOsto = @pIdposto )
	                         AND idPOsto = @pIdPosto)                
    
    INSERT INTO @tblCaixas
    SELECT Id
    FROM tbCaixa  with(nolock)
    WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto
    
    
   -- INSERT INTO @tbvendas 
  --  SELECT  SUM(ca_atual.ValorLido - ca_Ant.ValorLido ),ca_atual.idobjeto   ,t.idproduto  ,0  ,0   ,0                               
                           --FROM tbCaixaItens AS ca_Ant 
                           -- INNER JOIN tbCaixaItens AS ca_atual ON ca_Ant.idObjeto = ca_atual.idObjeto 
                            --INNER JOIN tbBombas as b ON ca_Ant.idObjeto = b.NumBomba AND ca_atual.idObjeto = b.NumBomba 
                           -- INNER JOIN tbTanques AS t ON b.IdTanque = t.Id
                           
                         -- WHERE     (ca_Ant.IdCaixa = @pCaixaTurnoAnt) 
                           -- AND (ca_atual.IdCaixa = @pCaixaFim)
                            --AND (ca_Ant.TipoLeitura = 'B') 
                           -- AND (ca_atual.TipoLeitura = 'B')
                           -- AND (b.Idposto= @pIdPosto)
                                                   
    --GROUP BY        ca_atual.idobjeto ,t.idproduto    
	
	INSERT INTO @tbvendas 
    SELECT  SUM(ca_atual.ValorLido - ca_Ant.ValorLido ),0 ,t.idproduto  ,0  ,0   ,0 , 0 ,t.NumTanque                           
                           FROM tbCaixaItens AS ca_Ant 
                            INNER JOIN tbCaixaItens AS ca_atual ON ca_Ant.idObjeto = ca_atual.idObjeto 
                            INNER JOIN tbBombas as b ON ca_Ant.idObjeto = b.NumBomba AND ca_atual.idObjeto = b.NumBomba 
                            INNER JOIN tbTanques AS t ON b.IdTanque = t.Id
                           
                          WHERE (ca_Ant.IdCaixa = @pCaixaTurnoAnt) 
                            AND (ca_atual.IdCaixa = @pCaixaFim)
                            AND (ca_Ant.TipoLeitura = 'B') 
                            AND (ca_atual.TipoLeitura = 'B')
                            AND (b.Idposto= @pIdPosto)       
    GROUP BY       t.numtanque, t.idproduto


	--select * from @tbVendas
	
	Update @tbVendas
	set TotalVendas= sub.TotalVendas
	from @tbvendas t inner join
	(SELECT ROUND(SUM(tvi.ValorItem),2) as TotalVendas, tt.NumTanque
                     FROM   dbo.tbVendas tv with(nolock)
                            INNER JOIN dbo.tbVendasItens tvi with(nolock)
                                    ON tv.Id = tvi.idVenda
                            INNER JOIN dbo.tbTanques tt with(nolock)
                                    ON tv.idPosto = tt.IdPosto
                            INNER JOIN dbo.tbBombas tb with(nolock)
                                    ON tv.idPosto = tb.IdPosto
                                       AND tvi.idBomba = tb.Id
                                       AND tt.Id = tb.IdTanque
							INNER JOIN @tblCaixas cx
							        ON tv.idCaixa = cx.IdCaixa
                     WHERE  tvi.Cancelado = 0 
					    AND tv.Status IS NULL
					    AND tt.Idposto = @pIdposto
                     GROUP  BY tt.NumTanque) sub on t.NumTanque = sub.NumTanque         


	--Select * from @tbVendas
	Update @tbVendas
	Set Afericao=  sub.qtd
	from @tbvendas t inner join
			 (SELECT  SUM(af.QTD) as qtd,tt.NumTanque
			  FROM  tbAfericao as af
				INNER JOIN @tblCaixas cx ON af.idCaixa = cx.IdCaixa
				INNER JOIN tbBombas as b ON af.idBomba = b.Id
				INNER JOIN tbTanques as tt ON b.IdTanque = tt.Id
			  WHERE ( b.IdPosto = @pIdPosto) group by tt.NumTanque) sub on t.NumTanque = sub.Numtanque


	--select * from @tbvendas 
	
	UPDATE  @tbvendas
	SET     valormedio =  sub.precoMedio
	FROM    @tbvendas t INNER JOIN
		(
			SELECT  AVG(tvi.PrecoVenda) precoMedio,tvi.IdProduto
	 FROM  tbVendas  tv 
	INNER JOIN tbVendasItens tvi ON tv.Id = tvi.IdVenda 
	INNER JOIN tbProdutos  tp ON tvi.IdProduto = tp.Id
	INNER JOIN tbTanques tt ON tp.id = tt.IdProduto
	INNER JOIN @tblCaixas cx ON tv.idCaixa = cx.IdCaixa
	inner join @tbvendas tvii on tvii.idproduto = tvi.IdProduto

	WHERE  (tv.IdPosto = @pIdPosto) 
	 AND (tv.Status IS NULL) 
	 AND (tvi.cancelado=0)
	 group by tvi.IdProduto
	 
		) sub ON t.idproduto = sub.IdProduto

--Update @tbVendas Set ValorMedio = (totalVendas / Case Vendido WHEN 0 THEN 1 ELSE VENDIDO END)
	    
   UPDATE  @tbvendas set faturado = (vendido  - afericao) * valormedio
	
	--select * from @tbvendas         
	--Select Sum(Faturado) from @tbVendas AS Valor  
    
    

    SET @ValorRetirado = Isnull((SELECT Sum(Valor)
                                 FROM   tbRetiradas  with(nolock)
                                 WHERE  idPosto = @pIDPosto
                                   AND idCaixa IN (SELECT IdCaixa FROM @tblCaixas)), 0)
                         
                         

 SELECT 1                                        AS ID
           ,'Total Vendas'                       AS Descricao
,(SELECT
(
 ISnull(Sum(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda), 0) )
  FROM   dbo.tbVendas  with(nolock)
         INNER JOIN dbo.tbVendasItens  with(nolock)
                 ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
  WHERE  ( tbVendas.IDposto = @pIDPosto )
     AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
     AND ( tbVendasItens.Cancelado = 0 )
     AND ( tbVendas.Status IS NULL )) AS Valor
UNION
SELECT 2                                         AS ID
       ,'Cheque Vista'                           AS Descricao
       ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
         FROM   dbo.tbVendas  with(nolock)
                INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                        ON dbo.tbVendas.Id =
                           dbo.tbVendasItensPagamento.idVenda
         WHERE  ( tbVendas.IDposto = @pIDPosto )
            AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
            AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CV' )
            AND ( tbVendas.Status IS NULL )) AS Valor
UNION
SELECT 3                                          AS ID
       ,'Cheque Prazo'                            AS Descricao 
       ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
         FROM   dbo.tbVendas  with(nolock)
                INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                        ON dbo.tbVendas.Id =
                           dbo.tbVendasItensPagamento.idVenda
         WHERE  ( tbVendas.IDposto = @pIDPosto )
            AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
            AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CP' )
            AND ( tbVendas.Status IS NULL )) AS Valor
UNION
SELECT 4                                           AS ID
       ,'Cartão Crédito'                           AS Descricao
       ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
         FROM   dbo.tbVendas  with(nolock)
                INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                        ON dbo.tbVendas.Id =
                           dbo.tbVendasItensPagamento.idVenda
         WHERE  ( tbVendas.IDposto = @pIDPosto )
            AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
            AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CC' )
            AND ( tbVendas.Status IS NULL )) AS Valor
UNION
SELECT 5                                           AS ID
       ,'Cartão Débito'                            AS Descricao 
       ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
         FROM   dbo.tbVendas  with(nolock)
                INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                        ON dbo.tbVendas.Id =
                           dbo.tbVendasItensPagamento.idVenda
         WHERE  ( tbVendas.IDposto = @pIDPosto )
            AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
            AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CD' )
            AND ( tbVendas.Status IS NULL )) AS Valor
UNION
SELECT 6                                           AS ID
       ,'Prazo'                                    AS Descricao
       ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
         FROM   dbo.tbVendas  with(nolock)
                INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                        ON dbo.tbVendas.Id =
                           dbo.tbVendasItensPagamento.idVenda
         WHERE  ( tbVendas.IDposto = @pIDPosto )
            AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
            AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'PR' )
            AND ( tbVendas.Status IS NULL )) AS Valor
UNION
SELECT 7                                           AS ID
       ,'Carta Frete'                              AS Descricao
       ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
         FROM   dbo.tbVendas  with(nolock)
                INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                        ON dbo.tbVendas.Id =
                           dbo.tbVendasItensPagamento.idVenda
         WHERE  ( tbVendas.IDposto = @pIDPosto )
            AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
            AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CF' )
            AND ( tbVendas.Status IS NULL )) AS Valor
UNION
SELECT 8                                            AS ID
       ,'Dinheiro'                                  AS Descricao
       ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
         FROM   dbo.tbVendas  with(nolock)
                INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                        ON dbo.tbVendas.Id =
                           dbo.tbVendasItensPagamento.idVenda
         WHERE  ( tbVendas.IDposto = @pIDPosto )
            AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
            AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'DI' )) AS Valor
UNION
SELECT 9                                            As ID
       ,'Recebimentos'                              AS Descricao
       ,Isnull((SELECT sum(valor)
                FROM   tbContasPagarReceber  with(nolock)
                WHERE  idPosto = @pIDPosto
                   AND idTipo = 'RC'
                   AND idTipoDocto NOT IN ( 'CC', 'CD', 'DF' )
                   AND idPedCaixa IN (SELECT IdCaixa FROM @tblCaixas)), 0) AS Valor
UNION
SELECT 10                                          AS ID
       ,'Despesas'                                 As Descricao 
       ,Isnull(( SUM(Valor) ), 0) *- 1  AS Valor
FROM   dbo.tbContasPagarReceber  with(nolock)
WHERE  ( Despesa = 1 )
   AND ( idPosto = @pIDPosto )
   AND ( idPedCaixa IN (SELECT IdCaixa FROM @tblCaixas)) 
UNION
SELECT 10                                          AS ID
       ,'Cliente Especial'                         As Descricao 
       ,ISNULL ((SELECT SUM(tbVendasItens.PrecoEspecial *
                            tbVendasItens.Quantidade)
                         - SUM(
                                         tbVendasItens.PrecoVenda
                                         * tbVendasItens.Quantidade) AS
                        Expr1
                 FROM   tbVendas  with(nolock)
                        INNER JOIN tbVendasItens  with(nolock)
                                ON tbVendas.Id = tbVendasItens.idVenda
                        INNER JOIN tbProdutos  with(nolock)
                                ON tbVendasItens.idProduto = tbProdutos.Id
                        INNER JOIN tbProdutosPostos  with(nolock)
                                ON tbVendas.idPosto =
                                   tbProdutosPostos.idPosto
                                   AND tbVendasItens.idProduto =
                                       tbProdutosPostos.idProduto
                                   AND tbProdutos.Id =
                                       tbProdutosPostos.idProduto
                 WHERE  ( tbVendas.idPosto = @pIDPosto )
                    AND ( tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas)
                        )
                    AND ( tbVendasItens.Cancelado = 0 )
                    AND ( tbVendas.Status IS NULL )
                    AND ( tbVendasItens.PrecoEspecial > 0 )), 0) AS Valor
UNION
SELECT 11                                           AS ID
       ,'Troco Carta Frete'                         AS Descricao
       ,Isnull((SELECT SUM(dbo.tbCartaFrete.ValorAdiantamento) *- 1
                FROM   dbo.tbCartaFrete  with(nolock)
                       INNER JOIN dbo.tbVendas  with(nolock)
                               ON dbo.tbCartaFrete.idVenda = dbo.tbVendas.Id
                WHERE  ( tbVendas.IDposto = @pIDPosto )
                   AND dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas)),0) AS Valor
UNION
SELECT 12                                           As ID
       ,'Retorno Carta Frete'                       AS Descricao
       ,Isnull((SELECT SUM(dbo.tbCartaFrete.ValorRetorno) *- 1
                FROM   dbo.tbCartaFrete  with(nolock)
                WHERE  ( tbCartaFrete.IDposto = @pIDPosto )
                   AND dbo.tbCartaFrete.idCaixaRetorno IN (SELECT IdCaixa FROM @tblCaixas) ), 0) As Valor
UNION
SELECT 13                                          AS ID
       ,'Total Retirar'                            AS Descricao  
       ,0                                          As Valor
UNION
SELECT 14                                          As ID
       ,'Retirado'                                 As Descricao 
       ,@ValorRetirado                             As Valor
UNION
SELECT 15                                                             AS ID
       ,'Quebra de Caixa'                                             AS Descricao
       ,Isnull((SELECT Sum (valor)
                FROM   tbColaboradoresDifCaixa  with(nolock)
                WHERE  ( tbColaboradoresDifCaixa.IDposto = @pIDPosto )
                   AND Tipo = 'C'
                   AND idCAixa IN (SELECT IdCaixa FROM @tblCaixas)), 0) AS Valor
UNION
SELECT 16                                                             AS ID
       ,'Retaguarda'                                                  AS Descricao
       ,Isnull((SELECT Sum (valor)
                FROM   tbColaboradoresDifCaixa  with(nolock)
                       INNER JOIN dbo.tbFuncs  with(nolock)
                               ON dbo.tbColaboradoresDifCaixa.idEntidade =
                                  dbo.tbFuncs.IdEntidade
                WHERE  ( tbColaboradoresDifCaixa.IDposto = @pIDPosto )
                   AND Tipo = 'R'
                   AND dbo.tbFuncs.Administrativa = 0
                   AND dbo.tbColaboradoresDifCaixa.Descricao = 'Retaguarda'
                   AND idCAixa IN (SELECT IdCaixa FROM @tblCaixas)), 0) AS Valor 
 UNION
    SELECT 17                                                         AS ID
           ,'Lubrificante'                                            AS Descicao
           ,Isnull(SUM(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda)    , 0)     AS Valor                    
                       FROM   dbo.tbVendas  with(nolock)
                        INNER JOIN dbo.tbCaixa  with(nolock)
                         ON dbo.tbVendas.IdCaixa = dbo.tbCaixa.Id
                        INNER JOIN dbo.tbVendasItens  with(nolock)
                         ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
                        INNER JOIN dbo.tbProdutos  with(nolock)
                         ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
                        INNER JOIN dbo.tbProdutosPostos  with(nolock)
                         ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
                        AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto AND dbo.tbVendasItens.idProduto = dbo.tbProdutosPostos.idProduto
                 WHERE  ( dbo.tbVendas.idPosto = @pIDPosto )
                        --AND ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
						AND idCAixa IN (SELECT IdCaixa FROM @tblCaixas)
                        AND ( dbo.tbProdutos.TipoProd = 'LB' )
                        AND ( tbVendasItens.Cancelado = 0 )
                        AND ( tbVendas.Status IS NULL ) 
UNION
  SELECT 18                                                     AS ID
           ,'Conveniência'                                      AS Descricao
           ,Isnull(SUM(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda), 0) AS Valor
                       FROM   dbo.tbVendas  with(nolock)
                       INNER JOIN dbo.tbCaixa  with(nolock)
                        ON dbo.tbVendas.IdCaixa = dbo.tbCaixa.Id
                       INNER JOIN dbo.tbVendasItens  with(nolock)
                        ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
                       INNER JOIN dbo.tbProdutos  with(nolock)
                        ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
                       INNER JOIN dbo.tbProdutosPostos  with(nolock)
                       ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
                        AND dbo.tbVendasItens.idProduto = dbo.tbProdutosPostos.idProduto
               WHERE  ( dbo.tbVendas.idPosto = @pIDPosto )
                       --AND ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
					   AND idCAixa IN (SELECT IdCaixa FROM @tblCaixas)
                       AND ( dbo.tbProdutos.TipoProd = 'LC' )
                       AND ( tbVendasItens.Cancelado = 0 )
                       AND ( tbVendas.Status IS NULL ) 
                       
 UNION
    SELECT 19                                                     AS ID
           ,'Prestação de serviços'                               AS Descricao
           ,Isnull(SUM(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda), 0) AS Valor
                        FROM   dbo.tbVendas  with(nolock)
                        INNER JOIN dbo.tbCaixa  with(nolock)
                         ON dbo.tbVendas.IdCaixa = dbo.tbCaixa.Id
                        INNER JOIN dbo.tbVendasItens  with(nolock)
                         ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
                        INNER JOIN dbo.tbProdutos  with(nolock)
                         ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
                        INNER JOIN dbo.tbProdutosPostos  with(nolock)
                         ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
                         AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto AND dbo.tbVendasItens.idProduto = dbo.tbProdutosPostos.idProduto
                  WHERE  ( dbo.tbVendas.idPosto = @pIDPosto )
                         --AND ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
						 AND idCAixa IN (SELECT IdCaixa FROM @tblCaixas)
                         AND ( dbo.tbProdutos.TipoProd = 'SE' )
                         AND ( tbVendasItens.Cancelado = 0 )
                         AND ( tbVendas.Status IS NULL )  
 UNION
  SELECT 20                                                                     AS ID
           ,'Combustível'                                                       AS Descricao
           ,( Select ROUND(ISNULL(SUM(Faturado), 0), 2) from @tbvendas )        As Valor 




GO
/****** Object:  StoredProcedure [dbo].[rptDepositoChequeDinheiro]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptDepositoChequeDinheiro
CREATE PROCEDURE [dbo].[rptDepositoChequeDinheiro] @pIdposto   UNIQUEIDENTIFIER
                                                  ,@pCaixaIni UNIQUEIDENTIFIER
                                                  ,@pCaixaFim UNIQUEIDENTIFIER
AS
    DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
	
	SET @diaIni = (SELECT DataAbertura
                    FROM   tbCaixa  with(nolock)
                    WHERE  Id = @pCaixaIni AND IdPosto = @pIdPosto)
    SET @diaFim = (SELECT DataAbertura
                    FROM   tbCaixa  with(nolock)
                    WHERE  Id = @pCaixaFim AND IdPosto = @pIdPosto)
    
    INSERT INTO @tblCaixas
    SELECT Id
    FROM tbCaixa  with(nolock)
    WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto
    
    SELECT 1
           ,'Dinheiro'                                                   AS Tipo
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
				    INNER JOIN @tblCaixas cx
					        ON dbo.tbVendas.idCaixa = cx.IdCaixa
             WHERE  tbVendas.idPosto = @pIDposto
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'DI' )) AS
            Valor
    UNION
    SELECT 2
           ,'Cheque Vista'                                               AS Tipo
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
				    INNER JOIN @tblCaixas cx
					        ON dbo.tbVendas.idCaixa = cx.IdCaixa							   
             WHERE  tbVendas.idPosto = @pIDposto
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CV' )) AS
            Valor 
GO
/****** Object:  StoredProcedure [dbo].[rptDespesasCentral]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptDespesasCentral
CREATE PROCEDURE [dbo].[rptDespesasCentral] @pOP       CHAR(1)
                                           ,@pDataINI SMALLDATETIME
                                           ,@pDataFIM SMALLDATETIME
AS
    IF @pOP = 'T'
      BEGIN
          SELECT TOP 100 PERCENT dbo.tbContasPagarReceber.DataPagamento
                                 ,dbo.tbEntidades.NomeUsual  AS Favorecido
                                 ,dbo.tbHistoricos.Descricao AS Historico
                                 ,dbo.tbContasPagarReceber.Valor
                                 ,dbo.tbContasPagarReceber.InfoAdic
          FROM   dbo.tbContasPagarReceber  with(nolock)
                 INNER JOIN dbo.tbPostos  with(nolock)
                         ON dbo.tbContasPagarReceber.idPosto = dbo.tbPostos.Id
                 INNER JOIN dbo.tbHistoricos  with(nolock)
                         ON dbo.tbContasPagarReceber.idHistorico =
                            dbo.tbHistoricos.Id
                 INNER JOIN dbo.tbEntidades  with(nolock)
                         ON dbo.tbContasPagarReceber.idEntidade =
                            dbo.tbEntidades.Id
          WHERE  ( dbo.tbPostos.NomeUsual = 'Central' )
             AND ( dbo.tbContasPagarReceber.DataPagamento BETWEEN
                   @pDataINI AND @pDataFIM )
          ORDER  BY dbo.tbContasPagarReceber.Id
      END
    ELSE IF @pOP = 'P'
      BEGIN
          SELECT TOP 100 PERCENT dbo.tbContasPagarReceber.DataPagamento
                                 ,dbo.tbEntidades.NomeUsual  AS Favorecido
                                 ,dbo.tbHistoricos.Descricao AS Historico
                                 ,dbo.tbContasPagarReceber.Valor
                                 ,dbo.tbContasPagarReceber.InfoAdic
          FROM   dbo.tbContasPagarReceber  with(nolock)
                 INNER JOIN dbo.tbPostos  with(nolock)
                         ON dbo.tbContasPagarReceber.idPosto = dbo.tbPostos.Id
                 INNER JOIN dbo.tbHistoricos  with(nolock)
                         ON dbo.tbContasPagarReceber.idHistorico =
                            dbo.tbHistoricos.Id
                 INNER JOIN dbo.tbEntidades  with(nolock)
                         ON dbo.tbContasPagarReceber.idEntidade =
                            dbo.tbEntidades.Id
          WHERE  dbo.tbHistoricos.Despesa = 0
             AND ( dbo.tbPostos.NomeUsual = 'Central' )
             AND ( dbo.tbContasPagarReceber.DataPagamento BETWEEN
                   @pDataINI AND @pDataFIM )
          ORDER  BY dbo.tbContasPagarReceber.Id
      END
    ELSE IF @pOP = 'D'
      BEGIN
          SELECT TOP 100 PERCENT dbo.tbContasPagarReceber.DataPagamento
                                 ,dbo.tbEntidades.NomeUsual  AS Favorecido
                                 ,dbo.tbHistoricos.Descricao AS Historico
                                 ,dbo.tbContasPagarReceber.Valor
                                 ,dbo.tbContasPagarReceber.InfoAdic
          FROM   dbo.tbContasPagarReceber  with(nolock)
                 INNER JOIN dbo.tbPostos  with(nolock)
                         ON dbo.tbContasPagarReceber.idPosto = dbo.tbPostos.Id
                 INNER JOIN dbo.tbHistoricos  with(nolock)
                         ON dbo.tbContasPagarReceber.idHistorico =
                            dbo.tbHistoricos.Id
                 INNER JOIN dbo.tbEntidades  with(nolock)
                         ON dbo.tbContasPagarReceber.idEntidade =
                            dbo.tbEntidades.Id
          WHERE  dbo.tbHistoricos.Despesa = 1
             AND ( dbo.tbPostos.NomeUsual = 'Central' )
             AND ( dbo.tbContasPagarReceber.DataPagamento BETWEEN
                   @pDataINI AND @pDataFIM )
          ORDER  BY dbo.tbContasPagarReceber.Id
      END 

GO
/****** Object:  StoredProcedure [dbo].[rptDespesasMes]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptDespesasMes
CREATE PROCEDURE [dbo].[rptDespesasMes] @pAno      INT
                                       ,@pMes     INT
                                       ,@pIdposto UNIQUEIDENTIFIER
AS
    DECLARE @posto NVARCHAR(MAX)
    DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
    
    SET @posto = (SELECT NomeUsual FROM tbPostos WHERE Id = @pIDPosto)
    
    IF @posto = 'Central'
      BEGIN
          INSERT INTO @tblCaixas
          SELECT Id
		  FROM   tbCaixa with(nolock)
			WHERE  Month(dia) = @pMes
			   AND Year(dia) = @pAno
          SET @pIDposto = NULL
      END
    ELSE
      BEGIN
          INSERT INTO @tblCaixas
          SELECT Id
		  FROM   tbCaixa  with(nolock)
			WHERE  Month(dia) = @pMes
			   AND Year(dia) = @pAno
			   AND IdPosto = @pIdPosto
      END

    SELECT dbo.tbCaixa.Dia
           ,dbo.tbPostos.NomeUsual     AS Posto
           ,dbo.tbEntidades.NomeUsual  AS Favorecido
           ,dbo.tbContasPagarReceber.Valor
           ,dbo.tbHistoricos.Descricao AS Historico
           ,dbo.tbContasPagarReceber.InfoAdic
           ,dbo.tbPostos.Id
    FROM   dbo.tbContasPagarReceber  with(nolock)
           INNER JOIN dbo.tbPostos  with(nolock)
                   ON dbo.tbContasPagarReceber.idPosto = dbo.tbPostos.Id
           INNER JOIN dbo.tbHistoricos  with(nolock)
                   ON dbo.tbContasPagarReceber.idHistorico = dbo.tbHistoricos.Id
           INNER JOIN dbo.tbEntidades  with(nolock)
                   ON dbo.tbContasPagarReceber.idEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbCaixa  with(nolock)
                   ON dbo.tbContasPagarReceber.idPedCaixa = dbo.tbCaixa.Id
		   INNER JOIN @tblCaixas cx
		           ON dbo.tbCaixa.Id = cx.IdCaixa
    WHERE  ( dbo.tbContasPagarReceber.idPosto = @pIDPosto OR @pIDPosto IS NULL )
       AND ( dbo.tbContasPagarReceber.Despesa = 1 )
    ORDER  BY dbo.tbPostos.Id
              ,dbo.tbContasPagarReceber.Id 

GO
/****** Object:  StoredProcedure [dbo].[rptDespesasMesResumo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptDespesasMesResumo
CREATE PROCEDURE [dbo].[rptDespesasMesResumo] @pAno      INT
                                             ,@pMes     INT
                                             ,@pIDPosto UNIQUEIDENTIFIER
AS
    DECLARE @posto NVARCHAR(MAX)
    DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
    
    SET @posto = (SELECT NomeUsual FROM tbPostos WHERE Id = @pIDPosto)
    
    IF @posto = 'Central'
      BEGIN
          INSERT INTO @tblCaixas
          SELECT Id
		  FROM   tbCaixa with(nolock)
			WHERE  Month(dia) = @pMes
			   AND Year(dia) = @pAno
          SET @pIDposto = NULL
      END
    ELSE
      BEGIN
          INSERT INTO @tblCaixas
          SELECT Id
		  FROM   tbCaixa  with(nolock)
			WHERE  Month(dia) = @pMes
			   AND Year(dia) = @pAno
			   AND IdPosto = @pIdPosto
      END

    SELECT Id
           ,Descricao
           ,ISNULL ((SELECT Sum(Valor)
                     FROM   tbDespesasLimite  with(nolock)
                     WHERE  ( idPosto = @pIDPosto OR @pIDPosto IS NULL )
                        AND Ano = @pAno
                        AND Mes = @pMes
                        AND ( tbHistoricos.Id = tbDespesasLimite.IdHistorico )),
            0)
            AS
            Valor
           ,ISNULL ((SELECT Sum(Acrescimo)
                     FROM   tbDespesasLimite  with(nolock)
                     WHERE  ( idPosto = @pIDPosto OR @pIDPosto IS NULL )
                        AND Ano = @pAno
                        AND Mes = @pMes
                        AND ( tbHistoricos.Id = tbDespesasLimite.IdHistorico )),
            0)
            AS
            Acrescimo
           ,ISNULL ((SELECT SUM(Valor)
                     FROM   tbContasPagarReceber  with(nolock)
					        INNER JOIN @tblCaixas cx
							        ON tbContasPagarReceber.idPedCaixa = cx.IdCaixa
                     WHERE  ( idPosto = @pIDPosto OR @pIDPosto IS NULL )
                        AND ( idHistorico = tbHistoricos.Id )), 0)
            AS ValorGasto
    FROM   tbHistoricos  with(nolock)
    WHERE  ativo = 1
       AND Tipo = 'P'
       AND ISNULL ((SELECT Sum(Valor)
                    FROM   tbDespesasLimite  with(nolock)
                    WHERE  ( idPosto = @pIDPosto OR @pIDPosto IS NULL )
                       AND Ano = @pAno
                       AND Mes = @pMes
                       AND ( tbHistoricos.Id = tbDespesasLimite.IdHistorico )),
           0) > 0
    ORDER  BY Id 

GO
/****** Object:  StoredProcedure [dbo].[rptDespesasMesResumoConvLub]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptDespesasMesResumoConvLub
CREATE PROCEDURE [dbo].[rptDespesasMesResumoConvLub] @pAno      INT
                                                    ,@pMes     INT
                                                    ,@pIDPosto UNIQUEIDENTIFIER
AS
    DECLARE @posto NVARCHAR(MAX)
    DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
    
    SET @posto = (SELECT NomeUsual FROM tbPostos WHERE Id = @pIDPosto)
    
    IF @posto = 'Central'
      BEGIN
          INSERT INTO @tblCaixas
          SELECT Id
		  FROM   tbCaixa with( nolock)
			WHERE  Month(dia) = @pMes
			   AND Year(dia) = @pAno
          SET @pIDposto = NULL
      END
    ELSE
      BEGIN
          INSERT INTO @tblCaixas
          SELECT Id
		  FROM   tbCaixa  with( nolock)
			WHERE  Month(dia) = @pMes
			   AND Year(dia) = @pAno
			   AND IdPosto = @pIdPosto
      END

    SELECT 123                                                          AS
           IDHistorico
           ,'Loja Conveniencia'                                         AS
            Descricao
           ,ISNULL ((SELECT Sum(Valor)
                     FROM   tbDespesasLimite  with( nolock)
                     WHERE  ( idPosto = @pIDPosto OR @pIDPosto IS NULL )
                        AND Ano = @pAno
                        AND Mes = @pMes), 0) AS Valor
           ,ISNULL ((SELECT Sum(Acrescimo)
                     FROM   tbDespesasLimite  with( nolock)
                     WHERE  ( idPosto = @pIDPosto OR @pIDPosto IS NULL )
                        AND Ano = @pAno
                        AND Mes = @pMes), 0) AS
            Acrescimo
           ,ISNULL ((SELECT SUM(Valor)
                     FROM   tbContasPagarReceber  with( nolock)
					        INNER JOIN @tblCaixas cx
							        ON tbContasPagarReceber.IdPedCaixa = cx.IdCaixa
                     WHERE  ( idPosto = @pIDPosto OR @pIDPosto IS NULL )), 0)                  AS
            ValorGasto
    FROM   tbHistoricos  with( nolock)
    WHERE  ativo = 1
       AND Tipo = 'P'
    UNION
    SELECT 25
           ,'Lubrificantes'
           ,ISNULL ((SELECT Sum(Valor)
                     FROM   tbDespesasLimite  with( nolock)
                     WHERE  ( idPosto = @pIDPosto OR @pIDPosto IS NULL )
                        AND Ano = @pAno
                        AND Mes = @pMes), 0)  AS Valor
           ,ISNULL ((SELECT Sum(Acrescimo) 
                     FROM   tbDespesasLimite  with( nolock)
                     WHERE  ( idPosto = @pIDPosto OR @pIDPosto IS NULL )
                        AND Ano = @pAno
                        AND Mes = @pMes), 0) AS
            Acrescimo
           ,ISNULL ((SELECT SUM(Valor)
                     FROM   tbContasPagarReceber  with( nolock)
					        INNER JOIN @tblCaixas cx
							        ON tbContasPagarReceber.IdPedCaixa = cx.IdCaixa
                     WHERE  ( idPosto = @pIDPosto OR @pIDPosto IS NULL )), 0)                   AS
            ValorGasto
    FROM   tbHistoricos  with( nolock)
    WHERE  ativo = 1
       AND Tipo = 'P'
GO
/****** Object:  StoredProcedure [dbo].[rptDiferencaCaixa]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptDiferencaCaixa
CREATE PROCEDURE [dbo].[rptDiferencaCaixa] @pIdposto      UNIQUEIDENTIFIER
                                          ,@pDataINI     SMALLDATETIME
                                          ,@pDataFim     SMALLDATETIME
                                          ,@pColaborador UNIQUEIDENTIFIER
AS
    IF @pIDposto = dbo.GuidEmpty()
      BEGIN
          SET @pIDposto = NULL
      END
    
    IF @pColaborador = dbo.GuidEmpty()
      BEGIN
          SET @pColaborador = NULL
      END
    
    DECLARE @tbFechamentos TABLE(DiaFechamento datetime, Total float, IdEntidade uniqueidentifier, IdPosto uniqueidentifier)    
	DECLARE @dateFrom datetime
	DECLARE @dateTo datetime

	SET @dateFrom = dbo.UltimoDiadoMes(DATEPART(MONTH, @pDataINI), DATEPART(YEAR, @pDataINI))
	SET @dateTo = @pDataFIM

	WHILE(@dateFrom <= @dateTo)
	BEGIN
		INSERT INTO @tbFechamentos
		SELECT 
			@dateFrom,
			SUM(dbo.tbColaboradoresDifCaixa.valor),
			dbo.tbColaboradoresDifCaixa.IdEntidade,
			@pIdposto
        FROM   dbo.tbColaboradoresDifCaixa with(nolock) 
				INNER JOIN dbo.tbCaixa with(nolock)
				ON dbo.tbColaboradoresDifCaixa.idCaixa = dbo.tbCaixa.Id
		WHERE  ( dbo.tbColaboradoresDifCaixa.Tipo = 'C'
				OR dbo.tbColaboradoresDifCaixa.Tipo = 'D' )
			       AND ( dbo.tbColaboradoresDifCaixa.valor < 0 )
			       AND ( dbo.tbColaboradoresDifCaixa.idEntidade = @pColaborador OR @pColaborador IS NULL )
			      -- AND ( dbo.tbColaboradoresDifCaixa.IdPosto = @pIDposto OR @pIDposto IS NULL )
			       AND ( dbo.tbCaixa.Dia <= @dateFrom )
			OR ( dbo.tbColaboradoresDifCaixa.Tipo = 'E' )
				AND ( dbo.tbColaboradoresDifCaixa.valor > 0 )
				AND ( dbo.tbColaboradoresDifCaixa.idEntidade = @pColaborador OR @pColaborador IS NULL )
				--AND ( dbo.tbColaboradoresDifCaixa.IdPosto = @pIDposto OR @pIDposto IS NULL )
				AND ( dbo.tbCaixa.Dia <= @dateFrom )
			OR ( dbo.tbColaboradoresDifCaixa.Tipo = 'L' )
				AND ( dbo.tbColaboradoresDifCaixa.idEntidade = @pColaborador OR @pColaborador IS NULL )
				--AND ( dbo.tbColaboradoresDifCaixa.IdPosto = @pIDposto OR @pIDposto IS NULL )
				AND ( dbo.tbCaixa.Dia <= @dateFrom )
		GROUP BY dbo.tbColaboradoresDifCaixa.IdEntidade
		
  
		--A cada passo, selecionar o último dia do próximo mês gravado no @dateFrom (não foi usado a função do banco por conta da virada de ano)
		SELECT @dateFrom = DATEADD(d, -1, DATEADD(m, DATEDIFF(m, 0, DATEADD(m,1,@dateFrom)) + 1, 0)) 
	END

	--Report
	SELECT * FROM (
		SELECT 
			dbo.tbPostos.Id As IdPosto
			,dbo.tbPostos.NomeUsual AS Posto
			,tbEntidades.RzSocial AS Colaborador
			,tbColaboradoresDifCaixa.Valor
			,tbColaboradoresDifCaixa.Descricao
			,tbCaixa.Dia
			,tbCaixa.Id as idcaixa
			,CAST(tbCaixa.TCaixa AS VARCHAR) + ' de ' + CAST((SELECT COUNT(Id) FROM tbTurno WHERE tbTurno.IdPosto = @pIdposto) AS VARCHAR) AS TCaixa
			,tbColaboradoresDifCaixa.Tipo
			,tbColaboradoresDifCaixa.idEntidade
			,ISNULL ((SELECT SUM(dbo.tbColaboradoresDifCaixa.valor)
						FROM   dbo.tbColaboradoresDifCaixa with(nolock) 
							INNER JOIN dbo.tbCaixa with(nolock)
									ON dbo.tbColaboradoresDifCaixa.idCaixa = dbo.tbCaixa.Id
						WHERE  ( dbo.tbColaboradoresDifCaixa.Tipo = 'C'
								OR dbo.tbColaboradoresDifCaixa.Tipo = 'D' )
						AND ( dbo.tbColaboradoresDifCaixa.valor < 0 )
						AND ( dbo.tbColaboradoresDifCaixa.idEntidade = tbEntidades.Id )
						AND ( dbo.tbCaixa.Dia < @pDataINI )
							OR ( dbo.tbColaboradoresDifCaixa.Tipo = 'E' )
							AND ( dbo.tbColaboradoresDifCaixa.valor > 0 )
							AND ( dbo.tbColaboradoresDifCaixa.idEntidade = tbEntidades.Id )
							AND ( dbo.tbCaixa.Dia < @pDataINI )
							OR ( dbo.tbColaboradoresDifCaixa.Tipo = 'L' )
							AND ( dbo.tbColaboradoresDifCaixa.idEntidade = tbEntidades.Id )
							AND ( dbo.tbCaixa.Dia < @pDataINI )), 0) AS SaldoAnterior
			, 0 AS TotalFechamento
		FROM   dbo.tbColaboradoresDifCaixa
			   INNER JOIN dbo.tbEntidades with(nolock)
					   ON tbColaboradoresDifCaixa.idEntidade = tbEntidades.Id
			   INNER JOIN dbo.tbPostos with(nolock)
					   ON tbColaboradoresDifCaixa.idPosto = dbo.tbPostos.Id
			   INNER JOIN dbo.tbCaixa with(nolock)
					   ON tbColaboradoresDifCaixa.idCaixa = tbCaixa.Id
		WHERE  ( tbColaboradoresDifCaixa.Tipo = 'C'
				  OR tbColaboradoresDifCaixa.Tipo = 'D' )
		   AND ( tbColaboradoresDifCaixa.valor < 0 )
		   AND ( tbColaboradoresDifCaixa.idEntidade = @pColaborador OR @pColaborador IS NULL )
		  -- AND ( dbo.tbPostos.Id = @pIDposto OR @pIDposto IS NULL )
		   AND ( tbCaixa.Dia BETWEEN @pDataINI AND @pDataFIM )
			OR ( tbColaboradoresDifCaixa.Tipo = 'E' )
			   AND ( tbColaboradoresDifCaixa.valor > 0 )
			   AND ( tbColaboradoresDifCaixa.idEntidade = @pColaborador OR @pColaborador IS NULL )
			 --  AND ( dbo.tbPostos.Id = @pIDposto OR @pIDposto IS NULL )
			   AND ( tbCaixa.Dia BETWEEN @pDataINI AND @pDataFIM )
			OR ( tbColaboradoresDifCaixa.Tipo = 'L' )
			   AND ( tbColaboradoresDifCaixa.idEntidade = @pColaborador OR @pColaborador IS NULL )
			  -- AND ( dbo.tbPostos.Id = @pIDposto OR @pIDposto IS NULL )
			   AND ( tbCaixa.Dia BETWEEN @pDataINI AND @pDataFIM )
               AND ( tbEntidades.Tipo='FU' )

		UNION ALL
		SELECT 
			f.IdPosto,
			tbPostos.NomeUsual AS Posto,
			tbEntidades.RzSocial AS Colaborador,
			0 AS Valor,
			'Fechamento da quebra de caixa do mês '+ RIGHT(CONVERT(VARCHAR(10), f.DiaFechamento, 103), 7)  + '.'  AS Descricao,
			f.DiaFechamento AS Dia,
			NULL AS IdCaixa,
			NULL AS TCaixa,
			'FC' As Tipo,
			f.IdEntidade,
			0 AS SaldoAnterior,
			f.Total AS TotalFechamento
		FROM @tbFechamentos f
			INNER JOIN tbPostos ON f.IdPosto = tbPostos.Id
			INNER JOIN tbEntidades ON f.IdEntidade = tbEntidades.Id
		WHERE tbEntidades.Tipo='FU'
	) AS result
	ORDER BY result.Posto, result.Colaborador, result.Dia, result.Tipo
GO
/****** Object:  StoredProcedure [dbo].[rptDiferencaCaixa_Retaguarda]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[rptDiferencaCaixa_Retaguarda] @pIdposto      UNIQUEIDENTIFIER
                                          ,@pDataINI     SMALLDATETIME
                                          ,@pDataFim     SMALLDATETIME
                                          ,@pColaborador UNIQUEIDENTIFIER
AS

    IF @pIDposto = dbo.GuidEmpty()
      BEGIN
          SET @pIDposto = NULL
      END
    
    IF @pColaborador = dbo.GuidEmpty()
      BEGIN
          SET @pColaborador = NULL
      END
    
    SELECT tbColaboradoresDifCaixa_1.id
           ,dbo.tbPostos.Id as idposto
           ,dbo.tbPostos.NomeUsual                                   AS Posto
           ,Colaboradores.RzSocial                                   AS
            Colaborador
           ,tbColaboradoresDifCaixa_1.valor
           ,tbColaboradoresDifCaixa_1.Descricao
           ,tbCaixa_1.Dia
           ,tbCaixa_1.Id as idcaixa
           ,tbCaixa_1.TCaixa
           ,tbColaboradoresDifCaixa_1.Tipo
           ,tbColaboradoresDifCaixa_1.idEntidade
           ,ISNULL ((SELECT SUM(dbo.tbColaboradoresDifCaixa.valor) AS Expr1
                     FROM   dbo.tbColaboradoresDifCaixa with(nolock)
                            INNER JOIN dbo.tbCaixa  with(nolock)
                                    ON dbo.tbColaboradoresDifCaixa.idCaixa =
                                       dbo.tbCaixa.Id
                     WHERE  ( dbo.tbColaboradoresDifCaixa.Tipo = 'D' )
                        AND ( dbo.tbColaboradoresDifCaixa.valor >= 0 )
                        AND ( dbo.tbColaboradoresDifCaixa.idEntidade = Colaboradores.Id )
                        AND ( dbo.tbCaixa.Dia < @pDataINI )
                         OR ( dbo.tbColaboradoresDifCaixa.Tipo = 'R' )
                            AND ( dbo.tbColaboradoresDifCaixa.idEntidade = Colaboradores.Id )
                            AND ( dbo.tbCaixa.Dia < @pDataINI )
                         OR ( dbo.tbColaboradoresDifCaixa.Tipo = 'S' )
                            AND ( dbo.tbColaboradoresDifCaixa.idEntidade = Colaboradores.Id )
                            AND ( dbo.tbCaixa.Dia < @pDataINI )
						 OR ( dbo.tbColaboradoresDifCaixa.Tipo = 'M' )
							AND ( dbo.tbColaboradoresDifCaixa.idEntidade = Colaboradores.Id )
							AND ( dbo.tbCaixa.Dia < @pDataINI )), 0) AS
            SaldoAnterior
    FROM   dbo.tbColaboradoresDifCaixa AS tbColaboradoresDifCaixa_1  with(nolock)
           INNER JOIN dbo.tbEntidades AS Colaboradores  with(nolock)
                   ON tbColaboradoresDifCaixa_1.idEntidade = Colaboradores.Id
           INNER JOIN dbo.tbPostos  with(nolock)
                   ON tbColaboradoresDifCaixa_1.idPosto = dbo.tbPostos.Id
           INNER JOIN dbo.tbCaixa AS tbCaixa_1  with(nolock)
                   ON tbColaboradoresDifCaixa_1.idCaixa = tbCaixa_1.Id
    WHERE  ( tbColaboradoresDifCaixa_1.Tipo = 'D' )
       AND ( tbColaboradoresDifCaixa_1.valor >= 0 )
       AND ( tbColaboradoresDifCaixa_1.idEntidade = @pColaborador OR @pColaborador IS NULL )
      -- AND ( dbo.tbPostos.Id = @pIDposto OR @pIDposto IS NULL )
       AND ( tbCaixa_1.Dia BETWEEN @pDataINI AND @pDataFIM )
        OR ( tbColaboradoresDifCaixa_1.Tipo = 'R' )
           AND ( tbColaboradoresDifCaixa_1.idEntidade = @pColaborador OR @pColaborador IS NULL )
	   --    AND ( dbo.tbPostos.Id = @pIDposto OR @pIDposto IS NULL )
           AND ( tbCaixa_1.Dia BETWEEN @pDataINI AND @pDataFIM )
        OR ( tbColaboradoresDifCaixa_1.Tipo = 'S' )
           AND ( tbColaboradoresDifCaixa_1.idEntidade = @pColaborador OR @pColaborador IS NULL )
	    --   AND ( dbo.tbPostos.Id = @pIDposto OR @pIDposto IS NULL )
           AND ( tbCaixa_1.Dia BETWEEN @pDataINI AND @pDataFIM )
		OR ( tbColaboradoresDifCaixa_1.Tipo = 'M' )
			   AND ( tbColaboradoresDifCaixa_1.idEntidade = @pColaborador OR @pColaborador IS NULL )
			--   AND ( dbo.tbPostos.Id = @pIDposto OR @pIDposto IS NULL )
			   AND ( tbCaixa_1.Dia BETWEEN @pDataINI AND @pDataFIM )
               AND ( Colaboradores.Tipo='FU' )
    ORDER  BY dbo.tbPostos.NomeUsual
              ,tbCaixa_1.Dia
              ,Colaboradores.NomeUsual 




GO
/****** Object:  StoredProcedure [dbo].[rptDiferencaCaixaColaboradores]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptDiferencaCaixaColaboradores
CREATE PROCEDURE [dbo].[rptDiferencaCaixaColaboradores] @pPosto UNIQUEIDENTIFIER
                                                       ,@pData SMALLDATETIME
AS
    DECLARE @posto NVARCHAR(MAX)
    
    SET @posto = (SELECT NomeUsual FROM tbPostos WHERE Id = @pPosto)

    IF @posto = 'Central'
      BEGIN
          SET @pPosto = NULL
      END

    SELECT tbEntidades.Id
           ,tbPostos.NomeUsual                               AS Posto
           ,tbEntidades.NomeUsual                            AS Colaborador
           ,ISNULL((SELECT SUM(tbColaboradoresDifCaixa.valor)
                    FROM   tbColaboradoresDifCaixa  with (nolock) 
                           INNER JOIN tbCaixa  with (nolock) 
                                   ON tbColaboradoresDifCaixa.idCaixa =
                                      tbCaixa.Id
                    WHERE  ( tbColaboradoresDifCaixa.Tipo = 'C'
                              OR tbColaboradoresDifCaixa.Tipo = 'D' )
                       AND ( tbColaboradoresDifCaixa.valor < 0 )
                       AND ( tbColaboradoresDifCaixa.idEntidade =
                           tbEntidades.Id )
                       AND ( tbCaixa.Dia < @pData )
                        OR ( tbColaboradoresDifCaixa.Tipo = 'E' )
                           AND ( tbColaboradoresDifCaixa.valor > 0 )
                           AND ( tbColaboradoresDifCaixa.idEntidade =
                               tbEntidades.Id )
                           AND ( tbCaixa.Dia < @pData )
                        OR ( tbColaboradoresDifCaixa.Tipo = 'L' )
                           AND ( tbColaboradoresDifCaixa.idEntidade =
                               tbEntidades.Id )
                           AND ( tbCaixa.Dia < @pData )), 0) AS SaldoAnterior
    FROM   tbPostos  with (nolock) 
           INNER JOIN tbFuncs  with (nolock) 
                   ON tbPostos.Id = tbFuncs.IdPosto
           INNER JOIN tbEntidades  with (nolock) 
                   ON tbFuncs.IdEntidade = tbEntidades.Id
    WHERE  ( tbPostos.Id = @pPosto OR @pPosto IS NULL )
    ORDER  BY tbPostos.Id
              ,tbEntidades.NomeUsual 

GO
/****** Object:  StoredProcedure [dbo].[rptDiferencaCaixaNew]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptDiferencaCaixaNew
CREATE PROCEDURE [dbo].[rptDiferencaCaixaNew] @pData         SMALLDATETIME
                                             ,@pColaborador UNIQUEIDENTIFIER
AS
    SELECT tbColaboradoresDifCaixa.valor
           ,tbColaboradoresDifCaixa.Descricao
           ,tbCaixa.Dia
           ,tbCaixa.Id
           ,tbCaixa.TCaixa
           ,tbColaboradoresDifCaixa.Tipo
           ,tbColaboradoresDifCaixa.idEntidade
           ,ISNULL((SELECT SUM(tbColaboradoresDifCaixa.valor)
                    FROM   tbColaboradoresDifCaixa  with (nolock) 
                           INNER JOIN tbCaixa  with (nolock) 
                                   ON tbColaboradoresDifCaixa.idCaixa =
                                      tbCaixa.Id
                    WHERE  ( tbColaboradoresDifCaixa.Tipo = 'C'
                              OR tbColaboradoresDifCaixa.Tipo = 'D' )
                       AND ( tbColaboradoresDifCaixa.valor < 0 )
                       AND ( tbColaboradoresDifCaixa.idEntidade = @pColaborador
                           )
                       AND ( tbCaixa.Dia < @pData )
                        OR ( tbColaboradoresDifCaixa.Tipo = 'E' )
                           AND ( tbColaboradoresDifCaixa.valor > 0 )
                           AND ( tbColaboradoresDifCaixa.idEntidade =
                                 @pColaborador
                               )
                           AND ( tbCaixa.Dia < @pData )
                        OR ( tbColaboradoresDifCaixa.Tipo = 'L' )
                           AND ( tbColaboradoresDifCaixa.idEntidade =
                                 @pColaborador
                               )
                           AND ( tbCaixa.Dia < @pData )), 0) AS SaldoAnterior
    FROM   tbColaboradoresDifCaixa AS tbColaboradoresDifCaixa  with (nolock) 
           INNER JOIN tbCaixa AS tbCaixa  with (nolock) 
                   ON tbColaboradoresDifCaixa.idCaixa = tbCaixa.Id
    WHERE  ( tbColaboradoresDifCaixa.Tipo = 'C'
              OR tbColaboradoresDifCaixa.Tipo = 'D' )
       AND ( tbColaboradoresDifCaixa.valor < 0 )
       AND ( tbCaixa.Dia >= @pData )
        OR ( tbColaboradoresDifCaixa.Tipo = 'E' )
           AND ( tbColaboradoresDifCaixa.valor > 0 )
           AND ( tbCaixa.Dia >= @pData )
        OR ( tbColaboradoresDifCaixa.Tipo = 'L' )
           AND ( tbCaixa.Dia >= @pData )
    ORDER  BY tbCaixa.Dia 

GO
/****** Object:  StoredProcedure [dbo].[rptDiferencaCaixaSaldo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
CREATE PROCEDURE [dbo].[rptDiferencaCaixaSaldo] @pColaborador UNIQUEIDENTIFIER,
											   @pDataINI     DATETIME,
											   @pIdPosto     UNIQUEIDENTIFIER
AS
    DECLARE @tbFechamentos TABLE(DiaFechamento datetime, Total float, IdEntidade uniqueidentifier, IdPosto uniqueidentifier)    
	DECLARE @primeiraDataDifCaixa datetime
	DECLARE @dateFrom datetime
	DECLARE @dateTo datetime

	SET @primeiraDataDifCaixa = (SELECT MIN(dbo.tbCaixa.Dia) FROM dbo.tbColaboradoresDifCaixa INNER JOIN dbo.tbCaixa ON dbo.tbColaboradoresDifCaixa.IdCaixa = dbo.tbCaixa.Id WHERE dbo.tbColaboradoresDifCaixa.IdEntidade = @pColaborador)
	SET @dateFrom = dbo.UltimoDiadoMes(DATEPART(MONTH, @primeiraDataDifCaixa), DATEPART(YEAR, @primeiraDataDifCaixa))
	SET @dateTo = dbo.UltimoDiadoMes(DATEPART(MONTH, DATEADD(m,-1,@pDataINI)), DATEPART(YEAR, DATEADD(m,-1,@pDataINI)))

	WHILE(@dateFrom <= @dateTo)
	BEGIN
		INSERT INTO @tbFechamentos
		SELECT 
			@dateFrom,
			SUM(dbo.tbColaboradoresDifCaixa.valor),
			dbo.tbColaboradoresDifCaixa.IdEntidade,
			dbo.tbColaboradoresDifCaixa.IdPosto
		FROM   dbo.tbColaboradoresDifCaixa with(nolock) 
				INNER JOIN dbo.tbCaixa with(nolock)
				ON dbo.tbColaboradoresDifCaixa.idCaixa = dbo.tbCaixa.Id
		WHERE  ( dbo.tbColaboradoresDifCaixa.Tipo = 'C'
				OR dbo.tbColaboradoresDifCaixa.Tipo = 'D' )
			AND ( dbo.tbColaboradoresDifCaixa.valor < 0 )
			AND ( dbo.tbColaboradoresDifCaixa.idEntidade = @pColaborador OR @pColaborador IS NULL )
			AND ( dbo.tbCaixa.Dia <= @dateFrom )
				OR ( dbo.tbColaboradoresDifCaixa.Tipo = 'E' )
				AND ( dbo.tbColaboradoresDifCaixa.valor > 0 )
				AND ( dbo.tbColaboradoresDifCaixa.idEntidade = @pColaborador OR @pColaborador IS NULL )
				AND ( dbo.tbCaixa.Dia <= @dateFrom )
				OR ( dbo.tbColaboradoresDifCaixa.Tipo = 'L' )
				AND ( dbo.tbColaboradoresDifCaixa.idEntidade = @pColaborador OR @pColaborador IS NULL )
				AND ( dbo.tbCaixa.Dia <= @dateFrom )
		GROUP BY dbo.tbColaboradoresDifCaixa.IdEntidade, dbo.tbColaboradoresDifCaixa.IdPosto

		--A cada passo, selecionar o último dia do próximo mês gravado no @dateFrom (não foi usado a função do banco por conta da virada de ano)
		SELECT @dateFrom = DATEADD(d, -1, DATEADD(m, DATEDIFF(m, 0, DATEADD(m,1,@dateFrom)) + 1, 0)) 
	END

	SELECT TOP 12 
		f.IdEntidade, 
		(CASE datepart(month, f.DiaFechamento)
			WHEN 1 THEN 'JAN'
			WHEN 2 THEN 'FEV'
			WHEN 3 THEN 'MAR'
			WHEN 4 THEN 'ABR'
			WHEN 5 THEN 'MAI'
			WHEN 6 THEN 'JUN'
			WHEN 7 THEN 'JUL'
			WHEN 8 THEN 'AGO'
			WHEN 9 THEN 'SET'
			WHEN 10 THEN 'OUT'
			WHEN 11 THEN 'NOV'
			WHEN 12 THEN 'DEZ'
		END) + '/' + CAST(datepart(year, f.DiaFechamento) AS varchar) AS Data, 
		f.Total AS Saldo
	FROM  @tbFechamentos f
	WHERE ( f.IdPosto = @pIdPosto OR @pIDposto IS NULL )
		AND ( f.idEntidade = @pColaborador OR @pColaborador IS NULL )
	ORDER BY datepart(year, f.DiaFechamento) desc, datepart(month, f.DiaFechamento) desc
GO
/****** Object:  StoredProcedure [dbo].[rptDiferencaCaixaSaldo_Retaguarda]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[rptDiferencaCaixaSaldo_Retaguarda] @pColaborador UNIQUEIDENTIFIER,
											   @pDataINI     DATETIME,
											   @pIdPosto     UNIQUEIDENTIFIER
AS
    DECLARE @tbFechamentos TABLE(DiaFechamento datetime, Total float, IdEntidade uniqueidentifier, IdPosto uniqueidentifier)    
	DECLARE @primeiraDataDifCaixa datetime
	DECLARE @dateFrom datetime
	DECLARE @dateTo datetime

	SET @primeiraDataDifCaixa = (SELECT MIN(dbo.tbCaixa.Dia) FROM dbo.tbColaboradoresDifCaixa INNER JOIN dbo.tbCaixa ON dbo.tbColaboradoresDifCaixa.IdCaixa = dbo.tbCaixa.Id WHERE dbo.tbColaboradoresDifCaixa.IdEntidade = @pColaborador)
	SET @dateFrom = dbo.UltimoDiadoMes(DATEPART(MONTH, @primeiraDataDifCaixa), DATEPART(YEAR, @primeiraDataDifCaixa))
	SET @dateTo = dbo.UltimoDiadoMes(DATEPART(MONTH, DATEADD(m,-1,@pDataINI)), DATEPART(YEAR, DATEADD(m,-1,@pDataINI)))

	WHILE(@dateFrom <= @dateTo)
	BEGIN
		INSERT INTO @tbFechamentos
		SELECT 
			@dateFrom,
			SUM(dbo.tbColaboradoresDifCaixa.valor),
			dbo.tbColaboradoresDifCaixa.IdEntidade,
			dbo.tbColaboradoresDifCaixa.IdPosto
		FROM   dbo.tbColaboradoresDifCaixa with(nolock) 
				INNER JOIN dbo.tbCaixa with(nolock)
				ON dbo.tbColaboradoresDifCaixa.idCaixa = dbo.tbCaixa.Id
		WHERE  ( dbo.tbColaboradoresDifCaixa.Tipo = 'R'
				OR dbo.tbColaboradoresDifCaixa.Tipo = 'D' )
			AND ( dbo.tbColaboradoresDifCaixa.valor < 0 )
			AND ( dbo.tbColaboradoresDifCaixa.idEntidade = @pColaborador OR @pColaborador IS NULL )
			AND ( dbo.tbCaixa.Dia <= @dateFrom )
				OR ( dbo.tbColaboradoresDifCaixa.Tipo = 'R' )
				AND ( dbo.tbColaboradoresDifCaixa.valor > 0 )
				AND ( dbo.tbColaboradoresDifCaixa.idEntidade = @pColaborador OR @pColaborador IS NULL )
				AND ( dbo.tbCaixa.Dia <= @dateFrom )
				OR ( dbo.tbColaboradoresDifCaixa.Tipo = 'R' )
				AND ( dbo.tbColaboradoresDifCaixa.idEntidade = @pColaborador OR @pColaborador IS NULL )
				AND ( dbo.tbCaixa.Dia <= @dateFrom )
		GROUP BY dbo.tbColaboradoresDifCaixa.IdEntidade, dbo.tbColaboradoresDifCaixa.IdPosto

		--A cada passo, selecionar o último dia do próximo mês gravado no @dateFrom (não foi usado a função do banco por conta da virada de ano)
		SELECT @dateFrom = DATEADD(d, -1, DATEADD(m, DATEDIFF(m, 0, DATEADD(m,1,@dateFrom)) + 1, 0)) 
	END

	SELECT TOP 12 
		f.IdEntidade, 
		(CASE datepart(month, f.DiaFechamento)
			WHEN 1 THEN 'JAN'
			WHEN 2 THEN 'FEV'
			WHEN 3 THEN 'MAR'
			WHEN 4 THEN 'ABR'
			WHEN 5 THEN 'MAI'
			WHEN 6 THEN 'JUN'
			WHEN 7 THEN 'JUL'
			WHEN 8 THEN 'AGO'
			WHEN 9 THEN 'SET'
			WHEN 10 THEN 'OUT'
			WHEN 11 THEN 'NOV'
			WHEN 12 THEN 'DEZ'
		END) + '/' + CAST(datepart(year, f.DiaFechamento) AS varchar) AS Data, 
		f.Total AS Saldo
	FROM  @tbFechamentos f
	WHERE ( f.IdPosto = @pIdPosto OR @pIDposto IS NULL )
		AND ( f.idEntidade = @pColaborador OR @pColaborador IS NULL )
	ORDER BY datepart(year, f.DiaFechamento) desc, datepart(month, f.DiaFechamento) desc
GO
/****** Object:  StoredProcedure [dbo].[rptEscalaTrabalho]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptEscalaTrabalho
CREATE PROCEDURE [dbo].[rptEscalaTrabalho] @pDataInicial SMALLDATETIME
                                          ,@pDataFinal  SMALLDATETIME
                                          ,@pIdposto    UNIQUEIDENTIFIER
AS
    SELECT dbo.tbEscalaTrabalho.ID
           ,dbo.tbEscalaTrabalho.Data
           ,dbo.tbHorarios.Descricao
           ,dbo.tbEscalaTrabalho.Folga
           ,dbo.tbEntidades.NomeUsual
           ,dbo.tbPostos.NomeUsual AS Posto
           ,dbo.tbPostos.Id
    FROM   dbo.tbEscalaTrabalho  with (nolock) 
           INNER JOIN dbo.tbEntidades  with (nolock) 
                   ON dbo.tbEscalaTrabalho.IDEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbHorarios  with (nolock) 
                   ON dbo.tbEscalaTrabalho.IdHorario = dbo.tbHorarios.Id
           INNER JOIN dbo.tbFuncs  with (nolock) 
                   ON dbo.tbEntidades.Id = dbo.tbFuncs.IdEntidade
           INNER JOIN dbo.tbPostos  with (nolock) 
                   ON dbo.tbFuncs.IdPosto = dbo.tbPostos.Id
    WHERE  ( dbo.tbEscalaTrabalho.Data BETWEEN
             CONVERT(DATETIME, @pDataInicial, 102) AND
             CONVERT(DATETIME, @pDataFinal, 102) )
       AND ( dbo.tbPostos.Id = @pIdPosto ) 

GO
/****** Object:  StoredProcedure [dbo].[rptEstoqueCombustivel]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptEstoqueCombustivel
CREATE PROCEDURE [dbo].[rptEstoqueCombustivel] @pIDPosto UNIQUEIDENTIFIER
AS
    IF @pIDPosto = dbo.GuidEmpty()
      BEGIN
          SET @pIDPosto = NULL
      END
  
/*----------------------------------------------------------------------------------
-- Obtem os caixas do ultimo dia fechado (com todos os turnos fechados) */  
DECLARE @tblCaixaAnterior table(IdCaixa UNIQUEIDENTIFIER,tcaixa int, idposto uniqueidentifier,data datetime,datafechamento datetime)

insert into @tblCaixaAnterior
select c.Id, c.TCaixa, c.IdPosto,c.Dia,  c.DataFechamento from tbCaixa c
inner join (
  select max(tc.Dia) as Dia, tc.IdPosto from tbCaixa tc
  where tc.datafechamento is not null
  and tc.tcaixa = (select count(id) from tbturno where idposto = tc.idposto)
  group by IdPosto
) as t on c.Dia = t.Dia and c.IdPosto = t.IdPosto
inner join tbPostos on c.IdPosto = tbPostos.Id
where
  ( @pIdPosto IS NULL OR tbPostos.Id = @pIdPosto )
and tbPostos.Ativo = 1
and c.tcaixa = (select count(id) from tbturno where idposto = c.idposto)
order by c.DataAbertura

/*------------------------------------------------------------------------------------  
 FIM  -- Obtem os caixas do ultimo dia fechado (com todos os turnos fechados) */  
  
/*----------------------------------------------------------  
  Obtem os caixas do dia atual, (fechados ou não)*/  
DECLARE @tblCaixaAtual table(IdCaixa UNIQUEIDENTIFIER,tcaixa int, idposto uniqueidentifier,data datetime,datafechamento datetime)
insert into @tblCaixaAtual
select c.Id,  c.TCaixa, c.IdPosto,c.Dia, c.DataFechamento from tbCaixa c
inner join (
  select max(tc.Dia) as Dia, tc.IdPosto from tbCaixa tc
  group by IdPosto
) as t on c.Dia = t.Dia and c.IdPosto = t.IdPosto
inner join tbPostos on c.IdPosto = tbPostos.Id
where
  ( @pIdPosto IS NULL OR tbPostos.Id = @pIdPosto )
and tbPostos.Ativo = 1
order by  c.DataAbertura

/*----------------------------------------------------------  
- Obtem os caixas do dia atual, (fechados ou não)*/  


    SELECT tbPostos.Id as IdPosto
           ,tbPostos.NomeUsual          AS Posto
           --ultimo caixa fechado ou não
           ,Caixa = (select top 1 tc.IdCaixa from @tblCaixaAtual tc where tc.idposto = tbpostos.Id order by tc.tcaixa desc)
           --ultimo dia deste caixa fechado ou não
           ,Dia = (select top 1 tc.data from @tblCaixaAnterior tc where tc.idposto = tbpostos.Id order by tc.tcaixa desc)           
           ,tbCaixaItens.idObjeto
           ,tbProdutos.Id as IdProduto
           ,tbProdutos.Descricao
           ,tbProdutos.ordem
           ,Capacidade = (SELECT Capacidade
             FROM   tbTanques  with (nolock) 
             WHERE  idPosto = tbPostos.Id
                AND NUmTanque = convert(int,tbCaixaItens.idObjeto)),
				tbCaixaItens.ValorLido
           --id do caixa que seja do ultimo turno fechado ex posto com 3 turnos,retorna o ultimo caixa t3 fechado.
           ,CaixaFinal = (select top 1 tca.IdCaixa from @tblCaixaAnterior tca where tca.idposto = tbPostos.Id order by tcaixa desc)
           -- medida do dia fechado , pelo ultimo caixa fechado(t3 por exemplo)
           ,Medido = Isnull((SELECT ValorCalculado
                    FROM   tbCaixaItens AS CaixaItens2  with (nolock) 
                    WHERE  ( CaixaItens2.idObjeto = tbCAixaItens.idObjeto )
                       AND ( CAixaItens2.TipoLeitura = 'T' )
                       AND ( CaixaItens2.idCaixa = ((select top 1 tca.IdCaixa from @tblCaixaAnterior tca where tca.idposto = tbPostos.Id order by tcaixa desc)))), 0)
            
           ,Receber = Isnull((SELECT Sum(( QTD ) - ( QTDRecebido ))
                    FROM   tbPedidosItens  with (nolock) 
                    WHERE  QTD > QTDRecebido
                       AND idPosto = tbPostos.Id
                       AND idProduto = tbProdutos.Id), 0)
           --tudo q foi recebido nos caixas do dia do movimento atual(abertos ou fechados)
      
 ,Recebido = Isnull((SELECT Sum(tbPedidosItensRecebidos.qtd)
                    FROM   tbPedidosItens  with (nolock) 
                           INNER JOIN tbPedidosItensRecebidos  with (nolock) 
                                   ON tbPedidosItens.idPedido =  tbPedidosItensRecebidos.idPedido AND tbPedidosItens.idPosto =  tbPedidosItensRecebidos.idPosto
							inner join tbTanques  with (nolock) on tbPedidosItensRecebidos.IdTanque = tbTanques.Id 
							inner join @tblCaixaAtual tca on tbPedidosItensRecebidos.idCaixaRecebimento = tca.idcaixa                                      
                    WHERE  
					   ( tbPedidosItens.idPosto = tbPostos.Id )
					  AND (tca.idposto = tbPostos.Id )
					  AND ( tbPedidosItens.idProduto = tbProdutos.Id )
					  AND ( Convert(int,tbCaixaItens.idobjeto) = tbTanques.NumTanque)
					  AND ( tbPedidosItensRecebidos.idTanque = tbTanques.id )), 0)
					  
			
					  
			--tudo q foi vendido nos caixas do dia do movimento atual(abertos ou fechados)
           ,Vendido = ISNULL((SELECT SUM(dbo.tbVendasItens.Quantidade)
                    FROM   dbo.tbVendas  with (nolock) 
                           INNER JOIN dbo.tbVendasItens  with (nolock) ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
                           inner join dbo.tbTanques  with (nolock) on tbVendasItens.IdTanque = tbTanques.Id
                           inner join @tblCaixaAtual tca on tbVendas.IdCaixa = tca.IdCaixa 
                    WHERE  ( dbo.tbVendas.idPosto = tbPostos.Id )
					   AND ( dbo.tbVendas.Status is null) -- sem vendas canceladas
					   AND ( dbo.tbvendasItens.Cancelado  = 0 )-- sem vendasitens cancelados
                       AND ( dbo.tbTanques.NumTanque = tbCaixaItens.idObjeto)
                       ), 0) 
    FROM   tbCaixaItens
           INNER JOIN tbCaixa  with (nolock) 
                   ON tbCaixaItens.idCaixa = tbCaixa.Id
           INNER JOIN @tblCaixaAnterior tca
                   ON tbCaixa.Id = tca.IdCaixa
           INNER JOIN tbPostos  with (nolock) 
                   ON tbCaixa.idPosto = tbPostos.Id
           INNER JOIN tbTanques  with (nolock) 
                   ON tbPostos.Id = tbTanques.IdPosto
                      AND tbCaixaItens.idObjeto = tbTanques.NumTanque
           INNER JOIN tbProdutos  with (nolock) 
                   ON tbTanques.IdProduto = tbProdutos.Id
    WHERE 
        ( tbCaixaItens.TipoLeitura = 'T' )
       AND ( tbTanques.Ativo = 1 )
       AND ( tbPostos.ativo = 1 )
    ORDER  BY  tbProdutos.ordem
              ,tbCaixaItens.idObjeto

GO
/****** Object:  StoredProcedure [dbo].[rptEstoqueCombustivel_v2]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[rptEstoqueCombustivel_v2] @pIDPosto UNIQUEIDENTIFIER

AS

    IF @pIDPosto = dbo.GuidEmpty()

      BEGIN

          SET @pIDPosto = NULL
      END


  

/*----------------------------------------------------------------------------------

-- Obtem os caixas do ultimo dia fechado (com todos os turnos fechados) */  

DECLARE @tblCaixaAnterior table(IdCaixa UNIQUEIDENTIFIER,tcaixa int, idposto uniqueidentifier,data datetime,datafechamento datetime)



insert into @tblCaixaAnterior

select c.Id, c.TCaixa, c.IdPosto,c.Dia,  c.DataFechamento from tbCaixa c

inner join (

  select max(tc.Dia) as Dia, tc.IdPosto from tbCaixa tc

  where tc.datafechamento is not null

  and tc.tcaixa = (select count(id) from tbturno where idposto = tc.idposto)

  group by IdPosto

) as t on c.Dia = t.Dia and c.IdPosto = t.IdPosto

inner join tbPostos on c.IdPosto = tbPostos.Id

where

  ( @pIdPosto IS NULL OR tbPostos.Id = @pIdPosto )

and tbPostos.Ativo = 1

and c.tcaixa = (select count(id) from tbturno where idposto = c.idposto)

order by c.DataAbertura



/*------------------------------------------------------------------------------------  

 FIM  -- Obtem os caixas do ultimo dia fechado (com todos os turnos fechados) */  

  

/*----------------------------------------------------------  

  Obtem os caixas do dia atual, (fechados ou não)*/  

DECLARE @tblCaixaAtual table(IdCaixa UNIQUEIDENTIFIER,tcaixa int, idposto uniqueidentifier,data datetime,datafechamento datetime)

insert into @tblCaixaAtual

select c.Id,  c.TCaixa, c.IdPosto,c.Dia, c.DataFechamento from tbCaixa c

inner join (

  select max(tc.Dia) as Dia, tc.IdPosto from tbCaixa tc

  group by IdPosto

) as t on c.Dia = t.Dia and c.IdPosto = t.IdPosto

inner join tbPostos on c.IdPosto = tbPostos.Id

where

  ( @pIdPosto IS NULL OR tbPostos.Id = @pIdPosto )

and tbPostos.Ativo = 1

order by  c.DataAbertura



/*----------------------------------------------------------  

- Obtem os caixas do dia atual, (fechados ou não)*/  





    SELECT tbPostos.Id as IdPosto

           ,tbPostos.NomeUsual          AS Posto

           --ultimo caixa fechado ou não

           ,Caixa = (select top 1 tc.IdCaixa from @tblCaixaAtual tc where tc.idposto = tbpostos.Id order by tc.tcaixa desc)

           --ultimo dia deste caixa fechado ou não

           ,Dia = (select top 1 tc.data from @tblCaixaAnterior tc where tc.idposto = tbpostos.Id order by tc.tcaixa desc)           

           ,tbCaixaItens.idObjeto

           ,tbProdutos.Id as IdProduto

           ,tbProdutos.Descricao

           ,tbProdutos.ordem

           ,Capacidade = (SELECT Capacidade

             FROM   tbTanques  with (nolock) 

             WHERE  idPosto = tbPostos.Id

                AND NUmTanque = convert(int,tbCaixaItens.idObjeto))

           --id do caixa que seja do ultimo turno fechado ex posto com 3 turnos,retorna o ultimo caixa t3 fechado.

           ,CaixaFinal = (select top 1 tca.IdCaixa from @tblCaixaAnterior tca where tca.idposto = tbPostos.Id order by tcaixa desc)

           -- medida do dia fechado , pelo ultimo caixa fechado(t3 por exemplo)

           ,ValorLido = Isnull((SELECT ValorCalculado

                    FROM   tbCaixaItens AS CaixaItens2  with (nolock) 

                    WHERE  ( CaixaItens2.idObjeto = tbCAixaItens.idObjeto )

                       AND ( CAixaItens2.TipoLeitura = 'T' )

                       AND ( CaixaItens2.idCaixa = ((select top 1 tca.IdCaixa from @tblCaixaAnterior tca where tca.idposto = tbPostos.Id order by tcaixa desc)))), 0)

            

           ,Receber = Isnull((SELECT Sum(( QTD ) - ( QTDRecebido ))

                    FROM   tbPedidosItens  with (nolock) 

                    WHERE  QTD > QTDRecebido

                       AND idPosto = tbPostos.Id

                       AND idProduto = tbProdutos.Id), 0)

           --tudo q foi recebido nos caixas do dia do movimento atual(abertos ou fechados)

      

 ,Recebido = Isnull((SELECT Sum(tbPedidosItensRecebidos.qtd)

                    FROM   tbPedidosItens  with (nolock) 

                           INNER JOIN tbPedidosItensRecebidos  with (nolock) 

                                   ON tbPedidosItens.idPedido =  tbPedidosItensRecebidos.idPedido AND tbPedidosItens.idPosto =  tbPedidosItensRecebidos.idPosto

							inner join tbTanques  with (nolock) on tbPedidosItensRecebidos.IdTanque = tbTanques.Id 

							inner join @tblCaixaAtual tca on tbPedidosItensRecebidos.idCaixaRecebimento = tca.idcaixa                                      

                    WHERE  

					   ( tbPedidosItens.idPosto = tbPostos.Id )

					  AND (tca.idposto = tbPostos.Id )

					  AND ( tbPedidosItens.idProduto = tbProdutos.Id )

					  AND ( Convert(int,tbCaixaItens.idobjeto) = tbTanques.NumTanque)

					  AND ( tbPedidosItensRecebidos.idTanque = tbTanques.id )), 0)

					  

			

					  

			--tudo q foi vendido nos caixas do dia do movimento atual(abertos ou fechados)

           ,Vendido = ISNULL((SELECT SUM(dbo.tbVendasItens.Quantidade)

                    FROM   dbo.tbVendas  with (nolock) 

                           INNER JOIN dbo.tbVendasItens  with (nolock) ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda

                           inner join dbo.tbTanques  with (nolock) on tbVendasItens.IdTanque = tbTanques.Id

                           inner join @tblCaixaAtual tca on tbVendas.IdCaixa = tca.IdCaixa 

                    WHERE  ( dbo.tbVendas.idPosto = tbPostos.Id )

					   AND ( dbo.tbVendas.Status is null) -- sem vendas canceladas

					   AND ( dbo.tbvendasItens.Cancelado  = 0 )-- sem vendasitens cancelados

                       AND ( dbo.tbTanques.NumTanque = tbCaixaItens.idObjeto)

                       ), 0)
		,Custo = (Select TOP 1 PrecoCusto from tbProdutosPostos  WHERE 
		tbProdutosPostos.IdPosto = tbPostos.Id AND tbProdutosPostos.IdProduto = tbProdutos.Id)
		,Venda = (Select TOP 1 PrecoVenda from tbProdutosPostos  WHERE 
		tbProdutosPostos.IdPosto = tbPostos.Id AND tbProdutosPostos.IdProduto = tbProdutos.Id)
		,Lucro = (((Select TOP 1 PrecoVenda from tbProdutosPostos  WHERE 
		tbProdutosPostos.IdPosto = tbPostos.Id AND tbProdutosPostos.IdProduto = tbProdutos.Id) -
		(Select TOP 1 PrecoCusto from tbProdutosPostos  WHERE 
		tbProdutosPostos.IdPosto = tbPostos.Id AND tbProdutosPostos.IdProduto = tbProdutos.Id))
		/ ((Select TOP 1 PrecoVenda from tbProdutosPostos  WHERE 
		tbProdutosPostos.IdPosto = tbPostos.Id AND tbProdutosPostos.IdProduto = tbProdutos.Id))* 100)
    FROM   tbCaixaItens

           INNER JOIN tbCaixa  with (nolock) 

                   ON tbCaixaItens.idCaixa = tbCaixa.Id

           INNER JOIN @tblCaixaAnterior tca

                   ON tbCaixa.Id = tca.IdCaixa

           INNER JOIN tbPostos  with (nolock) 

                   ON tbCaixa.idPosto = tbPostos.Id

           INNER JOIN tbTanques  with (nolock) 

                   ON tbPostos.Id = tbTanques.IdPosto

                      AND tbCaixaItens.idObjeto = tbTanques.NumTanque

           INNER JOIN tbProdutos  with (nolock) 

                   ON tbTanques.IdProduto = tbProdutos.Id

    WHERE 

        ( tbCaixaItens.TipoLeitura = 'T' )

       AND ( tbTanques.Ativo = 1 )

       AND ( tbPostos.ativo = 1 )

    ORDER  BY  tbProdutos.ordem

              ,tbCaixaItens.idObjeto


GO
/****** Object:  StoredProcedure [dbo].[rptEstoqueLojaConv]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptEstoqueLojaConv
CREATE PROCEDURE [dbo].[rptEstoqueLojaConv] @pIDposto  UNIQUEIDENTIFIER
                                           ,@pTipo       NVARCHAR(2)
                                           ,@pLocal      UNIQUEIDENTIFIER
AS
    IF @pLocal = dbo.GuidEmpty()
      BEGIN
          SET @pLocal = NULL
      END
    
	DECLARE @GuidEmpty UNIQUEIDENTIFIER
	SET @GuidEmpty = dbo.GuidEmpty()
	
    SELECT tbProdutos.Descricao
           ,tbProdutos.CodigoBarras
           ,tbProdutosPostos.PrecoCusto
           ,tbProdutosPostos.PrecoVenda
           ,tbProdutosPostos.Estoque * tbProdutosPostos.PrecoCusto  AS
            TotalCusto
           ,tbProdutosPostos.Estoque * tbProdutosPostos.PrecoVenda  AS
            TotalVenda
           ,tbProdutosPostos.Estoque * tbProdutosPostos.PrecoVenda -
             tbProdutosPostos.Estoque * tbProdutosPostos.PrecoCusto AS
            LucroLiquido
           ,tbPostos.NomeUsual
           ,tbProdutosPostos.Almoxarifado
           ,tbLocalEstoque.Descricao                                AS
            LocaEstoque
           ,tbTipoProd.DescricaoNova                                AS Setor
           ,tbProdutosPostos.Estoque
    FROM   tbPostos  with(nolock)
           INNER JOIN tbProdutosPostos  with(nolock)
                   ON tbPostos.Id = tbProdutosPostos.idPosto
           INNER JOIN tbProdutos  with(nolock)
                   ON tbProdutosPostos.idProduto = tbProdutos.Id
           INNER JOIN tbLocalEstoque  with(nolock)
                   ON tbProdutosPostos.IdLocal = tbLocalEstoque.id
           INNER JOIN tbTipoProd  with(nolock)
                   ON tbProdutos.TipoProd = tbTipoProd.IdTipoProd
    WHERE  (  @pIDposto is null or @pIDposto = @GuidEmpty or tbPostos.Id = @pIDposto)
       AND ( tbProdutos.TipoProd LIKE @pTipo )
       AND ( NOT ( tbProdutos.TipoProd = 'CB' ) )
       AND ( @pLocal IS NULL  or tbLocalEstoque.id = @pLocal)
       AND ( tbProdutosPostos.Estoque <> 0 )
    ORDER  BY tbPostos.NomeUsual
              ,tbTipoProd.DescricaoNova
              ,tbLocalEstoque.Descricao
              ,tbProdutos.descricao 

GO
/****** Object:  StoredProcedure [dbo].[rptEstoqueLojaConvAlmox]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptEstoqueLojaConvAlmox
CREATE PROCEDURE [dbo].[rptEstoqueLojaConvAlmox] @pIDposto     UNIQUEIDENTIFIER
                                                ,@pTipo       NVARCHAR(2)
                                                ,@pLocal      UNIQUEIDENTIFIER
AS
    IF @pLocal = dbo.GuidEmpty()
      BEGIN
          SET @pLocal = NULL
      END

	DECLARE @GuidEmpty UNIQUEIDENTIFIER
	SET @GuidEmpty = dbo.GuidEmpty()
	  
    SELECT tbProdutos.Descricao
           ,tbProdutos.CodigoBarras
           ,tbProdutosPostos.PrecoCusto
           ,tbProdutosPostos.PrecoVenda
           ,tbProdutosPostos.Estoque * tbProdutosPostos.PrecoCusto  AS
            TotalCusto
           ,tbProdutosPostos.Estoque * tbProdutosPostos.PrecoVenda  AS
            TotalVenda
           ,tbProdutosPostos.Estoque * tbProdutosPostos.PrecoVenda -
             tbProdutosPostos.Estoque * tbProdutosPostos.PrecoCusto AS
            LucroLiquido
           ,tbPostos.NomeUsual
           ,tbProdutosPostos.Almoxarifado
           ,tbLocalEstoque.Descricao                                AS
            LocaEstoque
           ,tbTipoProd.DescricaoNova                                AS Setor
           ,tbProdutosPostos.Estoque
    FROM   tbPostos  with(nolock)
           INNER JOIN tbProdutosPostos  with(nolock)
                   ON tbPostos.Id = tbProdutosPostos.idPosto
           INNER JOIN tbProdutos  with(nolock)
                   ON tbProdutosPostos.idProduto = tbProdutos.Id
           INNER JOIN tbLocalEstoque  with(nolock)
                   ON tbProdutosPostos.IdLocal = tbLocalEstoque.id
           INNER JOIN tbTipoProd  with(nolock)
                   ON tbProdutos.TipoProd = tbTipoProd.IdTipoProd
    WHERE  (  @pIDposto is null or @pIDposto = @GuidEmpty or tbPostos.Id = @pIDposto)
       AND ( tbProdutos.TipoProd LIKE @pTipo )
       AND ( NOT ( tbProdutos.TipoProd = 'CB' ) )
       AND ( @pLocal IS NULL OR tbLocalEstoque.id = @pLocal )
       AND ( tbProdutosPostos.Almoxarifado <> 0 )
    ORDER  BY tbPostos.NomeUsual
              ,tbTipoProd.DescricaoNova
              ,tbLocalEstoque.Descricao
              ,tbProdutos.descricao 


GO
/****** Object:  StoredProcedure [dbo].[rptEstoqueLojaConvNovo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE  [dbo].[rptEstoqueLojaConvNovo] @pIDPosto uniqueidentifier, @pTipo nvarchar(2), @pLocal uniqueidentifier AS

    IF @pIDPosto = dbo.GuidEmpty()  
      BEGIN  
          SET @pIDPosto = NULL  
      END  

    IF @pLocal = dbo.GuidEmpty()  
      BEGIN  
          SET @pLocal = NULL  
      END
	  
	IF @pTipo = ''
      BEGIN  
          SET @pTipo = NULL  
      END  
      
 DECLARE @GuidEmpty UNIQUEIDENTIFIER  
 SET @GuidEmpty = dbo.GuidEmpty()  
	
SELECT     
		tbProdutos.Descricao, 
		tbProdutos.CodigoBarras, 
		tbProdutosPostos.PrecoCusto, 
		tbProdutosPostos.PrecoVenda, 
		tbProdutosPostos.Estoque * tbProdutosPostos.PrecoCusto AS TotalCusto, 
		tbProdutosPostos.Estoque * tbProdutosPostos.PrecoVenda AS TotalVenda, 
		tbProdutosPostos.Estoque * tbProdutosPostos.PrecoVenda - tbProdutosPostos.Estoque * tbProdutosPostos.PrecoCusto AS LucroLiquido, 
		tbPostos.NomeUsual, 
		tbProdutosPostos.Almoxarifado, 
		tbLocalEstoque.Descricao AS LocaEstoque, 
		tbTipoProd.DescricaoNova AS Setor, 
		tbProdutosPostos.Estoque,
		tbProdutosPostos.Estoque - tbProdutosPostos.Almoxarifado as Local,
		tbProdutosPostos.PrecoVenda - tbProdutosPostos.PrecoCusto as Lucro,
		LucroPorcento = 
		case
			when tbProdutosPostos.PrecoCusto <> 0 and tbProdutosPostos.PrecoVenda <> 0
				then ((tbProdutosPostos.PrecoVenda * 100) / tbProdutosPostos.PrecoCusto) - 100
				else 0 
			end,
		tbProdutosPostos.Almoxarifado * tbProdutosPostos.PrecoVenda as ValorAlmoxarifado,
		tbProdutosPostos.Estoque * tbProdutosPostos.PrecoVenda as ValorEstoque,
		((tbProdutosPostos.Estoque * tbProdutosPostos.PrecoVenda) - (tbProdutosPostos.Almoxarifado * tbProdutosPostos.PrecoVenda)) as ValorVendas,
		SUM(tbProdutosPostos.PrecoCusto) / COUNT(tbProdutosPostos.PrecoCusto) as MediaCusto,
		SUM(case
			when tbProdutosPostos.PrecoCusto <> 0 and tbProdutosPostos.PrecoVenda <> 0
				then ((tbProdutosPostos.PrecoVenda * 100) / tbProdutosPostos.PrecoCusto) - 100
				else 0 
			end) / COUNT(case
			when tbProdutosPostos.PrecoCusto <> 0 and tbProdutosPostos.PrecoVenda <> 0
				then ((tbProdutosPostos.PrecoVenda * 100) / tbProdutosPostos.PrecoCusto) - 100
				else 0 
			end) as MediaPorcentagem,
		SUM(tbProdutosPostos.PrecoVenda) / COUNT(tbProdutosPostos.PrecoVenda) as MediaPreco,
		tbTipoProd.IdTipoProd
FROM         tbPostos 
INNER JOIN
                      tbProdutosPostos ON tbPostos.id = tbProdutosPostos.idPosto 
INNER JOIN
                      tbProdutos ON tbProdutosPostos.idProduto = tbProdutos.id 
                      INNER JOIN
                      tbLocalEstoque ON tbProdutosPostos.idlocal = tbLocalEstoque.id 
                      INNER JOIN
                      tbTipoProd ON tbProdutos.TipoProd = tbTipoProd.IdTipoProd
WHERE  (  @pIDposto is null or tbPostos.Id = @pIDposto)  
 AND (@pTipo is null or tbProdutos.TipoProd LIKE @pTipo) 
 --AND (NOT (tbProdutos.TipoProd = 'CB')) 
 AND (@pLocal is null or  tbLocalEstoque.id = @pLocal) 
 AND (tbProdutosPostos.Estoque <> 0)
GROUP BY
		tbProdutos.Descricao, tbProdutos.CodigoBarras, tbProdutosPostos.PrecoCusto, tbProdutosPostos.PrecoVenda,
		--TotalVenda, LucroLiquido, 
		tbPostos.NomeUsual, 
		tbProdutosPostos.Almoxarifado, 
		tbLocalEstoque.Descricao, 
		tbTipoProd.DescricaoNova, 
		tbProdutosPostos.Estoque,
		tbTipoProd.IdTipoProd
		--tbProdutosPostos.Estoque - tbProdutosPostos.Almoxarifado as Local,
		--tbProdutosPostos.PrecoVenda - tbProdutosPostos.PrecoCusto as Lucro
ORDER BY 
		 tbPostos.NomeUsual, tbTipoProd.IdTipoProd, tbLocalEstoque.Descricao, tbProdutos.descricao
		

GO
/****** Object:  StoredProcedure [dbo].[rptEstoqueLojaConvVenda]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptEstoqueLojaConvVenda
CREATE PROCEDURE [dbo].[rptEstoqueLojaConvVenda] @pIDposto  UNIQUEIDENTIFIER
                                                
                                                ,@pTipo       NVARCHAR(2)
                                                ,@pLocal      UNIQUEIDENTIFIER
AS
    IF @pLocal = dbo.GuidEmpty()
      BEGIN
          SET @pLocal = NULL
      END

	DECLARE @GuidEmpty UNIQUEIDENTIFIER
	SET @GuidEmpty = dbo.GuidEmpty()
	  
    SELECT tbProdutos.Descricao
           ,tbProdutos.CodigoBarras
           ,tbProdutosPostos.PrecoCusto
           ,tbProdutosPostos.PrecoVenda
           ,tbProdutosPostos.Estoque * tbProdutosPostos.PrecoCusto  AS
            TotalCusto
           ,tbProdutosPostos.Estoque * tbProdutosPostos.PrecoVenda  AS
            TotalVenda
           ,tbProdutosPostos.Estoque * tbProdutosPostos.PrecoVenda -
             tbProdutosPostos.Estoque * tbProdutosPostos.PrecoCusto AS
            LucroLiquido
           ,tbPostos.NomeUsual
           ,tbProdutosPostos.Almoxarifado
           ,tbLocalEstoque.Descricao                                AS
            LocaEstoque
           ,tbTipoProd.DescricaoNova                                AS Setor
           ,tbProdutosPostos.Estoque
    FROM   tbPostos  with(nolock)
           INNER JOIN tbProdutosPostos  with(nolock)
                   ON tbPostos.Id = tbProdutosPostos.idPosto
           INNER JOIN tbProdutos  with(nolock)
                   ON tbProdutosPostos.idProduto = tbProdutos.Id
           INNER JOIN tbLocalEstoque  with(nolock)
                   ON tbProdutosPostos.IdLocal = tbLocalEstoque.id
           INNER JOIN tbTipoProd  with(nolock)
                   ON tbProdutos.TipoProd = tbTipoProd.IdTipoProd
    WHERE  ( @pIDposto is null or @pIDposto = @GuidEmpty or tbPostos.Id = @pIDposto)
       AND ( tbProdutos.TipoProd LIKE @pTipo )
       AND ( NOT ( tbProdutos.TipoProd = 'CB' ) )
       AND ( @pLocal IS NULL or tbLocalEstoque.id = @pLocal)
       AND ( tbProdutosPostos.Estoque - tbProdutosPostos.Almoxarifado <> 0 )
    ORDER  BY tbPostos.NomeUsual
              ,tbTipoProd.DescricaoNova
              ,tbLocalEstoque.Descricao
              ,tbProdutos.descricao 


GO
/****** Object:  StoredProcedure [dbo].[rptEstoquesDiario]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptEstoquesDiario
CREATE PROCEDURE [dbo].[rptEstoquesDiario] @pIDpostoINI  UNIQUEIDENTIFIER
                                          ,@pIDPostoFIM UNIQUEIDENTIFIER
                                          ,@pDataINI    SMALLDATETIME
                                          ,@pDataFIM    SMALLDATETIME
AS
  BEGIN
      SET nocount ON;

      SELECT dbo.tbPostos.Id
             ,dbo.tbPostos.NomeUsual          AS Posto
             ,dbo.tbCaixa.Dia
             ,dbo.tbProdutos.Descricao
             ,dbo.tbCaixaItens.TipoLeitura
             ,dbo.tbCaixaItens.idObjeto
             ,dbo.tbCaixaItens.ValorLido      AS Contabil
             ,dbo.tbCaixaItens.ValorCalculado AS Medido
      FROM   dbo.tbProdutos with(nolock)
             INNER JOIN dbo.tbCaixaItens  with(nolock)
                        INNER JOIN dbo.tbCaixa  with(nolock)
                                ON dbo.tbCaixaItens.idCaixa = dbo.tbCaixa.Id
                        INNER JOIN dbo.tbTanques  with(nolock)
                                   INNER JOIN dbo.tbPostos  with(nolock)
                                           ON dbo.tbTanques.IdPosto =
                                              dbo.tbPostos.Id
                                ON dbo.tbCaixaItens.idObjeto = dbo.tbTanques.Id
                                   AND dbo.tbCaixa.idPosto =
                                       dbo.tbTanques.IdPosto
                     ON dbo.tbProdutos.Id = dbo.tbTanques.IdProduto
      WHERE  ( dbo.tbTanques.Ativo = 1 )
      GROUP  BY dbo.tbPostos.Id
                ,dbo.tbCaixa.Dia
                ,dbo.tbPostos.NomeUsual
                ,dbo.tbProdutos.Descricao
                ,dbo.tbCaixaItens.TipoLeitura
                ,dbo.tbCaixaItens.idObjeto
                ,dbo.tbCaixaItens.ValorLido
                ,dbo.tbTanques.IdPosto
                ,dbo.tbCaixa.TCaixa
                ,dbo.tbCaixaItens.ValorCalculado
      HAVING ( dbo.tbCaixaItens.TipoLeitura = 'T' )
             AND ( dbo.tbTanques.IdPosto BETWEEN @pIDPostoINI AND @pIDPostoFIM )
             AND ( dbo.tbCaixa.Dia BETWEEN @pDataINI AND @pDataFIM )
             AND ( dbo.tbCaixa.TCaixa = 3 )
      ORDER  BY dbo.tbTanques.IdPosto
                ,dbo.tbCaixa.Dia
  END 

GO
/****** Object:  StoredProcedure [dbo].[rptFechamentoLoteCartoes]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptFechamentoLoteCartoes
CREATE PROCEDURE [dbo].[rptFechamentoLoteCartoes] @pIdposto  UNIQUEIDENTIFIER
                                                 ,@pDataINI SMALLDATETIME
                                                 ,@pDataFIM SMALLDATETIME
AS
    IF @pIDPosto = dbo.GuidEmpty()
      BEGIN
          SET @pIDPosto = NULL
      END
    
    SELECT tbCartoes.ID
           ,tbOperadoras.Operadora
           ,tbCartoes.ValorLiquido
           ,tbCartoes.Valor
           ,tbCartoes.DataVencimento
           ,tbCartoes.Data
           ,tbCartoes.Lote
           ,tbCartoes.Descricao
           ,tbCartoes.Tipo
           ,tbCartoes.IdPosto
           ,tbPostos.NomeUsual
           ,Isnull((SELECT Sum(tbCartoes.Valor)
                    FROM   tbCartoes  with (nolock)
                    WHERE  tbCartoes.DataVencimento < @pDataINI), 0) AS
            SaldoAnterior
    FROM   tbCartoes  with (nolock)
           INNER JOIN tbOperadoras  with (nolock)
                   ON tbCartoes.IdOperadora = tbOperadoras.Id
           INNER JOIN tbPostos  with (nolock)
                   ON tbCartoes.IdPosto = tbPostos.Id
    WHERE  ( tbCartoes.IdPosto = @pIdPosto OR @pIdPosto IS NULL )
       AND ( tbCartoes.DataVencimento BETWEEN @pDataINI AND @pDataFIM )
    ORDER  BY tbPostos.Id
              ,tbCartoes.DataVencimento 

GO
/****** Object:  StoredProcedure [dbo].[rptFechamentoResumodeVendas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptFechamentoResumodeVendas
CREATE PROCEDURE [dbo].[rptFechamentoResumodeVendas] @pIDCaixaINI  UNIQUEIDENTIFIER
                                                    ,@pIDCaixaFIM UNIQUEIDENTIFIER
AS
    DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
	
	SET @diaIni = (SELECT DataAbertura
                    FROM   tbCaixa  with (nolock)
                    WHERE  Id = @pIDCaixaINI)
    SET @diaFim = (SELECT DataAbertura
                    FROM   tbCaixa  with (nolock)
                    WHERE  Id = @pIDCaixaFIM)
    
    INSERT INTO @tblCaixas
    SELECT Id
    FROM tbCaixa  with (nolock)
    WHERE DataAbertura BETWEEN @diaIni AND @diaFim
    
    SELECT 'Combustíveis'                                                    AS
           Descricao
           ,SUM(dbo.tbVendasItens.PrecoVenda * dbo.tbVendasItens.Quantidade) AS
            Precovenda
    FROM   dbo.tbVendas  with (nolock)
           INNER JOIN dbo.tbVendasItens  with (nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos  with (nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbProdutosPostos  with (nolock)
                   ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
                      AND dbo.tbVendasItens.idProduto =
                          dbo.tbProdutosPostos.idProduto
                      AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
	       INNER JOIN @tblCaixas cx
		           ON dbo.tbVendas.idCaixa = cx.IdCaixa
    GROUP  BY dbo.tbVendas.IdCaixa
              ,dbo.tbProdutos.TipoProd
    HAVING ( dbo.tbProdutos.TipoProd = 'CB' )
    UNION
    SELECT 'Lubrificantes'
           AS
           Descricao
           ,
    Isnull(SUM(dbo.tbVendasItens.PrecoVenda * dbo.tbVendasItens.Quantidade), 0)
    AS
    Precovenda
    FROM   dbo.tbVendas  with (nolock)
           INNER JOIN dbo.tbVendasItens  with (nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos  with (nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbProdutosPostos  with (nolock)
                   ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
                      AND dbo.tbVendasItens.idProduto =
                          dbo.tbProdutosPostos.idProduto
                      AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
		   INNER JOIN @tblCaixas cx
		           ON dbo.tbVendas.idCaixa = cx.IdCaixa
    GROUP  BY dbo.tbVendas.idCaixa
              ,dbo.tbProdutos.TipoProd
    HAVING ( dbo.tbProdutos.TipoProd = 'LB' )
    UNION
    SELECT 'Conveniência'
           AS
           Descricao
           ,
    Isnull(SUM(dbo.tbVendasItens.PrecoVenda * dbo.tbVendasItens.Quantidade), 0)
    AS
    Precovenda
    FROM   dbo.tbVendas  with (nolock)
           INNER JOIN dbo.tbVendasItens  with (nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos  with (nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbProdutosPostos  with (nolock)
                   ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
                      AND dbo.tbVendasItens.idProduto =
                          dbo.tbProdutosPostos.idProduto
                      AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
		   INNER JOIN @tblCaixas cx
		           ON dbo.tbVendas.idCaixa = cx.IdCaixa
    GROUP  BY dbo.tbVendas.idCaixa
              ,dbo.tbProdutos.TipoProd
    HAVING ( dbo.tbProdutos.TipoProd = 'LC' ) 

GO
/****** Object:  StoredProcedure [dbo].[rptFechamentoResumodeVendasDia]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptFechamentoResumodeVendasDia
CREATE PROCEDURE [dbo].[rptFechamentoResumodeVendasDia]
@pIdposto     UNIQUEIDENTIFIER
,@pIDCaixaINI UNIQUEIDENTIFIER
,@pIDCaixaFIM UNIQUEIDENTIFIER
AS
    DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
	
	SET @diaIni = (SELECT DataAbertura
                    FROM   tbCaixa  with (nolock)
                    WHERE  Id = @pIDCaixaINI AND IdPosto = @pIdPosto)
    SET @diaFim = (SELECT DataAbertura
                    FROM   tbCaixa  with (nolock)
                    WHERE  Id = @pIDCaixaFIM AND IdPosto = @pIdPosto)
    
    INSERT INTO @tblCaixas
    SELECT Id
    FROM tbCaixa  with (nolock)
    WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto
    
    SELECT 'Combustíveis'                                                    AS
           Descricao
           ,SUM(dbo.tbVendasItens.PrecoVenda * dbo.tbVendasItens.Quantidade) AS
            Precovenda
    FROM   dbo.tbVendas  with (nolock)
           INNER JOIN dbo.tbVendasItens  with (nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos  with (nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbProdutosPostos  with (nolock)
                   ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
                      AND dbo.tbVendasItens.idProduto =
                          dbo.tbProdutosPostos.idProduto
                      AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
		   INNER JOIN @tblCaixas cx
		           ON dbo.tbVendas.idCaixa = cx.IdCaixa
    WHERE  dbo.tbVendas.idPosto = @pIDPosto
    GROUP  BY dbo.tbVendas.idCaixa
              ,dbo.tbProdutos.TipoProd
    HAVING ( dbo.tbProdutos.TipoProd = 'CB' )
    UNION
    SELECT 'Lubrificantes'
           AS
           Descricao
           ,
    Isnull(SUM(dbo.tbVendasItens.PrecoVenda * dbo.tbVendasItens.Quantidade), 0)
    AS
    Precovenda
    FROM   dbo.tbVendas  with (nolock)
           INNER JOIN dbo.tbVendasItens  with (nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos  with (nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbProdutosPostos  with (nolock)
                   ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
                      AND dbo.tbVendasItens.idProduto =
                          dbo.tbProdutosPostos.idProduto
                      AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
		   INNER JOIN @tblCaixas cx
		           ON dbo.tbVendas.idCaixa = cx.IdCaixa					  
    WHERE  dbo.tbVendas.idPosto = @pIDPosto
    GROUP  BY dbo.tbVendas.idCaixa
              ,dbo.tbProdutos.TipoProd
    HAVING ( dbo.tbProdutos.TipoProd = 'LB' )
    UNION
    SELECT 'Conveniência'
           AS
           Descricao
           ,
    Isnull(SUM(dbo.tbVendasItens.PrecoVenda * dbo.tbVendasItens.Quantidade), 0)
    AS
    Precovenda
    FROM   dbo.tbVendas  with (nolock)
           INNER JOIN dbo.tbVendasItens  with (nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos  with (nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbProdutosPostos  with (nolock)
                   ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
                      AND dbo.tbVendasItens.idProduto =
                          dbo.tbProdutosPostos.idProduto
                      AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
		   INNER JOIN @tblCaixas cx
		           ON dbo.tbVendas.idCaixa = cx.IdCaixa					  
    WHERE  dbo.tbVendas.idPosto = @pIDPosto
    GROUP  BY dbo.tbVendas.idCaixa
              ,dbo.tbProdutos.TipoProd
    HAVING ( dbo.tbProdutos.TipoProd = 'LC' )
    UNION
    SELECT 'Retiradas'
           ,Sum(Valor) AS PrecoVenda
    FROM   tbRetiradas  with (nolock)
		   INNER JOIN @tblCaixas cx
		           ON dbo.tbRetiradas.idCaixa = cx.IdCaixa	
    WHERE  idPosto = @pIDPosto
    GROUP  BY dbo.tbRetiradas.idCaixa 

GO
/****** Object:  StoredProcedure [dbo].[rptFinanceiroAdColaborador]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptFinanceiroAdColaborador
CREATE PROCEDURE [dbo].[rptFinanceiroAdColaborador]
AS
    SELECT SUM(tbColaboradoresDifCaixa.valor) AS Valor
           ,tbPostos.NomeUsual
    FROM   tbColaboradoresDifCaixa with (nolock)
           INNER JOIN tbCaixa  with (nolock)
                   ON tbColaboradoresDifCaixa.idCaixa = tbCaixa.Id
                      AND tbColaboradoresDifCaixa.idPosto = tbCaixa.idPosto
           INNER JOIN tbPostos  with (nolock)
                   ON tbCaixa.idPosto = tbPostos.Id
    WHERE  ( tbColaboradoresDifCaixa.Tipo = 'C'
              OR tbColaboradoresDifCaixa.Tipo = 'D' )
       AND ( tbColaboradoresDifCaixa.valor > 0 )
    GROUP  BY tbColaboradoresDifCaixa.idPosto
              ,tbPostos.NomeUsual 

GO
/****** Object:  StoredProcedure [dbo].[rptFinanceiroAdiantamento]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptFinanceiroAdiantamento
CREATE PROCEDURE [dbo].[rptFinanceiroAdiantamento]
AS
    SELECT dbo.tbEntidades.NomeUsual
           ,SUM(dbo.tbAdiantamento.Valor)                AS Valor
           ,ISNULL(SUM(dbo.tbAdiantamentoItem.Valor), 0) AS Utilizado
    FROM   dbo.tbAdiantamento
           INNER JOIN dbo.tbEntidades
                   ON dbo.tbAdiantamento.idPessoa = dbo.tbEntidades.Id
           LEFT OUTER JOIN dbo.tbAdiantamentoItem
                        ON dbo.tbAdiantamento.id =
                           dbo.tbAdiantamentoItem.idAdiantamento
    WHERE  ( dbo.tbAdiantamento.Finalizado = 0 )
    GROUP  BY dbo.tbEntidades.NomeUsual 
GO
/****** Object:  StoredProcedure [dbo].[rptFinanceiroCartoes]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptFinanceiroCartoes
CREATE PROCEDURE [dbo].[rptFinanceiroCartoes]
AS
    SELECT SUM(dbo.tbContasPagarReceber.Valor) AS TotalCartao
           ,dbo.tbOperadoras.Operadora
           ,dbo.tbContasPagarReceber.IdTipoDocto
           ,( CASE IdTipoDocto
                WHEN 'CC' THEN 'Crédito'
                ELSE 'Débito'
              END )                            AS TipoCartao
    FROM   dbo.tbContasPagarReceber
           INNER JOIN dbo.tbOperadoras
                   ON dbo.tbContasPagarReceber.idEntidade =
                      dbo.tbOperadoras.idEntidade
    WHERE  ( dbo.tbContasPagarReceber.DataVencto >= GETDATE() )
    GROUP  BY dbo.tbOperadoras.Operadora
              ,dbo.tbContasPagarReceber.IdTipoDocto 
GO
/****** Object:  StoredProcedure [dbo].[rptFinanceiroChequeDevolvido]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptFinanceiroChequeDevolvido
CREATE PROCEDURE [dbo].[rptFinanceiroChequeDevolvido]
AS
    SELECT tbPostos.NomeUsual + N' '
           + tbChequeSemFundo.HistoricoAtualizacao AS NomeUsual
           ,SUM(tbChequeSemFundo.valor)            AS Valor
    FROM   tbChequeSemFundo
           INNER JOIN tbPostos
                   ON tbChequeSemFundo.idPosto = tbPostos.Id
    WHERE  ( tbChequeSemFundo.pago = 0 )
       AND ( tbPostos.NomeUsual = 'Central' )
    GROUP  BY tbPostos.NomeUsual + N' '
              + tbChequeSemFundo.HistoricoAtualizacao
              ,tbChequeSemFundo.HistoricoAtualizacao 
GO
/****** Object:  StoredProcedure [dbo].[rptFinanceiroChequesAReceber]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptFinanceiroChequesAReceber
CREATE PROCEDURE [dbo].[rptFinanceiroChequesAReceber]
AS
    SELECT SUM(tbVendasItensPagamento.Valor) AS Total
           ,tbPostos.Id
           ,tbPostos.NomeUsual
    FROM   tbVendasItensPagamento
           INNER JOIN tbDepositoChequePre
                   ON tbVendasItensPagamento.Id = tbDepositoChequePre.IdVendaItemPagamento
           INNER JOIN tbVendas
                   ON tbVendasItensPagamento.idVenda = tbVendas.Id
           INNER JOIN tbEntidadeRefBanc
                   ON tbVendasItensPagamento.ContaBancaria =
                      tbEntidadeRefBanc.Id
           INNER JOIN tbEntidades
                   ON tbEntidadeRefBanc.IdEntidade = tbEntidades.Id
           INNER JOIN tbPostos
                   ON tbVendas.idPosto = tbPostos.Id
    WHERE  ( tbVendasItensPagamento.TipoPagamento = 'CP' )
       AND ( tbDepositoChequePre.Pago = 0 )
    GROUP  BY tbPostos.Id
              ,tbPostos.NomeUsual 
GO
/****** Object:  StoredProcedure [dbo].[rptFinanceiroContas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptFinanceiroContas
CREATE PROCEDURE [dbo].[rptFinanceiroContas]
AS
    SELECT dbo.tbContasBancarias.Id
           ,Descricao
           ,(SELECT Isnull(Sum(valor), 0)
             FROM   tbMovBancaria
             WHERE  tbMovBancaria.idContaBancaria = tbContasBancarias.Id
                AND Conciliado = 1) AS Saldo
           ,(SELECT Isnull(Sum(valor), 0)
             FROM   tbMovBancaria
             WHERE  tbMovBancaria.idContaBancaria = tbContasBancarias.Id
                AND Conciliado = 0
                AND TipoMov = 'C')  AS SaldoConciliar
           ,(SELECT Isnull(Sum(valor), 0)
             FROM   tbMovBancaria
             WHERE  tbMovBancaria.idContaBancaria = tbContasBancarias.Id
                AND Conciliado = 0
                AND TipoMov = 'D')  AS SaldoCheque
    FROM   dbo.tbContasBancarias
    WHERE  tbContasBancarias.Ativo = 1
    ORDER  BY Id 
GO
/****** Object:  StoredProcedure [dbo].[rptFinanceiroContasApagar]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptFinanceiroContasApagar
CREATE PROCEDURE [dbo].[rptFinanceiroContasApagar]
AS
    SELECT dbo.tbEntidades.NomeUsual
           ,SUM(dbo.tbContasPagarReceber.Valor - dbo.tbContasPagarReceber.Pago)
            AS
            Valor
           ,dbo.tbContasPagarReceber.InfoAdic
    FROM   dbo.tbContasPagarReceber
           INNER JOIN dbo.tbEntidades
                   ON dbo.tbContasPagarReceber.idEntidade = dbo.tbEntidades.Id
    WHERE  ( dbo.tbContasPagarReceber.idTipo = 'AP' )
       AND ( dbo.tbContasPagarReceber.idPosto = (SELECT Id FROM tbPostos WHERE NomeUsual = 'Central') )
    GROUP  BY dbo.tbEntidades.NomeUsual
              ,dbo.tbContasPagarReceber.InfoAdic
    HAVING ( SUM(dbo.tbContasPagarReceber.Valor - dbo.tbContasPagarReceber.Pago)
             > 0 ) 
GO
/****** Object:  StoredProcedure [dbo].[rptFinanceiroDebColaborador]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptFinanceiroDebColaborador
CREATE PROCEDURE [dbo].[rptFinanceiroDebColaborador]
AS
    SELECT SUM(dbo.tbColaboradoresDifCaixa.valor) AS Valor
           ,dbo.tbPostos.NomeUsual
    FROM   dbo.tbColaboradoresDifCaixa
           INNER JOIN dbo.tbCaixa
                   ON dbo.tbColaboradoresDifCaixa.idCaixa = dbo.tbCaixa.Id
                      AND dbo.tbColaboradoresDifCaixa.idPosto =
                          dbo.tbCaixa.idPosto
           INNER JOIN dbo.tbPostos
                   ON dbo.tbCaixa.idPosto = dbo.tbPostos.Id
    WHERE  ( dbo.tbColaboradoresDifCaixa.Tipo = 'C'
              OR dbo.tbColaboradoresDifCaixa.Tipo = 'D' )
       AND ( dbo.tbColaboradoresDifCaixa.valor < 0 )
       AND ( dbo.tbCaixa.Dia < GETDATE() )
        OR ( dbo.tbColaboradoresDifCaixa.Tipo = 'E' )
           AND ( dbo.tbColaboradoresDifCaixa.valor > 0 )
           AND ( dbo.tbCaixa.Dia < GETDATE() )
        OR ( dbo.tbColaboradoresDifCaixa.Tipo = 'L' )
           AND ( dbo.tbCaixa.Dia < GETDATE() )
    GROUP  BY dbo.tbColaboradoresDifCaixa.idPosto
              ,dbo.tbPostos.NomeUsual
GO
/****** Object:  StoredProcedure [dbo].[rptFinanceiroInvestido]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptFinanceiroInvestido
CREATE PROCEDURE [dbo].[rptFinanceiroInvestido]
AS
    SELECT Id
           ,NomeUsual
           ,(SELECT SUM(dbo.tbTanques.Medicao * dbo.tbProdutosPostos.PrecoCusto)
                    AS
                    Tanques
             FROM   dbo.tbTanques
                    INNER JOIN dbo.tbProdutosPostos
                            ON dbo.tbTanques.IdPosto =
                               dbo.tbProdutosPostos.idPosto
                               AND dbo.tbTanques.IdProduto =
                                   dbo.tbProdutosPostos.idProduto
             WHERE  ( dbo.tbTanques.IdPosto = Posto.Id )
                AND ( dbo.tbTanques.Ativo = 1 ))                AS EstoqueCB
           ,Isnull((SELECT SUM(( QTD - QTDRecebido ) * (
                               ISNULL(VUPro, 0) + ISNULL(
                               VUFrete,
                                0)
                               + ISNULL(VUGARE, 0) + ISNULL(
                               VUGNRE
                                , 0) ))
                                   AS
                           Pedidos
                    FROM   dbo.tbPedidosItens
                    WHERE  ( idPosto = Posto.Id )
                    HAVING ( SUM(QTD - QTDRecebido) > 0 )), 0)  AS Pedidos
           ,Isnull((SELECT SUM(Estoque * PrecoCusto)
                    FROM   dbo.tbProdutosPostos
                           INNER JOIN dbo.tbProdutos
                                   ON dbo.tbProdutosPostos.IdProduto = dbo.tbProdutos.Id
                    WHERE  ( idPosto = Posto.Id )
                       AND ( dbo.tbProdutos.TipoProd = 'CB' )), 0)               AS EstoqueLBLC
           ,Isnull((SELECT SUM(Valor - Valor * ( TaxaCartao / 100 )) AS
                           CartaoCredito
                    FROM   dbo.tbContasPagarReceber
                    WHERE  ( datavencto BETWEEN GetDAte() AND DateAdd(day, +30,
                                                              GetDate())
                           )
                    GROUP  BY idTipo
                              ,IdTipoDocto
                              ,idPosto
                    HAVING ( idTipo = 'AR' )
                           AND ( IdTipoDocto = 'CC' )
                           AND ( idPosto = Posto.Id )), 0) AS CC
           ,Isnull((SELECT SUM(Valor - Valor * ( TaxaCartao / 100 )) AS
                           CartaoCredito
                    FROM   dbo.tbContasPagarReceber
                    WHERE ( datavencto BETWEEN GetDAte() AND DateAdd(day, +1,
                                                             GetDate()) )
                    GROUP  BY idTipo
                              ,IdTipoDocto
                              ,idPosto
                    HAVING ( idTipo = 'AR' )
                           AND ( IdTipoDocto = 'CD' )
                           AND ( idPosto = Posto.Id )), 0) AS CD
           ,Isnull((SELECT SUM(dbo.tbChequeSemFundo.valor)
                    FROM   dbo.tbChequeSemFundo
                           INNER JOIN dbo.tbPostos
                                   ON dbo.tbChequeSemFundo.idPosto =
                                      dbo.tbPostos.Id
                    WHERE  ( dbo.tbChequeSemFundo.Pago = 0 )
                       AND dbo.tbPostos.Id = Posto.Id
                    GROUP  BY dbo.tbPostos.NomeUsual), 0)       AS ChDev
    FROM   tbPostos AS Posto
    WHERE  NomeUsual <> 'Central'
       AND ativo = 1
GO
/****** Object:  StoredProcedure [dbo].[rptFinanceiroPrazo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptFinanceiroPrazo
CREATE PROCEDURE [dbo].[rptFinanceiroPrazo]
AS
    SELECT Sum (CASE idTipo
                  WHEN 'RC' THEN Valor
                  WHEN 'AR' THEN Valor *- 1
                END) AS Valor
    FROM   tbContasPagarReceber
           ,tbEntidades
    WHERE  ( idTipo = 'AR'
              OR IDTIPO = 'RC' )
       AND tbEntidades.Id = tbContasPagarReceber.idEntidade
       AND ( tbEntidades.Prazo = 1
              OR PagaChequePrazo = 1
              OR CartaFrete = 1 ) 
GO
/****** Object:  StoredProcedure [dbo].[rptFolgas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptFolgas
CREATE PROCEDURE [dbo].[rptFolgas] @pMes      CHAR(2)
                                  ,@pAno     CHAR(4)
                                  ,@pDiasMes INT
                                  ,@pIdposto UNIQUEIDENTIFIER
AS
    IF @pIDPosto = dbo.GuidEmpty()
      BEGIN
          SET @pIDPosto = NULL
      END

    SELECT CONVERT(NVARCHAR(10), RIGHT('00' + RTRIM(LTRIM(CONVERT(CHAR(2),
                                 tbDias.Dia))), 2
                                        )
                                 + '/' + @pMes + '/' + @pAno, 103) AS Data
           ,ISNULL ((SELECT TOP 1 tbEntidades.NomeUsual AS Colaborador
                     FROM   tbPostos  with(nolock)
                            INNER JOIN tbFuncs  with(nolock)
                                    ON tbPostos.Id = tbFuncs.IdPosto
                            INNER JOIN viewPontoEletronico  with(nolock)
                                    ON tbFuncs.IdEntidade =
                                       viewPontoEletronico.IDEntidade
                            INNER JOIN tbEntidades  with(nolock)
                                    ON viewPontoEletronico.IDEntidade =
                                       tbEntidades.Id
                     WHERE  ( tbPostos.Id = tbPostos_1.Id )
                        AND ( viewPontoEletronico.Folga = 1 )
                        AND ( viewPontoEletronico.Data = CONVERT(NVARCHAR(10),
                              RIGHT('00' + RTRIM(LTRIM(
                              CONVERT(CHAR(2), tbDias.Dia))),
                              2
                                )
                                                + '/' + @pMes
                              +
                              '/' +
                              @pAno,
                                103) )
                     ORDER  BY tbEntidades.Id ASC), '')            AS
            Colaborador
           ,ISNULL ((SELECT TOP 1 tbEntidades.NomeUsual AS Colaborador
                     FROM   tbPostos  with(nolock)
                            INNER JOIN tbFuncs  with(nolock)
                                    ON tbPostos.Id = tbFuncs.IdPosto
                            INNER JOIN viewPontoEletronico   with(nolock)
                                    ON tbFuncs.IdEntidade =
                                       viewPontoEletronico.IDEntidade
                            INNER JOIN tbEntidades  with(nolock)
                                    ON viewPontoEletronico.IDEntidade =
                                       tbEntidades.Id
                     WHERE  ( tbPostos.Id = tbPostos_1.Id )
                        AND ( viewPontoEletronico.Folga = 1 )
                        AND ( viewPontoEletronico.Data = CONVERT(NVARCHAR(10),
                              RIGHT('00' + RTRIM(LTRIM(
                              CONVERT(CHAR(2), tbDias.Dia))),
                              2
                                )
                                                + '/' + @pMes
                              +
                              '/' +
                              @pAno,
                                103) )
                     ORDER  BY tbEntidades.Id DESC), '')           AS
            Colaborador1
           ,tbPostos_1.Id
           ,tbPostos_1.NomeUsual
    FROM   tbDias  with(nolock)
           CROSS JOIN tbPostos  AS tbPostos_1  with(nolock)
    WHERE  ( tbDias.Dia <= @pDiasMes )
       AND ( tbPostos_1.Id = @pIDPosto OR @pIDPosto IS NULL )
       AND ( tbPostos_1.Ativo = 1 )
       AND ( tbPostos_1.NomeUsual <> 'Central' )

GO
/****** Object:  StoredProcedure [dbo].[rptFolha]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptFolha
CREATE PROCEDURE [dbo].[rptFolha] @pMesINI    INT
                                 ,@pMesFIM   INT
                                 ,@pPostoINI UNIQUEIDENTIFIER
                                 ,@pPostoFIM UNIQUEIDENTIFIER
AS
  BEGIN
      SET nocount ON;

      SELECT dbo.tbPostos.Id
             ,dbo.tbPostos.NomeUsual
             ,dbo.tbPagamentoColaborador.Mes
             ,dbo.tbEntidades.NomeUsual             AS Colaborador
             ,SUM(dbo.tbPagamentoColaborador.Valor) AS Valor
      FROM   dbo.tbPagamentoColaborador  with(nolock)
             INNER JOIN dbo.tbPostos  with(nolock)
                     ON dbo.tbPagamentoColaborador.IDPosto = dbo.tbPostos.Id
             INNER JOIN dbo.tbEntidades  with(nolock)
                     ON dbo.tbPagamentoColaborador.IDEntidade =
                        dbo.tbEntidades.Id
      GROUP  BY dbo.tbPostos.Id
                ,dbo.tbPostos.NomeUsual
                ,dbo.tbPagamentoColaborador.Mes
                ,dbo.tbEntidades.NomeUsual
      HAVING ( dbo.tbPagamentoColaborador.Mes BETWEEN @pMesINI AND @pMesFIM )
             AND ( dbo.tbPostos.Id BETWEEN @pPostoINI AND @pPostoFIM )
      ORDER  BY dbo.tbPostos.NomeUsual
  END 

GO
/****** Object:  StoredProcedure [dbo].[rptFuncionariosMagda]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptFuncionariosMagda
CREATE PROCEDURE [dbo].[rptFuncionariosMagda]
AS
    SELECT dbo.tbEntidades.RzSocial
           ,dbo.tbEntidades.IE
           ,dbo.tbEntidades.CNPJ
           ,dbo.tbPostos.NomeUsual AS Posto
    FROM   dbo.tbEntidades  with(nolock)
           INNER JOIN dbo.tbFuncs   with(nolock)
                   ON dbo.tbEntidades.Id = dbo.tbFuncs.IdEntidade
           INNER JOIN dbo.tbPostos  with(nolock)
                   ON dbo.tbFuncs.IdPosto = dbo.tbPostos.Id
    ORDER  BY dbo.tbPostos.Id
              ,dbo.tbEntidades.RzSocial 

GO
/****** Object:  StoredProcedure [dbo].[rptGruposEAliquotas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptGruposEAliquotas
CREATE PROCEDURE [dbo].[rptGruposEAliquotas]
AS
    SELECT *
    FROM   tbGrupo with(nolock)

GO
/****** Object:  StoredProcedure [dbo].[rptHistoricoDetalhes]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptHistoricoDetalhes
CREATE PROCEDURE [dbo].[rptHistoricoDetalhes] @pTipo CHAR(1)
AS
    SELECT Id
           ,Descricao
           ,Despesa
           ,Ativo
           ,Tipo
    FROM   tbHistoricos
    WHERE  ( Tipo LIKE @pTipo )
    ORDER  BY Tipo
              ,Id 
GO
/****** Object:  StoredProcedure [dbo].[rptHolerit]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptHolerit
CREATE PROCEDURE [dbo].[rptHolerit] @pIdposto        UNIQUEIDENTIFIER
                                   ,@pIDColaborador UNIQUEIDENTIFIER
                                   ,@pMesRef        INT
                                   ,@pTipo          NVARCHAR(20)
                                   ,@pAnoRef        INT
AS
    IF @pIDColaborador = dbo.GuidEmpty()
      BEGIN
          SET @pIDColaborador = NULL
      END
    
    IF @pIDPosto = dbo.GuidEmpty()
      BEGIN
          SET @pIDPosto = NULL
      END
    
    SELECT tbPagamentoColaborador.IDEntidade
           ,tbEntidades.RzSocial
           ,tbPostos.NomeUsual
           ,tbPagamentoColaborador.IDPosto
           ,tbPagamentoColaborador.Data
           ,tbPagamentoColaborador.Descricao
           ,tbPagamentoColaborador.Valor
    FROM   tbPagamentoColaborador  with(nolock)
           INNER JOIN tbEntidades  with(nolock)
                   ON tbPagamentoColaborador.IDEntidade = tbEntidades.Id
           INNER JOIN tbPostos  with(nolock)
                   ON tbPagamentoColaborador.IDPosto = tbPostos.Id
           INNER JOIN tbFuncs  with(nolock)
                   ON tbEntidades.Id = tbFuncs.IdEntidade
                      AND tbPagamentoColaborador.IDPosto = tbFuncs.IdPosto
    WHERE  ( tbPagamentoColaborador.IDEntidade = @pIDColaborador OR @pIDColaborador IS NULL )
       AND ( tbPagamentoColaborador.Mes = @pMesRef )
       AND ( tbPostos.Id = @pIDPosto OR @pIDPosto IS NULL )
       AND ( YEAR(tbPagamentoColaborador.Data) = @pAnoRef )
       AND ( tbPagamentoColaborador.tipoPagamento = @pTipo )
    ORDER  BY tbPagamentoColaborador.IDEntidade
              ,tbPagamentoColaborador.ID 

GO
/****** Object:  StoredProcedure [dbo].[rptHoletit]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[rptHoletit]
	@pIDPosto int,
	@pIDColaborador int,
	@pMesRef int, 
	@pTipo nvarchar(20),
	@pAnoRef int
	


AS

Declare @pIDColaboradorINI int
Declare @pIDColaboradorFIM int

Declare @pIDPostoINI int
Declare @pIDPostoFIM int


If @pIDColaborador = 0
   begin
	set @pIDColaboradorINI = 0
	set @pIDColaboradorFIM = 99999
   end
else
 begin
	set @pIDColaboradorINI = @pIDColaborador
	set @pIDColaboradorFIM = @pIDColaborador
 end

If @pIDPosto = 0
   begin
	set @pIDPostoINI = 0
	set @pIDPostoFIM = 999
   end
else
 begin
	set @pIDPostoINI = @pIDPosto
	set @pIDPostoFIM = @pIDPosto
 end

Print @pIDPostoFIM
	
SELECT     tbPagamentoColaborador.IDEntidade, tbEntidades.RzSocial, tbPostos.NomeUsual, tbPagamentoColaborador.IDPosto, tbPagamentoColaborador.Data, 
                      tbPagamentoColaborador.Descricao, tbPagamentoColaborador.Valor
FROM         tbPagamentoColaborador INNER JOIN
                      tbEntidades ON tbPagamentoColaborador.IDEntidade = tbEntidades.IdEntidade INNER JOIN
                      tbPostos ON tbPagamentoColaborador.IDPosto = tbPostos.IdPosto INNER JOIN
                      tbFuncs ON tbEntidades.IdEntidade = tbFuncs.IdEntidade AND tbPagamentoColaborador.IDPosto = tbFuncs.IdPosto
WHERE     (tbPagamentoColaborador.IDEntidade BETWEEN @pIDColaboradorINI AND @pIDColaboradorFIM) AND (tbPagamentoColaborador.Mes = @pMesRef) 
                      AND (tbPostos.IdPosto BETWEEN @pIDPostoINI AND @pIDPostoFIM) AND (YEAR(tbPagamentoColaborador.Data) = @pAnoRef)  AND(tbPagamentoColaborador.TipoPagamento = @pTipo)
ORDER BY tbPagamentoColaborador.IDEntidade, tbPagamentoColaborador.ID
GO
/****** Object:  StoredProcedure [dbo].[rptInadimplentes]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptInadimplentes
CREATE PROCEDURE [dbo].[rptInadimplentes]
AS
    SELECT Id
           ,RzSocial
           ,CNPJ
    FROM   tbEntidades  with(nolock)
    WHERE  ( Ativo = 0 )
       AND ( DataBloqueio <= GETDATE() ) 

GO
/****** Object:  StoredProcedure [dbo].[rptInadimplentesCheques]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptInadimplentesCheques
CREATE PROCEDURE [dbo].[rptInadimplentesCheques]
AS
    SELECT tbEntidades.Id
           ,tbPostos.NomeUsual         AS Posto
           ,tbalinea.descricao         AS Alinea
           ,tbEntidadeRefBanc.Banco1   AS Banco
           ,tbEntidadeRefBanc.Agencia1 AS Agencia
           ,tbEntidadeRefBanc.Conta1   AS Conta
           ,tbChequeSemFundo.nCheque
           ,tbChequeSemFundo.valor
           ,tbChequeSemFundo.DataEstorno
    FROM   tbChequeSemFundo with(nolock)
           INNER JOIN tbEntidades with(nolock)
                   ON tbChequeSemFundo.idEntidade = tbEntidades.Id
           INNER JOIN tbPostos with(nolock)
                   ON tbChequeSemFundo.idPosto = tbPostos.Id
           INNER JOIN tbalinea with(nolock)
                   ON tbChequeSemFundo.IdAlinea = tbAlinea.Id
           INNER JOIN tbEntidadeRefBanc with(nolock)
                   ON tbEntidades.Id = tbEntidadeRefBanc.IdEntidade
                      AND tbChequeSemFundo.idRefBancaria = tbEntidadeRefBanc.Id
    WHERE  ( tbChequeSemFundo.pago = 0 )
    ORDER  BY tbChequeSemFundo.DataAtualizacao DESC 

GO
/****** Object:  StoredProcedure [dbo].[rptInadimplentesFone]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptInadimplentesFone
CREATE PROCEDURE [dbo].[rptInadimplentesFone]
AS
    SELECT idEntidade
           ,Descricao
           ,Fone
    FROM   tbEntidadesFone    with (nolock) 

GO
/****** Object:  StoredProcedure [dbo].[rptLEQFID]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[rptLEQFID]
	@pIdPosto	uniqueidentifier,
	@pIdTanque	uniqueidentifier,
	@pDataIni	datetime,
	@pDataFim	datetime
	AS

	--SET FMTONLY OFF

	/*
		Descrição: Seleciona os dados para exibição no relatório LEQFID
		Autor....: MangaTech - Alysson
		Data.....: 23/04/2021
		Ex.......: EXEC [dbo].[rptLEQFID] 'A94EB478-1BCF-4A4E-9039-0748EC51BBE0', '17E2F046-F109-40F4-A647-1684ABE12FA0', '2022-03-01 00:00:00', '2022-03-01 00:00:00'
	*/

	BEGIN
		DECLARE @NumTanque integer,
			    @Automacao bit

		CREATE TABLE #TempResult(
			Data		datetime,
			Hora		datetime,
			CupomFiscal varchar(50),
			NotaFiscal	varchar(50),
			Litragem	decimal(10,5),
			Tipo		varchar(10),
			MedicaoIni	decimal(10,4),
			MedicaoFim	decimal(10,4),
			LEQFID		decimal(10,4)
		)

		SELECT @pDataIni = [dbo].[fncMontaDataHora](DAY(@pDataIni), MONTH(@pDataIni), YEAR(@pDataIni), 0, 0, 0)
		SELECT @pDataFim = [dbo].[fncMontaDataHora](DAY(@pDataFim), MONTH(@pDataFim), YEAR(@pDataFim), 23, 59, 59)

		INSERT INTO #TempResult
			SELECT tpi.DataRecebimento + tpi.Hora AS Data,
				   tpi.DataRecebimento + tpi.Hora AS Hora,
				   NULL AS CupomFiscal,
				   tpi.NumeroNota AS NotaFiscal,
				   CONVERT(decimal(10,5), tpir.qtd) AS Litragem,
				   'ENTRADA' AS Tipo,
				   x.MedicaoIni,
				   y.MedicaoFim,
				   0 AS LEQFID
			FROM [dbo].[tbPedidosItens] tpi WITH(NOLOCK)
				INNER JOIN [dbo].[tbPostos] tp WITH(NOLOCK)
					ON tp.Id = tpi.IdPosto
				INNER JOIN [dbo].[tbPedidosItensRecebidos] tpir WITH(NOLOCK)
					ON tpir.IdItem = tpi.Id
				OUTER APPLY(
					SELECT trm.ValorMedicao AS MedicaoIni
						FROM [dbo].[tbReducaoMedicao] trm WITH(NOLOCK)
						WHERE trm.idReducaoEmissao = (SELECT Id
														FROM [dbo].[tbReducaoEmissao] tre WITH(NOLOCK)
														WHERE tre.DataMovimento = tpi.DataRecebimento - 1
															  AND tre.IdPosto = @pIdPosto)
							  AND trm.idMedicaoOrigem = @pIdTanque
							  AND trm.TipoMedicaoOrigem = 'T'
				) x
				OUTER APPLY(
					SELECT trm.ValorMedicao AS MedicaoFim
						FROM [dbo].[tbReducaoMedicao] trm WITH(NOLOCK)
						WHERE trm.idReducaoEmissao = (SELECT Id
														FROM [dbo].[tbReducaoEmissao] tre WITH(NOLOCK)
														WHERE tre.DataMovimento = tpi.DataRecebimento
															  AND tre.IdPosto = @pIdPosto)
							  AND trm.idMedicaoOrigem = @pIdTanque
							  AND trm.TipoMedicaoOrigem = 'T'
				) y
			WHERE tpi.IdPosto = @pIdPosto
				  AND tpir.IdTanque = @pIdTanque
				  AND tpi.DataRecebimento BETWEEN @pDataIni AND @pDataFim
		SELECT @Automacao = Automacao
			FROM [dbo].[tbPostos] tp WITH(NOLOCK)
			WHERE tp.Id = @pIdPosto

		IF @Automacao = 1 
			BEGIN

			SELECT @NumTanque = NumTanque
				FROM [dbo].[tbTanques] tt WITH(NOLOCK)
					WHERE tt.Id = @pIdTanque

			INSERT INTO #TempResult
			SELECT tv.Data AS Data,
				   tv.Data As Hora,
				   tv.NumeroCupomSat AS CupomFiscal,
				   NULL AS NotaFiscal,
				   --verificar como é feito na tbVendasItens o arredondamento
				   --((CONVERT(decimal(14,5), LTRIM(RTRIM(REPLACE(REPLACE(ta.TotalDinheiro, '.', ''), ',', '.')))) / CONVERT(decimal(14,5), LTRIM(RTRIM(REPLACE(REPLACE(ta.ppu, '.', ''), ',', '.')))))*-1) AS Litragem,
				   tvi.Quantidade*-1 AS Litragem,
				   'SAIDA' AS Tipo,
				   x.MedicaoIni,
				   y.MedicaoFim,
				   0 AS LEQFID
			FROM [dbo].[tbVendas] tv WITH(NOLOCK)
				LEFT JOIN [dbo].[tbVendasItens] tvi WITH(NOLOCK)
					ON tv.id = tvi.IdVenda
				OUTER APPLY(
					SELECT trm.ValorMedicao AS MedicaoIni
						FROM [dbo].[tbReducaoMedicao] trm WITH(NOLOCK)
						WHERE trm.idReducaoEmissao = (SELECT Id
														FROM [dbo].[tbReducaoEmissao] tre WITH(NOLOCK)
														WHERE tre.DataMovimento = tv.DataMovimento - 1
															  AND tre.IdPosto = @pIdPosto)
							  AND trm.idMedicaoOrigem = @pIdTanque
							  AND trm.TipoMedicaoOrigem = 'T'
				) x
				OUTER APPLY(
					SELECT trm.ValorMedicao AS MedicaoFim
						FROM [dbo].[tbReducaoMedicao] trm WITH(NOLOCK)
						WHERE trm.idReducaoEmissao = (SELECT Id
														FROM [dbo].[tbReducaoEmissao] tre WITH(NOLOCK)
														WHERE tre.DataMovimento = tv.DataMovimento
															  AND tre.IdPosto = @pIdPosto)
							  AND trm.idMedicaoOrigem = @pIdTanque
							  AND trm.TipoMedicaoOrigem = 'T'
				) y
				WHERE tv.IdPosto = @pIdPosto
					  AND tvi.IdTanque = @pIdTanque
					  AND tv.Data BETWEEN @pDataIni AND @pDataFim
					  AND tvi.Cancelado = 0
					  --AND ta.Status <> 'AFERICAO'
				--GROUP  BY tv.id
			END 
		ELSE
			BEGIN

			INSERT INTO #TempResult
			SELECT tv.Data AS Data,
				   tv.Data As Hora,
				   tv.NumeroCupomSat AS CupomFiscal,
				   NULL AS NotaFiscal,
				   CONVERT(decimal(10,2), tvi.Quantidade) * -1 AS Litragem,
				   'SAIDA' AS Tipo,
				   x.MedicaoIni,
				   y.MedicaoFim,
				   0 AS LEQFID
			FROM [dbo].[tbVendas] tv WITH(NOLOCK)
				INNER JOIN [dbo].[tbVendasItens] tvi WITH(NOLOCK)
					ON tvi.IdVenda = tv.Id
				OUTER APPLY(
					SELECT trm.ValorMedicao AS MedicaoIni
						FROM [dbo].[tbReducaoMedicao] trm WITH(NOLOCK)
						WHERE trm.idReducaoEmissao = (SELECT Id
														FROM [dbo].[tbReducaoEmissao] tre WITH(NOLOCK)
														WHERE tre.DataMovimento = tv.DataMovimento - 1
															  AND tre.IdPosto = @pIdPosto)
							  AND trm.idMedicaoOrigem = @pIdTanque
							  AND trm.TipoMedicaoOrigem = 'T'
				) x
				OUTER APPLY(
					SELECT trm.ValorMedicao AS MedicaoFim
						FROM [dbo].[tbReducaoMedicao] trm WITH(NOLOCK)
						WHERE trm.idReducaoEmissao = (SELECT Id
														FROM [dbo].[tbReducaoEmissao] tre WITH(NOLOCK)
														WHERE tre.DataMovimento = tv.DataMovimento
															  AND tre.IdPosto = @pIdPosto)
							  AND trm.idMedicaoOrigem = @pIdTanque
							  AND trm.TipoMedicaoOrigem = 'T'
				) y
				WHERE tv.IdPosto = @pIdPosto
					  AND tvi.IdTanque = @pIdTanque
					  AND tv.Data BETWEEN @pDataIni AND @pDataFim
					  AND tv.XMLSat IS NOT NULL
					  AND tvi.Cancelado = 0
					  AND tv.Status IS NULL
		END
		
		SELECT FORMAT(tr.Data, 'dd/MM/yyyy') AS Data,
			   FORMAT(tr.Hora, 'HH:mm') AS Hora,
			   tr.CupomFiscal AS CupomFiscal,
			   tr.NotaFiscal AS NotaFiscal,
			   tr.Litragem,
			   tr.Tipo AS Tipo,
			   tr.MedicaoIni AS MedicaoIni,
			   tr.MedicaoFim AS MedicaoFim,
			   tr.LEQFID AS LEQFID
		FROM #TempResult tr
		ORDER BY tr.Data, tr.Hora

		DROP TABLE #TempResult

		--SET FMTONLY ON
	END
GO
/****** Object:  StoredProcedure [dbo].[rptLMC]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptLMC
CREATE PROCEDURE [dbo].[rptLMC] (@pDataMovimento Datetime
                               ,@pIdProduto    UNIQUEIDENTIFIER
                               ,@pIdPosto uniqueidentifier)
AS

declare  @tbaux table(rn int,tipoReducao char(1), valorMedido decimal(18,4),idObjeto int, dataMovimento datetime,dataGeracao datetime)

declare @dataMovimentoAnterior datetime
set @dataMovimentoAnterior = @pDataMovimento -1
insert into @tbaux
select  
	 ROW_NUMBER() OVER (PARTITION BY tt.NumTanque ORDER BY tre.DataGeracao ASC ) AS rn
	,'I' as tipoReducao -- Reducao inicial 
	,trm.ValorMedicao 
	,tt.NumTanque as idObjeto
	,tre.DataMovimento
	,tre.DataGeracao

from tbReducaoMedicao trm
inner join tbReducaoEmissao tre on trm.idReducaoEmissao = tre.Id
inner join tbTanques tt on tt.Id = trm.idMedicaoOrigem
where trm.TipoMedicaoOrigem = 'T'
and tre.DataMovimento = @dataMovimentoAnterior -- inicial é a ultima reducao final da datamovimento anterior a @dataMovimento
and trm.IdProduto = @pIdProduto
and tre.IdPosto = @pIdPosto
and tt.ativo = 1
order by tre.DataGeracao DESC


insert into @tbaux
select  
	ROW_NUMBER() OVER (PARTITION BY tt.NumTanque ORDER BY tre.DataGeracao ASC ) AS rn
	,'F' as tipoReducao-- Reducao Final 
	,trm.ValorMedicao 
	,tt.NumTanque as idobjeto
	,tre.DataMovimento
	,tre.DataGeracao

from tbReducaoMedicao trm
inner join tbReducaoEmissao tre on trm.idReducaoEmissao = tre.Id
inner join tbTanques tt on tt.Id = trm.idMedicaoOrigem
where trm.TipoMedicaoOrigem = 'T'
and tre.DataMovimento = @pDataMovimento
and trm.IdProduto = @pIdProduto
and tre.IdPosto = @pIdPosto
and tt.ativo = 1
order by tre.DataGeracao DESC

select tipoReducao,valorMedido,idObjeto,dataGeracao,dataMovimento from @tbaux where rn = 1 --somente os top 1 de cada tipo de redução
order by idObjeto,dataGeracao


GO
/****** Object:  StoredProcedure [dbo].[rptLMCBombas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptLMCBombas  
CREATE PROCEDURE [dbo].[rptLMCBombas] (@pDataMovimento Datetime  
           ,@pIdProduto    UNIQUEIDENTIFIER
           ,@pIdPosto    UNIQUEIDENTIFIER)  
AS  
  
  
declare  @tbaux table(rn int,tipoReducao char(1), valorMedido decimal(18,4),idObjeto int, numtanque int, dataMovimento datetime,dataGeracao datetime,IdBomba uniqueidentifier,afericao decimal(6,3), LimiteEncerrante Decimal, MotivoDescontinuidade nvarchar(50), DescontinuidadeEncerranteAnterior Decimal(18,3), DescontinuidadeEncerrantePosterior Decimal(18,3))  
  
declare @dataMovimentoAnterior datetime  
set @dataMovimentoAnterior = @pDataMovimento -1  
  
declare @MaiorDataGeracaoDoMovimentoAnterior DATETIME
set @MaiorDataGeracaoDoMovimentoAnterior = (select top 1 datageracao from tbReducaoEmissao where DataMovimento = @dataMovimentoAnterior AND IdPosto = @pIdPOsto order by DataGeracao desc)
declare @MaiorDataGeracaoDoMovimento DATETIME
set @MaiorDataGeracaoDoMovimento = (select top 1 datageracao from tbReducaoEmissao where DataMovimento = @pDataMovimento AND IdPOsto = @pIdPOsto order by DataGeracao desc)

insert into @tbaux  
select    
  ROW_NUMBER() OVER (PARTITION BY tt.numtanque ORDER BY tre.DataGeracao DESC ) AS rn  
 ,'I' as tipoReducao -- Reducao inicial   
 ,trm.ValorMedicao   
 ,tb.NumBomba as idObjeto  
 ,tt.NumTanque as NumTanque  
 ,tre.DataMovimento  
 ,tre.DataGeracao  
 ,tb.Id as IdBomba  
 ,null as Afericao  
 ,null as LimiteEncerrante
 ,null as MotivoDescontinuidade
 ,null as DescontinuidadeEncerranteAnterior
 ,null as DescontinuidadeEncerrantePostorior
  
from tbReducaoMedicao trm  
inner join tbReducaoEmissao tre on trm.idReducaoEmissao = tre.Id  
inner join tbBombas tb on trm.idMedicaoOrigem = tb.Id  
inner join tbTanques tt on tt.Id = tb.IdTanque  
where trm.TipoMedicaoOrigem = 'B'  
and trm.IdProduto = @pIdProduto  
and tb.Ativo=1
and tre.DataGeracao = @MaiorDataGeracaoDoMovimentoAnterior
order by idObjeto

  
  
insert into @tbaux  
select    
 ROW_NUMBER() OVER (PARTITION BY tt.numtanque ORDER BY tre.DataGeracao desc ) AS rn  
 ,'F' as tipoReducao-- Reducao Final   
 ,trm.ValorMedicao   
 ,tb.NumBomba as idObjeto  
 ,tt.NumTanque as NumTanque  
 ,tre.DataMovimento  
 ,tre.DataGeracao  
 ,tb.Id as IdBomba 
 ,(select isnull(SUM(qtd),0) from tbAfericao where IdBomba = tb.id and dataMovimento = @pDataMovimento) as Afericao  
 ,tb.LimiteEncerrante
 , (Select Motivo from tbDescontinuidadeEncerrantes where numerobico = tb.numbomba and Data = @pDataMovimento and idposto= @pIdPosto) as MotivoDescontinuidade
 ,(select isnull(EncerranteAnterior,0) from tbDescontinuidadeEncerrantes where numerobico = tb.numbomba and Data = @pDataMovimento and idposto= @pIdPosto) as DescontinuidadeEncerranteAnterior  
 ,(select isnull(EncerrantePosterior,0) from tbDescontinuidadeEncerrantes where numerobico = tb.numbomba and Data = @pDataMovimento and idposto= @pIdPosto) as DescontinuidadeEncerrantePosterior 
from tbReducaoMedicao trm  
inner join tbReducaoEmissao tre on trm.idReducaoEmissao = tre.Id  
inner join tbBombas tb on trm.idMedicaoOrigem = tb.Id  
inner join tbTanques tt on tt.Id = tb.IdTanque  
where trm.TipoMedicaoOrigem = 'B'  
and trm.IdProduto = @pIdProduto
and tb.Ativo=1  
and tre.DataGeracao = @MaiorDataGeracaoDoMovimento
order by idObjeto
  
  
select tipoReducao,valorMedido,idObjeto,numtanque,dataMovimento,dataGeracao, IdBomba,afericao, LimiteEncerrante, MotivoDescontinuidade, DescontinuidadeEncerranteAnterior, DescontinuidadeEncerrantePosterior  from @tbaux   

order by idObjeto, tipoReducao desc
  
  

GO
/****** Object:  StoredProcedure [dbo].[rptLMCnovo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptLMCnovo
CREATE PROCEDURE [dbo].[rptLMCnovo] @pCaixaTurnoAnt UNIQUEIDENTIFIER
                                   ,@pCaixaIni     UNIQUEIDENTIFIER
                                   ,@pCaixaFim     UNIQUEIDENTIFIER
                                   ,@pIdposto      UNIQUEIDENTIFIER
                                   ,@pIDProduto    UNIQUEIDENTIFIER
AS
    SELECT Caixa.idObjeto
           ,dbo.tbProdutos.Id
           ,dbo.tbProdutos.Descricao                                       AS
            Descricao
           ,Caixa.ValorLido                                                AS
            Inicial
           ,ISNULL ((SELECT AVG(dbo.tbVendasItens.PrecoVenda)
                     FROM   dbo.tbVendas  with (nolock) 
                            INNER JOIN dbo.tbVendasItens  with (nolock) 
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                            INNER JOIN dbo.tbTanques  with (nolock) 
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbTanques.IdPosto
                            INNER JOIN dbo.tbBombas  with (nolock) 
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbVendasItens.idBomba =
                                           dbo.tbBombas.Id
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
                     WHERE  ( dbo.tbVendas.idCaixa BETWEEN
                              @pCaixaIni AND @pCaixaFim
                            )
                     GROUP  BY dbo.tbTanques.Id
                               ,dbo.tbTanques.IdPosto
                     HAVING ( dbo.tbTanques.Id = Caixa.idObjeto )
                            AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0) AS
            Preco
           ,ISNULL ((SELECT AVG(dbo.tbVendasItens.PrecoCusto)
                     FROM   dbo.tbVendas  with (nolock) 
                            INNER JOIN dbo.tbVendasItens  with (nolock) 
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                            INNER JOIN dbo.tbTanques  with (nolock) 
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbTanques.IdPosto
                            INNER JOIN dbo.tbBombas  with (nolock) 
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbVendasItens.idBomba =
                                           dbo.tbBombas.Id
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
                     WHERE  ( dbo.tbVendas.idCaixa BETWEEN
                              @pCaixaIni AND @pCaixaFim
                            )
                     GROUP  BY dbo.tbTanques.Id
                               ,dbo.tbTanques.IdPosto
                     HAVING ( dbo.tbTanques.Id = Caixa.idObjeto )
                            AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0) AS
            PrecoCusto
           ,ISNULL ((SELECT SUM(dbo.tbVendasItens.Quantidade)
                     FROM   dbo.tbVendas  with (nolock) 
                            INNER JOIN dbo.tbVendasItens  with (nolock) 
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                            INNER JOIN dbo.tbTanques  with (nolock) 
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbTanques.IdPosto
                            INNER JOIN dbo.tbBombas  with (nolock) 
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbVendasItens.idBomba =
                                           dbo.tbBombas.Id
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
                     WHERE  ( dbo.tbVendas.idCaixa BETWEEN
                              @pCaixaIni AND @pCaixaFim
                            )
                     GROUP  BY dbo.tbTanques.Id
                               ,dbo.tbTanques.IdPosto
                     HAVING ( dbo.tbTanques.Id = Caixa.idObjeto )
                            AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0) AS
            Venda
           ,ISNULL ((SELECT SUM(dbo.tbPedidosItensRecebidos.qtd) AS Recebimento
                     FROM   dbo.tbPedidosItens  with (nolock) 
                            INNER JOIN dbo.tbTanques  with (nolock) 
                                    ON dbo.tbPedidosItens.idPosto =
                                       dbo.tbTanques.IdPosto
                                       AND dbo.tbPedidosItens.idProduto =
                                           dbo.tbTanques.IdProduto
                            INNER JOIN dbo.tbPedidosItensRecebidos  with (nolock) 
                                    ON dbo.tbPedidosItens.idPedido =
                                       dbo.tbPedidosItensRecebidos.idPedido
                                       AND dbo.tbPedidosItens.idPosto =
                                           dbo.tbPedidosItensRecebidos.idPosto
                                       AND dbo.tbTanques.Id =
                                           dbo.tbPedidosItensRecebidos.IdTanque
                     WHERE  ( dbo.tbPedidosItens.idCaixaRecebimento BETWEEN
                              @pCaixaINI AND @pCaixaFIM )
                        AND ( dbo.tbTanques.Id = caixa.idOBjeto )
                        AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0)     AS
            Recebimento
           ,(SELECT ValorLido
             FROM   dbo.tbCaixaItens  with (nolock) 
             WHERE  ( idCaixa = @pCaixaFim )
                AND ( TipoLeitura = 'T' )
                AND ( idObjeto = Caixa.idObjeto ))                         AS
            Final
           ,(SELECT ValorCalculado
             FROM   dbo.tbCaixaItens  with (nolock) 
             WHERE  ( idCaixa = @pCaixaFim )
                AND ( TipoLeitura = 'T' )
                AND ( idObjeto = Caixa.idObjeto ))                         AS
            Medido
    FROM   dbo.tbProdutosPostos
           INNER JOIN dbo.tbProdutos  with (nolock) 
                   ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbCaixa  with (nolock) 
                      INNER JOIN dbo.tbCaixaItens Caixa  with (nolock) 
                              ON dbo.tbCaixa.Id = Caixa.idCaixa
                   ON dbo.tbProdutosPostos.idPosto = dbo.tbCaixa.idPosto
           INNER JOIN dbo.tbTanques  with (nolock) 
                   ON dbo.tbProdutosPostos.idPosto = dbo.tbTanques.IdPosto
                      AND Caixa.idObjeto = dbo.tbTanques.Id
                      AND dbo.tbProdutos.Id = dbo.tbTanques.IdProduto
                      AND dbo.tbProdutosPostos.idProduto =
                          dbo.tbTanques.IdProduto
    WHERE  ( Caixa.idCaixa = @pCaixaTurnoAnt )
       AND ( Caixa.TipoLeitura = 'T' )
       AND ( dbo.tbTanques.IdPosto = @pIDPosto )
       AND ( dbo.tbProdutos.Id = @pIDProduto )
    ORDER  BY dbo.tbProdutos.ordem
              ,caixa.idObjeto 

GO
/****** Object:  StoredProcedure [dbo].[rptLMCRecebimento]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptLMCRecebimento  
CREATE PROCEDURE [dbo].[rptLMCRecebimento] @pIdposto        UNIQUEIDENTIFIER  
                                          ,@pIdProduto     UNIQUEIDENTIFIER  
                                          ,@pDataMovimento datetime
AS  
     SELECT DISTINCT tbPedidosItens.NumeroNota  
           ,tbPedidosItens.DataNota  
           ,tbPedidosItensRecebidos.IdTanque  
           ,tbPedidosItensRecebidos.qtd  
     ,tbtanques.Numtanque  
    FROM   tbPedidosItensRecebidos  with (nolock)   
           INNER JOIN tbTanques  with (nolock)   
                   ON tbPedidosItensRecebidos.idPosto = tbTanques.IdPosto  
                      AND tbPedidosItensRecebidos.IdTanque = tbTanques.Id  
           RIGHT OUTER JOIN tbPedidosItens  with (nolock)   
                         ON tbTanques.IdProduto = tbPedidosItens.idProduto  
                            AND tbPedidosItensRecebidos.idPedido =  
                                tbPedidosItens.idPedido  
                            AND tbPedidosItensRecebidos.idPosto =  
                                tbPedidosItens.idPosto  
                            AND tbPedidosItensRecebidos.iditem =  
                                tbPedidosItens.id
       where tbPedidosItens.IdProduto = @pIdProduto
       and tbPedidosItens.IdPosto = @pIdposto
       and tbPedidosItens.DataRecebimento = @pDataMovimento
       
GO
/****** Object:  StoredProcedure [dbo].[rptLMCRecebimentoVendasBico]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptLMCRecebimentoVendasBico
CREATE PROCEDURE [dbo].[rptLMCRecebimentoVendasBico] 
	@pDataMovimento Datetime
	,@pDataMovGeradoIni Datetime
	,@pDataMovGeradoFim Datetime
	,@pIdBomba    UNIQUEIDENTIFIER
	,@pTipoPeriodo CHAR
	,@pIdPosto    Uniqueidentifier

AS

IF exists(SELECT 1 WHERE @pTipoPeriodo = 'D') --Valor Diario
	BEGIN
	
		SELECT
		
		TotalVendasBico = ISNULL(SUM(round((ROUND(tvi.Quantidade,3,1)+.001) * (CASE WHEN tvi.PrecoEspecial > 0 THEN tvi.PrecoEspecial WHEN tvi.PrecoPromocao > 0 THEN tvi.PrecoPromocao ELSE tvi.PrecoVenda END),2,1)),0) 
		from tbVendasitens tvi
		inner join tbVendas tv on tvi.IdVenda = tv.id
		where tvi.IdBomba = @pIdBomba
		and tvi.Cancelado = 0
		and tv.Status is null
		and tv.DataMovimento = @pDataMovimento
		and tv.IdPosto = @pIdPosto
		--and tv.Data between @pDataMovGeradoIni and @pDataMovGeradoFim
		--Group by tvi.PrecoVenda
	END
ELSE
BEGIN -- 'M'  Valor Mensal

	declare @dataString varchar(10),@dataMesInicio datetime,@dataMesFim datetime

	set @dataString = CONVERT(varchar, datepart(year,@pDataMovimento)) + RIGHT(REPLICATE('0', 2) + CAST(datepart(month,@pDataMovimento) AS VARCHAR(2)), 2) + '01'
 	set @dataMesInicio= CONVERT (datetime,@dataString)
  
	SELECT	 
		 
		TotalVendasBico = ISNULL(SUM(round((ROUND(tvi.Quantidade,3,1)+.001) * (CASE WHEN tvi.PrecoEspecial > 0 THEN tvi.PrecoEspecial WHEN tvi.PrecoPromocao > 0 THEN tvi.PrecoPromocao ELSE tvi.PrecoVenda END),2,1)),0) 
		from tbVendasitens tvi
		inner join tbVendas tv on tvi.IdVenda = tv.id
		where tvi.IdBomba = @pIdBomba
		and tvi.Cancelado = 0
		and tv.Status is null
		and tv.DataMovimento between @dataMesInicio and  @pDataMovimento
		and tv.IdPosto = @pIdPosto
		--group by tvi.PrecoVenda

END
GO
/****** Object:  StoredProcedure [dbo].[rptLog]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptLog
CREATE PROCEDURE [dbo].[rptLog] @pIDEntidade UNIQUEIDENTIFIER
                               ,@pIdposto   UNIQUEIDENTIFIER
                               ,@pTabela    VARCHAR(50)
                               ,@pOperacao  VARCHAR (50)
                               ,@pDescricao VARCHAR (300)
                               ,@pDataINI   SMALLDATETIME
                               ,@pDataFIM   SMALLDATETIME
AS
    IF @pIDEntidade = dbo.GuidEmpty()
      BEGIN
          SET @pIDEntidade = NULL
      END
    
    IF @pIDposto = dbo.GuidEmpty()
      BEGIN
          SET @pIDposto = NULL
      END
    
    SELECT tbLogs.Id
           ,tbPostos.NomeUsual    AS Posto
           ,tbEntidades.NomeUsual AS Usuario
           ,tbLogs.Tabela
           ,tbLogs.Operacao
           ,tbLogs.Data
           ,tbLogs.Descricao
    FROM   tbLogs  with (nolock) 
           INNER JOIN tbEntidades  with (nolock) 
                   ON tbLogs.IdEntidade = tbEntidades.Id
           INNER JOIN tbPostos  with (nolock) 
                   ON tbLogs.IdPosto = tbPostos.Id
    WHERE  ( tbLogs.IdEntidade = @pIDEntidade OR @pIDEntidade IS NULL )
       AND ( tbPostos.Id = @pIDposto OR @pIDposto IS NULL )
       AND ( tbLogs.Tabela LIKE @pTabela )
       AND ( tbLogs.Operacao LIKE @pOperacao )
       AND ( tbLogs.Data BETWEEN @pDataINI AND @pDataFIM )
       AND ( tbLogs.Descricao LIKE @pDescricao ) 

GO
/****** Object:  StoredProcedure [dbo].[rptMediaDiariaNovo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--[rptMediaDiariaNovo]
CREATE PROCEDURE [dbo].[rptMediaDiariaNovo]  @pIDPosto UNIQUEIDENTIFIER AS
Declare @pDataINI smalldatetime
Declare @pDataFIM smalldatetime
Declare @pmes int
Declare @pano int
Declare @Dia int
 
 If @pIDPosto = dbo.guidempty()
      begin
         set @pIDPosto = NULL
      end
   

set @dia  = (SELECT   DATEPART(Day, GETDATE()))
set @pMes = (SELECT   DATEPART(Month, GETDATE())) 
set @pAno = (SELECT   DATEPART(Year, GETDATE()))


set @pDataINI= (SELECT DATEADD(day,(-@dia),GETDATE()))
set @pDataFIM = (SELECT  GETDATE())

Select tbp.id, tbp.NomeUsual,
    ((SELECT  SUM(dbo.tbVendasItens.Quantidade) / @Dia FROM   dbo.tbVendasItens  with (nolock)INNER JOIN  dbo.tbProdutos  with (nolock) ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id INNER JOIN  dbo.tbVendas  with (nolock) ON dbo.tbVendasItens.idVenda = dbo.tbVendas.id INNER JOIN  dbo.tbPostos  with (nolock) ON dbo.tbVendas.idPosto = dbo.tbPostos.Id   WHERE  (dbo.tbProdutos.NumProduto = 1) AND (@pIdposto is null or dbo.tbPostos.Id = @pIdposto) AND (dbo.tbVendasItens.Cancelado = 0) AND (dbo.tbVendas.DataMovimento BETWEEN  @pDataINI AND @pDataFIM)))as MediaGasolinaColegio,
    ((SELECT  SUM(dbo.tbVendasItens.Quantidade) / @Dia FROM   dbo.tbVendasItens  with (nolock)INNER JOIN  dbo.tbProdutos  with (nolock) ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id INNER JOIN  dbo.tbVendas  with (nolock) ON dbo.tbVendasItens.idVenda = dbo.tbVendas.id INNER JOIN  dbo.tbPostos  with (nolock) ON dbo.tbVendas.idPosto = dbo.tbPostos.Id   WHERE  (dbo.tbProdutos.NumProduto = 2) AND (@pIdposto is null or dbo.tbPostos.Id = @pIdposto) AND (dbo.tbVendasItens.Cancelado = 0) AND (dbo.tbVendas.DataMovimento BETWEEN  @pDataINI AND @pDataFIM)))as MediaGasolinaAditivadaColegio,
    ((SELECT  SUM(dbo.tbVendasItens.Quantidade) / @Dia FROM   dbo.tbVendasItens  with (nolock)INNER JOIN  dbo.tbProdutos  with (nolock) ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id INNER JOIN  dbo.tbVendas  with (nolock) ON dbo.tbVendasItens.idVenda = dbo.tbVendas.id INNER JOIN  dbo.tbPostos  with (nolock) ON dbo.tbVendas.idPosto = dbo.tbPostos.Id   WHERE  (dbo.tbProdutos.NumProduto = 3) AND (@pIdposto is null or dbo.tbPostos.Id = @pIdposto) AND (dbo.tbVendasItens.Cancelado = 0) AND (dbo.tbVendas.DataMovimento BETWEEN  @pDataINI AND @pDataFIM)))as MediaEtanolColegio,
    ((SELECT  SUM(dbo.tbVendasItens.Quantidade) / @Dia FROM   dbo.tbVendasItens  with (nolock)INNER JOIN  dbo.tbProdutos  with (nolock) ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id INNER JOIN  dbo.tbVendas  with (nolock) ON dbo.tbVendasItens.idVenda = dbo.tbVendas.id INNER JOIN  dbo.tbPostos  with (nolock) ON dbo.tbVendas.idPosto = dbo.tbPostos.Id   WHERE  (dbo.tbProdutos.NumProduto = 4) AND (@pIdposto is null or dbo.tbPostos.Id = @pIdposto) AND (dbo.tbVendasItens.Cancelado = 0) AND (dbo.tbVendas.DataMovimento BETWEEN  @pDataINI AND @pDataFIM)))as MediaDieselCOlegio
    --((SELECT  SUM(dbo.tbVendasItens.Quantidade) / @Dia    FROM   dbo.tbVendasItens INNER JOIN  dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id INNER JOIN  dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.id INNER JOIN  dbo.tbPostos ON dbo.tbVendas.idPosto = dbo.tbPostos.Id  WHERE   (dbo.tbProdutos.NumProduto = 1) AND (dbo.tbPostos.Id = 4) AND (dbo.tbVendasItens.Cancelado = 0) AND (dbo.tbVendas.DataMovimento BETWEEN  @pDataINI AND @pDataFIM)))as MediaGasolinaPorto, 
    --((SELECT  SUM(dbo.tbVendasItens.Quantidade) / @Dia    FROM   dbo.tbVendasItens INNER JOIN  dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id INNER JOIN  dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.id INNER JOIN  dbo.tbPostos ON dbo.tbVendas.idPosto = dbo.tbPostos.Id   WHERE  (dbo.tbProdutos.NumProduto = 2) AND (dbo.tbPostos.Id = 4) AND(dbo.tbVendasItens.Cancelado = 0) AND (dbo.tbVendas.DataMovimento BETWEEN  @pDataINI AND @pDataFIM)))as MediaGasolinaAditivadaPorto,
    --((SELECT  SUM(dbo.tbVendasItens.Quantidade) / @Dia    FROM   dbo.tbVendasItens INNER JOIN  dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id INNER JOIN  dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.id INNER JOIN  dbo.tbPostos ON dbo.tbVendas.idPosto = dbo.tbPostos.Id   WHERE  (dbo.tbProdutos.NumProduto = 3) AND (dbo.tbPostos.Id = 4) AND(dbo.tbVendasItens.Cancelado = 0) AND (dbo.tbVendas.DataMovimento BETWEEN  @pDataINI AND @pDataFIM)))as MediaEtanolPorto,
    --((SELECT  SUM(dbo.tbVendasItens.Quantidade) / @Dia    FROM   dbo.tbVendasItens INNER JOIN  dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id INNER JOIN  dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.id INNER JOIN  dbo.tbPostos ON dbo.tbVendas.idPosto = dbo.tbPostos.Id   WHERE  (dbo.tbProdutos.NumProduto = 4) AND (dbo.tbPostos.Id = 4) AND(dbo.tbVendasItens.Cancelado = 0) AND (dbo.tbVendas.DataMovimento BETWEEN  @pDataINI AND @pDataFIM)))as MediaDieselPorto,
    --((SELECT  SUM(dbo.tbVendasItens.Quantidade) / @Dia    FROM   dbo.tbVendasItens INNER JOIN  dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id INNER JOIN  dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.id INNER JOIN  dbo.tbPostos ON dbo.tbVendas.idPosto = dbo.tbPostos.Id  WHERE   (dbo.tbProdutos.NumProduto = 1) AND (dbo.tbPostos.Id = 6) AND (dbo.tbVendasItens.Cancelado = 0) AND (dbo.tbVendas.DataMovimento BETWEEN  @pDataINI AND @pDataFIM)))as MediaGasolinaFred, 
    --((SELECT  SUM(dbo.tbVendasItens.Quantidade) / @Dia    FROM   dbo.tbVendasItens INNER JOIN  dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id INNER JOIN  dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.id INNER JOIN  dbo.tbPostos ON dbo.tbVendas.idPosto = dbo.tbPostos.Id   WHERE  (dbo.tbProdutos.NumProduto = 2) AND (dbo.tbPostos.Id = 6) AND(dbo.tbVendasItens.Cancelado = 0) AND (dbo.tbVendas.DataMovimento BETWEEN  @pDataINI AND @pDataFIM)))as MediaGasolinaAditivadaFred,
    --((SELECT  SUM(dbo.tbVendasItens.Quantidade) / @Dia    FROM   dbo.tbVendasItens INNER JOIN  dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id INNER JOIN  dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.id INNER JOIN  dbo.tbPostos ON dbo.tbVendas.idPosto = dbo.tbPostos.Id   WHERE  (dbo.tbProdutos.NumProduto = 3) AND (dbo.tbPostos.Id = 6) AND(dbo.tbVendasItens.Cancelado = 0) AND (dbo.tbVendas.DataMovimento BETWEEN  @pDataINI AND @pDataFIM)))as MediaEtanolFred,
    --((SELECT  SUM(dbo.tbVendasItens.Quantidade) / @Dia    FROM   dbo.tbVendasItens INNER JOIN  dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id INNER JOIN  dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.id INNER JOIN  dbo.tbPostos ON dbo.tbVendas.idPosto = dbo.tbPostos.Id   WHERE  (dbo.tbProdutos.NumProduto = 4) AND (dbo.tbPostos.Id = 6) AND(dbo.tbVendasItens.Cancelado = 0) AND (dbo.tbVendas.DataMovimento BETWEEN  @pDataINI AND @pDataFIM)))as MediaDieselFred,
    --((SELECT  SUM(dbo.tbVendasItens.Quantidade) / @Dia    FROM   dbo.tbVendasItens INNER JOIN  dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id INNER JOIN  dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.id INNER JOIN  dbo.tbPostos ON dbo.tbVendas.idPosto = dbo.tbPostos.Id  WHERE   (dbo.tbProdutos.NumProduto = 1) AND (dbo.tbPostos.Id = 15) AND (dbo.tbVendasItens.Cancelado = 0) AND (dbo.tbVendas.DataMovimento BETWEEN  @pDataINI AND @pDataFIM)))as MediaGasolinaModa, 
    --((SELECT  SUM(dbo.tbVendasItens.Quantidade) / @Dia    FROM   dbo.tbVendasItens INNER JOIN  dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id INNER JOIN  dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.id INNER JOIN  dbo.tbPostos ON dbo.tbVendas.idPosto = dbo.tbPostos.Id   WHERE  (dbo.tbProdutos.NumProduto = 2) AND (dbo.tbPostos.Id = 15) AND(dbo.tbVendasItens.Cancelado = 0) AND (dbo.tbVendas.DataMovimento BETWEEN  @pDataINI AND @pDataFIM)))as MediaGasolinaAditivadaModa,
    --((SELECT  SUM(dbo.tbVendasItens.Quantidade) / @Dia    FROM   dbo.tbVendasItens INNER JOIN  dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id INNER JOIN  dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.id INNER JOIN  dbo.tbPostos ON dbo.tbVendas.idPosto = dbo.tbPostos.Id   WHERE  (dbo.tbProdutos.NumProduto = 3) AND (dbo.tbPostos.Id = 15) AND(dbo.tbVendasItens.Cancelado = 0) AND (dbo.tbVendas.DataMovimento BETWEEN  @pDataINI AND @pDataFIM)))as MediaEtanolModa,
    --((SELECT  SUM(dbo.tbVendasItens.Quantidade) / @Dia    FROM   dbo.tbVendasItens INNER JOIN  dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id INNER JOIN  dbo.tbVendas ON dbo.tbVendasItens.idVenda = dbo.tbVendas.id INNER JOIN  dbo.tbPostos ON dbo.tbVendas.idPosto = dbo.tbPostos.Id   WHERE  (dbo.tbProdutos.NumProduto = 4) AND (dbo.tbPostos.Id = 15) AND(dbo.tbVendasItens.Cancelado = 0) AND (dbo.tbVendas.DataMovimento BETWEEN  @pDataINI AND @pDataFIM)))as MediaDieselModa

FROM dbo.tbPostos tbp  with (nolock) 

WHERE (@pIdPosto is null OR  tbp.Id = @pIdposto )
AND tbp.Ativo = 1 
AND (tbp.Id not in (SELECT ID FROM tbPostos WHERE NomeUsual = 'Central'))


GO
/****** Object:  StoredProcedure [dbo].[rptMediaDiariaVenda]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptMediaDiariaVenda
CREATE PROCEDURE [dbo].[rptMediaDiariaVenda] @pIDPosto UNIQUEIDENTIFIER
AS
    DECLARE @Dia INT
    DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
    DECLARE @pmes INT
    DECLARE @pano INT
    DECLARE @CaixaINI SMALLDATETIME

    SET @CaixaINI = (SELECT MAX(Dia)
                     FROM   dbo.tbCaixa with (nolock)
                     WHERE  ( NOT ( DataFechamento IS NULL ) )
                        AND ( TCaixa = 3 )
                        AND ( idPosto = idPosto ))
    SET @Dia = (SELECT DATEPART(day, @CaixaINI))
    SET @pmes = (SELECT DATEPART(month, GETDATE()))
    SET @pAno = (SELECT DATEPART(year, GETDATE()))
    
    INSERT @tblCaixas
    SELECT Id
    FROM   tbCaixa  with (nolock)
    WHERE  idPosto = @pIDPosto
      AND Month(dia) = @pMes
      AND year(dia) = @pAno
      AND ( DataFechamento IS NOT NULL )
    
    SELECT dbo.tbPostos.Id
           ,dbo.tbPostos.NomeUsual
           ,((SELECT SUM(dbo.tbVendasItens.Quantidade) / @Dia
              FROM   dbo.tbVendasItens  with (nolock)
                     INNER JOIN dbo.tbProdutos  with (nolock)
                             ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
                     INNER JOIN dbo.tbVendas  with (nolock)
                             ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
                     INNER JOIN dbo.tbPostos  with (nolock)
                             ON dbo.tbVendas.idPosto = dbo.tbPostos.Id
				    INNER JOIN @tblCaixas cx
					        ON dbo.tbVendas.idCaixa = cx.IdCaixa							 
              WHERE  ( dbo.tbPostos.Id = @pIdPOsto )
                 AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )
                 AND ( dbo.tbVendasItens.Cancelado = 0 ))) AS MediaGasolina
           ,((SELECT SUM(dbo.tbVendasItens.Quantidade) / @Dia
              FROM   dbo.tbVendasItens  with (nolock)
                     INNER JOIN dbo.tbProdutos  with (nolock)
                             ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
                     INNER JOIN dbo.tbVendas  with (nolock)
                             ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
                     INNER JOIN dbo.tbPostos  with (nolock)
                             ON dbo.tbVendas.idPosto = dbo.tbPostos.Id
				    INNER JOIN @tblCaixas cx
					        ON dbo.tbVendas.idCaixa = cx.IdCaixa							 
              WHERE  ( dbo.tbPostos.Id = @pIdPOsto )
                 AND ( dbo.tbProdutos.Descricao = 'Gasolina aditivada' )
                 AND ( dbo.tbVendasItens.Cancelado = 0 ))) AS MediaGasolinaAdt
           ,((SELECT SUM(dbo.tbVendasItens.Quantidade) / @Dia
              FROM   dbo.tbVendasItens  with (nolock)
                     INNER JOIN dbo.tbProdutos  with (nolock)
                             ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
                     INNER JOIN dbo.tbVendas  with (nolock)
                             ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
                     INNER JOIN dbo.tbPostos  with (nolock)
                             ON dbo.tbVendas.idPosto = dbo.tbPostos.Id
				    INNER JOIN @tblCaixas cx
					        ON dbo.tbVendas.idCaixa = cx.IdCaixa							 
              WHERE  ( dbo.tbPostos.Id = @pIdPOsto )
                 AND ( dbo.tbProdutos.Descricao = 'Etanol comum' )
                 AND ( dbo.tbVendasItens.Cancelado = 0 ))) AS MediaEtanol
           ,((SELECT SUM(dbo.tbVendasItens.Quantidade) / @Dia
              FROM   dbo.tbVendasItens  with (nolock)
                     INNER JOIN dbo.tbProdutos   with (nolock)
                             ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
                     INNER JOIN dbo.tbVendas  with (nolock)
                             ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
                     INNER JOIN dbo.tbPostos  with (nolock)
                             ON dbo.tbVendas.idPosto = dbo.tbPostos.Id
				    INNER JOIN @tblCaixas cx
					        ON dbo.tbVendas.idCaixa = cx.IdCaixa							 
              WHERE  ( dbo.tbPostos.Id = @pIdPOsto )
                 AND ( dbo.tbProdutos.Descricao = 'Diesel comum' )
                 AND ( dbo.tbVendasItens.Cancelado = 0 ))) AS MediaDiesel
    FROM   dbo.tbPostos
    WHERE  dbo.tbPostos.Id = @pIdposto 

GO
/****** Object:  StoredProcedure [dbo].[rptMovimentacaoEstoque]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[rptMovimentacaoEstoque]
@pIDposto		UNIQUEIDENTIFIER, 
@pIdProduto		UNIQUEIDENTIFIER,
@pDataIni		DateTime,
@pDataFim		DateTime
AS
BEGIN
	CREATE TABLE #tbOrdemOrigem (Ordem INT, Origem VARCHAR(50), TCaixa INT)

	--Precisa do COLLATE por causa da comparação de JOIN
	INSERT INTO #tbOrdemOrigem VALUES (1, 'Compra do produto', 0)
	INSERT INTO #tbOrdemOrigem VALUES (2, 'Transferência de produto', 0)
	INSERT INTO #tbOrdemOrigem VALUES (3, 'Acerto manual de estoque', 0)

	INSERT INTO #tbOrdemOrigem
	SELECT 3 + IdTurno, 'Venda no turno ' + CAST(IdTurno AS VARCHAR(1)) 
		+ ' de ' + (SELECT CAST(COUNT(Id) AS VARCHAR(1)) FROM tbTurno WHERE tbTurno.IdPosto = @pIDposto),
		IdTurno
	FROM tbTurno

	SET NOCOUNT ON;

	SELECT
		mv.DataMovimento
		,oo.Ordem
		,ps.Id AS IdPosto
		,ps.NomeUsual AS NomePosto
		,p.Id AS IdProduto
		,p.Descricao AS NomeProduto
		,mv.Origem
		,
		ISNULL(
		(
			SELECT TOP 1
				Almoxarifado
				+ 
				(
					CASE 
						WHEN tbMovimentacaoEstoque.TipoMovimento = 'E' AND tbMovimentacaoEstoque.TipoEstoque = 'A' THEN Valor * (-1)
						WHEN tbMovimentacaoEstoque.TipoMovimento = 'S' AND tbMovimentacaoEstoque.TipoEstoque = 'A' THEN Valor
						ELSE 0
					END
				)
			FROM 
				tbMovimentacaoEstoque
			WHERE
				tbMovimentacaoEstoque.IdPosto = ps.Id
				AND tbMovimentacaoEstoque.IdProduto = p.Id
			ORDER BY tbMovimentacaoEstoque.Data
		),0)
		+
		ISNULL(
		(
			SELECT
				SUM(Valor)
			FROM 
				tbMovimentacaoEstoque
				INNER JOIN #tbOrdemOrigem
				        ON #tbOrdemOrigem.Origem = tbMovimentacaoEstoque.Origem COLLATE DATABASE_DEFAULT
			WHERE
				tbMovimentacaoEstoque.IdPosto = ps.Id
				AND tbMovimentacaoEstoque.IdProduto = p.Id
				AND TipoMovimento = 'E'
				AND TipoEstoque = 'A'
				AND ((tbMovimentacaoEstoque.DataMovimento = mv.DataMovimento AND #tbOrdemOrigem.Ordem < oo.Ordem)
					OR (tbMovimentacaoEstoque.DataMovimento < mv.DataMovimento))
		),0)
		-
		ISNULL(
		(
			SELECT
				SUM(Valor)
			FROM 
				tbMovimentacaoEstoque
				INNER JOIN #tbOrdemOrigem
				        ON #tbOrdemOrigem.Origem = tbMovimentacaoEstoque.Origem COLLATE DATABASE_DEFAULT
			WHERE
				tbMovimentacaoEstoque.IdPosto = ps.Id
				AND tbMovimentacaoEstoque.IdProduto = p.Id
				AND TipoMovimento = 'S'
				AND TipoEstoque = 'A'
				AND ((tbMovimentacaoEstoque.DataMovimento = mv.DataMovimento AND #tbOrdemOrigem.Ordem < oo.Ordem)
					OR (tbMovimentacaoEstoque.DataMovimento < mv.DataMovimento))
		), 0)
		AS PE_EstoqueInicial
		,COALESCE(SUM(mv.EntradaAlmoxarifado), 0) AS PE_Entrada
		,COALESCE(SUM(mv.SaidaAlmoxarifado), 0) AS PE_Saida
		,
		ISNULL(
		(
			SELECT TOP 1
				Estoque
				+ 
				(
					CASE 
						WHEN tbMovimentacaoEstoque.TipoMovimento = 'E' AND tbMovimentacaoEstoque.TipoEstoque = 'V' THEN Valor * (-1)
						WHEN tbMovimentacaoEstoque.TipoMovimento = 'S' AND tbMovimentacaoEstoque.TipoEstoque = 'V' THEN Valor
						ELSE 0
					END
				)
			FROM 
				tbMovimentacaoEstoque
			WHERE
				tbMovimentacaoEstoque.IdPosto = ps.Id
				AND tbMovimentacaoEstoque.IdProduto = p.Id
			ORDER BY tbMovimentacaoEstoque.Data
		),0)
		+
		ISNULL(
		(
			SELECT
				SUM(Valor)
			FROM 
				tbMovimentacaoEstoque
				INNER JOIN #tbOrdemOrigem
				        ON #tbOrdemOrigem.Origem = tbMovimentacaoEstoque.Origem COLLATE DATABASE_DEFAULT
			WHERE
				tbMovimentacaoEstoque.IdPosto = ps.Id
				AND tbMovimentacaoEstoque.IdProduto = p.Id
				AND TipoMovimento = 'E'
				AND TipoEstoque = 'V'
				AND ((tbMovimentacaoEstoque.DataMovimento = mv.DataMovimento AND #tbOrdemOrigem.Ordem < oo.Ordem)
					OR (tbMovimentacaoEstoque.DataMovimento < mv.DataMovimento))
		),0)
		-
		ISNULL(
		(
			SELECT
				SUM(Valor)
			FROM 
				tbMovimentacaoEstoque
				INNER JOIN tbCaixa
						ON tbMovimentacaoEstoque.IdCaixa = tbCaixa.Id
				INNER JOIN #tbOrdemOrigem
				        ON #tbOrdemOrigem.TCaixa = tbCaixa.TCaixa
			WHERE
				tbMovimentacaoEstoque.IdPosto = ps.Id
				AND tbMovimentacaoEstoque.IdProduto = p.Id
				AND TipoMovimento = 'S'
				AND TipoEstoque = 'V'
				AND ((tbMovimentacaoEstoque.DataMovimento = mv.DataMovimento AND #tbOrdemOrigem.TCaixa < oo.TCaixa)
					OR (tbMovimentacaoEstoque.DataMovimento < mv.DataMovimento))
		), 0)
		AS PV_EstoqueInicial
		,COALESCE(SUM(mv.EntradaVenda), 0) AS PV_Entrada
		,COALESCE(SUM(mv.SaidaVenda), 0) AS PV_Saida
	FROM tbPostos ps WITH(NOLOCK)
           INNER JOIN tbProdutosPostos pp WITH(NOLOCK)
                   ON ps.Id = pp.IdPosto
           INNER JOIN tbProdutos p WITH(NOLOCK)
                   ON pp.IdProduto = p.Id
           INNER JOIN ( SELECT IdPosto, IdProduto, Origem, Data, DataMovimento, Valor AS EntradaAlmoxarifado, 0 AS SaidaAlmoxarifado, 0 AS EntradaVenda, 0 AS SaidaVenda
						FROM tbMovimentacaoEstoque WITH(NOLOCK)
						WHERE TipoMovimento = 'E' and TipoEstoque = 'A'
							AND DataMovimento BETWEEN @pDataIni AND @pDataFim 
						UNION ALL
						SELECT IdPosto, IdProduto, Origem, Data, DataMovimento, 0 AS EntradaAlmoxarifado, Valor AS SaidaAlmoxarifado, 0 AS EntradaVenda, 0 AS SaidaVenda
						FROM tbMovimentacaoEstoque WITH(NOLOCK)
						WHERE TipoMovimento = 'S' and TipoEstoque = 'A'
							AND DataMovimento BETWEEN @pDataIni AND @pDataFim 
						UNION ALL
						SELECT IdPosto, IdProduto, Origem, Data, DataMovimento, 0 AS EntradaAlmoxarifado, 0 AS SaidaAlmoxarifado, Valor AS EntradaVenda, 0 AS SaidaVenda
						FROM tbMovimentacaoEstoque WITH(NOLOCK)
						WHERE TipoMovimento = 'E' and TipoEstoque = 'V'
							AND DataMovimento BETWEEN @pDataIni AND @pDataFim 
						UNION ALL
						SELECT IdPosto, IdProduto, CASE tbMovimentacaoEstoque.Origem WHEN 'Formulário de venda' THEN ('Venda no turno ' + 
							(SELECT CAST(TCaixa AS VARCHAR(1)) FROM tbCaixa WHERE tbCaixa.Id = tbMovimentacaoEstoque.IdCaixa) + ' de ' + (SELECT CAST(COUNT(Id) AS VARCHAR(1)) FROM tbTurno WHERE tbTurno.IdPosto = tbMovimentacaoEstoque.IdPosto)) ELSE (tbMovimentacaoEstoque.Origem) END AS Origem, 
							Data, DataMovimento, 0 AS EntradaAlmoxarifado, 0 AS SaidaAlmoxarifado, 0 AS EntradaVenda, Valor AS SaidaVenda
						FROM tbMovimentacaoEstoque WITH(NOLOCK)
						WHERE TipoMovimento = 'S' and TipoEstoque = 'V'
							AND DataMovimento BETWEEN @pDataIni AND @pDataFim) mv
                   ON mv.IdProduto = p.Id AND mv.IdPosto = ps.Id
			INNER JOIN #tbOrdemOrigem oo
			        ON mv.Origem = oo.Origem COLLATE DATABASE_DEFAULT
    WHERE   ( ps.Id = @pIDposto or @pIDposto is null)
		AND ( p.TipoProd <> 'CB')
		AND ( p.Id = @pIdProduto )
	GROUP BY ps.Id, ps.NomeUsual, p.Id, p.Descricao, mv.Origem, mv.DataMovimento, oo.Ordem, oo.TCaixa
	ORDER BY DataMovimento, Ordem, NomePosto, NomeProduto
	
	--Drop temp table
	DROP TABLE #tbOrdemOrigem
END
GO
/****** Object:  StoredProcedure [dbo].[rptMovimentacaoEstoqueProdutosVendidosTurno]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[rptMovimentacaoEstoqueProdutosVendidosTurno]
 @pIDposto		UNIQUEIDENTIFIER 
,@pCaixaIni		UNIQUEIDENTIFIER
,@pCaixaFim		UNIQUEIDENTIFIER
AS
	DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @pMes INT
	DECLARE @pano INT
	DECLARE @dia INT
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
	DECLARE @tblCaixasMes TABLE(IdCaixa UNIQUEIDENTIFIER)

	--Caixas avaliados
	SET @diaIni = (SELECT DataAbertura
					FROM   tbCaixa  with(nolock)
					WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)
	SET @diaFim = (SELECT DataAbertura
					FROM   tbCaixa  with(nolock)
					WHERE  Id = @pCaixaFIM AND IdPosto = @pIdPosto)
	
	INSERT INTO @tblCaixas
    SELECT Id
    FROM tbCaixa  with(nolock)
    WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto
    
	--Trata IdPosto (1 ou todos)
	IF (@pIDposto = dbo.GuidEmpty())
	BEGIN
		SET @pIDposto = null
	END
	
	SELECT
		ps.NomeUsual AS NomePosto
		--,p.Id AS IdProduto
		,p.Descricao AS NomeProduto
		,CASE 
			WHEN p.TipoProd = 'LB' then 'Lubrificante'
			WHEN p.TipoProd = 'LC' then 'Conveniência'
		END AS TipoProduto
		,COALESCE((
			SELECT TOP 1
				mv.Estoque - mv.Almoxarifado + mv.Valor
			FROM 
				tbMovimentacaoEstoque mv
			WHERE
				mv.IdPosto = ps.Id
				AND mv.IdProduto = p.Id
				AND mv.IdCaixa in (SELECT IdCaixa FROM @tblCaixas)
			ORDER BY Data
		), 0) AS EstoqueInicial
		,(
			SELECT
				COALESCE(SUM(mv.Valor),0)
			FROM 
				tbMovimentacaoEstoque mv
			WHERE
				mv.IdPosto = ps.Id
				AND mv.IdProduto = p.Id
				AND mv.IdCaixa in (SELECT IdCaixa FROM @tblCaixas)
				AND mv.TipoEstoque = 'V' 
				AND mv.TipoMovimento = 'E'
				AND mv.Origem = 'Compra do produto'
		) AS Compra
		,(
			SELECT
				COALESCE(SUM(mv.Valor),0)
			FROM 
				tbMovimentacaoEstoque mv
			WHERE
				mv.IdPosto = ps.Id
				AND mv.IdProduto = p.Id
				AND mv.IdCaixa in (SELECT IdCaixa FROM @tblCaixas)
				AND mv.TipoEstoque = 'A' 
				AND mv.TipoMovimento = 'S'
				AND mv.Origem = 'Transferência de produto'
		) AS Transferencia
		,(
			SELECT
				COALESCE(SUM(mv.Valor),0)
			FROM 
				tbMovimentacaoEstoque mv
			WHERE
				mv.IdPosto = ps.Id
				AND mv.IdProduto = p.Id
				AND mv.IdCaixa in (SELECT IdCaixa FROM @tblCaixas)
				AND mv.TipoEstoque = 'V' 
				AND mv.TipoMovimento = 'E'
				AND mv.Origem = 'Acerto manual de estoque'
		) AS AcertoManual
		,(
			SELECT
				COALESCE(SUM(mv.Valor),0)
			FROM 
				tbMovimentacaoEstoque mv
			WHERE
				mv.IdPosto = ps.Id
				AND mv.IdProduto = p.Id
				AND mv.IdCaixa in (SELECT IdCaixa FROM @tblCaixas)
				AND mv.TipoEstoque = 'V' 
				AND mv.TipoMovimento = 'S'
				AND mv.Origem = 'Formulário de venda'
		) AS Venda
	FROM tbPostos ps WITH(NOLOCK)
           INNER JOIN tbProdutosPostos pp WITH(NOLOCK)
                   ON ps.Id = pp.IdPosto
           INNER JOIN tbProdutos p WITH(NOLOCK)
                   ON pp.IdProduto = p.Id
    WHERE   ( ps.Id = @pIDposto or @pIDposto is null)
		AND ( p.TipoProd <> 'CB')
		AND ( p.Id IN (SELECT IdProduto FROM tbMovimentacaoEstoque WHERE IdCaixa in (SELECT IdCaixa FROM @tblCaixas)) )
	ORDER BY NomePosto, NomeProduto

GO
/****** Object:  StoredProcedure [dbo].[rptMovimentacaoEstoqueVendaPosto]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[rptMovimentacaoEstoqueVendaPosto]
 @pIDposto		UNIQUEIDENTIFIER 
,@pCaixaIni		UNIQUEIDENTIFIER
,@pCaixaFim		UNIQUEIDENTIFIER

AS

	DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @pMes INT
	DECLARE @pano INT
	DECLARE @dia INT
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER, DataAbertura DATETIME, Dia DATETIME)
	DECLARE @tblTiposProd TABLE(Tipo NVARCHAR(2))

	--Caixas avaliados
	SET @diaIni = (SELECT DataAbertura
					FROM   tbCaixa  with(nolock)
					WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)
	SET @diaFim = (SELECT DataAbertura
					FROM   tbCaixa  with(nolock)
					WHERE  Id = @pCaixaFIM AND IdPosto = @pIdPosto)
	
	INSERT INTO @tblCaixas
    SELECT Id, DataAbertura, Dia
    FROM tbCaixa  with(nolock)
    WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto
    
	INSERT INTO @tblTiposProd VALUES ('LB')
	INSERT INTO @tblTiposProd VALUES ('LC')

	SELECT
		CASE 
			WHEN t.Tipo = 'LB' then 'Lubrificante'
			WHEN t.Tipo = 'LC' then 'Conveniência'
		END AS TipoProduto
		,SUM(COALESCE(TEstoqueInicial.Valor,0)) AS EstoqueInicial
		,SUM(COALESCE(TCompra.CustoCompraValor,0)) AS Compra
		,SUM(COALESCE(TCompra.LucroCompraValor,0)) AS LucroCompra
		,SUM(COALESCE(TDevolucao.Valor,0)) AS Devolucao
		,SUM(COALESCE(TPerda.Valor,0)) AS Perda
		,SUM(COALESCE(TTransferencia.Valor,0)) AS Transferencia
		,SUM(COALESCE(TSaidaDevolucao.Valor,0)) AS SaidaDevolucao
		,SUM(COALESCE(TConsumoProprio.Valor,0)) AS ConsumoProprio
		,SUM(COALESCE(TBrindeBonificacao.Valor,0)) AS BrindeBonificacao
		,SUM(COALESCE(TVenda.Valor,0)) AS Venda
		,SUM(COALESCE(TEstoqueInicial.Valor,0)+COALESCE(TCompra.CustoCompraValor,0)+COALESCE(TCompra.LucroCompraValor,0)+COALESCE(TDevolucao.Valor,0)-COALESCE(TPerda.Valor,0)-COALESCE(TTransferencia.Valor,0)-COALESCE(TVenda.Valor,0)) AS EstoqueFinal
	FROM @tblTiposProd t 
		LEFT JOIN tbProdutos p WITH(NOLOCK)
			ON t.Tipo COLLATE SQL_Latin1_General_CP1_CI_AS = p.TipoProd
        LEFT JOIN tbProdutosPostos pp WITH(NOLOCK)
            ON pp.IdProduto = p.Id
		LEFT JOIN (
			SELECT DISTINCT
				mv.Estoque *(CASE WHEN mv.PrecoVenda > 0 THEN mv.PrecoVenda ELSE mv.PrecoCusto END) AS Valor,
				mv.IdPosto,
				mv.IdProduto
			FROM 
				tbMovimentacaoEstoque mv
				INNER JOIN (
					SELECT
						MAX(Data) PrimeiraData,
						mv2.IdPosto,
						mv2.IdProduto
					FROM
						tbMovimentacaoEstoque mv2
					WHERE
						mv2.DataMovimento < (select Dia from @tblCaixas where DataAbertura = @diaIni)
					GROUP BY
						mv2.IdPosto,
						mv2.IdProduto
					) AS TPrimeiroMov ON TPrimeiroMov.IdPosto = mv.IdPosto 
						AND TPrimeiroMov.IdProduto = mv.IdProduto
						AND TPrimeiroMov.PrimeiraData = mv.Data
			) AS TEstoqueInicial
		         ON pp.IdPosto = TEstoqueInicial.IdPosto AND pp.IdProduto = TEstoqueInicial.IdProduto
		LEFT JOIN (
			SELECT
				SUM(COALESCE(mv.Valor * mv.PrecoCusto,0)) AS CustoCompraValor,
				--SUM(COALESCE((mv.Valor *  mv.PrecoVenda) - (mv.Valor * mv.PrecoCusto),0)) AS LucroCompraValor,
				SUM(COALESCE((mv.Valor * (CASE WHEN mv.PrecoVenda > 0 THEN mv.PrecoVenda ELSE mv.PrecoCusto END)) - (mv.Valor * mv.PrecoCusto),0)) AS LucroCompraValor,
				mv.IdPosto,
				mv.IdProduto
			FROM 
				tbMovimentacaoEstoque mv
			WHERE
			    mv.IdCaixa in (SELECT IdCaixa FROM @tblCaixas)
				AND mv.TipoMovimento = 'E'
				AND mv.Origem = 'Compra do produto'
			GROUP BY
				mv.IdPosto,
				mv.IdProduto
			) AS TCompra	 		          
		         ON pp.IdPosto = TCompra.IdPosto AND pp.IdProduto = TCompra.IdProduto
		LEFT JOIN (
			SELECT
				SUM(COALESCE(CASE WHEN mv.TipoMovimento = 'E' THEN mv.Valor * mv.PrecoVenda * -1 ELSE mv.Valor * mv.PrecoVenda END,0)) AS Valor,
				mv.IdPosto,
				mv.IdProduto
			FROM 
				tbMovimentacaoEstoque mv
			WHERE
			    mv.IdCaixa in (SELECT IdCaixa FROM @tblCaixas)
				AND (mv.Origem = 'Entrada de devolução' OR mv.Origem = 'Cancelamento da entrada de devolução')
			GROUP BY
				mv.IdPosto,
				mv.IdProduto
			) AS TDevolucao	 		          
		         ON pp.IdPosto = TDevolucao.IdPosto AND pp.IdProduto = TDevolucao.IdProduto
		LEFT JOIN (
			SELECT
				SUM(COALESCE(CASE WHEN mv.TipoMovimento = 'E' THEN mv.Valor * mv.PrecoVenda * -1 ELSE mv.Valor * mv.PrecoVenda END,0)) AS Valor,
				mv.IdPosto,
				mv.IdProduto
			FROM 
				tbMovimentacaoEstoque mv
			WHERE
			    mv.IdCaixa in (SELECT IdCaixa FROM @tblCaixas)
				AND (mv.Origem = 'Perda de produto' OR mv.Origem = 'Cancelamento da perda')
			GROUP BY
				mv.IdPosto,
				mv.IdProduto
			) AS TPerda	 		          
		         ON pp.IdPosto = TPerda.IdPosto AND pp.IdProduto = TPerda.IdProduto
		LEFT JOIN (
			SELECT
				SUM(COALESCE(CASE WHEN mv.TipoMovimento = 'E' THEN mv.Valor * mv.PrecoVenda * -1 ELSE mv.Valor * mv.PrecoVenda END,0)) AS Valor,
				mv.IdPosto,
				mv.IdProduto
			FROM 
				tbMovimentacaoEstoque mv
			WHERE
			    mv.IdCaixa in (SELECT IdCaixa FROM @tblCaixas)
				AND (mv.Origem = 'Saída por transferência' OR mv.Origem = 'Cancelamento da saída por transferência')
			GROUP BY
				mv.IdPosto,
				mv.IdProduto
			) AS TTransferencia	 		          
		         ON pp.IdPosto = TTransferencia.IdPosto AND pp.IdProduto = TTransferencia.IdProduto
				 LEFT JOIN (
			SELECT
				SUM(COALESCE(CASE WHEN mv.TipoMovimento = 'E' THEN mv.Valor * mv.PrecoVenda * -1 ELSE mv.Valor * mv.PrecoVenda END,0)) AS Valor,
				mv.IdPosto,
				mv.IdProduto
			FROM 
				tbMovimentacaoEstoque mv
			WHERE
			    mv.IdCaixa in (SELECT IdCaixa FROM @tblCaixas)
				AND (mv.Origem = 'Saída por devolução' OR mv.Origem = 'Cancelamento da saída por devolução')
			GROUP BY
				mv.IdPosto,
				mv.IdProduto
			) AS TSaidaDevolucao	 		          
		         ON pp.IdPosto = TSaidaDevolucao.IdPosto AND pp.IdProduto = TSaidaDevolucao.IdProduto
				  LEFT JOIN (
			SELECT
				SUM(COALESCE(CASE WHEN mv.TipoMovimento = 'E' THEN mv.Valor * mv.PrecoVenda * -1 ELSE mv.Valor * mv.PrecoVenda END,0)) AS Valor,
				mv.IdPosto,
				mv.IdProduto
			FROM 
				tbMovimentacaoEstoque mv
			WHERE
			    mv.IdCaixa in (SELECT IdCaixa FROM @tblCaixas)
				AND (mv.Origem = 'Consumo próprio' OR mv.Origem = 'Cancelamento do consumo próprio')
			GROUP BY
				mv.IdPosto,
				mv.IdProduto
			) AS TConsumoProprio	 		          
		         ON pp.IdPosto = TConsumoProprio.IdPosto AND pp.IdProduto = TConsumoProprio.IdProduto
				 LEFT JOIN (
			SELECT
				SUM(COALESCE(CASE WHEN mv.TipoMovimento = 'E' THEN mv.Valor * mv.PrecoVenda * -1 ELSE mv.Valor * mv.PrecoVenda END,0)) AS Valor,
				mv.IdPosto,
				mv.IdProduto
			FROM 
				tbMovimentacaoEstoque mv
			WHERE
			    mv.IdCaixa in (SELECT IdCaixa FROM @tblCaixas)
				AND (mv.Origem = 'Brinde ou bonificação' OR mv.Origem = 'Cancelamento do brinde ou bonificação')
			GROUP BY
				mv.IdPosto,
				mv.IdProduto
			) AS TBrindeBonificacao	 		          
		         ON pp.IdPosto = TBrindeBonificacao.IdPosto AND pp.IdProduto = TBrindeBonificacao.IdProduto
		LEFT JOIN (
			SELECT
				SUM(COALESCE(CASE WHEN mv.TipoMovimento = 'E' THEN mv.Valor * mv.PrecoVenda * -1 ELSE mv.Valor * mv.PrecoVenda END, 0)) AS Valor,
				mv.IdPosto,
				mv.IdProduto
			FROM 
				tbMovimentacaoEstoque mv
			WHERE
				mv.IdCaixa in (SELECT IdCaixa FROM @tblCaixas)
				AND mv.TipoEstoque = 'V'
				AND (mv.Origem = 'Formulário de venda' OR mv.Origem = 'Cancelamento de venda' OR mv.Origem='Venda de mercadoria')
			GROUP BY
				mv.IdPosto,
				mv.IdProduto
		) AS TVenda
			ON pp.IdPosto = TVenda.IdPosto AND pp.IdProduto = TVenda.IdProduto
    WHERE   ( pp.IdPosto = @pIDposto)
	GROUP BY t.Tipo
	ORDER BY t.Tipo --'LB' e depois 'LC'
GO
/****** Object:  StoredProcedure [dbo].[rptNotasFiscais]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptNotasFiscais
CREATE PROCEDURE [dbo].[rptNotasFiscais] @pDataInicial    SMALLDATETIME
                                        ,@pDataFinal     SMALLDATETIME
                                        ,@pIDposto       UNIQUEIDENTIFIER
                                        ,@pIDHistorico   UNIQUEIDENTIFIER
                                        ,@pDespesa       BIT
                                        ,@pMostraGrafico BIT

AS

	DECLARE @GuidEmpty UNIQUEIDENTIFIER
	SET @GuidEmpty = dbo.GuidEmpty()

    IF @pDespesa = 0
      BEGIN
          SELECT dbo.tbPostos.Id
                 ,dbo.tbPostos.NomeUsual
                 ,dbo.tbContasPagarReceber.Data as Dia
                 ,dbo.tbEntidades.RzSocial
                 ,dbo.tbEntidades.CNPJ
                 ,dbo.tbContasPagarReceber.Valor
                 ,dbo.tbContasPagarReceber.NumDocto
                 ,dbo.tbContasPagarReceber.DataDoc
                 ,dbo.tbHistoricos.Descricao
				 ,dbo.tbHistoricos.Tipo
                 ,tbEntidades_2.RzSocial AS NomeContador
                 ,tbEntidades_2.CNPJ     AS DocumentoContador
                 ,dbo.tbContasPagarReceber.InfoAdic
				 ,dbo.tbpedidoRevenda.NumPedido
          FROM   dbo.tbContasPagarReceber  with(nolock)
                 INNER JOIN dbo.tbPostos  with(nolock)
                         ON dbo.tbContasPagarReceber.idPosto = dbo.tbPostos.Id
                 INNER JOIN dbo.tbEntidades  with(nolock)
                         ON dbo.tbContasPagarReceber.idEntidade =
                            dbo.tbEntidades.Id
                 INNER JOIN dbo.tbHistoricos  with(nolock)
                         ON dbo.tbContasPagarReceber.idHistorico =
                            dbo.tbHistoricos.Id
                 INNER JOIN dbo.tbEntidades AS tbEntidades_2  with(nolock)
                         ON dbo.tbPostos.IdContador = tbEntidades_2.Id
				INNER JOIN dbo.tbpedidorevenda WITH(NOLOCK)
						ON dbo.tbContasPagarReceber.IdPedidoRevenda = dbo.tbpedidoRevenda.id
          WHERE  ( dbo.tbContasPagarReceber.idHistorico = @pIDHistorico OR @pIDHistorico = @GuidEmpty )
             AND ( dbo.tbContasPagarReceber.Data BETWEEN @pDataInicial AND @pDataFinal )
             AND ( dbo.tbContasPagarReceber.idPosto = @pIDPosto OR @pIDPosto = @GuidEmpty OR @pIDPosto IS NULL )
             AND ( dbo.tbContasPagarReceber.Despesa = 1 )
			 AND ( dbo.tbpedidorevenda.DataRecebimento is not null)
          ORDER  BY dbo.tbContasPagarReceber.idPosto
                    ,dbo.tbContasPagarReceber.Data
      END
    ELSE
      BEGIN
          SELECT dbo.tbPostos.Id
                 ,dbo.tbPostos.RzSocial  AS NomeUsual
                 ,dbo.tbContasPagarReceber.Data as Dia
                 ,dbo.tbEntidades.RzSocial
                 ,dbo.tbEntidades.CNPJ
                 ,dbo.tbContasPagarReceber.Valor
                 ,dbo.tbContasPagarReceber.NumDocto
                 ,dbo.tbContasPagarReceber.DataDoc
                 ,dbo.tbHistoricos.Descricao
				 ,dbo.tbHistoricos.Tipo
                 ,tbEntidades_2.RzSocial AS NomeContador
                 ,tbEntidades_2.CNPJ     AS DocumentoContador
                 ,dbo.tbContasPagarReceber.InfoAdic
          FROM   dbo.tbContasPagarReceber  with(nolock)
                 INNER JOIN dbo.tbPostos  with(nolock)
                         ON dbo.tbContasPagarReceber.idPosto = dbo.tbPostos.Id
                 INNER JOIN dbo.tbEntidades  with(nolock)
                         ON dbo.tbContasPagarReceber.idEntidade =
                            dbo.tbEntidades.Id
                 INNER JOIN dbo.tbHistoricos  with(nolock)
                         ON dbo.tbContasPagarReceber.idHistorico =
                            dbo.tbHistoricos.Id
                 INNER JOIN dbo.tbEntidades AS tbEntidades_2  with(nolock)
                         ON dbo.tbPostos.IdContador = tbEntidades_2.Id
          WHERE  ( dbo.tbHistoricos.Descricao NOT IN ('Combustível','Conveniência', 'Lubrificantes') )
		     AND ( dbo.tbContasPagarReceber.Data BETWEEN @pDataInicial AND @pDataFinal )
             AND ( dbo.tbContasPagarReceber.idPosto = @pIDPosto OR @pIDPosto = @GuidEmpty OR @pIDPosto IS NULL )
             AND ( dbo.tbContasPagarReceber.Despesa = 1 )
			 AND ( dbo.tbContasPagarReceber.idTipo='PG')
          ORDER  BY dbo.tbContasPagarReceber.idPosto
                    ,dbo.tbContasPagarReceber.Data
      END
GO
/****** Object:  StoredProcedure [dbo].[rptNotasFiscaisEmitidas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptNotasFiscaisEmitidas
CREATE PROCEDURE [dbo].[rptNotasFiscaisEmitidas] @pDataInicial SMALLDATETIME
                                                ,@pDataFinal  SMALLDATETIME
                                                ,@pIDposto    UNIQUEIDENTIFIER
                                                ,@pTipo       NVARCHAR(2)
AS
	DECLARE @GuidEmpty UNIQUEIDENTIFIER
	SET @GuidEmpty = dbo.GuidEmpty()
	
    SELECT dbo.tbNotasFiscaisEmitidas.ID
           ,dbo.tbNotasFiscaisEmitidas.IDPosto
           ,dbo.tbNotasFiscaisEmitidas.IDCaixa
           ,dbo.tbNotasFiscaisEmitidas.CFOP
           ,dbo.tbNotasFiscaisEmitidas.Tipo
           ,dbo.tbNotasFiscaisEmitidas.Numero
           ,dbo.tbNotasFiscaisEmitidas.Cupons
           ,dbo.tbPostos.NomeUsual
           ,dbo.tbNotasFiscaisEmitidas.IDEntidade
           ,dbo.tbEntidades.RzSocial
           ,tbEntidades_1.RzSocial AS NomeContador
           ,tbEntidades_1.CNPJ     AS DocumentoContador
           ,tbEntidades_2.RzSocial AS NomeGerente
           ,tbEntidades_2.CNPJ     AS DocumentoGerente
           ,dbo.tbCaixa.Dia
           ,dbo.tbNotasFiscaisEmitidas.Valor
    FROM   dbo.tbNotasFiscaisEmitidas  with(nolock)
           INNER JOIN dbo.tbPostos  with(nolock)
                   ON dbo.tbNotasFiscaisEmitidas.IDPosto = dbo.tbPostos.Id
           INNER JOIN dbo.tbEntidades  with(nolock)
                   ON dbo.tbNotasFiscaisEmitidas.IDEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbEntidades AS tbEntidades_1  with(nolock)
                   ON dbo.tbPostos.IdContador = tbEntidades_1.Id
           INNER JOIN dbo.tbFuncs  with(nolock)
                   ON dbo.tbPostos.Id = dbo.tbFuncs.IdPosto
           INNER JOIN dbo.tbEntidades AS tbEntidades_2  with(nolock)
                   ON dbo.tbFuncs.IdEntidade = tbEntidades_2.Id
           INNER JOIN dbo.tbCaixa  with(nolock)
                   ON dbo.tbNotasFiscaisEmitidas.IDCaixa = dbo.tbCaixa.Id
    WHERE  ( dbo.tbCaixa.Dia BETWEEN @pDataInicial AND @pDataFinal )
       AND ( dbo.tbNotasFiscaisEmitidas.IDPosto = @pIdPosto OR @pIdPosto = @GuidEmpty )
       AND ( dbo.tbNotasFiscaisEmitidas.Tipo = @pTipo )
       AND ( dbo.tbFuncs.Administrativa = 1 )

GO
/****** Object:  StoredProcedure [dbo].[rptNotasFiscaisEntrada]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptNotasFiscais
CREATE PROCEDURE [dbo].[rptNotasFiscaisEntrada] @pDataInicial    SMALLDATETIME
                                        ,@pDataFinal     SMALLDATETIME
                                        ,@pIDposto       UNIQUEIDENTIFIER
                                        ,@pIDHistorico   UNIQUEIDENTIFIER
                                        ,@pDespesa       BIT
                                        ,@pMostraGrafico BIT
AS
	DECLARE @GuidEmpty UNIQUEIDENTIFIER
	SET @GuidEmpty = dbo.GuidEmpty()

    IF @pDespesa = 0
      BEGIN
          SELECT dbo.tbPostos.Id
                 ,dbo.tbPostos.NomeUsual
                 ,dbo.tbCaixa.Dia
                 ,dbo.tbEntidades.RzSocial
                 ,dbo.tbEntidades.CNPJ
                 ,dbo.tbContasPagarReceber.Valor
                 ,dbo.tbContasPagarReceber.NumDocto
                 ,dbo.tbContasPagarReceber.DataDoc
                 ,dbo.tbHistoricos.Descricao
                 ,tbEntidades_1.RzSocial AS NomeGerente
                 ,tbEntidades_2.RzSocial AS NomeContador
                 ,tbEntidades_2.CNPJ     AS DocumentoContador
                 ,tbEntidades_1.CNPJ     AS CPFGerente
                 ,dbo.tbContasPagarReceber.InfoAdic
          FROM   dbo.tbContasPagarReceber  with(nolock)
                 INNER JOIN dbo.tbCaixa  with(nolock)
                         ON dbo.tbContasPagarReceber.idPedCaixa = dbo.tbCaixa.Id
                 INNER JOIN dbo.tbPostos  with(nolock)
                         ON dbo.tbCaixa.idPosto = dbo.tbPostos.Id
                 INNER JOIN dbo.tbEntidades  with(nolock)
                         ON dbo.tbContasPagarReceber.idEntidade =
                            dbo.tbEntidades.Id
                 INNER JOIN dbo.tbHistoricos  with(nolock)
                         ON dbo.tbContasPagarReceber.idHistorico =
                            dbo.tbHistoricos.Id
                 INNER JOIN dbo.tbFuncs  with(nolock)
                         ON dbo.tbPostos.Id = dbo.tbFuncs.IdPosto
                 INNER JOIN dbo.tbEntidades AS tbEntidades_1  with(nolock)
                         ON dbo.tbFuncs.IdEntidade = tbEntidades_1.Id
                 INNER JOIN dbo.tbEntidades AS tbEntidades_2  with(nolock)
                         ON dbo.tbPostos.IdContador = tbEntidades_2.Id
          WHERE  ( dbo.tbContasPagarReceber.idHistorico = @pIDHistorico OR @pIDHistorico = @GuidEmpty )
             AND ( dbo.tbCaixa.Dia BETWEEN @pDataInicial AND @pDataFinal )
             AND ( dbo.tbContasPagarReceber.idPosto = @pIDPosto OR @pIDPosto = @GuidEmpty OR @pIDPosto IS NULL )
             AND ( dbo.tbContasPagarReceber.Despesa = 1 )
             AND ( dbo.tbFuncs.Administrativa = 1 )
          ORDER  BY dbo.tbContasPagarReceber.idPosto
                    ,dbo.tbCaixa.Dia
      END
    ELSE
      BEGIN
          SELECT dbo.tbPostos.Id
                 ,dbo.tbPostos.RzSocial  AS NomeUsual
                 ,dbo.tbCaixa.Dia
                 ,dbo.tbEntidades.RzSocial
                 ,dbo.tbEntidades.CNPJ
                 ,dbo.tbContasPagarReceber.Valor
                 ,dbo.tbContasPagarReceber.NumDocto
                 ,dbo.tbContasPagarReceber.DataDoc
                 ,dbo.tbHistoricos.Descricao
                 ,tbEntidades_1.RzSocial AS NomeGerente
                 ,tbEntidades_1.CNPJ     AS CPFGerente
                 ,tbEntidades_2.RzSocial AS NomeContador
                 ,tbEntidades_2.CNPJ     AS DocumentoContador
                 ,dbo.tbContasPagarReceber.InfoAdic
          FROM   dbo.tbContasPagarReceber  with(nolock)
                 INNER JOIN dbo.tbCaixa  with(nolock)
                         ON dbo.tbContasPagarReceber.idPedCaixa = dbo.tbCaixa.Id
                 INNER JOIN dbo.tbPostos  with(nolock)
                         ON dbo.tbCaixa.idPosto = dbo.tbPostos.Id
                 INNER JOIN dbo.tbEntidades  with(nolock)
                         ON dbo.tbContasPagarReceber.idEntidade =
                            dbo.tbEntidades.Id
                 INNER JOIN dbo.tbHistoricos  with(nolock)
                         ON dbo.tbContasPagarReceber.idHistorico =
                            dbo.tbHistoricos.Id
                 INNER JOIN dbo.tbFuncs  with(nolock)
                         ON dbo.tbPostos.Id = dbo.tbFuncs.IdPosto
                 INNER JOIN dbo.tbEntidades AS tbEntidades_1  with(nolock)
                         ON dbo.tbFuncs.IdEntidade = tbEntidades_1.Id
                 INNER JOIN dbo.tbEntidades AS tbEntidades_2  with(nolock)
                         ON dbo.tbPostos.IdContador = tbEntidades_2.Id
          WHERE  ( dbo.tbHistoricos.Descricao NOT IN ('Conveniência', 'Lubrificantes') )
		     AND ( dbo.tbCaixa.Dia BETWEEN @pDataInicial AND @pDataFinal )
             AND ( dbo.tbContasPagarReceber.idPosto = @pIDPosto OR @pIDPosto = @GuidEmpty OR @pIDPosto IS NULL )
             AND ( dbo.tbContasPagarReceber.Despesa = 1 )
             AND ( dbo.tbFuncs.Administrativa = 1 )
          ORDER  BY dbo.tbContasPagarReceber.idPosto
                    ,dbo.tbCaixa.Dia
      END 

GO
/****** Object:  StoredProcedure [dbo].[rptNotasRecebidas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptNotasRecebidas
CREATE PROCEDURE [dbo].[rptNotasRecebidas] @pIDposto        UNIQUEIDENTIFIER
                                          ,@pDataINI       SMALLDATETIME
                                          ,@pDataFIM       SMALLDATETIME
                                          ,@pMostraGrafico BIT
AS
  BEGIN
		DECLARE @GuidEmpty UNIQUEIDENTIFIER
		SET @GuidEmpty = dbo.GuidEmpty()
		
      SELECT DISTINCT tbPedidos.NumPedido
	         ,tbPedidosItens.idPosto
             ,tbPedidosItens.idPedido
             ,tbEntidades.RzSocial               AS Fornecedor
             ,tbProdutos.Descricao
             ,tbPostos.RzSocial                  AS Posto
             ,tbPedidosItens.QTD
             ,ISNULL(tbPedidosItens.VUPro, 0)
              + ISNULL(tbPedidosItens.VUGNRE, 0)
              + ISNULL(tbPedidosItens.VUGARE, 0) AS ValorLitro
             ,tbPedidosItens.NumeroNota
             ,tbPedidosItens.DataRecebimento AS Dia
             ,tbProdutos.ordem
             ,tbPedidosItens.DataNota
             ,tbEntidades_2.RzSocial             AS NomeContador
             ,tbEntidades_2.CNPJ                 AS DocumentoContador
             ,tbPostos.CRCContador
      FROM   tbPedidosItens  with(nolock)
             INNER JOIN tbPostos  with(nolock)
                     ON tbPedidosItens.idPosto = tbPostos.Id
             INNER JOIN tbPedidos  with(nolock)
                     ON tbPedidosItens.idPedido = tbPedidos.Id
             INNER JOIN tbEntidades  with(nolock)
                     ON tbPedidos.IdEntidade = tbEntidades.Id
             INNER JOIN tbProdutos  with(nolock)
                     ON tbPedidosItens.idProduto = tbProdutos.Id
             INNER JOIN tbEntidades AS tbEntidades_2  with(nolock)
                     ON tbPostos.IdContador = tbEntidades_2.Id
      WHERE  ( tbPedidosItens.DataRecebimento BETWEEN @pDataINI AND @pDataFIM )
         AND ( tbPedidosItens.idPosto = @pIDPosto OR @pIDPosto = @GuidEmpty OR @pIDPosto IS NULL )
      ORDER  BY tbPedidosItens.idPosto
                ,tbProdutos.ordem
  END 

GO
/****** Object:  StoredProcedure [dbo].[rptNotasRecebidasCombustivel]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptNotasRecebidas
CREATE PROCEDURE [dbo].[rptNotasRecebidasCombustivel] @pIDposto        UNIQUEIDENTIFIER
                                          ,@pDataINI       SMALLDATETIME
                                          ,@pDataFIM       SMALLDATETIME
                                          ,@pMostraGrafico BIT
AS
  BEGIN
		DECLARE @GuidEmpty UNIQUEIDENTIFIER
		SET @GuidEmpty = dbo.GuidEmpty()
		
      SELECT tbPedidos.NumPedido
	         ,tbPedidosItens.idPosto
             ,tbPedidosItens.idPedido
             ,tbEntidades.RzSocial               AS Fornecedor
             ,tbProdutos.Descricao
             ,tbPostos.RzSocial                  AS Posto
             ,tbPedidosItens.QTD
             ,ISNULL(tbPedidosItens.VUPro, 0)
              + ISNULL(tbPedidosItens.VUFrete, 0)
              + ISNULL(tbPedidosItens.VUGNRE, 0)
              + ISNULL(tbPedidosItens.VUGARE, 0) AS ValorLitro
             ,tbPedidosItens.NumeroNota
             ,tbCaixa.Dia
             ,tbProdutos.ordem
             ,tbPedidosItens.DataNota
             ,tbEntidades_1.RzSocial             AS NomeGerente
             ,tbEntidades_1.CNPJ                 AS CPFGerente
             ,tbEntidades_2.RzSocial             AS NomeContador
             ,tbEntidades_2.CNPJ                 AS DocumentoContador
             ,tbPostos.CRCContador
      FROM   tbPedidosItens  with(nolock)
             INNER JOIN tbPostos  with(nolock)
                     ON tbPedidosItens.idPosto = tbPostos.Id
             INNER JOIN tbPedidos  with(nolock)
                     ON tbPedidosItens.idPedido = tbPedidos.Id
             INNER JOIN tbEntidades  with(nolock)
                     ON tbPedidos.IdEntidade = tbEntidades.Id
             INNER JOIN tbProdutos  with(nolock)
                     ON tbPedidosItens.idProduto = tbProdutos.Id
             INNER JOIN tbCaixa  with(nolock)
                     ON tbPedidosItens.idCaixaRecebimento = tbCaixa.Id
             INNER JOIN tbFuncs  with(nolock)
                     ON tbPostos.Id = tbFuncs.IdPosto
             INNER JOIN tbEntidades AS tbEntidades_1  with(nolock)
                     ON tbFuncs.IdEntidade = tbEntidades_1.Id
             INNER JOIN tbEntidades AS tbEntidades_2  with(nolock)
                     ON tbPostos.IdContador = tbEntidades_2.Id
      WHERE  ( tbCaixa.Dia BETWEEN @pDataINI AND @pDataFIM )
         AND ( tbPedidosItens.idPosto = @pIDPosto OR @pIDPosto = @GuidEmpty OR @pIDPosto IS NULL )
         AND ( tbFuncs.Administrativa = 1 )
      ORDER  BY tbPedidosItens.idPosto
                ,tbProdutos.ordem
  END 

GO
/****** Object:  StoredProcedure [dbo].[rptOperadoras]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptOperadoras
CREATE PROCEDURE [dbo].[rptOperadoras]
AS
    SELECT tbEntidades.RzSocial
           ,tbOperadoras.Operadora
           ,tbOperadoras.TaxaCredito
           ,tbOperadoras.PrazoCredito
           ,tbOperadoras.TaxaDebito
           ,tbOperadoras.PrazoDebito
    FROM   tbEntidades with(nolock)
           INNER JOIN tbOperadoras  with(nolock)
                   ON tbEntidades.Id = tbOperadoras.idEntidade 

GO
/****** Object:  StoredProcedure [dbo].[rptPatrimonio]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptPatrimonio
CREATE PROCEDURE [dbo].[rptPatrimonio] @pIdposto UNIQUEIDENTIFIER
                                      ,@pTipo   UNIQUEIDENTIFIER
AS
    DECLARE @pTipoINI INT
    DECLARE @pTipoFIM INT

    IF @pIDPosto = dbo.GuidEmpty()
      BEGIN
          SET @pIDPosto = NULL
      END
    
    IF @pTipo = dbo.GuidEmpty()
      BEGIN
          SET @pTipo = NULL
      END

    SELECT tbPatrimonio.ID
           ,tbPatrimonio.IDPosto
           ,tbPatrimonio.Numero
           ,tbPatrimonio.Descricao
           ,tbPatrimonio.IdTipo
           ,tbPatrimonio.Valor
           ,tbPatrimonioTipo.Descricao AS TipoPatrimonio
           ,tbPostos.NomeUsual
           ,tbPatrimonio.Detalhes
    FROM   tbPatrimonio
           INNER JOIN tbPatrimonioTipo
                   ON tbPatrimonio.IdTipo = tbPatrimonioTipo.id
           INNER JOIN tbPostos
                   ON tbPatrimonio.IDPosto = tbPostos.Id
    WHERE  ( tbPatrimonio.IDPosto = @pIDPosto OR @pIDPosto IS NULL )
       AND ( tbPatrimonio.IdTipo = @pTipo OR @pTipo IS NULL ) 
GO
/****** Object:  StoredProcedure [dbo].[rptPedidoCompraCombustivel]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptPedidoCompraCombustivel
CREATE PROCEDURE [dbo].[rptPedidoCompraCombustivel]
	@PedidoId uniqueidentifier
AS
	SET NOCOUNT ON;

    SELECT
		pt.NomeUsual,
		pr.Descricao Produto,
		i.QTD,
		i.VUPro,
		i.QTD * i.VUPro ValorTotal,
		i.IntencaoDescarregar IntencaoRecebimento,
		i.VUFrete FreteLitro,
		i.DataVencimentoFrete VencimentoFrete,
		i.IntencaoPagamentoFrete,
		i.DataVencimentoCombustivel VencimentoCombustivel,
		i.PrevisaoEntrega,
		i.IntencaoPagamentoProduto IntencaoPagamentoCombustivel,
		i.QTD * i.VUFrete TotalFrete,
		i.NumeroNota NFCombustivel,
		i.DataNota DataNFCombustivel,
		i.NumeroCTFrete NFFrete,
		i.DataCTFrete DataNFFrete
	FROM
		tbPedidos p
		inner join tbPedidosItens i on p.Id = i.IdPedido
		inner join tbProdutos pr on i.IdProduto = pr.Id
		inner join tbpostos pt on pt.Id = i.IdPosto
	WHERE
		p.Id = @PedidoId
	ORDER BY
		pr.Descricao
GO
/****** Object:  StoredProcedure [dbo].[rptPedidoCompraCombustivelDetalhesVencimento]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[rptPedidoCompraCombustivelDetalhesVencimento]
	@PedidoId uniqueidentifier
AS
BEGIN
	SET NOCOUNT ON;

    SELECT
		pt.NomeUsual,
		pr.Descricao Produto,
		i.QTD,
		i.DataNota,
		i.IntencaoPagamentoProduto
	FROM
		tbPedidos p
		inner join tbPedidosItens i on p.Id = i.IdPedido
		inner join tbProdutos pr on i.IdProduto = pr.Id
		inner join tbpostos pt on pt.Id = i.IdPosto
	WHERE
		p.Id = @PedidoId
	ORDER BY
		pr.Descricao
END
GO
/****** Object:  StoredProcedure [dbo].[rptPedidoCompraProduto]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[rptPedidoCompraProduto]
	@PedidoId uniqueidentifier
AS
BEGIN
	SET NOCOUNT ON;

    SELECT
		pr.Descricao Produto,
		i.Quantidade,
		i.ValorUnitario,
		i.Quantidade * i.ValorUnitario ValorTotal
	FROM
		tbPedidoRevenda p
		inner join tbPedidoRevendaItem i on p.Id = i.PedidoId
		inner join tbProdutos pr on i.ProdutoId = pr.Id
	WHERE
		p.Id = @PedidoId
	ORDER BY
		pr.Descricao
END
GO
/****** Object:  StoredProcedure [dbo].[rptPedidos]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptPedidos
CREATE PROCEDURE [dbo].[rptPedidos] @pPedido UNIQUEIDENTIFIER
AS
    SELECT tbPedidos.Id
		  ,tbpedidos.Numpedido
           ,tbEntidades.RzSocial
           ,CONVERT(NVARCHAR(10), tbPedidos.Dataped, 103) AS DataPed
           ,tbPedidos.ValorTotal
           ,tbPostos.NomeUsual                            AS Posto
           ,tbProdutos.Descricao                          AS Produto
           ,tbPedidosItens.QTD
           ,tbPedidosItens.VUPro
           ,ISNULL(tbPedidosItens.VUFrete, 0)             AS VUFrete
           ,ISNULL(tbPedidosItens.VUGARE, 0)              AS VUGare
           ,ISNULL(tbPedidosItens.VUGNRE, 0)              AS VUGNRE
           ,tbPedidosItens.VUPro
            + ISNULL(tbPedidosItens.VUFrete, 0)
            + ISNULL(tbPedidosItens.VUGARE, 0)
            + ISNULL(tbPedidosItens.VUGNRE, 0)            AS Preco
           ,tbPedidosItens.PrevisaoEntrega
           ,tbEntidades_1.RzSocial                        AS transportadora
    FROM   tbPedidos
           INNER JOIN tbEntidades
                   ON tbPedidos.IdEntidade = tbEntidades.Id
           INNER JOIN tbPedidosItens
                   ON tbPedidos.Id = tbPedidosItens.idPedido
           INNER JOIN tbPostos
                   ON tbPedidosItens.idPosto = tbPostos.Id
           INNER JOIN tbProdutos
                   ON tbPedidosItens.idProduto = tbProdutos.Id
           LEFT JOIN tbEntidades AS tbEntidades_1
                   ON tbPedidos.idEntidadeTransp = tbEntidades_1.Id
    WHERE  ( tbPedidos.Id = @pPedido )
    ORDER  BY tbPedidos.Id 
GO
/****** Object:  StoredProcedure [dbo].[rptPedidosAbertos]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptPedidosAbertos
CREATE PROCEDURE [dbo].[rptPedidosAbertos] @pIDposto  UNIQUEIDENTIFIER
          
AS

	if @pIDposto = dbo.GuidEmpty()
	begin
		set @pIDposto = null
	end

	DECLARE @GuidEmpty UNIQUEIDENTIFIER
	SET @GuidEmpty = dbo.GuidEmpty()
	
    SELECT dbo.tbPedidos.Dataped        AS DataCompra
           ,dbo.tbEntidades.RzSocial    AS Fornecedor
           ,dbo.tbProdutos.Descricao
           ,dbo.tbPedidosItens.QTD
           ,dbo.tbPedidosItens.VUPro
            + dbo.tbPedidosItens.VUFrete
            + dbo.tbPedidosItens.VUGNRE AS ValorUnitario
           ,dbo.tbPedidosItens.OBS
           ,dbo.tbPostos.NomeUsual
           ,dbo.tbPedidos.Id
    FROM   dbo.tbPedidos  with(nolock)
           INNER JOIN dbo.tbPedidosItens  with(nolock)
                   ON dbo.tbPedidos.Id = dbo.tbPedidosItens.idPedido
           INNER JOIN dbo.tbEntidades  with(nolock)
                   ON dbo.tbPedidos.IdEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbProdutos  with(nolock)
                   ON dbo.tbPedidosItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbPostos  with(nolock)
                   ON dbo.tbPedidosItens.idPosto = dbo.tbPostos.Id
    WHERE  ( dbo.tbPedidosItens.idCaixaRecebimento = @GuidEmpty OR dbo.tbPedidosItens.idCaixaRecebimento IS NULL )
       AND ( dbo.tbProdutos.TipoProd = 'CB' )
       AND ( @pIDposto is null or   dbo.tbPedidosItens.idPosto = @pIDposto )
    ORDER  BY dbo.tbPedidos.Dataped 

GO
/****** Object:  StoredProcedure [dbo].[rptPLR]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptPLR
CREATE PROCEDURE [dbo].[rptPLR] @pIdposto     UNIQUEIDENTIFIER
                               ,@pIDEntidade UNIQUEIDENTIFIER
                               ,@pDataINI    SMALLDATETIME
                               ,@pDataFIM    SMALLDATETIME
AS
    IF @pIDPosto = dbo.GuidEmpty()
      BEGIN
          SET @pIDPosto = NULL
      END
    
    IF @pIDEntidade = dbo.GuidEmpty()
      BEGIN
          SET @pIDEntidade = NULL
      END
    
    SELECT tbPLR.ID
           ,tbPostos.NomeUsual
           ,tbEntidades.RzSocial
           ,tbPLR.Data
           ,tbPLR.Descricao
           ,tbPLR.Total
           ,tbPLR.Percentual
           ,tbPLR.Valor
           ,tbPostos.Id
           ,tbEntidades.Tipo
           ,tbEntidades.idPostoCadastro
           ,tbEntidades.Id
           ,Isnull((SELECT Sum (tbPLR1.Valor)
                    FROM   tbPLR AS tbPLR1
                    WHERE  tbPLR1.Data < @pDataINI
                       AND tbPLR1.IDEntidade = tbPLR.IDEntidade), 0) AS
            SaldoAnterior
    FROM   tbPLR  with(nolock)
           INNER JOIN tbPostos  with(nolock)
                   ON tbPLR.IDPosto = tbPostos.Id
           INNER JOIN tbEntidades  with(nolock)
                   ON tbPLR.IDEntidade = tbEntidades.Id
    WHERE  ( tbPostos.Id = @pIdposto OR @pidPosto IS NULL )
       AND ( tbEntidades.Id = @pIDEntidade OR @pIDEntidade IS NULL )
       AND ( tbPLR.Data BETWEEN @pDataINI AND @pDataFIM ) 

GO
/****** Object:  StoredProcedure [dbo].[rptPLRTabela]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptPLRTabela
CREATE PROCEDURE [dbo].[rptPLRTabela] @pIdposto UNIQUEIDENTIFIER
AS
    IF @pIDPosto = dbo.GuidEmpty()
      BEGIN
          SET @pIDPosto = NULL
      END
    
    SELECT dbo.tbPLRTabela.ID
           ,dbo.tbPLRTabela.IDProduto
           ,dbo.tbPLRTabela.ValorInicial
           ,dbo.tbPLRTabela.ValorFinal
           ,dbo.tbPLRTabela.Percentual
           ,CASE
              WHEN tbProdutos.TipoProd = 'CB' THEN tbProdutos.Descricao
              WHEN tbProdutos.TipoProd = 'LC' THEN 'Conveniência'
              WHEN tbProdutos.TipoProd = 'LB' THEN 'Lubrificantes'
            END AS Produto
           ,dbo.tbPostos.NomeUsual
           ,dbo.tbPostos.Id
           ,(SELECT dbo.tbPLRTabela.ValorFinal * dbo.tbPLRTabela.Percentual /
                    100 AS
                    Expr1)
               AS Valor
    FROM   dbo.tbPLRTabela with(nolock)
           INNER JOIN dbo.tbPostos with(nolock)
                   ON dbo.tbPLRTabela.IDPosto = dbo.tbPostos.Id
           LEFT OUTER JOIN dbo.tbProdutos with(nolock)
                        ON dbo.tbPLRTabela.IDProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbPLRTabela.IDPosto = @pIDPosto OR @pIdPosto IS NULL )
    ORDER  BY dbo.tbPLRTabela.IDProduto
              ,dbo.tbPLRTabela.ValorInicial 

GO
/****** Object:  StoredProcedure [dbo].[rptPontoEletronico]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptPontoEletronico
CREATE PROCEDURE [dbo].[rptPontoEletronico] @pIdposto      UNIQUEIDENTIFIER
                                           ,@pColaborador UNIQUEIDENTIFIER
                                           ,@pDataInicial SMALLDATETIME
                                           ,@pDataFinal   SMALLDATETIME
AS
    IF @pIDPosto = dbo.GuidEmpty()
      BEGIN
          SET @pIDPosto = NULL
      END

    IF @pColaborador = dbo.GuidEmpty()
      BEGIN
          SET @pColaborador = NULL
      END
    
    SELECT dbo.tbEntidadesPonto.ID
           ,dbo.tbPostos.CNPJ
           ,dbo.tbEntidades.RzSocial
           ,dbo.tbPostos.RzSocial                                           AS
            Empregador
           ,CONVERT(NVARCHAR(10), dbo.tbEntidadesPonto.InicioTrabalho, 103) AS
            Data
           ,CONVERT(NVARCHAR(10), dbo.tbEntidadesPonto.InicioTrabalho, 8)   AS
            InicioTrabalho
           ,dbo.tbEntidadesPonto.InicioTrabalho                             AS
            DInicioTrabalho
           ,CONVERT(NVARCHAR(10), dbo.tbEntidadesPonto.InicioAlmoco, 8)     AS
            InicioAlmoco
           ,dbo.tbEntidadesPonto.InicioAlmoco                               AS
            DInicioAlmoco
           ,CONVERT(NVARCHAR(10), dbo.tbEntidadesPonto.FimAlmoco, 8)        AS
            FimAlmoco
           ,dbo.tbEntidadesPonto.FimAlmoco                                  AS
            DFimAlmoco
           ,CONVERT(NVARCHAR(10), dbo.tbEntidadesPonto.FimTrabalho, 8)      AS
            FimTrabalho
           ,dbo.tbEntidadesPonto.FimTrabalho                                AS
            DFimtrabalho
           ,dbo.tbPostos.NomeUsual                                          AS
            Posto
           ,dbo.tbPostos.Id
           ,dbo.tbPostos.Intrajornada
           ,dbo.FeriadoValida(dbo.tbPostos.Id, SUBSTRING(CONVERT(NVARCHAR(10),
            dbo.tbEntidadesPonto.InicioTrabalho, 103), 1, 5))               AS
            Feriado
           ,dbo.tbFuncs.Funcao
           ,dbo.tbEntidades.CNPJ                                            AS
            DocumentoColaborador
           ,dbo.tbEntidadesPonto.Folga
           ,dbo.tbEntidadesPonto.Falta
           ,dbo.tbEntidadesPonto.Ferias
           ,dbo.tbEntidadesPonto.Atestado
           ,dbo.tbEntidadesPonto.Afastado
           ,dbo.tbEntidadesPonto.Advertencia
           ,dbo.tbFuncs.TipoContrato
           ,dbo.tbFuncs.IdHorario
    FROM   dbo.tbEntidadesPonto with(nolock)
           INNER JOIN dbo.tbEntidades with(nolock)
                   ON dbo.tbEntidadesPonto.IDEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbFuncs with(nolock)
                   ON dbo.tbEntidades.Id = dbo.tbFuncs.IdEntidade
           INNER JOIN dbo.tbPostos with(nolock)
                   ON dbo.tbFuncs.IdPosto = dbo.tbPostos.Id
    WHERE  ( CONVERT(SMALLDATETIME,
                      CONVERT(NVARCHAR(10), dbo.tbEntidadesPonto.InicioTrabalho,
                      3),
             3)
                    BETWEEN @pDataInicial AND @pDataFinal )
       AND ( dbo.tbFuncs.IdPosto = @pIDPosto OR @pIDPosto IS NULL )
       AND ( dbo.tbEntidadesPonto.IDEntidade = @pColaborador OR @pColaborador IS NULL )
       AND ( dbo.tbFuncs.Gerente = 0 )
    ORDER  BY dbo.tbEntidadesPonto.InicioTrabalho 

GO
/****** Object:  StoredProcedure [dbo].[rptPrecosEspeciais]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptPrecosEspeciais
CREATE PROCEDURE [dbo].[rptPrecosEspeciais]
AS

	DECLARE @GuidEmpty UNIQUEIDENTIFIER
	SET @GuidEmpty = dbo.GuidEmpty()

    SELECT dbo.tbEntidades.NomeUsual
           ,dbo.tbEntidades.RzSocial
           ,dbo.tbProdutos.Descricao
           ,dbo.tbPrecosEspeciais.PrecoEspecial
           ,dbo.tbPrecosEspeciais.Diferenca
           ,dbo.tbPostos.NomeUsual AS Posto
           ,dbo.tbPostos.Id
    FROM   dbo.tbPrecosEspeciais  with(nolock)
           INNER JOIN dbo.tbProdutos  with(nolock)
                   ON dbo.tbPrecosEspeciais.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbEntidades with(nolock)
                   ON dbo.tbPrecosEspeciais.idEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbPostos with(nolock)
                   ON dbo.tbEntidades.idPostoCadastro = dbo.tbPostos.Id
    WHERE  ( dbo.tbEntidades.IdConvenio = @GuidEmpty OR dbo.tbEntidades.IdConvenio IS NULL ) 

GO
/****** Object:  StoredProcedure [dbo].[rptProdutos]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptProdutos
CREATE PROCEDURE [dbo].[rptProdutos] @pGrupo  UNIQUEIDENTIFIER
                                    ,@pSetor NVARCHAR(2)
AS
    IF @pGrupo = dbo.GuidEmpty()
      BEGIN
          SET @pGrupo = NULL
      END
    
    SELECT tbProdutos.Id
           ,tbProdutos.CodigoBarras
           ,tbProdutos.Descricao
           ,tbProdutos.TipoProd
           ,tbProdutos.TipoAliquota
           ,tbProdutos.Aliquota
           ,tbProdutos.ordem
           ,tbProdutos.Ativo
           ,tbProdutos.UnidadeMedida
           ,tbGrupo.Descricao AS Grupo
    FROM   tbProdutos with(nolock)
           INNER JOIN tbGrupo with(nolock)
                   ON tbProdutos.IdGrupo = tbGrupo.id
    WHERE  ( tbProdutos.IdGrupo = @pGrupo OR @pGrupo IS NULL )
       AND ( tbProdutos.TipoProd LIKE @pSetor )
    ORDER  BY tbProdutos.IdGrupo
              ,tbProdutos.Id 

GO
/****** Object:  StoredProcedure [dbo].[rptProdutosRecebidos]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptProdutosRecebidos
CREATE PROCEDURE [dbo].[rptProdutosRecebidos] @pIDposto UNIQUEIDENTIFIER
                                             
                                             ,@pDataINI    SMALLDATETIME
                                             ,@pDataFIM    SMALLDATETIME
AS
	DECLARE @GuidEmpty UNIQUEIDENTIFIER
	SET @GuidEmpty = dbo.GuidEmpty()

    SELECT tbPedidos.Dataped          AS DataCompra
           ,tbCaixa.DataAbertura      AS DataRecebimento
           ,tbEntidades.RzSocial      AS Fornecedor
           ,tbPedidosItens.NumeroNota AS NF
           ,tbPedidosItens.QTDRecebido
           ,tbProdutos.Descricao
           ,tbPedidosItens.QTD
           ,tbPedidosItens.VUPro
            + tbPedidosItens.VUFrete
            + tbPedidosItens.VUGNRE   AS ValorUnitario
           ,tbPedidosItens.OBS
           ,tbPostos.NomeUsual
           ,tbPedidos.Id
    FROM   tbPedidos with(nolock)
           INNER JOIN tbPedidosItens with(nolock)
                   ON tbPedidos.Id = tbPedidosItens.idPedido
           INNER JOIN tbCaixa with(nolock)
                   ON tbPedidosItens.idPosto = tbCaixa.idPosto
                      AND tbPedidosItens.idCaixaRecebimento = tbCaixa.Id
           INNER JOIN tbEntidades with(nolock)
                   ON tbPedidos.IdEntidade = tbEntidades.Id
           INNER JOIN tbProdutos with(nolock)
                   ON tbPedidosItens.idProduto = tbProdutos.Id
           INNER JOIN tbPostos with(nolock)
                   ON tbPedidosItens.idPosto = tbPostos.Id
    WHERE  ( tbPedidosItens.QTD - tbPedidosItens.QTDRecebido = 0 )
       AND ( tbProdutos.TipoProd = 'CB' )
       AND ( @pIDposto is null OR @pIDposto = @GuidEmpty or  tbPostos.Id = @pIDposto)
       AND ( tbCaixa.Dia BETWEEN @pDataINI AND @pDataFIM )
    ORDER  BY tbPedidos.Dataped 


GO
/****** Object:  StoredProcedure [dbo].[rptProdutosSemCodigo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptProdutosSemCodigo
CREATE PROCEDURE [dbo].[rptProdutosSemCodigo] @pIDposto  UNIQUEIDENTIFIER
                                            
                                             ,@pTipo       NVARCHAR(2)
                                             ,@pLocal      UNIQUEIDENTIFIER
AS
    IF @pLocal = dbo.GuidEmpty()
      BEGIN
          SET @pLocal = NULL
      END

	DECLARE @GuidEmpty UNIQUEIDENTIFIER
	SET @GuidEmpty = dbo.GuidEmpty()
	  
    SELECT tbProdutos.Descricao
           ,tbProdutos.CodigoBarras
           ,tbProdutosPostos.PrecoCusto
           ,tbProdutosPostos.PrecoVenda
           ,tbProdutosPostos.Estoque * tbProdutosPostos.PrecoCusto  AS
            TotalCusto
           ,tbProdutosPostos.Estoque * tbProdutosPostos.PrecoVenda  AS
            TotalVenda
           ,tbProdutosPostos.Estoque * tbProdutosPostos.PrecoVenda -
             tbProdutosPostos.Estoque * tbProdutosPostos.PrecoCusto AS
            LucroLiquido
           ,tbPostos.NomeUsual
           ,tbProdutosPostos.Almoxarifado
           ,tbLocalEstoque.Descricao                                AS
            LocaEstoque
           ,tbTipoProd.DescricaoNova                                AS Setor
           ,tbProdutosPostos.Estoque
    FROM   tbPostos with(nolock)
           INNER JOIN tbProdutosPostos with(nolock)
                   ON tbPostos.Id = tbProdutosPostos.idPosto
           INNER JOIN tbProdutos with(nolock)
                   ON tbProdutosPostos.idProduto = tbProdutos.Id
           INNER JOIN tbLocalEstoque with(nolock)
                   ON tbProdutosPostos.IdLocal = tbLocalEstoque.id
           INNER JOIN tbTipoProd with(nolock)
                   ON tbProdutos.TipoProd = tbTipoProd.IdTipoProd
    WHERE  ( @pIDposto is null or @pIDposto = @GuidEmpty or tbPostos.Id = @pIDposto)
       AND ( tbProdutos.TipoProd LIKE @pTipo )
       AND ( NOT ( tbProdutos.TipoProd = 'CB' ) )
       AND ( @pLocal IS NULL OR tbLocalEstoque.id = @pLocal )
       --AND tbprodutos.CodigoBarras LIKE'%999%'
       AND ( tbProdutosPostos.Estoque <> 0 )
       AND ( tbPostos.Ativo = 1 )
    ORDER  BY tbPostos.NomeUsual
              ,tbTipoProd.DescricaoNova
              ,tbLocalEstoque.Descricao
              ,tbProdutos.descricao 

GO
/****** Object:  StoredProcedure [dbo].[rptRankingVendaColaborador]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

Create PROCEDURE [dbo].[rptRankingVendaColaborador] @pDataIni DATE
                                       ,@pDataFim     DATE
                                       ,@pIdVendedor  UNIQUEIDENTIFIER
                                       ,@pIdposto     UNIQUEIDENTIFIER
									   ,@pTipo        CHAR(2)
   AS
	
    SELECT SUM(dbo.tbVendasItens.Quantidade)                AS Quantidade
           ,RTRIM (dbo.tbProdutos.Descricao)                AS Produto
           ,FaturadoAux = (SUM(dbo.tbVendasItens.Quantidade)  * AVG(dbo.tbVendasItens.PrecoVenda))
		   ,QuantidadeClientes= COUNT(dbo.tbVendasItens.Id)
		   ,tbEntidades.NomeUsual
    FROM   dbo.tbVendas with (nolock)
           INNER JOIN dbo.tbVendasItens with (nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos with (nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbProdutosPostos with (nolock)
                   ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
                      AND dbo.tbVendasItens.idProduto =
                          dbo.tbProdutosPostos.idProduto
                      AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
		  LEFT JOIN tbEntidades with (nolock)
                   ON tbVendasItens.IdVendedor = tbEntidades.Id
    WHERE  ( dbo.tbVendas.DataMovimento BETWEEN @pDataIni AND @pDataFim )
	   AND ( dbo.tbVendas.idPosto = @pIDPosto )
       AND ( tbVendasItens.Cancelado = 0 )
       AND ( tbvendas.Status IS NULL )
	   AND ( dbo.tbProdutos.TipoProd = @pTipo )
	   AND ( dbo.tbVendasItens.IdVendedor = @pIdVendedor)
    GROUP  BY dbo.tbProdutos.Descricao
	          ,dbo.tbProdutos.TipoProd
			  ,tbEntidades.NomeUsual
			  ,dbo.tbVendasItens.IdVendedor
			  ,dbo.tbProdutos.ordem
    order by dbo.tbProdutos.ordem, tbprodutos.descricao
GO
/****** Object:  StoredProcedure [dbo].[rptRankingVendaColaboradorCombustivel]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[rptRankingVendaColaboradorCombustivel] @pDataIni DATE
                                       ,@pDataFim     DATE
                                       ,@pIdVendedor  UNIQUEIDENTIFIER
                                       ,@pIdposto     UNIQUEIDENTIFIER									   
   AS
	
    SELECT SUM(dbo.tbVendasItens.Quantidade)                AS Quantidade
           ,RTRIM (dbo.tbProdutos.Descricao)                AS Produto
           ,FaturadoAux = (SUM(dbo.tbVendasItens.Quantidade)  * AVG(dbo.tbVendasItens.PrecoVenda))
		   ,QuantidadeClientes= COUNT(dbo.tbVendasItens.Id)
		   ,tbEntidades.NomeUsual
    FROM   dbo.tbVendas with (nolock)
           INNER JOIN dbo.tbVendasItens with (nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos with (nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbProdutosPostos with (nolock)
                   ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
                      AND dbo.tbVendasItens.idProduto =
                          dbo.tbProdutosPostos.idProduto
                      AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
		  LEFT JOIN tbEntidades with (nolock)
                   ON tbVendasItens.IdVendedor = tbEntidades.Id
    WHERE  ( dbo.tbVendas.DataMovimento BETWEEN @pDataIni AND @pDataFim )
	   AND ( dbo.tbVendas.idPosto = @pIDPosto )
       AND ( tbVendasItens.Cancelado = 0 )
       AND ( tbvendas.Status IS NULL )
	   AND ( dbo.tbProdutos.TipoProd = 'CB' )
	   AND ( dbo.tbVendasItens.IdVendedor = @pIdVendedor)
    GROUP  BY dbo.tbProdutos.Descricao
	          ,dbo.tbProdutos.TipoProd
			  ,tbEntidades.NomeUsual
			  ,dbo.tbVendasItens.IdVendedor
			  ,dbo.tbProdutos.ordem
    order by dbo.tbProdutos.ordem
GO
/****** Object:  StoredProcedure [dbo].[rptRankingVendaColaboradorConveniencia]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create PROCEDURE [dbo].[rptRankingVendaColaboradorConveniencia] @pDataIni DATE
                                       ,@pDataFim     DATE
                                       ,@pIdVendedor  UNIQUEIDENTIFIER
                                       ,@pIdposto     UNIQUEIDENTIFIER									   
   AS
	
    SELECT SUM(dbo.tbVendasItens.Quantidade)                AS Quantidade
           ,RTRIM (dbo.tbProdutos.Descricao)                AS Produto
           ,FaturadoAux = (SUM(dbo.tbVendasItens.Quantidade)  * AVG(dbo.tbVendasItens.PrecoVenda))
		   ,QuantidadeClientes= COUNT(dbo.tbVendasItens.Id)
		   ,tbEntidades.NomeUsual
    FROM   dbo.tbVendas with (nolock)
           INNER JOIN dbo.tbVendasItens with (nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos with (nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbProdutosPostos with (nolock)
                   ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
                      AND dbo.tbVendasItens.idProduto =
                          dbo.tbProdutosPostos.idProduto
                      AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
		  LEFT JOIN tbEntidades with (nolock)
                   ON tbVendasItens.IdVendedor = tbEntidades.Id
    WHERE  ( dbo.tbVendas.DataMovimento BETWEEN @pDataIni AND @pDataFim )
	   AND ( dbo.tbVendas.idPosto = @pIDPosto )
       AND ( tbVendasItens.Cancelado = 0 )
       AND ( tbvendas.Status IS NULL )
	   AND ( dbo.tbProdutos.TipoProd = 'LC' )
	   AND ( dbo.tbVendasItens.IdVendedor = @pIdVendedor)
    GROUP  BY dbo.tbProdutos.Descricao
	          ,dbo.tbProdutos.TipoProd
			  ,tbEntidades.NomeUsual
			  ,dbo.tbVendasItens.IdVendedor
			  ,dbo.tbProdutos.ordem
    order by dbo.tbProdutos.Descricao
GO
/****** Object:  StoredProcedure [dbo].[rptRankingVendaColaboradorLubrificante]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create PROCEDURE [dbo].[rptRankingVendaColaboradorLubrificante] @pDataIni DATE
                                       ,@pDataFim     DATE
                                       ,@pIdVendedor  UNIQUEIDENTIFIER
                                       ,@pIdposto     UNIQUEIDENTIFIER									   
   AS
	
    SELECT SUM(dbo.tbVendasItens.Quantidade)                AS Quantidade
           ,RTRIM (dbo.tbProdutos.Descricao)                AS Produto
           ,FaturadoAux = (SUM(dbo.tbVendasItens.Quantidade)  * AVG(dbo.tbVendasItens.PrecoVenda))
		   ,QuantidadeClientes= COUNT(dbo.tbVendasItens.Id)
		   ,tbEntidades.NomeUsual
    FROM   dbo.tbVendas with (nolock)
           INNER JOIN dbo.tbVendasItens with (nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos with (nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbProdutosPostos with (nolock)
                   ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
                      AND dbo.tbVendasItens.idProduto =
                          dbo.tbProdutosPostos.idProduto
                      AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
		  LEFT JOIN tbEntidades with (nolock)
                   ON tbVendasItens.IdVendedor = tbEntidades.Id
    WHERE  ( dbo.tbVendas.DataMovimento BETWEEN @pDataIni AND @pDataFim )
	   AND ( dbo.tbVendas.idPosto = @pIDPosto )
       AND ( tbVendasItens.Cancelado = 0 )
       AND ( tbvendas.Status IS NULL )
	   AND ( dbo.tbProdutos.TipoProd = 'LB' )
	   AND ( dbo.tbVendasItens.IdVendedor = @pIdVendedor)
    GROUP  BY dbo.tbProdutos.Descricao
	          ,dbo.tbProdutos.TipoProd
			  ,tbEntidades.NomeUsual
			  ,dbo.tbVendasItens.IdVendedor
			  ,dbo.tbProdutos.ordem
    order by dbo.tbProdutos.Descricao
GO
/****** Object:  StoredProcedure [dbo].[rptRegulagemBlocoMedidor]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--RegulagemBlocoMedidor
Create PROCEDURE [dbo].[rptRegulagemBlocoMedidor] @pIdPosto UNIQUEIDENTIFIER
											  ,@pDataINI   datetime
											  ,@pDataFIM   datetime
AS

 select 
'L' as TipoAbastecimento
,tcx.Dia
,ta.Id
,tp.ordem
,tp.Descricao as Produto
,tb.NumBomba as Bico
,ta.QTD as LitragemAfericao
,ta.lenta as Resultado
,Diferenca = ta.QTD - ta.Lenta

from tbafericao ta
inner join tbBombas tb on ta.IdBomba = tb.Id 
inner join tbTanques tt on tb.IdTanque = tt.id
inner join tbProdutos tp on tt.IdProduto = tp.Id
inner join tbCaixa tcx on ta.IdCaixa = tcx.Id

where 
ta.IdPosto = @pIdPosto
and tcx.Dia  >= @pDataINI and tcx.Dia <= @pDataFIM
and ta.Lenta is not null
and ta.Lenta > 0

union all

select 
'R'
,tcx1.Dia
,ta1.Id
,tp1.ordem
,tp1.Descricao as Produto
,tb1.NumBomba as Bico
,ta1.QTD as LitragemAfericao
,ta1.Rapida as Resultado
,Diferenca = ta1.QTD - ta1.Rapida

from tbafericao ta1
inner join tbBombas tb1 on ta1.IdBomba = tb1.Id 
inner join tbTanques tt1 on tb1.IdTanque = tt1.id
inner join tbProdutos tp1 on tt1.IdProduto = tp1.Id
inner join tbCaixa tcx1 on ta1.IdCaixa = tcx1.Id

where 

ta1.IdPosto = @pIdPosto 
and tcx1.Dia >= @pDataINI and tcx1.Dia <= @pDataFIM
and ta1.Rapida is not null
and ta1.Rapida > 0
order by tcx.Dia desc, tp.ordem asc, tb.NumBomba asc
GO
/****** Object:  StoredProcedure [dbo].[rptRelCartaFrete]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptRelCartaFrete
CREATE PROCEDURE [dbo].[rptRelCartaFrete] @pID UNIQUEIDENTIFIER
AS
    SELECT dbo.tbEntidades.RzSocial
           ,dbo.tbCartaFrete.idCarta
           ,tbPostos_1.RzSocial                                AS Posto
           ,dbo.tbCartaFrete.DataEmissao
           ,dbo.tbCartaFrete.NumNota
           ,dbo.tbCartaFrete.ValorLiquido
           ,dbo.tbCartaFrete.Placa
           ,dbo.tbCartaFrete.Motorista
           ,(SELECT Fone
             FROM   dbo.tbPostos
             WHERE  ( Id = tbCartaFreteEnvio_1.idPosto )) AS Fone
           ,(SELECT '  Banco  '
                    + CAST(dbo.tbContasBancarias.Banco AS VARCHAR(10))
                    + '  AG '
                    + CAST(dbo.tbContasBancarias.Agencia AS VARCHAR(10))
                    + '  CC  '
                    + CAST(dbo.tbContasBancarias.Conta AS VARCHAR(15)) AS Expr1
             FROM   dbo.tbContasBancarias
                    INNER JOIN dbo.tbCartaFreteEnvio
                            ON dbo.tbContasBancarias.Id =
                               dbo.tbCartaFreteEnvio.IdContaPagamento
             WHERE  ( dbo.tbCartaFreteEnvio.id = @pID ))       AS Banco
           ,tbContasBancarias_1.Titular
           ,tbPostos_2.CNPJ
    FROM   dbo.tbCartaFrete
           INNER JOIN dbo.tbCartaFreteEnvio AS tbCartaFreteEnvio_1
                   ON dbo.tbCartaFrete.idEnviada = tbCartaFreteEnvio_1.id
           INNER JOIN dbo.tbEntidades
                   ON dbo.tbCartaFrete.idEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbPostos AS tbPostos_1
                   ON dbo.tbCartaFrete.IdPosto = tbPostos_1.Id
           INNER JOIN dbo.tbContasBancarias AS tbContasBancarias_1
                   ON tbCartaFreteEnvio_1.IdContaPagamento =
                      tbContasBancarias_1.Id
           INNER JOIN dbo.tbPostos AS tbPostos_2
                   ON tbContasBancarias_1.idPosto = tbPostos_2.Id
    WHERE  ( tbCartaFreteEnvio_1.id = @pID ) 
GO
/****** Object:  StoredProcedure [dbo].[rptRelClienteAPrazo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptRelClienteAPrazo
CREATE PROCEDURE [dbo].[rptRelClienteAPrazo]
AS
    SELECT tbEntidades.Id
           ,tbEntidades.RzSocial
           ,tbEntidades.NomeUsual
           ,tbEntidades.CNPJ
           ,tbEntidades.IE
           ,tbEntidades.Limite
           ,tbEntidades.SaldoLimite
           ,tbEntidades.ProxFechamento
           ,CONVERT(NVARCHAR(10), tbEntidades.ProxFechamento, 103) AS Vencimento
           ,tbEntidades.Prazo
           ,tbEntidades.PagaChequePrazo
           ,tbEntidades.CartaFrete
           ,tbEntidades.Cheque3
           ,tbEntidades.Tolerancia
           ,tbPostos.NomeUsual                                     AS Posto
           ,tbPostos.Id
           ,ISNULL ((SELECT SUM(CASE idTipo
                                  WHEN 'RC' THEN Valor
                                  WHEN 'AR' THEN Valor * -1
                                END) AS Expr1
                     FROM   tbContasPagarReceber  with(nolock)
                     WHERE  ( idEntidade = tbEntidades.Id )
                        AND ( idTipo = 'AR' )
                         OR ( idEntidade = tbEntidades.Id )
                            AND ( idTipo = 'RC' )), 0)             AS
            SaldoContaCorrente
           ,tbCidades.Descricao                                    AS Cidade
           ,(SELECT COUNT(Id) AS Expr1
             FROM   tbChequeSemFundo  with(nolock)
             WHERE  ( idEntidade = tbEntidades.Id )
                AND ( pago = 0 ))                                  AS
            ChequeDevolvido
    FROM   tbEntidades  with(nolock)
           INNER JOIN tbPostos  with(nolock)
                   ON tbEntidades.idPostoCadastro = tbPostos.Id
           INNER JOIN tbCidades  with(nolock)
                   ON tbPostos.IdMunicipio = tbCidades.id
    WHERE  ( tbEntidades.Id = tbEntidades.Id )
       AND ( tbEntidades.Prazo = 1 )
        OR ( tbEntidades.Id = tbEntidades.Id )
           AND ( tbEntidades.CartaFrete = 1 )
        OR ( tbEntidades.Id = tbEntidades.Id )
           AND ( tbEntidades.PagaChequePrazo = 1 )
        OR ( tbEntidades.Id = tbEntidades.Id )
           AND ( tbEntidades.PrazoFornecedor = 1 )
        OR ( tbEntidades.Id = tbEntidades.Id )
           AND ( tbEntidades.IdConvenio <> dbo.GuidEmpty() ) 

GO
/****** Object:  StoredProcedure [dbo].[rptRelClienteAPrazoResumo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptRelClienteAPrazoResumo
CREATE PROCEDURE [dbo].[rptRelClienteAPrazoResumo]
AS
    SELECT tbEntidades.idPostoCadastro
           ,tbPostos.NomeUsual
           ,COUNT(tbEntidades.Id) AS QTD
    FROM   tbEntidades with(nolock)
           INNER JOIN tbPostos with(nolock)
                   ON tbEntidades.idPostoCadastro = tbPostos.Id
    WHERE  ( tbEntidades.Prazo = 1 )
    GROUP  BY tbEntidades.idPostoCadastro
              ,tbPostos.NomeUsual
    ORDER  BY tbEntidades.idPostoCadastro 

GO
/****** Object:  StoredProcedure [dbo].[rptRelClientesBloqueados]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptRelClientesBloqueados
CREATE PROCEDURE [dbo].[rptRelClientesBloqueados]
AS
	DECLARE @GuidEmpty UNIQUEIDENTIFIER
	SET @GuidEmpty = dbo.GuidEmpty()

    SELECT Id
           ,RzSocial
           ,CASE Limite
              WHEN 0 THEN 1
              ELSE Limite
            END 
            AS limite
           ,SaldoLimite
           ,Especial
           ,ProxFechamento
           ,NVendasPrazo
           ,DataBloqueio
           ,Prazo
           ,CartaFrete
           ,PagaChequePrazo
           ,ISNULL ((SELECT SUM(CASE idTipo
                                  WHEN 'RC' THEN Valor
                                  WHEN 'AR' THEN Valor * -1
                                END) AS Expr1
                     FROM   tbContasPagarReceber with(nolock)
                     WHERE  ( idEntidade = tbEntidades.Id )
                        AND ( idTipo = 'AR' )
                         OR ( idEntidade = tbEntidades.Id )
                            AND ( idTipo = 'RC' )), 0)                 AS
            SaldoContaCorrente
           ,ISNULL(Tolerancia, 0)                                      AS
            Tolerancia
           ,(SELECT COUNT(Id) AS Expr1
             FROM   tbChequeSemFundo with(nolock)
             WHERE  ( idEntidade = tbEntidades.Id )
                AND ( pago = 0 ))                                      AS
            ChequeDevolvido
           ,ISNULL ((SELECT Id AS Expr1
                     FROM   tbCartaFreteEnvio with(nolock)
                     WHERE  ( idEntidade = tbEntidades.Id )
                        AND ( Pago = 0 )
                        AND ( DATEADD(dd, 10, Data) > GETDATE() )), @GuidEmpty) AS
            CartaFreteEmAberto
    FROM   tbEntidades with(nolock)
    WHERE  ( Limite > 0 )
       AND ( Prazo = 1 )
        OR ( (SELECT COUNT(Id) AS Expr1
              FROM   tbChequeSemFundo AS tbChequeSemFundo_1 with(nolock)
              WHERE  ( idEntidade = tbEntidades.Id )
                 AND ( pago = 0 )) > 0 )
        OR ( CartaFrete = 1 )
        OR ( (SELECT COUNT(Id) AS Expr1
              FROM   tbCartaFreteEnvio with(nolock)
              WHERE  ( idEntidade = tbEntidades.Id )
                 AND ( Pago = 0 )
                 AND ( DATEADD(dd, 10, Data) > GETDATE() )) > 0 )
    ORDER  BY RzSocial 

GO
/****** Object:  StoredProcedure [dbo].[rptRelClientesPrazo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptRelClientesPrazo
CREATE PROCEDURE [dbo].[rptRelClientesPrazo] @pTipo     NVARCHAR(20)
AS
    DECLARE @GuidEmpty UNIQUEIDENTIFIER
	SET @GuidEmpty = dbo.GuidEmpty()
    
    IF @pTipo = 'TO'
      SELECT tbEntidades.Id
             ,tbEntidades.RzSocial
             ,tbEntidades.NomeUsual
             ,tbEntidades.CNPJ
             ,tbEntidades.IE
             ,tbEntidades.Limite
             ,tbEntidades.SaldoLimite
             ,tbEntidades.ProxFechamento
             ,tbEntidades.DiaFechamento
             ,CONVERT(NVARCHAR(10), tbEntidades.ProxFechamento, 103) AS
              Vencimento
             ,Prazo
             ,PagaChequePrazo
             ,CartaFrete
             ,Cheque3
             ,Tolerancia
             ,tbEntidades.IdConvenio
             ,tbpostos.NomeUsual                                     AS Posto
             ,tbPostos.Id
             ,Isnull((SELECT Sum (CASE idTipo
                                    WHEN 'RC' THEN Valor
                                    WHEN 'AR' THEN Valor *- 1
                                  END)
                      FROM   tbContasPagarReceber with(nolock)
                      WHERE  tbContasPagarReceber.idEntidade = tbEntidades.Id
                         AND ( idTipo = 'AR'
                                OR IDTIPO = 'RC' )), 0)              AS
              SaldoContaCorrente
             ,Isnull((SELECT TOP 1 Dia AS Dia1
                      FROM   tbEntidadeDiaPagamento AS tbEntidadeDiaPagamento with(nolock)
                      WHERE  ( tbEntidades.Id = tbEntidades.Id )
                      ORDER  BY Dia), '')                            AS Dia1
             ,Isnull((SELECT TOP 1 Dia AS Dia1
                      FROM   tbEntidadeDiaPagamento AS tbEntidadeDiaPagamento with(nolock)
                      WHERE  ( tbEntidades.Id = tbEntidades.Id )
                      ORDER  BY Dia DESC), '')                       AS Dia2
      FROM   tbEntidades with(nolock)
             ,tbPostos with(nolock)
      WHERE  tbEntidades.Id = tbEntidades.Id
         AND tbPostos.Id = tbEntidades.idPostoCadastro
         AND ( dbo.tbEntidades.Prazo = 1
                OR dbo.tbEntidades.CartaFrete = 1
                OR dbo.tbEntidades.PagaChequePrazo = 1
                OR PrazoFornecedor = 1
                OR dbo.tbEntidades.IdConvenio <> @GuidEmpty )
      ORDER  BY tbPostos.Id
                ,tbEntidades.RzSocial
    ELSE IF @pTipo = 'PR'
      SELECT tbEntidades.Id
             ,tbEntidades.RzSocial
             ,tbEntidades.NomeUsual
             ,tbEntidades.CNPJ
             ,tbEntidades.IE
             ,tbEntidades.Limite
             ,tbEntidades.SaldoLimite
             ,tbEntidades.ProxFechamento
             ,tbEntidades.DiaFechamento
             ,CONVERT(NVARCHAR(10), tbEntidades.ProxFechamento, 103) AS
              Vencimento
             ,tbEntidades.Prazo
             ,tbEntidades.PagaChequePrazo
             ,tbEntidades.CartaFrete
             ,tbEntidades.Cheque3
             ,tbEntidades.Tolerancia
             ,tbEntidades.IdConvenio
             ,tbPostos.NomeUsual                                     AS Posto
             ,tbPostos.Id
             ,ISNULL ((SELECT SUM(CASE idTipo
                                    WHEN 'RC' THEN Valor
                                    WHEN 'AR' THEN Valor * -1
                                  END) AS Expr1
                       FROM   tbContasPagarReceber with(nolock)
                       WHERE  ( tbContasPagarReceber.idEntidade =
                              tbEntidades.Id )
                          AND ( idTipo = 'AR' )
                           OR ( tbContasPagarReceber.idEntidade =
                              tbEntidades.Id )
                              AND ( idTipo = 'RC' )), 0)             AS
              SaldoContaCorrente
             ,Isnull((SELECT TOP 1 Dia AS Dia1
                      FROM   tbEntidadeDiaPagamento AS tbEntidadeDiaPagamento with(nolock)
                      WHERE  ( tbEntidades.Id = tbEntidades.Id )
                      ORDER  BY Dia), '')                            AS Dia1
             ,Isnull((SELECT TOP 1 Dia AS Dia1
                      FROM   tbEntidadeDiaPagamento AS tbEntidadeDiaPagamento with(nolock)
                      WHERE  ( tbEntidades.Id = tbEntidades.Id )
                      ORDER  BY Dia DESC), '')                       AS Dia2
      FROM   tbEntidades with(nolock)
             INNER JOIN tbPostos with(nolock)
                     ON tbEntidades.idPostoCadastro = tbPostos.Id
      WHERE  ( tbEntidades.Id = tbEntidades.Id )
         AND ( tbEntidades.Prazo = 1 )
      ORDER  BY tbPostos.Id
                ,tbEntidades.RzSocial
    ELSE IF @pTipo = 'CF'
      SELECT tbEntidades.Id
             ,tbEntidades.RzSocial
             ,tbEntidades.NomeUsual
             ,tbEntidades.CNPJ
             ,tbEntidades.IE
             ,tbEntidades.Limite
             ,tbEntidades.SaldoLimite
             ,tbEntidades.ProxFechamento
             ,tbEntidades.DiaFechamento
             ,CONVERT(NVARCHAR(10), tbEntidades.ProxFechamento, 103) AS
              Vencimento
             ,Prazo
             ,PagaChequePrazo
             ,CartaFrete
             ,Cheque3
             ,Tolerancia
             ,tbEntidades.IdConvenio
             ,tbpostos.NomeUsual                                     AS Posto
             ,tbPostos.Id
             ,Isnull((SELECT Sum (CASE idTipo
                                    WHEN 'RC' THEN Valor
                                    WHEN 'AR' THEN Valor *- 1
                                  END)
                      FROM   tbContasPagarReceber with(nolock)
                      WHERE  tbContasPagarReceber.idEntidade = tbEntidades.Id
                         AND ( idTipo = 'AR'
                                OR IDTIPO = 'RC' )), 0)              AS
              SaldoContaCorrente
             ,Isnull((SELECT TOP 1 Dia AS Dia1
                      FROM   tbEntidadeDiaPagamento AS tbEntidadeDiaPagamento with(nolock)
                      WHERE  ( tbEntidades.Id = tbEntidades.Id )
                      ORDER  BY Dia), '')                            AS Dia1
             ,Isnull((SELECT TOP 1 Dia AS Dia1
                      FROM   tbEntidadeDiaPagamento AS tbEntidadeDiaPagamento with(nolock)
                      WHERE  ( tbEntidades.Id = tbEntidades.Id )
                      ORDER  BY Dia DESC), '')                       AS Dia2
      FROM   tbEntidades with(nolock)
             ,tbPostos with(nolock)
      WHERE  tbEntidades.Id = tbEntidades.Id
         AND tbPostos.Id = tbEntidades.idPostoCadastro
         AND ( dbo.tbEntidades.CartaFrete = 1 )
      ORDER  BY tbPostos.Id
                ,tbEntidades.RzSocial
    ELSE IF @pTipo = 'CV'
      SELECT tbEntidades.Id
             ,tbEntidades.RzSocial
             ,tbEntidades.NomeUsual
             ,tbEntidades.CNPJ
             ,tbEntidades.IE
             ,tbEntidades.Limite
             ,tbEntidades.SaldoLimite
             ,tbEntidades.ProxFechamento
             ,tbEntidades.DiaFechamento
             ,CONVERT(NVARCHAR(10), tbEntidades.ProxFechamento, 103) AS
              Vencimento
             ,Prazo
             ,PagaChequePrazo
             ,CartaFrete
             ,Cheque3
             ,Tolerancia
             ,tbEntidades.IdConvenio
             ,tbpostos.NomeUsual                                     AS Posto
             ,tbPostos.Id
             ,Isnull((SELECT Sum (CASE idTipo
                                    WHEN 'RC' THEN Valor
                                    WHEN 'AR' THEN Valor *- 1
                                  END)
                      FROM   tbContasPagarReceber with(nolock)
                      WHERE  tbContasPagarReceber.idEntidade = tbEntidades.Id
                         AND ( idTipo = 'AR'
                                OR IDTIPO = 'RC' )), 0)              AS
              SaldoContaCorrente
             ,Isnull((SELECT TOP 1 Dia AS Dia1
                      FROM   tbEntidadeDiaPagamento AS tbEntidadeDiaPagamento with(nolock)
                      WHERE  ( tbEntidades.Id = tbEntidades.Id )
                      ORDER  BY Dia), '')                            AS Dia1
             ,Isnull((SELECT TOP 1 Dia AS Dia1
                      FROM   tbEntidadeDiaPagamento AS tbEntidadeDiaPagamento with(nolock)
                      WHERE  ( tbEntidades.Id = tbEntidades.Id )
                      ORDER  BY Dia DESC), '')                       AS Dia2
      FROM   tbEntidades with(nolock)
             ,tbPostos with(nolock)
      WHERE  tbEntidades.Id = tbEntidades.Id
         AND tbPostos.Id = tbEntidades.idPostoCadastro
         AND ( dbo.tbEntidades.IdConvenio <> @GuidEmpty )
      ORDER  BY tbPostos.Id
                ,tbEntidades.RzSocial
    ELSE IF @pTipo = 'CP'
      SELECT tbEntidades.Id
             ,tbEntidades.RzSocial
             ,tbEntidades.NomeUsual
             ,tbEntidades.CNPJ
             ,tbEntidades.IE
             ,tbEntidades.Limite
             ,tbEntidades.SaldoLimite
             ,tbEntidades.ProxFechamento
             ,tbEntidades.DiaFechamento
             ,CONVERT(NVARCHAR(10), tbEntidades.ProxFechamento, 103) AS
              Vencimento
             ,tbEntidades.Prazo
             ,tbEntidades.PagaChequePrazo
             ,tbEntidades.CartaFrete
             ,tbEntidades.Cheque3
             ,tbEntidades.Tolerancia
             ,tbEntidades.IdConvenio
             ,tbPostos.NomeUsual                                     AS Posto
             ,tbPostos.Id
             ,ISNULL ((SELECT SUM(CASE idTipo
                                    WHEN 'RC' THEN Valor
                                    WHEN 'AR' THEN Valor * -1
                                  END) AS Expr1
                       FROM   tbContasPagarReceber with(nolock)
                       WHERE  ( tbContasPagarReceber.idEntidade =
                              tbEntidades.Id )
                          AND ( idTipo = 'AR' )
                           OR ( tbContasPagarReceber.idEntidade =
                              tbEntidades.Id )
                              AND ( idTipo = 'RC' )), 0)             AS
              SaldoContaCorrente
             ,ISNULL ((SELECT TOP 1 Dia AS Dia1
                       FROM   tbEntidadeDiaPagamento AS tbEntidadeDiaPagamento with(nolock)
                       WHERE  ( tbEntidades.Id = tbEntidades.Id )
                       ORDER  BY Dia), '')                           AS Dia1
             ,ISNULL ((SELECT TOP 1 Dia AS Dia1
                       FROM   tbEntidadeDiaPagamento AS tbEntidadeDiaPagamento with(nolock)
                       WHERE  ( tbEntidades.Id = tbEntidades.Id )
                       ORDER  BY Dia DESC), '')                      AS Dia2
      FROM   tbEntidades with(nolock)
             INNER JOIN tbPostos with(nolock)
                     ON tbEntidades.idPostoCadastro = tbPostos.Id
      WHERE  ( tbEntidades.Id = tbEntidades.Id )
         AND ( tbEntidades.PagaChequePrazo = 1 )
      ORDER  BY tbPostos.Id
                ,tbEntidades.RzSocial
    ELSE IF @pTipo = 'ES'
      SELECT tbEntidades.Id
             ,tbEntidades.RzSocial
             ,tbEntidades.NomeUsual
             ,tbEntidades.CNPJ
             ,tbEntidades.IE
             ,tbEntidades.Limite
             ,tbEntidades.SaldoLimite
             ,tbEntidades.ProxFechamento
             ,tbEntidades.DiaFechamento
             ,CONVERT(NVARCHAR(10), tbEntidades.ProxFechamento, 103) AS
              Vencimento
             ,Prazo
             ,PagaChequePrazo
             ,CartaFrete
             ,Cheque3
             ,Tolerancia
             ,tbEntidades.IdConvenio
             ,tbpostos.NomeUsual                                     AS Posto
             ,tbPostos.Id
             ,Isnull((SELECT Sum (CASE idTipo
                                    WHEN 'RC' THEN Valor
                                    WHEN 'AR' THEN Valor *- 1
                                  END)
                      FROM   tbContasPagarReceber with(nolock)
                      WHERE  tbContasPagarReceber.idEntidade = tbEntidades.Id
                         AND ( idTipo = 'AR'
                                OR IDTIPO = 'RC' )), 0)              AS
              SaldoContaCorrente
             ,Isnull((SELECT TOP 1 Dia AS Dia1
                      FROM   tbEntidadeDiaPagamento AS tbEntidadeDiaPagamento with(nolock)
                      WHERE  ( tbEntidades.Id = tbEntidades.Id )
                      ORDER  BY Dia), '')                            AS Dia1
             ,Isnull((SELECT TOP 1 Dia AS Dia1
                      FROM   tbEntidadeDiaPagamento AS tbEntidadeDiaPagamento with(nolock)
                      WHERE  ( tbEntidades.Id = tbEntidades.Id )
                      ORDER  BY Dia DESC), '')                       AS Dia2
      FROM   tbEntidades with(nolock)
             ,tbPostos with(nolock)
      WHERE  tbEntidades.Id = tbEntidades.Id
         AND tbPostos.Id = tbEntidades.idPostoCadastro
         AND ( dbo.tbEntidades.Especial = 1 )
         AND ( dbo.tbEntidades.IdConvenio <> @GuidEmpty )
      ORDER  BY tbPostos.Id
                ,tbEntidades.RzSocial
    ELSE IF @pTipo = 'TL'
      SELECT tbEntidades.Id
             ,tbEntidades.RzSocial
             ,tbEntidades.NomeUsual
             ,tbEntidades.CNPJ
             ,tbEntidades.IE
             ,tbEntidades.Limite
             ,tbEntidades.SaldoLimite
             ,tbEntidades.ProxFechamento
             ,tbEntidades.DiaFechamento
             ,CONVERT(NVARCHAR(10), tbEntidades.ProxFechamento, 103) AS
              Vencimento
             ,Prazo
             ,PagaChequePrazo
             ,CartaFrete
             ,Cheque3
             ,Tolerancia
             ,tbEntidades.IdConvenio
             ,tbpostos.NomeUsual                                     AS Posto
             ,tbPostos.Id
             ,Isnull((SELECT Sum (CASE idTipo
                                    WHEN 'RC' THEN Valor
                                    WHEN 'AR' THEN Valor *- 1
                                  END)
                      FROM   tbContasPagarReceber with(nolock)
                      WHERE  tbContasPagarReceber.idEntidade = tbEntidades.Id
                         AND ( idTipo = 'AR'
                                OR IDTIPO = 'RC' )), 0)              AS
              SaldoContaCorrente
             ,Isnull((SELECT TOP 1 Dia AS Dia1
                      FROM   tbEntidadeDiaPagamento AS tbEntidadeDiaPagamento with(nolock)
                      WHERE  ( tbEntidades.Id = tbEntidades.Id )
                      ORDER  BY Dia), '')                            AS Dia1
             ,Isnull((SELECT TOP 1 Dia AS Dia1
                      FROM   tbEntidadeDiaPagamento AS tbEntidadeDiaPagamento with(nolock)
                      WHERE  ( tbEntidades.Id = tbEntidades.Id )
                      ORDER  BY Dia DESC), '')                       AS Dia2
      FROM   tbEntidades with(nolock)
             ,tbPostos with(nolock)
      WHERE  tbEntidades.Id = tbEntidades.Id
         AND tbPostos.Id = tbEntidades.idPostoCadastro
         AND ( dbo.tbEntidades.Tolerancia > 1 )
      ORDER  BY tbPostos.Id
                ,tbEntidades.RzSocial
    ELSE IF @pTipo = 'PF'
      SELECT tbEntidades.Id
             ,tbEntidades.RzSocial
             ,tbEntidades.NomeUsual
             ,tbEntidades.CNPJ
             ,tbEntidades.IE
             ,tbEntidades.Limite
             ,tbEntidades.SaldoLimite
             ,tbEntidades.ProxFechamento
             ,tbEntidades.DiaFechamento
             ,CONVERT(NVARCHAR(10), tbEntidades.ProxFechamento, 103) AS
              Vencimento
             ,Prazo
             ,PagaChequePrazo
             ,CartaFrete
             ,Cheque3
             ,Tolerancia
             ,tbEntidades.IdConvenio
             ,tbpostos.NomeUsual                                     AS Posto
             ,tbPostos.Id
             ,Isnull((SELECT Sum (CASE idTipo
                                    WHEN 'RC' THEN Valor
                                    WHEN 'AR' THEN Valor *- 1
                                  END)
                      FROM   tbContasPagarReceber with(nolock)
                      WHERE  tbContasPagarReceber.idEntidade = tbEntidades.Id
                         AND ( idTipo = 'AR'
                                OR IDTIPO = 'RC' )), 0)              AS
              SaldoContaCorrente
             ,Isnull((SELECT TOP 1 Dia AS Dia1
                      FROM   tbEntidadeDiaPagamento AS tbEntidadeDiaPagamento with(nolock)
                      WHERE  ( tbEntidades.Id = tbEntidades.Id )
                      ORDER  BY Dia), '')                            AS Dia1
             ,Isnull((SELECT TOP 1 Dia AS Dia1
                      FROM   tbEntidadeDiaPagamento AS tbEntidadeDiaPagamento with(nolock)
                      WHERE  ( tbEntidades.Id = tbEntidades.Id )
                      ORDER  BY Dia DESC), '')                       AS Dia2
      FROM   tbEntidades with(nolock)
             ,tbPostos with(nolock)
      WHERE  tbEntidades.Id = tbEntidades.Id
         AND tbPostos.Id = tbEntidades.idPostoCadastro
         AND ( dbo.tbEntidades.PrazoFornecedor = 1 )
      ORDER  BY tbPostos.Id
                ,tbEntidades.RzSocial
    ELSE IF @pTipo = 'CD'
      SELECT DISTINCT tbEntidades.Id
                      ,tbEntidades.RzSocial
                      ,tbEntidades.NomeUsual
                      ,tbEntidades.CNPJ
                      ,tbEntidades.IE
                      ,tbEntidades.Limite
                      ,tbEntidades.SaldoLimite
                      ,tbEntidades.ProxFechamento
                      ,tbEntidades.DiaFechamento
                      ,CONVERT(NVARCHAR(10), tbEntidades.ProxFechamento, 103)
                       AS
                       Vencimento
                      ,tbEntidades.Prazo
                      ,tbEntidades.PagaChequePrazo
                      ,tbEntidades.CartaFrete
                      ,tbEntidades.Cheque3
                      ,tbEntidades.Tolerancia
                      ,tbEntidades.IdConvenio
                      ,tbPostos.NomeUsual
                       AS
                       Posto
                      ,tbPostos.Id
                      ,ISNULL((SELECT SUM(valor) AS Expr1
                               FROM   tbChequeSemFundo with(nolock)
                               WHERE  ( pago = 0 )
                                  AND ( tbEntidades.Id = tbEntidades.Id )), 0)
                       AS
                       SaldoContaCorrente
                      ,Isnull((SELECT TOP 1 Dia AS Dia1
                               FROM   tbEntidadeDiaPagamento AS
                                      tbEntidadeDiaPagamento with(nolock)
                               WHERE  ( tbEntidades.Id = tbEntidades.Id )
                               ORDER  BY Dia), '')
                       AS
                       Dia1
                      ,Isnull((SELECT TOP 1 Dia AS Dia1
                               FROM   tbEntidadeDiaPagamento AS
                                      tbEntidadeDiaPagamento with(nolock)
                               WHERE  ( tbEntidades.Id = tbEntidades.Id )
                               ORDER  BY Dia DESC), '')
                       AS
                       Dia2
      FROM   tbEntidades with(nolock)
             INNER JOIN tbPostos with(nolock)
                     ON tbEntidades.idPostoCadastro = tbPostos.Id
             INNER JOIN tbChequeSemFundo with(nolock)
                     ON tbEntidades.Id = tbChequeSemFundo.idEntidade
      WHERE  ( tbEntidades.Id = tbEntidades.Id )
         AND ( tbChequeSemFundo.pago = 0 )
      ORDER  BY tbPostos.Id
                ,tbEntidades.RzSocial 

GO
/****** Object:  StoredProcedure [dbo].[rptRelClientesPrazoNovo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[rptRelClientesPrazoNovo] 
	@pTipo     NVARCHAR(20)

AS

	IF @pTipo = 'PR'

      SELECT tbEntidades.Id
             ,tbEntidades.RzSocial
             ,tbEntidades.NomeUsual
             ,tbEntidades.CNPJ
             ,tbEntidades.IE
             ,tbEntidades.Limite
             ,tbEntidades.SaldoLimite
             ,tbEntidades.ProxFechamento
             ,tbEntidades.DiaFechamento
             ,CONVERT(NVARCHAR(10), tbEntidades.ProxVencimento, 103) AS
              Vencimento
             ,tbEntidades.Prazo
             ,tbEntidades.PagaChequePrazo
             ,tbEntidades.Cheque3
             ,tbEntidades.Tolerancia
             ,tbEntidades.IdConvenio
             ,ISNULL ((SELECT SUM(CASE idTipo
                                    WHEN 'RC' THEN Valor
                                    WHEN 'AR' THEN Valor * -1
                                  END) AS Expr1
                       FROM   tbContasPagarReceber with(nolock)
					            Left Join tbVendas on tbContasPagarReceber.IdVenda = tbvendas.id
                       WHERE  ( tbContasPagarReceber.idEntidade = tbEntidades.Id )
                          AND ( idTipo = 'AR' AND IdTipoDocto IN ('PR', 'LM') AND tbVendas.Status IS NULL)
                           OR ( tbContasPagarReceber.idEntidade = tbEntidades.Id )
                          AND ( idTipo = 'RC' )), 0)  AS SaldoContaCorrente
             ,Isnull((SELECT TOP 1 Dia 
                      FROM   tbEntidadeDiaPagamento  with(nolock)
                      WHERE  ( tbEntidades.Id = tbEntidadeDiapagamento.idEntidade)
                      ORDER  BY Dia), '')                            AS Dia1
             ,Isnull((SELECT TOP 1 Dia 
                      FROM   tbEntidadeDiaPagamento  with(nolock)
                      WHERE  ( tbEntidades.Id = tbEntidadeDiapagamento.idEntidade )
                      ORDER  BY Dia DESC), '')                       AS Dia2
			,Isnull((SELECT TOP 1 DiaVencimento 
                      FROM   tbEntidadeDiaPagamento  with(nolock)
                      WHERE  ( tbEntidades.Id = tbEntidadeDiapagamento.idEntidade)
                      ORDER  BY Dia), '')                            AS DiaVencimento1
             ,Isnull((SELECT TOP 1 DiaVencimento 
                      FROM   tbEntidadeDiaPagamento  with(nolock)
                      WHERE  ( tbEntidades.Id = tbEntidadeDiapagamento.idEntidade )
                      ORDER  BY Dia DESC), '')                       AS DiaVencimento2
      FROM   tbEntidades with(nolock)
      WHERE  ( tbEntidades.Id = tbEntidades.Id )
         AND ( tbEntidades.Prazo = 1 )
      ORDER  BY tbEntidades.RzSocial
	
	ELSE IF @pTipo = 'CP'

      SELECT tbEntidades.Id
             ,tbEntidades.RzSocial
             ,tbEntidades.NomeUsual
             ,tbEntidades.CNPJ
             ,tbEntidades.IE
             ,tbEntidades.Limite
             ,tbEntidades.SaldoLimite
             ,tbEntidades.ProxFechamento
             ,tbEntidades.DiaFechamento
             ,CONVERT(NVARCHAR(10), tbEntidades.ProxVencimento, 103) AS
              Vencimento
             ,tbEntidades.Prazo
             ,tbEntidades.PagaChequePrazo
             ,tbEntidades.CartaFrete
             ,tbEntidades.Cheque3
             ,tbEntidades.Tolerancia
             ,tbEntidades.IdConvenio
             ,ISNULL ((SELECT SUM(CASE idTipo
                                    WHEN 'RC' THEN Valor
                                    WHEN 'AR' THEN Valor * -1
                                  END) AS Expr1
                       FROM   tbContasPagarReceber with(nolock)
                       WHERE  ( tbContasPagarReceber.idEntidade =
                              tbEntidades.Id )
                          AND ( idTipo = 'AR' )
                           OR ( tbContasPagarReceber.idEntidade =
                              tbEntidades.Id )
                              AND ( idTipo = 'RC' )), 0)             AS
              SaldoContaCorrente
             ,ISNULL ((SELECT TOP 1 Dia AS Dia1
                       FROM   tbEntidadeDiaPagamento AS tbEntidadeDiaPagamento with(nolock)
                       WHERE  ( tbEntidades.Id = tbEntidades.Id )
                       ORDER  BY Dia), '')                           AS Dia1
             ,ISNULL ((SELECT TOP 1 Dia AS Dia1
                       FROM   tbEntidadeDiaPagamento AS tbEntidadeDiaPagamento with(nolock)
                       WHERE  ( tbEntidades.Id = tbEntidades.Id )
                       ORDER  BY Dia DESC), '')                      AS Dia2
		     ,Isnull((SELECT TOP 1 DiaVencimento 
                      FROM   tbEntidadeDiaPagamento  with(nolock)
                      WHERE  ( tbEntidades.Id = tbEntidadeDiapagamento.idEntidade)
                      ORDER  BY Dia), '')                            AS DiaVencimento1
             ,Isnull((SELECT TOP 1 DiaVencimento 
                      FROM   tbEntidadeDiaPagamento  with(nolock)
                      WHERE  ( tbEntidades.Id = tbEntidadeDiapagamento.idEntidade )
                      ORDER  BY Dia DESC), '')                       AS DiaVencimento2
      FROM   tbEntidades with(nolock)
      WHERE  ( tbEntidades.Id = tbEntidades.Id )
         AND ( tbEntidades.PagaChequePrazo = 1 )
      ORDER  BY tbEntidades.RzSocial
GO
/****** Object:  StoredProcedure [dbo].[rptRelContas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptRelContas
CREATE PROCEDURE [dbo].[rptRelContas] @pTipo           CHAR(2)
                                     ,@pIdposto       UNIQUEIDENTIFIER
                                     ,@pIDEntidadeINI UNIQUEIDENTIFIER
                                     ,@pIDEntidadeFIM UNIQUEIDENTIFIER
                                     ,@pDataINI       SMALLDATETIME
                                     ,@pDataFim       SMALLDATETIME
AS
    SELECT dbo.tbContasPagarReceber.DataVencto
           ,dbo.tbEntidades.NomeUsual
           ,dbo.tbContasPagarReceber.IdTipoDocto
           ,dbo.tbContasPagarReceber.NumDocto
           ,dbo.tbContasPagarReceber.Valor
    FROM   dbo.tbContasPagarReceber  with(nolock)
           INNER JOIN dbo.tbEntidades  with(nolock)
                   ON dbo.tbContasPagarReceber.idEntidade = dbo.tbEntidades.Id
    WHERE  ( dbo.tbContasPagarReceber.IdPosto = (SELECT Id FROM tbPostos  with(nolock) WHERE NomeUsual = 'Central') )
       AND ( dbo.tbContasPagarReceber.Ativa = 1 )
       AND ( dbo.tbContasPagarReceber.idTipo = @pTipo )
       AND ( dbo.tbContasPagarReceber.DataVencto BETWEEN @pDataINI AND @pDataFIM
           )
       AND ( dbo.tbContasPagarReceber.idEntidade BETWEEN
             @pIDEntidadeINI AND @pIDEntidadeFIM )
       AND ( dbo.tbContasPagarReceber.idPosto = @pIDPosto ) 

GO
/****** Object:  StoredProcedure [dbo].[rptRelControleRetiradaAtendente]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



--rptRelRetiradas
CREATE PROCEDURE [dbo].[rptRelControleRetiradaAtendente] @pCaixa UNIQUEIDENTIFIER
AS

SET FMTONLY OFF

    SELECT
		tbEntidades.NomeUsual,
		SUM(CASE tbControleRetiradaAtendente.Tipo 
                WHEN 'VD' THEN ISNULL(tbControleRetiradaAtendente.Valor, 0)
                ELSE 0
            END) AS ValorTotalVendas,
        SUM(CASE tbControleRetiradaAtendente.Tipo 
                WHEN 'RC' THEN ISNULL(tbControleRetiradaAtendente.Valor, 0)
                ELSE 0
            END) AS ValorTotalEntregue,
		SUM(CASE WHEN tbControleRetiradaAtendente.Tipo = 'VD' THEN tbControleRetiradaAtendente.Valor ELSE -tbControleRetiradaAtendente.Valor END) AS Diferenca	
    FROM   tbControleRetiradaCaixa
	RIGHT JOIN tbControleRetiradaAtendente ON tbControleRetiradaCaixa.ControleRetiradaAtendenteId = tbControleRetiradaAtendente.Id
	LEFT JOIN tbEntidades ON tbControleRetiradaAtendente.VendedorId = tbEntidades.Id
    WHERE  
	(tbControleRetiradaAtendente.CaixaId = @pCAixa)
	AND (tbControleRetiradaCaixa.ConfirmaValorRecebido IS NULL or tbControleRetiradaCaixa.ConfirmaValorRecebido = 1)
GROUP BY tbEntidades.NomeUsual
   

   --EXEC [dbo].[rptRelControleRetiradaAtendente] '607ECD25-B918-4D2D-8716-AF9F0174131D'
GO
/****** Object:  StoredProcedure [dbo].[rptRelControleRetiradaAtendenteDetalhamento]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[rptRelControleRetiradaAtendenteDetalhamento] @pCaixa UNIQUEIDENTIFIER
AS

SET FMTONLY OFF

   SELECT
		tbControleRetiradaAtendente.Id,
		tbControleRetiradaAtendente.Tipo,
		tbVendas.NumeroCupomSat,
		tbControleRetiradaAtendente.DataHora,
		CASE dbo.tbVendas.OrigemVenda
			WHEN 'VendasLIO' THEN 'Mini Vendas'
			WHEN 'VendaManual' THEN 'Vendas'
			WHEN 'MultiplasVendas' THEN 'Vendas'
		END AS Emissor,
		CASE dbo.tbVendas.OrigemVenda
			WHEN 'VendasLIO' THEN 'Automática'
			WHEN 'VendaManual' THEN 'Manual'
			WHEN 'MultiplasVendas' THEN 'Manual'
		END AS OrigemVenda,
		tbControleRetiradaAtendente.Valor as ValorRec,
		tbVendasItensPagamento.Valor as ValorPagamento,
		tbEntidades.NomeUsual
    FROM   tbControleRetiradaCaixa
	RIGHT JOIN tbControleRetiradaAtendente ON tbControleRetiradaCaixa.ControleRetiradaAtendenteId = tbControleRetiradaAtendente.Id
	LEFT JOIN tbEntidades ON tbControleRetiradaAtendente.VendedorId = tbEntidades.Id
	LEFT JOIN tbVendasLIO ON tbVendasLIO.id = tbControleRetiradaAtendente.vendaLioId
	LEFT JOIN tbVendas ON tbVendas.id = tbVendasLIO.VendaId
	LEFT JOIN tbVendasItensPagamento ON tbVendas.id = tbVendasItensPagamento.IdVenda
    WHERE  
	(tbControleRetiradaAtendente.CaixaId = @pCaixa)
	AND (tbControleRetiradaCaixa.ConfirmaValorRecebido IS NULL or tbControleRetiradaCaixa.ConfirmaValorRecebido = 1)
	AND (tbVendasItensPagamento.TipoPagamento = 'DI' or tbVendasItensPagamento.TipoPagamento is null)
	order by tbControleRetiradaAtendente.DataHora

   --EXEC [dbo].[rptRelControleRetiradaAtendenteDetalhamento] '73AA6674-B113-4126-B3B2-B0F100E5EDFF'
GO
/****** Object:  StoredProcedure [dbo].[rptRelCuponsCancelados]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[rptRelCuponsCancelados]
	@pIdPosto	uniqueidentifier,
	@pDataIni	datetime,
	@pDataFim	datetime
	AS

	/*
		Descri??o: Seleciona as informa??es dos cupons para serem exibidas no relat?rio de cupons cancelados.
		Autor....: MangaTech - Gregory Fagundes & Alysson Estevam
		Data.....: 22/06/2021
		Ex.......: EXEC [dbo].[rptRelCuponsCancelados] 'A94EB478-1BCF-4A4E-9039-0748EC51BBE0', '2021-05-01 00:00:00', '2021-05-31 23:59:59'

		SET FMTONLY OFF
	*/

	BEGIN
		CREATE TABLE #TEMP(
			CupomFiscal		int,
			Data			datetime,
			ValorCupom		money
		)

		INSERT INTO #TEMP
			SELECT tv.NumeroCupomSat AS CupomFiscal,
				   tv.Data AS Data,
				   tv.ValorTotal AS ValorCupom
				FROM [dbo].[tbVendas] tv WITH(NOLOCK)
				WHERE tv.IdPosto = @pIdPosto
					  AND tv.Data BETWEEN @pDataIni AND @pDataFim
					  AND Status = 'CA'
				ORDER BY tv.Data

		SELECT T.CupomFiscal AS CupomFiscal,
			   FORMAT(T.Data, 'dd/MM/yyyy') AS Data,
			   FORMAT(T.Data, 'HH:mm') AS Hora,
			   T.ValorCupom AS ValorCupom
		FROM #TEMP T
		ORDER BY T.Data

		DROP TABLE #TEMP
	END
GO
/****** Object:  StoredProcedure [dbo].[rptRelCuponsEmitidos]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[rptRelCuponsEmitidos]
	@pIdPosto	uniqueidentifier,
	@pDataIni	datetime,
	@pDataFim	datetime
	AS

	/*
		Descrição: Seleciona as informações dos cupons para serem exibidas no relatório de cupons emitidos.
		Autor....: MangaTech - Alysson Estevam
		Data.....: 22/06/2021
		Ex.......: EXEC [dbo].[rptRelCuponsEmitidos] 'A94EB478-1BCF-4A4E-9039-0748EC51BBE0', '2021-05-01 00:00:00', '2021-05-31 00:00:00'

		SET FMTONLY OFF
	*/

	BEGIN
		CREATE TABLE #TEMP(
			CupomFiscal		int,
			Data			datetime,
			ValorCupom		money
		)

		INSERT INTO #TEMP
			SELECT tv.NumeroCupomSat AS CupomFiscal,
				   tv.Data AS Data,
				   tv.ValorTotal AS ValorCupom
				FROM [dbo].[tbVendas] tv WITH(NOLOCK)
				WHERE tv.IdPosto = @pIdPosto
					  AND tv.Data BETWEEN @pDataIni AND @pDataFim
					  AND XMLSat IS NOT NULL
					  AND Status IS NULL
				ORDER BY tv.Data

		SELECT T.CupomFiscal AS CupomFiscal,
			   FORMAT(T.Data, 'dd/MM/yyyy') AS Data,
			   FORMAT(T.Data, 'HH:mm') AS Hora,
			   T.ValorCupom AS ValorCupom
		FROM #TEMP T
		ORDER BY T.Data

		DROP TABLE #TEMP
	END
GO
/****** Object:  StoredProcedure [dbo].[rptRelDetalhamentoVendaPrazo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptRelDetalhamentoVendaPrazo
CREATE PROCEDURE [dbo].[rptRelDetalhamentoVendaPrazo]
	@pDiaMovimento datetime,
	@pIdPosto uniqueidentifier

AS

DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
INSERT INTO @tblCaixas
    SELECT Id
    FROM tbCaixa  with(nolock)
    WHERE Dia = @pDiaMovimento AND IdPosto = @pIdPosto

SELECT
	e.RzSocial AS Cliente,
	e.Limite,
	vi.Quantidade AS Comprou,
	p.Descricao AS Produto,
	p.TipoProd AS TipoProduto,
	CASE WHEN vi.PrecoEspecial > 0 THEN vi.PrecoEspecial ELSE vi.PrecoVenda END AS Preco,
	vi.Quantidade * (CASE WHEN vi.PrecoEspecial > 0 THEN vi.PrecoEspecial ELSE vi.PrecoVenda END) AS Faturado,
	(
		(SELECT
		  SUM(Valor)
		FROM tbContasPagarReceber
		WHERE IdEntidade = e.Id AND Data < @pDiaMovimento AND idTipo = 'RC')
		-
		(SELECT
		  SUM(Valor)
		FROM tbContasPagarReceber
		WHERE IdEntidade = e.Id AND Data < @pDiaMovimento AND idTipo = 'AR')
	) AS SaldoAnterior
FROM
	tbEntidades e
	INNER JOIN tbVendas v (nolock) ON v.IdCliente = e.Id
	INNER JOIN tbVendasItens vi (nolock) ON v.Id = vi.IdVenda
	INNER JOIN tbVendasItensPagamento vp (nolock) ON v.Id = vp.IdVenda
	INNER JOIN @tblCaixas cx ON v.IdCaixa = cx.IdCaixa
	INNER JOIN tbProdutos p ON vi.IdProduto = p.Id
WHERE
    v.status is null
    AND  vp.TipoPagamento = 'PR'
ORDER BY
	p.Ordem
GO
/****** Object:  StoredProcedure [dbo].[rptRelDetalhamentoVendaPrecoNegociado]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptRelDetalhamentoVendaPrecoNegociado
CREATE PROCEDURE [dbo].[rptRelDetalhamentoVendaPrecoNegociado]
	@pDiaMovimento datetime,
	@pIdPosto uniqueidentifier

AS

DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
INSERT INTO @tblCaixas
    SELECT Id
    FROM tbCaixa  with(nolock)
    WHERE Dia = @pDiaMovimento AND IdPosto = @pIdPosto

SELECT
	e.RzSocial AS Cliente,
	SUM(vi.Quantidade) AS Comprou,
	p.Descricao AS Produto,
	p.Ordem,
	vi.PrecoEspecial AS Preco,
	SUM(ROUND(vi.Quantidade * vi.PrecoEspecial,2,1)) AS Faturado,
	SUM(ROUND(vi.Quantidade * vi.PrecoEspecial,2,1) - ROUND(vi.Quantidade * vi.PrecoVenda,2,1)) AS DifPreco,
	p.TipoProd AS TipoProduto
FROM
	tbEntidades e
	INNER JOIN tbVendas v (nolock) ON v.IdCliente = e.Id
	INNER JOIN tbVendasItens vi (nolock) ON v.Id = vi.IdVenda
	INNER JOIN @tblCaixas cx ON v.IdCaixa = cx.IdCaixa
	INNER JOIN tbProdutos p ON vi.IdProduto = p.Id
WHERE
	vi.PrecoEspecial > 0
	AND vi.Cancelado = 0
	AND v.Status IS NULL
GROUP BY 
	e.RzSocial, e.Limite, p.Descricao, p.Ordem, vi.PrecoEspecial, vi.PrecoVenda, p.TipoProd
ORDER BY
	p.Ordem
GO
/****** Object:  StoredProcedure [dbo].[rptRelEstimativaLucro]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[rptRelEstimativaLucro]
	@pDiaMovimento datetime,
	@pIdPosto uniqueidentifier

AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

DECLARE @LucroBruto money, @TotalPrecoNegociado money, @TotalDespesa money, @LucroOperacional money, @Imposto money

--Lucro bruto
SELECT
	@LucroBruto = COALESCE(SUM(vi.Quantidade * (vi.PrecoVenda - vi.PrecoCusto)),0)
FROM
	tbProdutos p
	LEFT JOIN tbVendasItens vi (nolock) ON p.Id = vi.IdProduto
	LEFT JOIN tbVendas v (nolock) ON vi.IdVenda = v.Id
	LEFT JOIN tbCaixa c ON c.Id = v.IdCaixa
WHERE
	c.Dia BETWEEN CAST(CAST(YEAR(@pDiaMovimento) AS VARCHAR(4)) + '-' + CAST(MONTH(@pDiaMovimento) AS VARCHAR(2)) + '-01' AS datetime) AND @pDiaMovimento
	AND v.IdPosto = @pIdPosto
	AND vi.Cancelado = 0
	AND v.Status is null

--Preço Negociado
SELECT
	@TotalPrecoNegociado = COALESCE(SUM(vi.Quantidade * (vi.PrecoEspecial - vi.PrecoVenda)),0)
FROM
	tbProdutos p
	LEFT JOIN tbVendasItens vi (nolock) ON p.Id = vi.IdProduto
	LEFT JOIN tbVendas v (nolock) ON vi.IdVenda = v.Id
	LEFT JOIN tbCaixa c ON c.Id = v.IdCaixa
WHERE
	c.Dia BETWEEN CAST(CAST(YEAR(@pDiaMovimento) AS VARCHAR(4)) + '-' + CAST(MONTH(@pDiaMovimento) AS VARCHAR(2)) + '-01' AS datetime) AND @pDiaMovimento
	AND v.IdPosto = @pIdPosto
	AND vi.Cancelado = 0
	AND v.Status is null
	AND vi.PrecoEspecial is not null
	AND vi.PrecoEspecial > 0

--Despesas
SELECT
	@TotalDespesa = COALESCE(SUM(cc.Valor),0)
FROM
	tbContasPagarReceber cc (nolock)
	INNER JOIN tbCaixa cx ON cc.IdPedCaixa = cx.Id
WHERE
	cx.Dia BETWEEN CAST(CAST(YEAR(@pDiaMovimento) AS VARCHAR(4)) + '-' + CAST(MONTH(@pDiaMovimento) AS VARCHAR(2)) + '-01' AS datetime) AND @pDiaMovimento
	AND cx.IdPosto = @pIdPosto
	AND cc.Despesa = 1
	AND cc.DataPagamento IS NOT NULL
	AND cc.idTipo = 'PG'
	AND cc.IdHistorico NOT IN (SELECT Id FROM tbHistoricos WHERE Descricao IN('Combustível','Conveniência','Lubrificantes'))
	
SELECT
	'Lucro bruto' AS Descricao,
	@LucroBruto AS Valor

UNION ALL

SELECT
	'Total de despesa' AS Descricao,
	@TotalDespesa * -1 AS Valor

UNION ALL

SELECT
	'Total de venda com preço negociado' AS Descricao,
	@TotalPrecoNegociado AS Valor

UNION ALL

SELECT
	'Lucro operacional' AS Descricao,
	@LucroBruto - @TotalDespesa + @TotalPrecoNegociado AS Valor
	
UNION ALL

SELECT
	'IR e CS' AS Descricao,
	CASE WHEN (@LucroBruto - @TotalDespesa + @TotalPrecoNegociado) > 0 THEN (@LucroBruto - @TotalDespesa + @TotalPrecoNegociado) * -0.24 ELSE 0 END AS Valor
	
UNION ALL

SELECT
	'Lucro líquido' AS Descricao,
	(@LucroBruto - @TotalDespesa + @TotalPrecoNegociado) + (CASE WHEN (@LucroBruto - @TotalDespesa + @TotalPrecoNegociado) > 0 THEN (@LucroBruto - @TotalDespesa + @TotalPrecoNegociado) * -0.24 ELSE 0 END) AS Valor
GO
/****** Object:  StoredProcedure [dbo].[rptRelEstoqueFinalProduto]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[rptRelEstoqueFinalProduto]
	@pIdPosto		uniqueidentifier,
	@pDataFiltro	datetime
	AS

	--SET FMTONLY OFF

	/*
		Descrição: Seleciona as informações necessárias para a geração do relatório de venda de produto.
		Autor....: MangaTech - Alysson Estevam
		Data.....: 20/07/2021
		Ex.......: EXEC [dbo].[rptRelEstoqueFinalProduto] 'A94EB478-1BCF-4A4E-9039-0748EC51BBE0', '2021-06-30 00:00:00'
	*/

	BEGIN
		CREATE TABLE #TEMP(
			TipoProduto		varchar(20),
			Ordem			integer,
			UnidadeMedida	varchar(5),
			NomeProduto		varchar(200),
			Quantidade		decimal(15,4),
			PrecoCusto		decimal(15,2),
			ValorTotal		decimal(15,2)
		)

		INSERT INTO #TEMP
			SELECT (CASE WHEN tp.TipoProd = 'CB' THEN 'Combustível'
						 WHEN tp.TipoProd = 'LB' THEN 'Lubrificante'
						 WHEN tp.TipoProd = 'LC' THEN 'Conveniência'
						 WHEN tp.TipoProd = 'SE' THEN 'Serviços'
						 WHEN tp.TipoProd = 'IN' THEN 'Indefinido'
						 ELSE '' END) AS TipoProduto,
				   (CASE WHEN tp.TipoProd = 'CB' THEN 1
						 WHEN tp.TipoProd = 'LB' THEN 2
						 WHEN tp.TipoProd = 'LC' THEN 3
						 WHEN tp.TipoProd = 'SE' THEN 4
						 WHEN tp.TipoProd = 'IN' THEN 5
						 ELSE '' END) AS Ordem,
				   COALESCE(tp.UnidadeMedida, tum.UnidadeMedida, '') AS UnidadeMedida,
				   tp.Descricao AS NomeProduto,
				   ti.Quantidade AS Quantidade,
				   ti.PrecoCusto AS PrecoCusto,
				   (ti.Quantidade * ti.PrecoCusto) AS ValorTotal
				FROM [dbo].[tbInventario] ti WITH(NOLOCK)
					INNER JOIN [dbo].[tbProdutos] tp WITH(NOLOCK)
						ON tp.Id = ti.IdProduto
					LEFT JOIN [dbo].[tbUnidadeMedidas] tum WITH(NOLOCK)
						ON tum.Id = tp.IdUnidadeMedida
				WHERE ti.IdPosto = @pIdPosto
					  AND ti.Mes = MONTH(@pDataFiltro)
					  AND ti.Ano = YEAR(@pDataFiltro)
					  AND tp.Ativo = 1

		SELECT *
			FROM #TEMP

		--SET FMTONLY ON

		DROP TABLE #TEMP
	END
GO
/****** Object:  StoredProcedure [dbo].[rptRelFaturamentoCombustivel]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[rptRelFaturamentoCombustivel]
	@pIdPosto	uniqueidentifier,
	@pDataIni	datetime,
	@pDataFim	datetime
	AS

	--SET FMTONLY OFF

	/*
		Descri??o: Seleciona as informa??es necess?rias para a gera??o do relat?rio de faturamento por dia e tipo de combust?vel.
		Autor....: MangaTech - Alysson Estevam
		Data.....: 30/06/2021
		Ex.......: EXEC [dbo].[rptRelFaturamentoCombustivel] 'A94EB478-1BCF-4A4E-9039-0748EC51BBE0', '2021-05-01 00:00:00', '2021-05-31 23:59:59'
	*/

	BEGIN
		CREATE TABLE #TempDados(
			Data		smalldatetime,
			Combustivel varchar(MAX),
			Valor		decimal(15,2)
		)

		INSERT INTO #TempDados
			SELECT tv.DataMovimento,
				   CASE WHEN tp.Descricao = 'Etanol comum' THEN 'Etanol'
						WHEN tp.Descricao = 'Gasolina comum' THEN 'Gasolina'
						ELSE tp.Descricao END,
				   ISNULL(SUM(tvi.ValorItem), 0)
				FROM [dbo].[tbVendasItens] tvi WITH(NOLOCK) 
					INNER JOIN [dbo].[tbVendas] tv WITH(NOLOCK)
						ON tv.Id = tvi.IdVenda
					INNER JOIN [dbo].[tbProdutos] tp WITH(NOLOCK)
						ON tp.Id = tvi.IdProduto
				WHERE tv.Status IS NULL
					  AND tvi.Cancelado = 0
					  AND tp.TipoProd = 'CB'
					  AND tv.Data BETWEEN @pDataIni AND @pDataFim
					  AND tv.IdPosto = @pIdPosto
				GROUP BY tv.DataMovimento, tp.Descricao
				ORDER BY tv.DataMovimento

		SELECT FORMAT(Data, 'dd/MM/yyyy') AS Data,
			   ISNULL([Gasolina], 0) AS Gasolina,
			   ISNULL([Gasolina Aditivada], 0) AS GasolinaAditivada,
			   ISNULL([Etanol], 0) AS Etanol,
			   ISNULL([Diesel S500], 0) AS DieselS500,
			   ISNULL([Diesel S10], 0) AS DieselS10
			FROM #TempDados AS linha
			PIVOT (SUM(Valor) FOR Combustivel IN ([Gasolina],[Gasolina Aditivada],[Etanol],[Diesel S500],[Diesel S10])) AS colunas
			ORDER BY 1

		--SET FMTONLY ON

		DROP TABLE #TempDados
	END
GO
/****** Object:  StoredProcedure [dbo].[rptRelFechaCaixaFuncionariosTurno]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptRelFechaCaixaFuncionariosTurno
CREATE PROCEDURE [dbo].[rptRelFechaCaixaFuncionariosTurno] @pIdposto   UNIQUEIDENTIFIER
                                                 ,@pCaixaIni UNIQUEIDENTIFIER
                                                 ,@pCaixaFim UNIQUEIDENTIFIER
AS
    DECLARE @ValorRetirado MONEY
    
	DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)

	SET @diaIni = (SELECT DataAbertura
				FROM   tbCaixa  with (nolock)
				WHERE  Id = @pCaixaIni AND IdPosto = @pIdPosto)
	SET @diaFim = (SELECT DataAbertura
				FROM   tbCaixa  with (nolock)
				WHERE  Id = @pCaixaFim AND IdPosto = @pIdPosto)

	INSERT INTO @tblCaixas
	SELECT Id
	FROM tbCaixa  with (nolock)
	WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto


	select 
		te.Id
		,te.rzsocial as Descricao
	
	from tbCaixaTrabalhadores tct
	inner join tbEntidades te on tct.IdEntidade = te.Id
	inner join @tblCaixas tcx on tct.IdCaixa = tcx.IdCaixa
	
GO
/****** Object:  StoredProcedure [dbo].[rptRelFechaCaixaMedicoes]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptResRelMedicoes
CREATE PROCEDURE [dbo].[rptRelFechaCaixaMedicoes] @pIdposto   UNIQUEIDENTIFIER
                                                 ,@pCaixaIni UNIQUEIDENTIFIER
                                                 ,@pCaixaFim UNIQUEIDENTIFIER
AS
    DECLARE @ValorRetirado MONEY
    
	DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)

	SET @diaIni = (SELECT DataAbertura
				FROM   tbCaixa  with (nolock)
				WHERE  Id = @pCaixaIni AND IdPosto = @pIdPosto)
	SET @diaFim = (SELECT DataAbertura
				FROM   tbCaixa  with (nolock)
				WHERE  Id = @pCaixaFim AND IdPosto = @pIdPosto)

	INSERT INTO @tblCaixas
	SELECT Id
	FROM tbCaixa  with (nolock)
	WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto

	SELECT 
	TP.DESCRICAO +  ' (' + CONVERT(NVARCHAR(10),TCI.IDOBJETO) + ')' AS DESCRICAO
	,TCI.ValorCalculado AS VALOR
	 FROM TBCAIXAITENS TCI
	INNER JOIN TBTANQUES TT ON TCI.IDOBJETO = TT.NUMTANQUE
	INNER JOIN TBPRODUTOS TP ON TT.IDPRODUTO = TP.ID
	inner join @tblCaixas tx on tci.IdCaixa = tx.IdCaixa

	WHERE TCI.TIPOLEITURA = 'T' AND TT.IDPosto=@pIDPOsto
	
GO
/****** Object:  StoredProcedure [dbo].[rptRelMovimentacaoDiaProduto]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[rptRelMovimentacaoDiaProduto]
	@pIdPosto		uniqueidentifier,
	@pDiaFiltro	datetime
	AS

	--SET FMTONLY OFF

	/*
		Descrição: Seleciona as informações necessárias para a geração do relatório de movimentação diária.
		Autor....: MangaTech - Gregory Fagundes
		Data.....: 01/09/2021
		Ex.......: EXEC [dbo].[rptRelMovimentacaoDiaProduto] 'A94EB478-1BCF-4A4E-9039-0748EC51BBE0', '2021-07-26 00:00:00'
	*/

	BEGIN
		CREATE TABLE #TEMP(
			TipoProduto			varchar(20),
			Ordem				integer,
			UnidadeMedida		varchar(8),
			NomeProduto			varchar(200),
			PrecoCusto			decimal(15,2),
			EstoqueInicial		decimal(15,4),
			Compra				decimal(15,4),
			EntradaDevolucao    decimal(15,4),
			Venda				decimal(15,4),
			Perda				decimal(15,4),
			SaidaDevolucao		decimal(15,4),
			ConsumoProprio		decimal(15,4),
			BrindeBonificacao	decimal(15,4),
			EstoqueFinal		decimal(15,4)
		)

		INSERT INTO #TEMP (TipoProduto,Ordem,UnidadeMedida,NomeProduto,PrecoCusto,EstoqueInicial,Compra,EntradaDevolucao,Venda,Perda,SaidaDevolucao,ConsumoProprio,BrindeBonificacao,EstoqueFinal)
			SELECT TipoProduto,Ordem,UnidadeMedida,NomeProduto,PrecoCusto,EstoqueInicial,Compra,EntradaDevolucao,Venda,Perda,SaidaDevolucao,ConsumoProprio,BrindeBonificacao,EstoqueFinal
			FROM (
				SELECT (CASE WHEN tp.TipoProd = 'CB' THEN 'Combustível'
							WHEN tp.TipoProd = 'LB' THEN 'Lubrificante'
							WHEN tp.TipoProd = 'LC' THEN 'Conveniência'
							WHEN tp.TipoProd = 'SE' THEN 'Serviços'
							WHEN tp.TipoProd = 'IN' THEN 'Indefinido'
							ELSE '' END) AS TipoProduto,
						(CASE WHEN tp.TipoProd = 'CB' THEN 1
							WHEN tp.TipoProd = 'LB' THEN 2
							WHEN tp.TipoProd = 'LC' THEN 3
							WHEN tp.TipoProd = 'SE' THEN 4
							WHEN tp.TipoProd = 'IN' THEN 5
							ELSE '' END) AS Ordem,
						COALESCE(tp.UnidadeMedida, tum.UnidadeMedida, '') AS UnidadeMedida,
						tp.Descricao AS NomeProduto,
						tpp.PrecoCusto AS PrecoCusto,
						ISNULL(y.EstoqueIni,0) As EstoqueInicial,
						ISNULL(Compra.Valor,0) As Compra,
						ISNULL(Devolucao.Valor,0) As EntradaDevolucao,
						ISNULL(Venda.Valor,0) AS Venda,
						ISNULL(Perda.Valor,0) As Perda,
						ISNULL(SaidaDevolucao.Valor,0) As SaidaDevolucao,
						ISNULL(ConsumoProprio.Valor,0) As ConsumoProprio,
						ISNULL(BrindeBonificacao.Valor,0) As BrindeBonificacao,
						ISNULL(x.Estoque,0) AS EstoqueFinal
							FROM [dbo].[tbMovimentacaoEstoque] tme WITH(NOLOCK)
						INNER JOIN [dbo].[tbProdutos] tp WITH(NOLOCK)
							ON tp.Id = tme.IdProduto
						LEFT JOIN [dbo].[tbUnidadeMedidas] tum WITH(NOLOCK)
							ON tum.Id = tp.IdUnidadeMedida
						LEFT JOIN [dbo].[tbProdutosPostos] tpp WITH(NOLOCK)
							ON tme.IdProduto = tpp.IdProduto

						OUTER APPLY(
							Select top 1 estoque
							from tbMovimentacaoEstoque
							where YEAR(data) = YEAR(@pDiaFiltro)
								AND MONTH(data) = MONTH(@pDiaFiltro)
								AND DAY(data) = DAY(@pDiaFiltro)
								AND IdProduto = tme.IdProduto
							order by data desc
						) x
						OUTER APPLY(
							Select top 1 estoque,
							(CASE
								when TipoMovimento = 'S' then (Estoque + Valor)
								when TipoMovimento = 'E' then (Estoque - Valor)
								else Estoque
							END) EstoqueIni
							from tbMovimentacaoEstoque
							where YEAR(data) = YEAR(@pDiaFiltro)
								AND MONTH(data) = MONTH(@pDiaFiltro)
								AND DAY(data) = DAY(@pDiaFiltro)
								AND IdProduto = tme.IdProduto
							order by data asc
						) y
						OUTER APPLY(
							Select 
								SUM(COALESCE(CASE WHEN mv.TipoMovimento = 'S' THEN mv.Valor ELSE -mv.valor END, 0)) AS Valor,
								mv.IdPosto,
								mv.IdProduto
							from tbMovimentacaoEstoque mv
							WHERE
								mv.TipoEstoque = 'V'
								AND (mv.Origem = 'Formulário de venda' OR mv.Origem = 'Cancelamento de venda' OR mv.Origem='Venda de mercadoria')
								AND YEAR(data) = YEAR(@pDiaFiltro)
								AND MONTH(data) = MONTH(@pDiaFiltro)
								AND DAY(data) = DAY(@pDiaFiltro)
								AND IdProduto = tme.IdProduto
							GROUP BY
								mv.IdPosto,
								mv.IdProduto
						) Venda
						OUTER APPLY(
							SELECT
								SUM(COALESCE(mv.Valor,0)) AS Valor,
								mv.IdPosto,
								mv.IdProduto
							FROM 
								tbMovimentacaoEstoque mv
							WHERE
								mv.TipoMovimento = 'E'
								AND mv.Origem = 'Compra do produto'
								AND YEAR(data) = YEAR(@pDiaFiltro)
								AND MONTH(data) = MONTH(@pDiaFiltro)
								AND DAY(data) = DAY(@pDiaFiltro)
								AND IdProduto = tme.IdProduto
							GROUP BY
								mv.IdPosto,
								mv.IdProduto
						) Compra
						OUTER APPLY(		
							SELECT
								SUM(COALESCE(CASE WHEN mv.TipoMovimento = 'E' THEN mv.Valor ELSE -mv.Valor END, 0)) AS Valor,
								mv.IdPosto,
								mv.IdProduto
							FROM 
								tbMovimentacaoEstoque mv
							WHERE
								(mv.Origem = 'Entrada de devolução' OR mv.Origem = 'Cancelamento da entrada de devolução')
								AND YEAR(data) = YEAR(@pDiaFiltro)
								AND MONTH(data) = MONTH(@pDiaFiltro)
								AND DAY(data) = DAY(@pDiaFiltro)
								AND IdProduto = tme.IdProduto
							GROUP BY
								mv.IdPosto,
								mv.IdProduto
						) Devolucao
						OUTER APPLY (
							SELECT
								SUM(COALESCE(CASE WHEN mv.TipoMovimento = 'S' THEN mv.Valor ELSE -mv.Valor END, 0)) AS Valor,
								mv.IdPosto,
								mv.IdProduto
							FROM 
								tbMovimentacaoEstoque mv
							WHERE
								(mv.Origem = 'Perda de produto' OR mv.Origem = 'Cancelamento da perda')
								AND YEAR(data) = YEAR(@pDiaFiltro)
								AND MONTH(data) = MONTH(@pDiaFiltro)
								AND DAY(data) = DAY(@pDiaFiltro)
								AND IdProduto = tme.IdProduto
							GROUP BY
								mv.IdPosto,
								mv.IdProduto
						) Perda
						OUTER APPLY (
							SELECT
								SUM(COALESCE(CASE WHEN mv.TipoMovimento = 'S' THEN mv.Valor ELSE -mv.Valor END, 0)) AS Valor,
								mv.IdPosto,
								mv.IdProduto
							FROM 
								tbMovimentacaoEstoque mv
							WHERE
								(mv.Origem = 'Saída por devolução' OR mv.Origem = 'Cancelamento da saída por devolução')
								AND YEAR(data) = YEAR(@pDiaFiltro)
								AND MONTH(data) = MONTH(@pDiaFiltro)
								AND DAY(data) = DAY(@pDiaFiltro)
								AND IdProduto = tme.IdProduto
							GROUP BY
								mv.IdPosto,
								mv.IdProduto
						) SaidaDevolucao
						OUTER APPLY (
							SELECT
								SUM(COALESCE(CASE WHEN mv.TipoMovimento = 'S' THEN mv.Valor ELSE -mv.Valor END, 0)) AS Valor,
								mv.IdPosto,
								mv.IdProduto
							FROM 
								tbMovimentacaoEstoque mv
							WHERE
								(mv.Origem = 'Consumo próprio' OR mv.Origem = 'Cancelamento do consumo próprio')
								AND YEAR(data) = YEAR(@pDiaFiltro)
								AND MONTH(data) = MONTH(@pDiaFiltro)
								AND DAY(data) = DAY(@pDiaFiltro)
								AND IdProduto = tme.IdProduto
							GROUP BY
								mv.IdPosto,
								mv.IdProduto
						) ConsumoProprio
						OUTER APPLY (
							SELECT
								SUM(COALESCE(CASE WHEN mv.TipoMovimento = 'S' THEN mv.Valor ELSE -mv.Valor END, 0)) AS Valor,
								mv.IdPosto,
								mv.IdProduto
							FROM 
								tbMovimentacaoEstoque mv
							WHERE
								(mv.Origem = 'Brinde ou bonificação' OR mv.Origem = 'Cancelamento do brinde ou bonificação')
								AND YEAR(data) = YEAR(@pDiaFiltro)
								AND MONTH(data) = MONTH(@pDiaFiltro)
								AND DAY(data) = DAY(@pDiaFiltro)
								AND IdProduto = tme.IdProduto
							GROUP BY
								mv.IdPosto,
								mv.IdProduto
						) BrindeBonificacao
						WHERE tme.IdPosto = @pIdPosto
							 AND tpp.IdPosto = @pIdPosto
							  --AND ti.Mes = MONTH(@pDiaFiltro)-1
							  --AND ti.Ano = YEAR(@pDiaFiltro)
							  AND YEAR(tme.data) = YEAR(@pDiaFiltro)
							  AND MONTH(tme.data) = MONTH(@pDiaFiltro)
							  AND DAY(tme.data) = DAY(@pDiaFiltro)
							  AND tp.Ativo = 1
							  AND (tme.Origem = 'Formulário de venda' OR tme.Origem = 'Cancelamento de venda' OR tme.Origem='Venda de mercadoria' OR 
								   tme.Origem = 'Compra do produto' OR 
								   tme.Origem = 'Entrada de devolução' OR tme.Origem = 'Cancelamento da entrada de devolução' OR 
								   tme.Origem = 'Perda de produto' OR tme.Origem = 'Cancelamento da perda' OR 
								   tme.Origem = 'Saída por devolução' OR tme.Origem = 'Cancelamento da saída por devolução' OR 
								   tme.Origem = 'Consumo próprio' OR tme.Origem = 'Cancelamento do consumo próprio' OR 
								   tme.Origem = 'Brinde ou bonificação' OR tme.Origem = 'Cancelamento do brinde ou bonificação')
		
			) GenericObj
			group by TipoProduto,Ordem,UnidadeMedida,NomeProduto,PrecoCusto,EstoqueInicial,Compra,EntradaDevolucao,Venda,Perda,SaidaDevolucao,ConsumoProprio,BrindeBonificacao,EstoqueFinal

			INSERT INTO #TEMP (TipoProduto,Ordem,UnidadeMedida,NomeProduto,PrecoCusto,EstoqueInicial,Compra,Venda,EstoqueFinal)
				select 
					(CASE WHEN tp.TipoProd = 'CB' THEN 'Combustível' 
						ELSE '' END) AS TipoProduto,
					(CASE WHEN tp.TipoProd = 'CB' THEN 1
						ELSE '' END) AS Ordem,
					tp.UnidadeMedida AS UnidadeMedida,
					tp.Descricao AS NomeProduto,
					ISNULL(a.PrecoCusto,0) AS PrecoCusto,
					SUM(ISNULL(x.MedicaoIni,0)) AS EstoqueInicial,
					SUM(ISNULL(z.ENTRADA,0)) AS Compra,
					SUM(ISNULL(a.SAIDA,0)) * -1 AS Venda,
					SUM(ISNULL(y.MedicaoFim,0)) AS EstoqueFinal
				from tbTanques tqq
					inner join tbProdutos tp
					on tqq.IdProduto = tp.Id
				OUTER APPLY(
					SELECT trm.ValorMedicao AS MedicaoIni
					FROM [dbo].[tbReducaoMedicao] trm WITH(NOLOCK)
					WHERE trm.idReducaoEmissao = (SELECT Id
													FROM [dbo].[tbReducaoEmissao] tre WITH(NOLOCK)
													WHERE tre.DataMovimento = @pDiaFiltro -1
															AND tre.IdPosto = @pIdPosto)
							AND trm.TipoMedicaoOrigem = 'T'
							AND trm.idMedicaoOrigem = tqq.Id
				) x
				OUTER APPLY(
					SELECT trm.ValorMedicao AS MedicaoFim
					FROM [dbo].[tbReducaoMedicao] trm WITH(NOLOCK)
					WHERE trm.idReducaoEmissao = (SELECT Id
													FROM [dbo].[tbReducaoEmissao] tre WITH(NOLOCK)
													WHERE tre.DataMovimento = @pDiaFiltro
															AND tre.IdPosto = @pIdPosto)
							AND trm.TipoMedicaoOrigem = 'T'
							AND trm.idMedicaoOrigem = tqq.Id
				) y
				OUTER APPLY(
					select 
						CONVERT(decimal(15,4),tpir.qtd) as ENTRADA
					from [tbPedidosItensRecebidos] tpir
					INNER JOIN [dbo].tbTanques tq
						ON tpir.IdTanque = tq.Id
					where tpir.DataMovimento = @pDiaFiltro
					and tpir.IdPosto = @pIdPosto
					and tqq.id = tq.id
				)z
				OUTER APPLY(
					SELECT 
						ISNULL(SUM(CONVERT(decimal(15,2), LTRIM(RTRIM(REPLACE(REPLACE(ta.EncerranteInicial, '.', ''), ',', '.')))) - CONVERT(decimal(14,2), LTRIM(RTRIM(REPLACE(REPLACE(ta.Encerrante, '.', ''), ',', '.'))))), 0) AS SAIDA,
						CONVERT(decimal(15,2), LTRIM(RTRIM(REPLACE(REPLACE(ta.ppu, '.', ''), ',', '.')))) As PrecoCusto
						--CONVERT(decimal(15,2),ta.ppu) As PrecoCusto
					FROM [dbo].[tbAbastecimentos] ta WITH(NOLOCK)
							LEFT JOIN [dbo].[tbVendas] tv WITH(NOLOCK)
								ON tv.Id = ta.Idvenda
					WHERE tv.IdPosto = @pIdPosto
						AND ta.NumTanque = tqq.NumTanque
						AND YEAR(tv.Data) = YEAR(@pDiaFiltro)
						AND MONTH(tv.Data) = MONTH(@pDiaFiltro)
						AND DAY(tv.Data) = DAY(@pDiaFiltro)
						AND ta.Status <> 'AFERICAO'
					GROUP BY ta.ppu
				)a
				where tqq.IdPosto = @pIdPosto
				and tqq.Ativo = 1
				group by tp.TipoProd,tp.UnidadeMedida,tp.Descricao,a.PrecoCusto


		SELECT *
		FROM #TEMP
		--group by TipoProduto,Ordem,UnidadeMedida,NomeProduto,PrecoCusto,EstoqueInicial,Compra,EntradaDevolucao,Venda,Perda,SaidaDevolucao,ConsumoProprio,BrindeBonificacao,EstoqueFinal

		DROP TABLE #TEMP
	END
GO
/****** Object:  StoredProcedure [dbo].[rptRelNotasFiscaisCliente]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[rptRelNotasFiscaisCliente]
	@pIdPosto	uniqueidentifier,
	@pDataIni	datetime,
	@pDataFim	datetime,
	@pIdEntidade uniqueidentifier
	AS

	--SET FMTONLY OFF

	/*
		Descrição.: Seleciona as informações necessárias para a geração do relatório de notas fiscais de saída emitidas para o cliente.
		Autor.....: MangaTech - Pedro Henrique Cardoso Elias
		Data......: 29/08/2023
		Ex........: EXEC [dbo].[rptRelNotasFiscaisCliente] '0F4ECF32-8D70-40D1-81AD-0EBD6529FA90', '2022-08-01 00:00:00', '2023-08-31 23:59:59', 'C3433765-4E5B-4261-8AD2-AB9C00E2E36A'
	*/
	BEGIN
		CREATE TABLE #TEMP(
			DataEmissao			varchar(MAX),
			HoraEmissao			varchar(MAX),
			Numero				integer,
			ChaveNota			varchar(MAX),
			Serie				integer,
			Status				varchar(MAX),
			Tipo				varchar(MAX),
			ModulodeEmissao		varchar(MAX),
			ValorTotal			decimal(15,2)
		)

		INSERT INTO #TEMP
			SELECT FORMAT(tnfe.DataEmissao, 'dd/MM/yyyy') AS DataEmissao,
				   FORMAT(tnfe.DataEmissao, 'HH:mm') AS HoraEmissao,
				   tnfe.Numero,
				   tnfe.ChaveNota,
				   CONVERT(integer, RTRIM(LTRIM(tnfe.Serie))) AS Serie,
				   tnfe.Motivo AS Status,
				   tnfe.Tipo,
				   tnfe.ModulodeEmissao,
				   CONVERT(decimal(15,2), SUBSTRING(XML_NFE, PATINDEX('%<vNF>%', XML_NFE)+5, PATINDEX('%</vNF>%', XML_NFE) - PATINDEX('%<vNF>%', XML_NFE) - 5)) AS ValorTotal
				FROM [dbo].[tbNotaFiscalEletronica] tnfe WITH(NOLOCK)
					INNER JOIN [dbo].[tbEntidades] te WITH(NOLOCK)
						ON te.Id = tnfe.IdEntidade
					INNER JOIN [dbo].[tbPostos] tp WITH(NOLOCK)
						ON tp.Id = tnfe.IdPosto
				WHERE Status = '100'
					  AND tnfe.Tipo NOT IN ('Despesa', 'Compra de Lubrificante', 'Compra de Combustível', 'Compra de Conveniência')
					  AND CONVERT(varchar(MAX), tnfe.Motivo) IN ('Cancelada', 'Autorizado o uso da NF-e')
					  AND tnfe.DataEmissao BETWEEN @pDataIni AND @pDataFim
					  AND tnfe.IdPosto = @pIdPosto 
					  AND tnfe.IdEntidade = @pIdEntidade
				ORDER BY tnfe.DataEmissao

		SELECT T.DataEmissao,
			   T.HoraEmissao,
			   T.Numero,
			   T.ChaveNota,
			   T.Serie,
			   T.Status,
			   T.Tipo,
			   T.ModulodeEmissao,
			   T.ValorTotal
			FROM #TEMP T

		--SET FMTONLY ON

		DROP TABLE #TEMP

	END
GO
/****** Object:  StoredProcedure [dbo].[rptRelNotasFiscaisSaidaEmitidas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[rptRelNotasFiscaisSaidaEmitidas]
	@pIdPosto	uniqueidentifier,
	@pDataIni	datetime,
	@pDataFim	datetime
	AS

	--SET FMTONLY OFF

	/*
		Descrição.: Seleciona as informações necessárias para a geração do relatório de notas fiscais de saída emitidas.
		Autor.....: MangaTech - Alysson Estevam
		Data......: 28/06/2021
		Ex........: EXEC [dbo].[rptRelNotasFiscaisSaidaEmitidas] 'A94EB478-1BCF-4A4E-9039-0748EC51BBE0', '2021-05-01 00:00:00', '2021-05-31 23:59:59'
		Correção..: MangaTech - Lucas Alves
		Data Cor..: 12/05/2022
		Explicação: O recurso CHARINDEX possui uma limitação de aprox. 8.000 caracteres, houve um caso onde a nota tinha mais de 10.000 caracteres, o que estava causando problemas. Foi necessário substituir por PATINDEX.
	*/

	BEGIN
		CREATE TABLE #TEMP(
			DataEmissao			varchar(MAX),
			DataSaida			varchar(MAX),
			Numero				integer,
			Serie				integer,
			Status				varchar(MAX),
			Tipo				varchar(MAX),
			Cliente				varchar(MAX),
			UF					varchar(2),
			ValorTotal			decimal(15,2)
		)

		INSERT INTO #TEMP
			SELECT FORMAT(tnfe.DataEmissao, 'dd/MM/yyyy') AS DataEmissao,
				   FORMAT(tnfe.DataEntradaSaida, 'dd/MM/yyyy') AS DataSaida,
				   tnfe.Numero,
				   CONVERT(integer, RTRIM(LTRIM(tnfe.Serie))) AS Serie,
				   tnfe.Motivo AS Status,
				   tnfe.Tipo,
				   te.RzSocial AS Cliente,
				   tp.UF,
				   CONVERT(decimal(15,2), SUBSTRING(XML_NFE, PATINDEX('%<vNF>%', XML_NFE)+5, PATINDEX('%</vNF>%', XML_NFE) - PATINDEX('%<vNF>%', XML_NFE) - 5)) AS ValorTotal
				FROM [dbo].[tbNotaFiscalEletronica] tnfe WITH(NOLOCK)
					INNER JOIN [dbo].[tbEntidades] te WITH(NOLOCK)
						ON te.Id = tnfe.IdEntidade
					INNER JOIN [dbo].[tbPostos] tp WITH(NOLOCK)
						ON tp.Id = tnfe.IdPosto
				WHERE Status = '100'
					  AND tnfe.Tipo NOT IN ('Despesa', 'Compra de Lubrificante', 'Compra de Combustível', 'Compra de Conveniência')
					  AND CONVERT(varchar(MAX), tnfe.Motivo) IN ('Cancelada', 'Autorizado o uso da NF-e')
					  AND tnfe.DataEmissao BETWEEN @pDataIni AND @pDataFim
					  AND tnfe.IdPosto = @pIdPosto
				ORDER BY tnfe.DataEmissao

		SELECT T.DataEmissao,
			   T.DataSaida,
			   T.Numero,
			   T.Serie,
			   T.Status,
			   T.Tipo,
			   T.Cliente,
			   T.UF,
			   T.ValorTotal
			FROM #TEMP T

		--SET FMTONLY ON

		DROP TABLE #TEMP
	END
GO
/****** Object:  StoredProcedure [dbo].[rptRelPagamentoCompraProduto]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[rptRelPagamentoCompraProduto]
	@pDiaMovimento datetime,
	@pIdPosto uniqueidentifier

AS

DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
INSERT INTO @tblCaixas
    SELECT Id
    FROM tbCaixa  with(nolock)
    WHERE Dia = @pDiaMovimento AND IdPosto = @pIdPosto

SELECT
	CASE cc.TipoIntencaoPagar
		WHEN 'Movimento' THEN 'Pago pelo movimento' ELSE 'Pago pela conta bancária'
	END AS Descricao,
	e.RzSocial AS Fornecedor,
	CASE 
		WHEN e.TipoFornecedorLubrificante = 1 THEN 'Lubrificante'
		WHEN e.TipoFornecedorConveniencia = 1 THEN 'Conveniência'
		ELSE 'Combustível' END AS Setor,
	CASE 
		WHEN e.TipoFornecedorLubrificante = 1 THEN t.Lubrificante 
		WHEN e.TipoFornecedorConveniencia = 1 THEN t.Conveniencia 
		ELSE 0 END AS Limite,
	(
		select ISNULL(SUM(t.Estoque * t.PrecoVenda),0) ValorEstoque from (
			select
				mv.Data,
				mv.DataMovimento,
				mv.IdProduto,
				mv.Estoque,
				mv.Almoxarifado,
				mv.PrecoVenda,
				mv.PrecoCusto,
				mv.TipoMovimento,
				mv.TipoEstoque,
				mv.Valor,
				mv.Origem,
				mv.NumeroCupom,
				mv.IdPosto,
				row_number() over(partition by mv.IdProduto order by mv.Data desc) as rn
			from
				tbMovimentacaoEstoque mv
				inner join tbProdutos on mv.IdProduto = tbProdutos.Id
				inner join tbProdutosPostos on tbProdutosPostos.IdProduto = tbProdutos.Id and tbProdutosPostos.IdPosto = (select Id from tbPostos where NomeUsual = 'Moda')
			where
				mv.DataMovimento <= @pDiaMovimento
				and tbProdutos.TipoProd = (CASE WHEN e.TipoFornecedorLubrificante = 1 THEN 'LB' WHEN e.TipoFornecedorLubrificante = 2 THEN 'LC' ELSE 'CB' END)
				and mv.IdPosto = @pIdPosto
		) t
		where t.rn = 1
	) AS EstoqueAtual,
	cc.Valor,
	CASE WHEN cc.InfoAdic <> 'Compra de produtos para revenda' THEN cc.InfoAdic ELSE '' END Complemento
FROM
	tbContasPagarReceber cc
	INNER JOIN tbEntidades e ON e.Id = cc.IdEntidade
	INNER JOIN tbProdutosEstoqueTeto t ON cc.IdPosto = t.IdPosto
	INNER JOIN tbHistoricos h ON cc.IdHistorico = h.Id
WHERE
	cc.IdPedCaixa in (SELECT IdCaixa from @tblCaixas)
	AND cc.Despesa = 1
	AND cc.idTipo = 'PG'
	AND cc.IdPosto = @pIdPosto
	AND h.Descricao IN ('Combustível','Lubrificantes','Conveniência')

GO
/****** Object:  StoredProcedure [dbo].[rptRelPagamentoDespesa]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[rptRelPagamentoDespesa]
	@pDiaMovimento datetime,
	@pIdPosto uniqueidentifier

AS

DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
INSERT INTO @tblCaixas
    SELECT Id
    FROM tbCaixa  with(nolock)
    WHERE Dia = @pDiaMovimento AND IdPosto = @pIdPosto

SELECT
	CASE cc.TipoIntencaoPagar
		WHEN 'Movimento' THEN 'Pago pelo movimento' ELSE 'Pago pela conta bancária'
	END AS Descricao,
	e.RzSocial AS Fornecedor,
	h.Descricao AS Historico,
	cc.InfoAdic AS Complemento,
	cc.Valor
FROM
	tbContasPagarReceber cc
	INNER JOIN tbEntidades e ON e.Id = cc.IdEntidade
	INNER JOIN tbProdutosEstoqueTeto t ON cc.IdPosto = t.IdPosto
	INNER JOIN tbHistoricos h ON cc.IdHistorico = h.Id
WHERE
	cc.IdPedCaixa in (SELECT IdCaixa from @tblCaixas)
	AND cc.Despesa = 1
	AND cc.idTipo = 'PG'
	AND h.Descricao NOT IN ('Combustível','Lubrificantes','Conveniência')
	AND cc.IdPosto = @pIdPosto
GO
/****** Object:  StoredProcedure [dbo].[rptRelPosto]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptRelPosto
CREATE PROCEDURE [dbo].[rptRelPosto] @pIdposto UNIQUEIDENTIFIER
AS
    SELECT dbo.tbPostos.Id
           ,dbo.tbPostos.RzSocial
           ,dbo.tbPostos.NomeUsual
           ,dbo.tbPostos.Ativo
           ,dbo.tbPostos.Rede
           ,dbo.tbPostos.CNPJ
           ,dbo.tbPostos.IE
           ,dbo.tbPostos.Endereco
           ,dbo.tbPostos.Bairro
           ,dbo.tbPostos.UF
           ,dbo.tbPostos.CEP
           ,dbo.tbPostos.Fone
           ,dbo.tbPostos.Fax
           ,dbo.tbPostos.IdContato
           ,dbo.tbPostos.IdGerenteGeral
           ,dbo.tbPostos.IdContador
           ,dbo.tbPostos.ValorContador
           ,dbo.tbPostos.IdContaCorrente
           ,dbo.tbPostos.Internet
           ,dbo.tbPostos.ValorInternet
           ,dbo.tbPostos.HorarioFunc
           ,dbo.tbPostos.AluguelMensal
           ,dbo.tbPostos.OBS
           ,dbo.tbPostos.IP
           ,dbo.tbPostos.idRede
           ,dbo.tbPostos.TipoMonitoramento
           ,dbo.tbPostos.MetaDespesa
           ,dbo.tbPostos.TetoEstoque
           ,dbo.tbPostos.HorarioAlmoco
           ,dbo.tbPostos.CRCContador
           ,dbo.tbPostos.Intrajornada
           ,dbo.tbPostos.ContatoSintegra
           ,dbo.tbPostos.PLR
           ,dbo.tbPostos.IM
           ,dbo.tbContasBancarias.Id
           ,dbo.tbContasBancarias.idPosto    AS Expr1
           ,dbo.tbContasBancarias.Titular
           ,dbo.tbContasBancarias.Banco
           ,dbo.tbContasBancarias.Descricao
           ,dbo.tbContasBancarias.Agencia
           ,dbo.tbContasBancarias.Conta
           ,dbo.tbContasBancarias.Saldo
           ,dbo.tbContasBancarias.DataConciliacao
           ,dbo.tbContasBancarias.Ativo      AS Expr2
           ,(SELECT SUM(Salario + PercPericulosidade + AdicNoturno
                        + QCaixa + SalFamilia) AS Colaboradores
             FROM   dbo.tbFuncs  with(nolock)
             WHERE  ( IdPosto = @pIDPosto )) AS Colaboradores
           ,'Banco ' + dbo.tbContasBancarias.Banco + 'AG '
            + dbo.tbContasBancarias.Agencia + ' Conta '
            + dbo.tbContasBancarias.Conta    AS Conta
           ,dbo.tbCidades.Descricao          AS Municipio
    FROM   dbo.tbPostos  with(nolock)
           INNER JOIN dbo.tbContasBancarias  with(nolock)
                   ON dbo.tbPostos.IdContaCorrente = dbo.tbContasBancarias.Id
           INNER JOIN dbo.tbCidades  with(nolock)
                   ON dbo.tbPostos.IdMunicipio = dbo.tbCidades.id
    WHERE  ( dbo.tbPostos.Id = @pIdPosto )
       AND ( dbo.tbContasBancarias.Ativo = 1 ) 

GO
/****** Object:  StoredProcedure [dbo].[rptRelPostoBico]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptRelPostoBico
CREATE PROCEDURE [dbo].[rptRelPostoBico] @pIdposto UNIQUEIDENTIFIER
AS
    SELECT dbo.tbBombas.Id
           ,dbo.tbProdutos.Descricao
           ,dbo.tbBombas.Encerrante
    FROM   dbo.tbBombas with(nolock)
           INNER JOIN dbo.tbTanques with(nolock)
                   ON dbo.tbBombas.IdPosto = dbo.tbTanques.IdPosto
                      AND dbo.tbBombas.IdTanque = dbo.tbTanques.Id
           INNER JOIN dbo.tbProdutos with(nolock)
                   ON dbo.tbTanques.IdProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbBombas.IdPosto = @pIDPosto ) 

GO
/****** Object:  StoredProcedure [dbo].[rptRelPostoColaboradores]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptRelPostoColaboradores
CREATE PROCEDURE [dbo].[rptRelPostoColaboradores] @pIdposto UNIQUEIDENTIFIER
AS
    SELECT dbo.tbUsuarios.NomeUsual
           ,CONVERT(NVARCHAR(10), dbo.tbFuncs.Admissao, 103) AS Admissao
           ,dbo.tbFuncs.Funcao
           ,dbo.tbFuncs.Salario
           ,dbo.tbFuncs.PercPericulosidade
           ,dbo.tbFuncs.AdicNoturno
           ,dbo.tbFuncs.QCaixa
           ,dbo.tbFuncs.SalFamilia
           ,Bonificacao
           ,Premio
           ,AjudaCusto
           ,dbo.tbFuncs.Salario
            + dbo.tbFuncs.PercPericulosidade
            + dbo.tbFuncs.AdicNoturno
            + dbo.tbFuncs.QCaixa + dbo.tbFuncs.SalFamilia
            + Bonificacao + Premio + AjudaCusto              AS Total
           ,CONVERT(NVARCHAR(10), dbo.tbFuncs.Ferias, 103)   AS Ferias
           ,CASE (SELECT count(*)
                  FROM   tbUsuarios  with(nolock)
                  WHERE  tbUsuarios.idEntidade = tbFuncs.idEntidade)
              WHEN 1 THEN 'Sim'
              ELSE 'Não'
            END                                              AS Usuario
    FROM   tbEntidades
               INNER JOIN tbUsuarios
                 ON tbEntidades.Id = tbUsuarios.IdEntidade
               INNER JOIN tbFuncs
                 ON tbEntidades.Id = tbFuncs.IdEntidade
    WHERE  ( dbo.tbFuncs.IdPosto = @pIDPosto )
    ORDER  BY dbo.tbFuncs.Funcao DESC
GO
/****** Object:  StoredProcedure [dbo].[rptRelPostoContas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptRelPostoContas
CREATE PROCEDURE [dbo].[rptRelPostoContas] @pIdposto UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbContasBancarias with(nolock)
    WHERE  idPosto = @pIDPosto
       AND tbContasBancarias.Ativo = 1 

GO
/****** Object:  StoredProcedure [dbo].[rptRelPostoNovo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptRelPostoNovo
CREATE PROCEDURE [dbo].[rptRelPostoNovo] @pIDpostoINI  UNIQUEIDENTIFIER
                                        ,@pIDPostoFIM UNIQUEIDENTIFIER
AS
    SELECT dbo.tbPostos.Id
           ,dbo.tbPostos.RzSocial
           ,dbo.tbPostos.NomeUsual
           ,dbo.tbPostos.Ativo
           ,dbo.tbPostos.Rede
           ,dbo.tbPostos.CNPJ
           ,dbo.tbPostos.IE
           ,dbo.tbPostos.Endereco
           ,dbo.tbPostos.Bairro
           ,dbo.tbPostos.IdMunicipio
           ,dbo.tbPostos.UF
           ,dbo.tbPostos.CEP
           ,dbo.tbPostos.Fone
           ,dbo.tbPostos.Fax
           ,dbo.tbPostos.IdContato
           ,dbo.tbPostos.IdGerenteGeral
           ,dbo.tbPostos.IdContador
           ,dbo.tbPostos.ValorContador
           ,dbo.tbPostos.IdContaCorrente
           ,dbo.tbPostos.Internet
           ,dbo.tbPostos.ValorInternet
           ,dbo.tbPostos.HorarioFunc
           ,dbo.tbPostos.AluguelMensal
           ,dbo.tbPostos.OBS
           ,dbo.tbPostos.IP
           ,dbo.tbPostos.idRede
           ,dbo.tbPostos.TipoMonitoramento
           ,dbo.tbPostos.MetaDespesa
           ,dbo.tbPostos.TetoEstoque
           ,dbo.tbPostos.HorarioAlmoco
           ,dbo.tbPostos.CRCContador
           ,dbo.tbPostos.Intrajornada
           ,dbo.tbPostos.ContatoSintegra
           ,dbo.tbPostos.PLR
           ,dbo.tbPostos.IM
           ,dbo.tbContasBancarias.Id
           ,dbo.tbContasBancarias.idPosto                              AS Expr1
           ,dbo.tbContasBancarias.Titular
           ,dbo.tbContasBancarias.Banco
           ,dbo.tbContasBancarias.Descricao
           ,dbo.tbContasBancarias.Agencia
           ,dbo.tbContasBancarias.Conta
           ,dbo.tbContasBancarias.Saldo
           ,dbo.tbContasBancarias.DataConciliacao
           ,dbo.tbContasBancarias.Ativo                                AS Expr2
           ,(SELECT SUM(Salario + PercPericulosidade + AdicNoturno
                        + QCaixa + SalFamilia) AS Colaboradores
             FROM   dbo.tbFuncs with(nolock)
             WHERE  ( IdPosto BETWEEN @pIdpostoINI AND @pidpostoFIM )) AS
            Colaboradores
           ,'Banco  ' + RTRIM(tbEntidadeRefBanc.Banco1)
            + '   ' + ' AG '
            + RTRIM(tbEntidadeRefBanc.Agencia1) + '   '
            + ' CC  ' + tbEntidadeRefBanc.Conta1                       AS Conta
    FROM   dbo.tbPostos with(nolock)
           INNER JOIN dbo.tbContasBancarias with(nolock)
                   ON dbo.tbPostos.IdContaCorrente = dbo.tbContasBancarias.Id
                      AND dbo.tbPostos.Id = dbo.tbContasBancarias.idPosto
           INNER JOIN dbo.tbEntidadeRefBanc with(nolock)
                   ON dbo.tbContasBancarias.Id = dbo.tbEntidadeRefBanc.Id
    WHERE  ( dbo.tbPostos.Id BETWEEN @pIdpostoINI AND @pidpostoFIM )
       AND ( dbo.tbPostos.Ativo = 1 ) 

GO
/****** Object:  StoredProcedure [dbo].[rptRelPostoTanque]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptRelPostoTanque
CREATE PROCEDURE [dbo].[rptRelPostoTanque] @pIdposto UNIQUEIDENTIFIER
AS
    SELECT dbo.tbTanques.Id
           ,dbo.tbProdutos.Descricao
           ,dbo.tbTanques.Medicao
           ,dbo.tbTanques.Capacidade
    FROM   dbo.tbTanques with(nolock)
           INNER JOIN dbo.tbProdutos with(nolock)
                   ON dbo.tbTanques.IdProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbTanques.IdPosto = @pIDPosto ) 

GO
/****** Object:  StoredProcedure [dbo].[rptRelRecebimentoChequePre]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[rptRelRecebimentoChequePre]
	@pDiaMovimento datetime,
	@pIdPosto uniqueidentifier

AS

SELECT
	e.RzSocial AS Cliente,
	e.Limite,
	vp.DataVencimento AS BomPara,
	vp.NumDoc AS NumeroCheque,
	vp.Valor,
	ISNULL((
		(SELECT
		  SUM(Valor)
		FROM tbContasPagarReceber
		WHERE IdEntidade = e.Id AND Data < @pDiaMovimento AND idTipo = 'RC')
		-
		(SELECT
		  SUM(Valor)
		FROM tbContasPagarReceber
		WHERE IdEntidade = e.Id AND Data < @pDiaMovimento AND idTipo = 'AR')
	),0) AS SaldoAnterior
FROM
	tbDepositoChequePre d
	INNER JOIN tbVendasItensPagamento vp on d.IdVendaItemPagamento = vp.Id
	INNER JOIN tbVendas v on vp.IdVenda = v.Id
	INNER JOIN tbEntidades e on v.IdCliente = e.Id
WHERE
	d.Pago = 1
	AND d.DataInclusaoNoMovimento = @pDiaMovimento
	AND v.IdPosto = @pIdPosto
GO
/****** Object:  StoredProcedure [dbo].[rptRelRecebimentoClientePrazo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[rptRelRecebimentoClientePrazo]
	@pDiaMovimento datetime,
	@pIdPosto uniqueidentifier

AS

SELECT
	CASE cc.TipoIntencaoPagar
		WHEN 'Movimento' THEN 'Incluso no movimento' ELSE 'Recebimento pelo financeiro'
	END AS Descricao,
    SUM(cc.Valor) AS Valor,
	e.RzSocial AS Nome,
	e.ProxFechamento,
	e.ProxVencimento,
	ISNULL((
		(SELECT
		  SUM(Valor)
		FROM tbContasPagarReceber
		WHERE IdEntidade = e.Id AND Data < @pDiaMovimento AND idTipo = 'RC')
		-
		(SELECT
		  SUM(Valor)
		FROM tbContasPagarReceber
		WHERE IdEntidade = e.Id AND Data < @pDiaMovimento AND idTipo = 'AR')
	),0) AS SaldoAnterior
FROM 
	tbContasPagarReceber cc
	INNER JOIN tbEntidades e ON cc.IdEntidade = e.Id
	INNER JOIN tbPostos ps ON cc.IdPosto = ps.Id
	INNER JOIN tbCaixa c on cc.IdPedCaixa = c.Id
WHERE 
	ps.Id = @pIdPosto
	AND c.Dia = @pDiaMovimento
	AND idTipo = 'RC'
	AND cc.InfoAdic = 'Recebimento Prazo'
	AND (cc.IdTipoDocto = 'DI' OR cc.IdTipoDocto = 'CV')
GROUP BY
	cc.TipoIntencaoPagar, e.Id, e.RzSocial, e.ProxFechamento, e.ProxVencimento
GO
/****** Object:  StoredProcedure [dbo].[rptRelResumoCuponsEmitidos]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[rptRelResumoCuponsEmitidos]
	@pIdPosto	uniqueidentifier,
	@pDataIni	datetime,
	@pDataFim	datetime
	AS

	--SET FMTONLY OFF

	/*
		Descrição: Seleciona as informações dos cupons agrupados por dia para serem exibidas no resumo de cupons fiscais emitidos.
		Autor....: MangaTech - Alysson Estevam
		Data.....: 22/06/2021
		Ex.......: EXEC [dbo].[rptRelResumoCuponsEmitidos] 'A94EB478-1BCF-4A4E-9039-0748EC51BBE0', '2020-12-01 00:00:00', '2021-01-05 23:59:59'
	*/

	BEGIN
		DECLARE @QuantidadeValidos	  integer,
				@QuantidadeCancelados integer

		SELECT @QuantidadeValidos = SUM(CASE WHEN tv.Status IS NULL THEN 1 ELSE 0 END),
			   @QuantidadeCancelados = SUM(CASE WHEN Status = 'CA' and XMLSat is null THEN 1 ELSE 0 END)
				FROM [dbo].[tbVendas] tv WITH(NOLOCK)
				WHERE tv.IdPosto = @pIdPosto
					  AND tv.Data BETWEEN @pDataIni AND @pDataFim
					  AND XMLSat IS NOT NULL 

		CREATE TABLE #TEMP(
			Data				varchar(MAX),
			Quantidade			integer,
			IntervaloInicio		integer,
			IntervaloFim		integer,
			ValorTotalDiario	money,
			CuponsValidos		integer,
			CuponsCancelados	integer
		)

		INSERT INTO #TEMP
			SELECT FORMAT(tv.DataMovimento, 'dd/MM/yyyy') AS Data,
				   COUNT(tv.Id) AS Quantidade,
				   MIN(tv.NumeroCupomSat) AS IntervaloInicio,
				   MAX(tv.NumeroCupomSat) AS IntervaloFim,
				   SUM(tv.ValorTotal) AS ValorTotalDiario,
				   @QuantidadeValidos AS CuponsValidos,
				   @QuantidadeCancelados AS CuponsCancelados
				FROM [dbo].[tbVendas] tv WITH(NOLOCK)
				WHERE tv.IdPosto = @pIdPosto
					  AND tv.Data BETWEEN @pDataIni AND @pDataFim
					  AND XMLSat IS NOT NULL
				GROUP BY tv.DataMovimento
				ORDER BY tv.DataMovimento

		SELECT T.Data AS Data,
			   T.Quantidade AS Quantidade,
			   T.IntervaloInicio AS IntervaloInicio,
			   T.IntervaloFim AS IntervaloFim,
			   T.ValorTotalDiario AS ValorTotalDiario,
			   T.CuponsValidos AS CuponsValidos,
			   T.CuponsCancelados AS CuponsCancelados
		FROM #TEMP T

		--SET FMTONLY ON

		DROP TABLE #TEMP
	END
GO
/****** Object:  StoredProcedure [dbo].[rptRelResumoLeqfid]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[rptRelResumoLeqfid]
	@pIdPosto	uniqueidentifier,
	@pDataIni	datetime,
	@pDataFim	datetime
	AS

	--SET FMTONLY OFF

	/*
		Descrição: Seleciona as informações necessárias para a geração do resumo do LEQFID.
		Autor....: MangaTech - Alysson Estevam
		Data.....: 07/07/2021
		Ex.......: EXEC [dbo].[rptRelResumoLeqfid] 'A94EB478-1BCF-4A4E-9039-0748EC51BBE0', '2021-05-01 00:00:00', '2021-05-31 23:59:59'
	*/

	BEGIN

	CREATE TABLE #TempData(
		Data		datetime,
		Descricao	varchar(50),
		Saida		decimal(15,4),
		IdProduto	uniqueidentifier,
		Ordem		integer
	)

	INSERT INTO #TempData
		SELECT ta.Data,
			   tp.Descricao,
			   SUM(CONVERT(decimal(14,2), LTRIM(RTRIM(REPLACE(REPLACE(ta.EncerranteInicial, '.', ''), ',', '.')))) - CONVERT(decimal(14,2), LTRIM(RTRIM(REPLACE(REPLACE(ta.Encerrante, '.', ''), ',', '.'))))) AS Saida,
			   tp.Id AS IdProduto,
			   tp.ordem AS Ordem
			FROM [dbo].[tbAbastecimentos] ta WITH(NOLOCK)
				INNER JOIN [dbo].[tbProdutos] tp WITH(NOLOCK)
					ON tp.Id = ta.IdProduto
			WHERE ta.IdPosto = @pIdPosto
				  AND Data BETWEEN @pDataIni AND @pDataFim
				  AND ta.Status <> 'AFERICAO'
			GROUP BY tp.ordem, tp.Descricao, ta.Data, tp.Id
			ORDER BY ta.Data

	SELECT FORMAT(td.Data, 'dd/MM/yyyy') Data,
		   td.Descricao,
		   ISNULL(Saida, 0) AS Saida,
		   x.MedicaoIni,
		   y.MedicaoFim,
		   ISNULL(z.Entrada, 0) AS Entrada,
		   td.Ordem  
		FROM #TempData td
			OUTER APPLY(
				SELECT SUM(trm.ValorMedicao) AS MedicaoIni
					FROM [dbo].[tbReducaoMedicao] trm WITH(NOLOCK)
					WHERE trm.idReducaoEmissao = (SELECT Id
													FROM [dbo].[tbReducaoEmissao] tre WITH(NOLOCK)
													WHERE tre.DataMovimento = DATEADD(d, -1, CONVERT(datetime, CONCAT(YEAR(td.Data), '-', MONTH(td.Data), '-', DAY(td.Data), ' 00:00:00')))
														  AND tre.IdPosto = @pIdPosto)
						  AND trm.IdProduto = td.IdProduto
						  AND trm.TipoMedicaoOrigem = 'T'
			) x
			OUTER APPLY(
				SELECT SUM(trm.ValorMedicao) AS MedicaoFim
					FROM [dbo].[tbReducaoMedicao] trm WITH(NOLOCK)
					WHERE trm.idReducaoEmissao = (SELECT Id
													FROM [dbo].[tbReducaoEmissao] tre WITH(NOLOCK)
													WHERE tre.DataMovimento = CONVERT(datetime, CONCAT(YEAR(td.Data), '-', MONTH(td.Data), '-', DAY(td.Data), ' 00:00:00'))
														  AND tre.IdPosto = @pIdPosto)
						  AND trm.IdProduto = td.IdProduto
						  AND trm.TipoMedicaoOrigem = 'T'
			) y
			OUTER APPLY(
				SELECT SUM(tpi.QTDRecebido) AS Entrada
					FROM [dbo].[tbPedidosItens] tpi WITH(NOLOCK)
					WHERE tpi.DataRecebimento IS NOT NULL
						  AND tpi.DataRecebimento = CONVERT(datetime, CONCAT(YEAR(td.Data), '-', MONTH(td.Data), '-', DAY(td.Data), ' 00:00:00'))
						  AND tpi.IdProduto = td.IdProduto
			) z

	--SET FMTONLY ON

	DROP TABLE #TempData

	END
GO
/****** Object:  StoredProcedure [dbo].[rptRelResumoLmc]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[rptRelResumoLmc]
	@pIdPosto	uniqueidentifier,
	@pDataIni	datetime,
	@pDataFim	datetime
	AS

	--SET FMTONLY OFF

	/*
		Descrição: Seleciona as informações necessárias para a geração do resumo de movimentação de combustível.
		Autor....: MangaTech - Letícia Proença
		Data.....: 20/06/2022 - Modificação
		Ex.......: EXEC rptRelResumoLmc '6604EF36-5513-445C-86CF-A6F7C15CD5DE' ,'2023-05-01', '2023-05-31' 
	*/
	BEGIN

	CREATE TABLE #TempData(
		Data		datetime,
		Descricao	varchar(50),
		Saida		decimal(15,4),
		Afericao	decimal(15,4),
		IdProduto	uniqueidentifier,
		Ordem		integer,
		Tanque		uniqueidentifier,
		NumTanque   int,
		Capacidade  int
	)

	INSERT INTO #TempData
		SELECT ta.Data,
			   tp.Descricao,
			   CASE WHEN (SELECT COUNT(*) FROM tbDescontinuidadeEncerrantes WHERE Data = ta.Data and Motivo = 'Virou a casa do milhão na bomba')>0 THEN
						SUM(CASE WHEN Status <> 'AFERICAO' THEN
								CONVERT(decimal(14,3), LTRIM(RTRIM(REPLACE(REPLACE(ta.TotalLitros, '.', ''), ',', '.')))) * - 1
							END)
					ELSE
						SUM(CASE WHEN Status <> 'AFERICAO' THEN
								CONVERT(decimal(14,2), LTRIM(RTRIM(REPLACE(REPLACE(ta.EncerranteInicial, '.', ''), ',', '.')))) - CONVERT(decimal(14,2), LTRIM(RTRIM(REPLACE(REPLACE(ta.Encerrante, '.', ''), ',', '.'))))
							END)
				END AS Saida,
			   SUM(CASE WHEN Status = 'AFERICAO' THEN
						CONVERT(decimal(14,3), LTRIM(RTRIM(REPLACE(REPLACE(ta.TotalLitros, '.', ''), ',', '.')))) END) AS Afericao,
			   tp.Id AS IdProduto,
			   tp.ordem AS Ordem,
			   tq.id as tanque,
			   tq.numtanque as numtanque,
			   tq.capacidade as capacidade
			FROM [dbo].[tbAbastecimentos] ta WITH(NOLOCK)
				INNER JOIN [dbo].[tbProdutos] tp WITH(NOLOCK)
					ON tp.Id = ta.IdProduto
				INNER JOIN [dbo].[tbTanques] tq WITH(NOLOCK)
					ON tq.NumTanque=ta.NumTanque
			WHERE ta.IdPosto = @pIdPosto
				  AND Data BETWEEN @pDataIni AND @pDataFim				  
				  AND tq.Ativo=1
				  AND tq.IdPosto=@pIdPosto				  
			GROUP BY tp.ordem, tp.Descricao, ta.Data, tp.Id, tq.id, tq.NumTanque, tq.Capacidade
			ORDER BY ta.Data


	SELECT ROW_NUMBER() OVER (ORDER BY Data) AS ID,
		   FORMAT(td.Data, 'dd/MM/yyyy') Data,
		   td.Descricao,
		   CASE
				WHEN LAG(td.Data) OVER (PARTITION BY td.Data, td.NumTanque ORDER BY td.Data) = td.Data THEN 0
				ELSE ISNULL(Saida, 0) 
		   END AS Saida,
		   x.MedicaoIni,
		   y.MedicaoFim,
		   ISNULL(z.Entrada, 0) AS Entrada,
		   z.Nota AS Nota,		     
		   td.Afericao,
		   td.Ordem,
		   td.Tanque,
		   td.NumTanque,
		   td.Capacidade
		FROM #TempData td
			OUTER APPLY(
				SELECT SUM(trm.ValorMedicao) AS MedicaoIni
					FROM [dbo].[tbReducaoMedicao] trm WITH(NOLOCK)
					WHERE trm.idReducaoEmissao = (SELECT Id
													FROM [dbo].[tbReducaoEmissao] tre WITH(NOLOCK)
													WHERE tre.DataMovimento = DATEADD(d, -1, CONVERT(datetime, CONCAT(YEAR(td.Data), '-', MONTH(td.Data), '-', DAY(td.Data), ' 00:00:00')))
														  AND tre.IdPosto = @pIdPosto)
						  AND trm.IdProduto = td.IdProduto
						  AND trm.TipoMedicaoOrigem = 'T'
						  AND trm.idMedicaoOrigem = td.Tanque
			
			) x
			OUTER APPLY(
				SELECT SUM(trm.ValorMedicao) AS MedicaoFim
					FROM [dbo].[tbReducaoMedicao] trm WITH(NOLOCK)
					WHERE trm.idReducaoEmissao = (SELECT Id
													FROM [dbo].[tbReducaoEmissao] tre WITH(NOLOCK)
													WHERE tre.DataMovimento = CONVERT(datetime, CONCAT(YEAR(td.Data), '-', MONTH(td.Data), '-', DAY(td.Data), ' 00:00:00'))
														  AND tre.IdPosto = @pIdPosto)
						  AND trm.IdProduto = td.IdProduto
						  AND trm.idMedicaoOrigem = td.Tanque
			
			) y
			OUTER APPLY(
				SELECT (tpir.qtd) AS Entrada,NumeroNota as Nota

					FROM [dbo].[tbPedidosItens] tpi WITH(NOLOCK)
						inner join [dbo].[tbPedidosItensRecebidos] tpir WITH(NOLOCK)
							ON tpi.id = tpir.IdItem
					WHERE tpi.DataRecebimento IS NOT NULL
						  AND tpi.DataRecebimento = CONVERT(datetime, CONCAT(YEAR(td.Data), '-', MONTH(td.Data), '-', DAY(td.Data), ' 00:00:00'))
						  AND tpi.IdProduto = td.IdProduto
					      AND tpir.IdTanque = td.Tanque

			) z
	

	--SET FMTONLY ON

	DROP TABLE #TempData

	
	END
GO
/****** Object:  StoredProcedure [dbo].[rptRelResumoVendasTurno]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[rptRelResumoVendasTurno]
	@pDiaMovimento datetime,
	@pIdPosto uniqueidentifier

AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

WITH CTE AS (
SELECT
	rownum = ROW_NUMBER() OVER (ORDER BY ci.IdObjeto, c.DataAbertura DESC, c.TCaixa),
	ci.ValorLido,
	ci.idObjeto,
	ci.IdCaixa,
	c.Dia
	FROM
		tbCaixa c
		INNER JOIN tbCaixaItens ci ON c.Id = ci.IdCaixa
	WHERE
		c.IdPosto = @pIdPosto
		AND ci.TipoLeitura = 'B'
)

SELECT 
	'Caixa ' + CAST(cx.TCaixa AS nvarchar(2)) AS Turno,
	u.NomeUsual AS Responsavel,
	cx.DataAbertura,
	cx.DataFechamento,
	(
		SELECT
			0
		WHERE
			NOT EXISTS(
				SELECT d.Id
				FROM
					tbCaixa c
					INNER JOIN tbColaboradoresDifCaixa d ON d.IdCaixa = c.Id
				WHERE
					c.Id = cx.Id
					AND d.Tipo IN ('R','C')
					AND d.IdEntidade = e.Id
			)
	) AS SemDiferencaCaixa,
	(
		SELECT
			d.Valor
		FROM
			tbCaixa c
			INNER JOIN tbColaboradoresDifCaixa d ON d.IdCaixa = c.Id
		WHERE
			c.Id = cx.Id
			AND d.Tipo = 'R'
			AND d.IdEntidade = e.Id
	) AS SobraCaixa,
	(
		SELECT
			d.Valor
		FROM
			tbCaixa c
			INNER JOIN tbColaboradoresDifCaixa d ON d.IdCaixa = c.Id
		WHERE
			c.Id = cx.Id
			AND d.Tipo = 'C'
			AND d.IdEntidade = e.Id
	) AS QuebraCaixa,
	(
		SELECT
			ROUND(COALESCE(SUM(vi.Quantidade),0),2,1)
		FROM
			tbVendasItens vi
			INNER JOIN tbVendas v ON v.Id = vi.IdVenda
			INNER JOIN tbProdutos p ON vi.IdProduto = p.Id
		WHERE
			v.Status IS NULL
			AND vi.Cancelado = 0
			AND v.IdCaixa = cx.Id
			AND p.TipoProd = 'CB'
	) TotalVendasCombustivel,
	(
		SELECT
			ROUND(COALESCE(SUM(vi.Quantidade),0),2,1)
		FROM
			tbVendasItens vi
			INNER JOIN tbVendas v ON v.Id = vi.IdVenda
			INNER JOIN tbProdutos p ON vi.IdProduto = p.Id
		WHERE
			v.Status IS NULL
			AND vi.Cancelado = 0
			AND v.IdCaixa = cx.Id
			AND p.TipoProd = 'LB'
	) TotalVendasLubrificante,
	(
		SELECT
			ROUND(COALESCE(SUM(vi.Quantidade),0),2,1)
		FROM
			tbVendasItens vi
			INNER JOIN tbVendas v ON v.Id = vi.IdVenda
			INNER JOIN tbProdutos p ON vi.IdProduto = p.Id
		WHERE
			v.Status IS NULL
			AND vi.Cancelado = 0
			AND v.IdCaixa = cx.Id
			AND p.TipoProd = 'LC'
	) TotalVendasConveniencia,
	(
		SELECT
			ROUND(COALESCE(SUM(vi.Quantidade),0),2,1)
		FROM
			tbVendasItens vi
			INNER JOIN tbVendas v ON v.Id = vi.IdVenda
			INNER JOIN tbProdutos p ON vi.IdProduto = p.Id
		WHERE
			v.Status IS NULL
			AND vi.Cancelado = 0
			AND v.IdCaixa = cx.Id
			AND p.Id = t.IdProduto
	) TotalVendasProduto,
	t.Descricao AS Produto,
	t.Ordem AS ProdutoOrdem,
	(
		SELECT
			COUNT(DISTINCT v.Id)
		FROM
			tbVendasItens vi
			INNER JOIN tbVendas v ON v.Id = vi.IdVenda
		WHERE
			v.Status IS NULL
			AND vi.Cancelado = 0
			AND v.IdCaixa = cx.Id
	) QuantidadeCliente
FROM
	tbCaixa cx
	INNER JOIN tbEntidades e ON cx.IdEntidade = e.Id
	INNER JOIN tbUsuarios u ON u.IdEntidade = e.Id
	LEFT JOIN (SELECT
				tbCaixa.Id AS IdCaixa, 
				pr.Id AS IdProduto,
				pr.Descricao,
				pr.Ordem
				FROM tbCaixa CROSS JOIN tbProdutosPostos pp
				INNER JOIN tbProdutos pr ON pr.Id = pp.IdProduto
				WHERE
					pp.IdPosto = @pIdPosto
					AND pr.TipoProd = 'CB' --Somente precisa explodir por combustível, por causa do detalhamento da matriz
					AND pr.Ativo = 1) t ON t.IdCaixa = cx.Id
WHERE
	cx.Dia = @pDiaMovimento
	AND cx.IdPosto = @pIdPosto
ORDER BY
	cx.TCaixa, t.Ordem
	

GO
/****** Object:  StoredProcedure [dbo].[rptRelResVendasLubConvMes]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptRelResVendasLubConvMes
CREATE PROCEDURE [dbo].[rptRelResVendasLubConvMes]
	@pDiaMovimento datetime,
	@pIdPosto uniqueidentifier

AS

DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
INSERT INTO @tblCaixas
    SELECT Id
    FROM tbCaixa  with(nolock)
    WHERE Dia BETWEEN CAST(CAST(YEAR(@pDiaMovimento) AS VARCHAR(4)) + '-' + CAST(MONTH(@pDiaMovimento) AS VARCHAR(2)) + '-01' AS datetime) AND @pDiaMovimento
		AND IdPosto = @pIdPosto

SELECT
	CASE dbo.tbProdutos.TipoProd
		WHEN 'LB' THEN 'Lubrificante'
		WHEN 'LC' THEN 'Conveniência'
	END AS TipoProduto,
	(
		SELECT
			COALESCE(SUM(Valor),0)
		FROM tbMovimentacaoEstoque
			INNER JOIN tbProdutos p ON tbMovimentacaoEstoque.IdProduto = p.Id
		WHERE
			IdPosto = @pIdPosto
			AND TipoEstoque = 'V' 
			AND TipoMovimento = 'E'
			AND Origem = 'Compra do produto'
			AND Data BETWEEN CAST(CAST(YEAR(@pDiaMovimento) AS VARCHAR(4)) + '-' + CAST(MONTH(@pDiaMovimento) AS VARCHAR(2)) + '-01' AS datetime) AND @pDiaMovimento
			AND p.TipoProd = dbo.tbProdutos.TipoProd
	) AS QtdComprada,	
	(
		SELECT
			ISNULL(SUM(dbo.tbVendasItens.Quantidade),0)
		FROM
			dbo.tbVendasItens with (nolock)
			INNER JOIN dbo.tbVendas with (nolock) ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda 
			INNER JOIN @tblCaixas cx ON dbo.tbVendas.idCaixa = cx.IdCaixa
			INNER JOIN tbProdutos p ON dbo.tbVendasItens.IdProduto = p.Id
		WHERE
			p.TipoProd = dbo.tbProdutos.TipoProd
			AND ( dbo.tbVendasItens.Cancelado = 0 )  
			AND ( dbo.tbVendas.Status IS NULL )
	) AS QtdVendida,
	(
		SELECT
			COALESCE(SUM(Valor * pp.PrecoCusto),0)
		FROM tbMovimentacaoEstoque
			INNER JOIN tbProdutosPostos pp ON tbMovimentacaoEstoque.IdProduto = pp.IdProduto AND 
												tbMovimentacaoEstoque.IdPosto = pp.IdPosto
			INNER JOIN tbProdutos p ON tbMovimentacaoEstoque.IdProduto = p.Id
		WHERE
			tbMovimentacaoEstoque.IdPosto = @pIdPosto
			AND TipoEstoque = 'V' 
			AND TipoMovimento = 'E'
			AND Origem = 'Compra do produto'
			AND tbMovimentacaoEstoque.Data BETWEEN CAST(CAST(YEAR(@pDiaMovimento) AS VARCHAR(4)) + '-' + CAST(MONTH(@pDiaMovimento) AS VARCHAR(2)) + '-01' AS datetime) AND @pDiaMovimento
			AND p.TipoProd = dbo.tbProdutos.TipoProd
	) AS ValorInvestido,
	(
		SELECT
			ISNULL(SUM(dbo.tbVendasItens.Quantidade * CASE WHEN dbo.tbVendasItens.PrecoEspecial > 0 THEN dbo.tbVendasItens.PrecoVenda ELSE dbo.tbVendasItens.PrecoVenda END),0)
		FROM
			dbo.tbVendasItens with (nolock)
			INNER JOIN dbo.tbVendas with (nolock) ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda 
			INNER JOIN @tblCaixas cx ON dbo.tbVendas.idCaixa = cx.IdCaixa
			INNER JOIN tbProdutos p ON dbo.tbVendasItens.IdProduto = p.Id
		WHERE
			p.TipoProd = dbo.tbProdutos.TipoProd
			AND ( dbo.tbVendasItens.Cancelado = 0 )  
			AND ( dbo.tbVendas.Status IS NULL )
	) AS TotalFaturado,
	(
		SELECT
			ISNULL(SUM(dbo.tbVendasItens.Quantidade),0) / (DATEDIFF(day, CAST(CAST(YEAR(@pDiaMovimento) AS VARCHAR(4)) + '-' + CAST(MONTH(@pDiaMovimento) AS VARCHAR(2)) + '-01' AS datetime), @pDiaMovimento) + 1)
		FROM
			dbo.tbVendasItens with (nolock)
			INNER JOIN dbo.tbVendas with (nolock) ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda 
			INNER JOIN @tblCaixas cx ON dbo.tbVendas.idCaixa = cx.IdCaixa
			INNER JOIN tbProdutos p ON dbo.tbVendasItens.IdProduto = p.Id
		WHERE
			p.TipoProd = dbo.tbProdutos.TipoProd
			AND ( dbo.tbVendasItens.Cancelado = 0 )  
			AND ( dbo.tbVendas.Status IS NULL )
	) AS MediaVendaGeral
FROM
	dbo.tbProdutosPostos with (nolock)  
    INNER JOIN dbo.tbProdutos with (nolock) ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
WHERE  
	( dbo.tbProdutosPostos.idPosto = @pIDPosto )  
    AND ( dbo.tbProdutos.tipoProd IN ('LB','LC') )
GROUP BY
	dbo.tbProdutos.TipoProd
ORDER BY
	dbo.tbProdutos.TipoProd
GO
/****** Object:  StoredProcedure [dbo].[rptRelResVendasMes]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[rptRelResVendasMes]
	@pDiaMovimento	datetime,
	@pIdPosto		uniqueidentifier
	AS

	/*
		Descrição.........: 
		Refatorado por....: MangaTech - Alysson Estevam
		Data..............: 01/07/2021
		Ex................: EXEC [dbo].[rptRelResVendasMes] '2021-06-28 00:00:00', 'A94EB478-1BCF-4A4E-9039-0748EC51BBE0' Titan - Expedicionários
							EXEC [dbo].[rptRelResVendasMes] '2021-06-28 00:00:00', '48925BC6-BFFA-4078-B46A-9A20F6716A00' Gidi - Vap Gás
							EXEC [dbo].[rptRelResVendasMes] '2022-08-01 00:00:00', 'DBD47B27-D8F1-4519-809D-BB234E6B9B98' Picoro - Picoro
	*/

	BEGIN
		WITH CTE AS (
			SELECT rownum = ROW_NUMBER() OVER (ORDER BY tci.IdObjeto, tc.DataAbertura DESC, tc.TCaixa),
				   tci.ValorLido,
				   tci.idObjeto,
				   tci.IdCaixa,
				   tc.Dia,
				   tc.TCaixa,
				   tb.Id AS IdBomba,
				   tb.IdTanque,
				   ISNULL((x.PrecoVenda), 0) PrecoVenda
				FROM [dbo].[tbCaixa] tc WITH(NOLOCK)
					INNER JOIN [dbo].[tbCaixaItens] tci WITH(NOLOCK)
						ON tci.IdCaixa = tc.Id
					INNER JOIN [dbo].[tbBombas] tb
						ON tb.NumBomba = tci.idObjeto
					OUTER APPLY(
						SELECT TOP 1 tvi.PrecoVenda
							FROM [dbo].[tbVendasItens] tvi WITH(NOLOCK)
								INNER JOIN [dbo].[tbVendas] tv WITH(NOLOCK)
									ON tv.Id = tvi.IdVenda
									   AND tv.IdPosto = @pIdPosto
								INNER JOIN [dbo].[tbProdutos] tp WITH(NOLOCK)
									ON tp.Id = tvi.IdProduto
								INNER JOIN [dbo].[tbTanques] tt
									ON tt.IdProduto = tp.Id
									   AND tt.IdPosto = @pIdPosto
							WHERE tv.IdCaixa = tc.Id
								  AND tp.TipoProd = 'CB'
								  AND tvi.IdBomba = tb.Id
					) x
				WHERE tc.IdPosto = @pIdPosto
					  AND tc.Dia BETWEEN DATEADD(d, -1, [dbo].[PrimeiroDiadoMes](MONTH(@pDiaMovimento), YEAR(@pDiaMovimento))) AND @pDiaMovimento
					  AND tb.IdPosto = @pIdPosto
					  AND tci.TipoLeitura = 'B'
					  AND tb.Ativo = 1
		)

		SELECT tpr.Descricao AS Produto,
			   tpr.Ordem,
			   x.LitrosComprados,
			   y.LitrosVendidos,
			   x.ValorInvestido,
			   z.TotalFaturado,
			   tt.NumTanque,
			   y.MediaVendaTanque
			FROM [dbo].[tbProdutosPostos] tpp WITH(NOLOCK)
				INNER JOIN [dbo].[tbProdutos] tpr WITH(NOLOCK)
					ON tpr.Id = tpp.IdProduto
				INNER JOIN [dbo].[tbTanques] tt WITH(NOLOCK)
					ON tt.IdProduto = tpr.Id
				OUTER APPLY(
					SELECT COALESCE(SUM(tpir.QTD), 0) AS LitrosComprados,
						   COALESCE(SUM(tpir.QTD * tpi.VUPro),0) AS ValorInvestido
						FROM [dbo].[tbPedidos] tp WITH(NOLOCK)
							INNER JOIN [dbo].[tbPedidosItens] tpi WITH(NOLOCK)
								ON tpi.IdPedido = tp.Id
							INNER JOIN [dbo].[tbPedidosItensRecebidos] tpir WITH(NOLOCK)
								ON tpir.IdItem = tpi.Id
								   AND tpir.IdPosto = tpi.IdPosto
							INNER JOIN [dbo].[tbCaixa] tc WITH(NOLOCK)
								ON tc.Id = tpir.IdCaixaRecebimento
						WHERE tpi.IdPosto = @pIdPosto
							  AND tc.Dia BETWEEN CAST(CAST(YEAR(@pDiaMovimento) AS VARCHAR(4)) + '-' + CAST(MONTH(@pDiaMovimento) AS VARCHAR(2)) + '-01' AS datetime) AND @pDiaMovimento
							  AND tpi.IdProduto = tpr.Id
							  AND tpir.IdTanque = tt.Id
				) x
				OUTER APPLY(
					SELECT SUM(TotalVendido) AS LitrosVendidos,
						   ROUND(SUM(TotalVendido) / DAY(@pDiaMovimento),3) AS MediaVendaTanque
						FROM (
							SELECT (CASE 
												WHEN ROUND(ISNULL(atual.ValorLido, 0) - ISNULL(anterior.ValorLido, 0) - ISNULL(SUM(Qtd),0),3,1) < 0  and atual.ValorLido < 950000
												THEN isnull((SELECT SUM(CAST(REPLACE(TotalLitros, ',','.') AS DECIMAL(13,4))) from tbAbastecimentos where NumBomba = atual.idObjeto and IdCaixa=atual.IdCaixa),0)
												WHEN ROUND(ISNULL(atual.ValorLido, 0) - ISNULL(anterior.ValorLido, 0) - ISNULL(SUM(Qtd),0),3,1) < 0 
												THEN ROUND(ISNULL(atual.ValorLido, 0) - ISNULL(anterior.ValorLido, 0) + ISNULL(tb.LimiteEncerrante,1000000) - ISNULL(SUM(Qtd),0),3,1)
												ELSE ROUND(ISNULL(atual.ValorLido, 0) - ISNULL(anterior.ValorLido, 0) - ISNULL(SUM(Qtd),0),3,1)
												END) AS TotalVendido
								FROM CTE atual WITH(NOLOCK)
									INNER JOIN CTE anterior WITH(NOLOCK)
										ON anterior.rownum - 1 = atual.rownum
									INNER JOIN [dbo].[tbBombas] tb WITH(NOLOCK)
										ON tb.NumBomba = atual.idObjeto
										   AND tb.NumBomba = anterior.idObjeto
									LEFT JOIN [dbo].[tbAfericao] ta WITH(NOLOCK)
										ON ta.IdCaixa = atual.IdCaixa
										   AND ta.IdBomba = tb.Id
								WHERE atual.Dia BETWEEN CAST(CAST(YEAR(@pDiaMovimento) AS VARCHAR(4)) + '-' + CAST(MONTH(@pDiaMovimento) AS VARCHAR(2)) + '-01' AS datetime) AND @pDiaMovimento
									  AND tt.Id = tb.IdTanque
									  AND tb.Ativo = 1
									  AND tb.IdPosto = @pIdPosto
								GROUP BY atual.IdCaixa,atual.idObjeto,tb.Id, atual.ValorLido, anterior.ValorLido,tb.LimiteEncerrante
						) AS T
				) y
				OUTER APPLY(
					SELECT SUM(TotalVendido) AS TotalFaturado
						FROM (
							SELECT ISNULL((SUM(ROUND((ROUND(tvi.Quantidade, 3, 1)+.001) * tvi.PrecoVenda, 2, 1))), 0) AS TotalVendido
								FROM CTE atual WITH(NOLOCK)
									INNER JOIN CTE anterior WITH(NOLOCK)
										ON anterior.rownum - 1 = atual.rownum
									INNER JOIN [dbo].[tbBombas] tb WITH(NOLOCK)
										ON tb.NumBomba = atual.idObjeto
										   AND tb.NumBomba = anterior.idObjeto
									INNER JOIN [dbo].[tbVendas] tv WITH(NOLOCK)
										ON tv.IdCaixa = atual.IdCaixa
									INNER JOIN [dbo].[tbVendasItens] tvi WITH(NOLOCK)
										ON tvi.IdVenda = tv.Id
									INNER JOIN [dbo].[tbProdutos] p WITH(NOLOCK)
										ON p.Id = tvi.IdProduto
									LEFT JOIN [dbo].[tbAfericao] ta WITH(NOLOCK)
										ON ta.IdCaixa = atual.IdCaixa
										   AND ta.IdBomba = tb.Id
								WHERE atual.Dia BETWEEN CAST(CAST(YEAR(@pDiaMovimento) AS VARCHAR(4)) + '-' + CAST(MONTH(@pDiaMovimento) AS VARCHAR(2)) + '-01' AS datetime) AND @pDiaMovimento
									  AND tt.Id = tb.IdTanque
									  AND tb.Ativo = 1
									  AND tb.IdPosto = @pIdPosto
									  AND tb.Id = tvi.IdBomba
									  AND tvi.Status is null
								GROUP BY tb.Id, atual.ValorLido, anterior.ValorLido
						) AS T
				) z
			WHERE tpp.IdPosto = @pIdPosto
				  AND tpr.TipoProd = 'CB'
				  AND tt.IdPosto = @pIdPosto
				  AND tpr.Ativo = 1
				  AND tt.Ativo = 1
			ORDER BY tpr.ordem, tt.NumTanque

	END
GO
/****** Object:  StoredProcedure [dbo].[rptRelResVendasMesMobile]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[rptRelResVendasMesMobile] 
	@pDiaMovimento datetime, @pIdPosto uniqueidentifier
AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

WITH CTE AS (
SELECT
	rownum = ROW_NUMBER() OVER (ORDER BY ci.IdObjeto, c.DataAbertura DESC, c.TCaixa),
	ci.ValorLido,
	ci.idObjeto,
	ci.IdCaixa,
	c.Dia,
	c.TCaixa,
	b.Id as IdBomba,
	b.IdTanque,
	ISNULL((SELECT TOP 1 vi.PrecoVenda 
		FROM tbVendasItens vi (nolock)
			INNER JOIN tbVendas v (nolock) ON vi.IdVenda = v.Id AND v.IdPosto = @pIdPosto
			INNER JOIN tbProdutos p ON vi.IdProduto = p.Id
			INNER JOIN tbTanques t ON t.IdProduto = p.Id AND t.IdPosto = @pIdPosto
		WHERE v.IdCaixa = c.Id
			AND p.TipoProd = 'CB'
			AND vi.IdBomba = b.Id),0) PrecoVenda
	FROM
		tbCaixa c
		INNER JOIN tbCaixaItens ci ON c.Id = ci.IdCaixa
		INNER JOIN tbBombas b ON ci.IdObjeto = b.NumBomba
	WHERE
		c.IdPosto = @pIdPosto
		AND c.Dia BETWEEN DATEADD(d,-1,dbo.PrimeiroDiadoMes(MONTH(@pDiaMovimento),YEAR(@pDiaMovimento))) AND @pDiaMovimento
		AND b.IdPosto = @pIdPosto
		AND ci.TipoLeitura = 'B'
		AND b.Ativo = 1
)

SELECT
	dbo.tbProdutos.Descricao AS Produto,
	dbo.tbProdutos.Ordem,
	t.NumTanque,
	(
		SELECT ROUND(SUM(TotalVendido)  / DAY(@pDiaMovimento),3)
		FROM (
			SELECT  
				--ROUND(ISNULL(atual.ValorLido, 0) - ISNULL(prev.ValorLido, 0) - ISNULL(SUM(Qtd),0),3,1) TotalVendido
				 ROUND(CASE WHEN atual.ValorLido > prev.ValorLido THEN ISNULL(atual.ValorLido, 0) - ISNULL(prev.ValorLido, 0) - ISNULL(SUM(Qtd),0)
				           WHEN atual.ValorLido = prev.ValorLido THEN 0
						   ELSE dbo.tbBombas.LimiteEncerrante - 0.01 - prev.ValorLido + atual.ValorLido END ,3,1) TotalVendido
			FROM
				CTE atual
				INNER JOIN CTE prev ON atual.rownum = prev.rownum - 1
				INNER JOIN dbo.tbBombas ON dbo.tbBombas.NumBomba = atual.idObjeto AND dbo.tbBombas.NumBomba = prev.idObjeto
				INNER JOIN dbo.tbTanques tq (nolock) ON tq.Id = dbo.tbBombas.IdTanque
				LEFT JOIN tbAfericao ON tbAfericao.IdCaixa = atual.IdCaixa AND tbAfericao.IdBomba = dbo.tbBombas.Id
			WHERE
				atual.Dia BETWEEN CAST(CAST(YEAR(@pDiaMovimento) AS VARCHAR(4)) + '-' + CAST(MONTH(@pDiaMovimento) AS VARCHAR(2)) + '-01' AS datetime) AND @pDiaMovimento
				AND tq.Id = t.Id
				AND tbBombas.Ativo = 1
				AND tbBombas.IdPosto = @pIdPosto
			GROUP BY
				tbBombas.Id, tbBombas.LimiteEncerrante, atual.ValorLido, prev.ValorLido
		) AS T
	) AS MediaVendaTanque
FROM
	dbo.tbProdutosPostos with (nolock)  
    INNER JOIN dbo.tbProdutos with (nolock) ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
	INNER JOIN dbo.tbTanques t with (nolock) ON t.IdProduto = dbo.tbProdutos.id
WHERE  
	( dbo.tbProdutosPostos.idPosto = @pIDPosto )  
    AND ( dbo.tbProdutos.tipoProd = 'CB' )
	AND ( t.IdPosto = @pIDPosto )
	AND ( dbo.tbProdutos.Ativo = 1 )
	AND ( t.Ativo = 1 )
ORDER BY
	dbo.tbProdutos.Ordem, t.NumTanque
GO
/****** Object:  StoredProcedure [dbo].[rptRelRetiradas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptRelRetiradas
CREATE PROCEDURE [dbo].[rptRelRetiradas] @pCaixa UNIQUEIDENTIFIER
AS
    SELECT Valor AS Valor
		   ,DataHora
           ,CASE Depositado
              WHEN 1 THEN 'Depositado'
              ELSE ''
            END  AS Retirada
			,CASE Removida
              WHEN 1 THEN 'Retirada Cancelada'
              ELSE 'Retirada'
            END  AS Status
    FROM   tbRetiradas
    WHERE  idCAixa = @pCAixa 
   order by DataHora

   --EXEC [dbo].[rptRelRetiradas] '349A4794-2DDC-4EBE-BA79-AFBB00E59EF9'
GO
/****** Object:  StoredProcedure [dbo].[rptRelTicketMedio]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptRelTicketMedio
CREATE PROCEDURE [dbo].[rptRelTicketMedio]
	@pDiaMovimento datetime,
	@pIdPosto uniqueidentifier

AS

SELECT
	CASE p.TipoProd
		WHEN 'CB' THEN 'Combustível'
		WHEN 'LB' THEN 'Lubrificante'
		WHEN 'LC' THEN 'Conveniência'
	END AS TipoProduto,
	SUM(TDia.Valor) AS ValorTotal,
	SUM(TDia.Quantidade) AS QuantidadeTotal,
	COALESCE(SUM(TDia.Valor)/SUM(TDia.Quantidade),0) AS TicketDia,
	COALESCE(SUM(TMes.Valor)/SUM(TMes.Quantidade),0) AS TicketMes
FROM
	tbProdutos p
	LEFT JOIN (
		SELECT
			SUM(vi.Quantidade * (CASE WHEN vi.PrecoEspecial > 0 THEN vi.PrecoEspecial ELSE vi.PrecoVenda END)) AS Valor,
			COUNT(vi.Id) AS Quantidade,
			vi.IdProduto	
		FROM tbVendasItens vi
			INNER JOIN tbVendas v ON vi.IdVenda = v.Id
			INNER JOIN tbCaixa c ON v.IdCaixa = c.Id
		WHERE c.Dia = @pDiaMovimento
			AND v.IdPosto = @pIdPosto
			AND vi.Cancelado = 0
			AND v.Status IS NULL
		GROUP BY
			vi.IdProduto) AS TDia ON p.Id = TDia.IdProduto
	LEFT JOIN (
		SELECT
			SUM(vi.Quantidade * (CASE WHEN vi.PrecoEspecial > 0 THEN vi.PrecoEspecial ELSE vi.PrecoVenda END)) AS Valor,
			COUNT(vi.Id) AS Quantidade,
			vi.IdProduto	
		FROM tbVendasItens vi
			INNER JOIN tbVendas v ON vi.IdVenda = v.Id
			INNER JOIN tbCaixa c ON v.IdCaixa = c.Id
		WHERE c.Dia BETWEEN CAST(CAST(YEAR(@pDiaMovimento) AS VARCHAR(4)) + '-' + CAST(MONTH(@pDiaMovimento) AS VARCHAR(2)) + '-01' AS datetime) AND @pDiaMovimento
			AND v.IdPosto = @pIdPosto
			AND vi.Cancelado = 0
			AND v.Status IS NULL
		GROUP BY
			vi.IdProduto) AS TMes ON p.Id = TMes.IdProduto
WHERE p.TipoProd in ('CB', 'LB', 'LC')
GROUP BY p.TipoProd
ORDER BY p.TipoProd
GO
/****** Object:  StoredProcedure [dbo].[rptRelTotalCompraProdutoMes]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptRelTotalCompraProdutoMes
CREATE PROCEDURE [dbo].[rptRelTotalCompraProdutoMes]
	@pDiaMovimento datetime,
	@pIdPosto uniqueidentifier

AS
	
SELECT
	CASE p.TipoProd
		WHEN 'LB' THEN 'Lubrificante'
		WHEN 'LC' THEN 'Conveniência'
	END AS TipoProduto,
	COALESCE(SUM(mv.Valor),0) AS Quantidade,
	COALESCE(SUM(mv.Valor * pp.PrecoCusto),0) AS Investido
FROM 
	tbProdutos p
	LEFT JOIN (
		SELECT
			IdProduto,
			IdPosto,
			Valor
		FROM tbMovimentacaoEstoque
		WHERE
			IdPosto = @pIdPosto
			AND TipoEstoque = 'V' 
			AND TipoMovimento = 'E'
			AND Origem = 'Compra do produto'
			AND Data BETWEEN CAST(CAST(YEAR(@pDiaMovimento) AS VARCHAR(4)) + '-' + CAST(MONTH(@pDiaMovimento) AS VARCHAR(2)) + '-01' AS datetime) AND @pDiaMovimento
	) AS mv ON p.Id = mv.IdProduto
	INNER JOIN tbProdutosPostos pp ON p.Id = pp.IdProduto AND pp.IdPosto = @pIdPosto
WHERE
	p.TipoProd IN ('LB', 'LC')
GROUP BY p.TipoProd

UNION

SELECT
	'Combustível' AS TipoProduto,
	COALESCE(SUM(pi.QTD),0) AS Quantidade,
	COALESCE(SUM(pi.QTD * pi.VUPro),0) AS Investido
FROM
	tbPedidos p
	INNER JOIN tbPedidosItens pi ON p.Id = pi.IdPedido
WHERE
	pi.IdPosto = @pIdPosto
	AND p.DataPed BETWEEN CAST(CAST(YEAR(@pDiaMovimento) AS VARCHAR(4)) + '-' + CAST(MONTH(@pDiaMovimento) AS VARCHAR(2)) + '-01' AS datetime) AND @pDiaMovimento
	
GO
/****** Object:  StoredProcedure [dbo].[rptRelTotalVendaProdutoMes]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[rptRelTotalVendaProdutoMes]
	@pDiaMovimento datetime,
	@pIdPosto uniqueidentifier

AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

DECLARE @tblPrecos TABLE(PrecoVenda MONEY, IdProduto UNIQUEIDENTIFIER, IdCaixa UNIQUEIDENTIFIER)
INSERT INTO @tblPrecos
SELECT MAX(vi.PrecoVenda), p.Id, v.IdCaixa
FROM tbVendasItens vi
	INNER JOIN tbVendas v ON vi.IdVenda = v.Id
	INNER JOIN tbProdutos p ON vi.IdProduto = p.Id	
	INNER JOIN tbCaixa c ON c.Id = v.IdCaixa
WHERE p.TipoProd = 'CB'
	AND p.Ativo = 1
	AND v.IdPosto = @pIdPosto
	AND v.Status IS NULL
	AND c.IdPosto = @pIdPosto
	AND c.Dia BETWEEN CAST(CAST(YEAR(@pDiaMovimento) AS VARCHAR(4)) + '-' + CAST(MONTH(@pDiaMovimento) AS VARCHAR(2)) + '-01' AS datetime) AND @pDiaMovimento
GROUP BY
	p.Id, v.IdCaixa;

WITH CTE AS (
SELECT
	rownum = ROW_NUMBER() OVER (ORDER BY ci.IdObjeto, c.DataAbertura DESC, c.TCaixa),
	ci.ValorLido,
	ci.idObjeto,
	ci.IdCaixa,
	c.Dia
	FROM
		tbCaixa c
		INNER JOIN tbCaixaItens ci ON c.Id = ci.IdCaixa
	WHERE
		c.IdPosto = @pIdPosto
		AND ci.TipoLeitura = 'B'
)

SELECT
	'Combustível' AS TipoProduto,
	ISNULL(ROUND(SUM(T.Quantidade),3,1),0) AS Quantidade,
	ISNULL(ROUND(SUM(T.TotalFaturado),2,1),0) AS Faturamento
FROM (
	SELECT
		CASE 
			WHEN ROUND(ISNULL(atual.ValorLido, 0) - ISNULL(prev.ValorLido, 0) - ISNULL(SUM(Qtd),0),3,1) > 0
				THEN    
					ROUND(ISNULL(atual.ValorLido, 0) - ISNULL(prev.ValorLido, 0) - ISNULL(SUM(Qtd),0),3,1)
				ELSE	
					ROUND((ISNULL(atual.ValorLido, 0) + 999999) - ISNULL(prev.ValorLido, 0) - ISNULL(SUM(Qtd),0),3,1)
		END Quantidade,
		CASE
			WHEN ROUND(ISNULL(atual.ValorLido, 0) - ISNULL(prev.ValorLido, 0) - ISNULL(SUM(Qtd),0),3,1) < 0
				THEN 
					ROUND((ISNULL(atual.ValorLido, 0) + 999999) - ISNULL(prev.ValorLido, 0) - ISNULL(SUM(Qtd),0),3,1) * pr.PrecoVenda
				ELSE
					ROUND(ISNULL(atual.ValorLido, 0) - ISNULL(prev.ValorLido, 0) - ISNULL(SUM(Qtd),0),3,1) * pr.PrecoVenda
		END TotalFaturado
	FROM
		CTE atual
		INNER JOIN CTE prev ON atual.rownum = prev.rownum - 1
		INNER JOIN dbo.tbBombas ON dbo.tbBombas.NumBomba = atual.idObjeto AND dbo.tbBombas.NumBomba = prev.idObjeto
		INNER JOIN dbo.tbTanques tq (nolock) ON tq.Id = dbo.tbBombas.IdTanque
		INNER JOIN dbo.tbProdutos ON tbProdutos.Id = tq.IdProduto
		INNER JOIN @tblPrecos pr ON pr.IdCaixa = atual.IdCaixa AND pr.IdProduto = tbProdutos.Id
		LEFT JOIN tbAfericao ON tbAfericao.IdCaixa = atual.IdCaixa AND tbAfericao.IdBomba = dbo.tbBombas.Id
	WHERE
		atual.Dia BETWEEN CAST(CAST(YEAR(@pDiaMovimento) AS VARCHAR(4)) + '-' + CAST(MONTH(@pDiaMovimento) AS VARCHAR(2)) + '-01' AS datetime) AND @pDiaMovimento
		AND tbBombas.Ativo = 1
		AND tbBombas.IdPosto = @pIdPosto
		AND tq.Ativo = 1
		AND tq.IdPosto = @pIdPosto
		AND tbProdutos.TipoProd = 'CB'
		AND tbProdutos.Ativo = 1
	GROUP BY
		tbBombas.Id, atual.ValorLido, prev.ValorLido, atual.IdCaixa, atual.IdObjeto, pr.PrecoVenda
) AS T

UNION ALL

SELECT
	CASE p.TipoProd
		WHEN 'LB' THEN 'Lubrificante'
		WHEN 'LC' THEN 'Conveniência'
	END AS TipoProduto,
	COALESCE(ROUND(SUM(vi.Quantidade),2,1),0) AS Quantidade,
	COALESCE(ROUND(SUM(vi.Quantidade * (CASE WHEN vi.PrecoEspecial > 0 THEN vi.PrecoEspecial ELSE vi.PrecoVenda END)),2,1),0) AS Faturamento
FROM
	tbProdutos p
	LEFT JOIN tbVendasItens vi ON p.Id = vi.IdProduto
	LEFT JOIN tbVendas v ON vi.IdVenda = v.Id
	LEFT JOIN tbCaixa c ON c.Id = v.IdCaixa
WHERE
	p.TipoProd IN ('LB', 'LC')
	AND ((c.Dia BETWEEN CAST(CAST(YEAR(@pDiaMovimento) AS VARCHAR(4)) + '-' + CAST(MONTH(@pDiaMovimento) AS VARCHAR(2)) + '-01' AS datetime) AND @pDiaMovimento
	AND v.IdPosto = @pIdPosto
	AND v.Status IS NULL
	AND vi.Cancelado = 0)
		OR
	(vi.Id IS NULL)) -- Forçar exibir itens sem venda
GROUP BY p.TipoProd

ORDER BY TipoProduto
GO
/****** Object:  StoredProcedure [dbo].[rptRelVendaProdutoPorPreco]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[rptRelVendaProdutoPorPreco]
	@pDataInicio DATE,
	@pDataFim DATE,
	@pIdPosto uniqueidentifier
	AS

		/*
			Descrição: Seleciona as informações necessárias para a geração do relatório de venda de produto por preço.
			Autor....: MangaTech - Gustavo Pimenta
			Data.....: 10/02/2022
			Ex.......: EXEC [dbo].[rptRelVendaProdutoPorPreco] '2021-11-01', '2021-11-07', 'DBD47B27-D8F1-4519-809D-BB234E6B9B98'
		*/
		
		SELECT CASE WHEN Produto='Gasolina comum' THEN 'Gasolina'
					WHEN Produto='Etanol comum' THEN 'Etanol'
					ELSE Produto END AS Produto,
				CASE WHEN Produto='Gasolina' THEN 1
					 WHEN Produto='Gasolina Aditivada' THEN 2
					 WHEN Produto='Etanol' THEN 3
					 WHEN Produto='Diesel S500' THEN 4
					 WHEN Produto='Diesel S10' THEN 5 END As Ordem,
				ValorVenda,
				SUM(Quantidade) AS Quantidade,
				SUM(Subtotal) AS Subtotal,
				SUM(Desconto) AS Desconto,
				SUM(PrecoDiferenciado) AS PrecoDiferenciado,
				SUM(Total) AS Total
				FROM( SELECT c.Descricao AS Produto,
						b.PrecoVenda AS ValorVenda,
						ROUND(SUM(b.Quantidade), 3) AS Quantidade,
						ROUND(SUM(b.Quantidade) * b.PrecoVenda, 3) AS SubTotal,
						IIf(b.PrecoPromocao > 0, ROUND(SUM(b.PrecoPromocao * b.Quantidade - b.PrecoVenda * b.Quantidade), 3), NULL) AS Desconto,
						IIf(b.PrecoEspecial > 0, ROUND(SUM(b.PrecoEspecial * b.Quantidade - b.PrecoVenda * b.Quantidade), 3), NULL) AS PrecoDiferenciado,
						IIf(b.PrecoPromocao > 0, ROUND(SUM(b.Quantidade * b.PrecoPromocao), 3), IIf(b.PrecoEspecial > 0, ROUND(SUM(b.Quantidade) * b.PrecoEspecial, 3), ROUND(SUM(b.Quantidade) * b.PrecoVenda, 3))) AS Total
						FROM (SELECT Descricao, Id
								FROM dbo.tbProdutos WITH(NOLOCK)
								WHERE TipoProd='CB' and Ativo=1
								) c
							INNER JOIN (SELECT Quantidade, PrecoVenda, IdProduto, IdVenda, PrecoPromocao, PrecoEspecial
										FROM dbo.tbVendasItens WITH(NOLOCK)
										WHERE Status is null
										) b
										ON b.IdProduto = c.Id
							INNER JOIN (SELECT IdPosto, Id, SubTotal
										FROM dbo.tbVendas WITH(NOLOCK)
										WHERE DataMovimento BETWEEN @pDataInicio and @pDataFim
										AND IdPosto = @pIdPosto
										) a
										ON b.IdVenda = a.Id
						GROUP BY b.PrecoVenda, c.Descricao, b.PrecoPromocao, b.PrecoEspecial
						) d 
						GROUP BY Produto,ValorVenda
						ORDER BY Produto, ValorVenda
GO
/****** Object:  StoredProcedure [dbo].[rptRelVendasCombustivelPorHora]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[rptRelVendasCombustivelPorHora]
	@pIdPosto  UNIQUEIDENTIFIER  
	,@pDiaMovimento DATE 
AS  

SELECT
	SUM(CAST(REPLACE(a.TotalLitros, ',', '.') AS float)) QtdeVendida, 
	DATEPART(hour, Hora) HoraAbastecimento, 
	COUNT(DATEPART(hour, Hora)) Qtde,
	SUM(ROUND(CAST(REPLACE(a.TotalLitros, ',', '.') AS float)*CAST(REPLACE(a.ppu, ',', '.') AS float),2,1)) Faturado
FROM 
	tbAbastecimentos a 
WHERE
	Data = @pDiaMovimento
	AND IdPosto = @pIdPosto
GROUP BY 
	DATEPART(hour, Hora)
GO
/****** Object:  StoredProcedure [dbo].[rptRelVendasCombustivelPorHoraDetalhe]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[rptRelVendasCombustivelPorHoraDetalhe]
	@pIdPosto  UNIQUEIDENTIFIER  
	,@pDiaMovimento DATE 
AS  

DECLARE @Index INT = 0
DECLARE @Result TABLE (Col INT)
WHILE @Index <= 23
BEGIN
    INSERT INTO @Result (Col)
    SELECT @Index

    SET @Index = @Index + 1 
END

SELECT 
	a.*, 
	CAST(REPLACE(a.TotalLitros, ',', '.') AS float) QtdeVendida,
	ROUND(CAST(REPLACE(a.TotalLitros, ',', '.') AS float)*CAST(REPLACE(a.ppu, ',', '.') AS float),2,1) Faturado,
	p.Descricao Produto,
	n.Col HoraAbastecimento
FROM 
	@Result n
	LEFT JOIN (
		SELECT * FROM tbAbastecimentos
		WHERE Data = @pDiaMovimento AND IdPosto = @pIdPosto
	) a ON n.Col = DATEPART(hour, a.Hora)
	LEFT JOIN tbProdutos p ON a.IdProduto = p.Id
ORDER BY
	n.Col
GO
/****** Object:  StoredProcedure [dbo].[rptRelVendasPromocao]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[rptRelVendasPromocao] 
	@pIdPosto  UNIQUEIDENTIFIER  
	,@pCaixaINI  UNIQUEIDENTIFIER  
	,@pCaixaFIM  UNIQUEIDENTIFIER  
AS  

DECLARE @diaIni DATETIME, @diaFim DATETIME  
DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)  
  
SET @diaIni = (SELECT DataAbertura FROM   tbCaixa with (nolock) WHERE  Id = @pCaixaIni AND IdPosto = @pIdPosto)  
SET @diaFim = (SELECT DataAbertura FROM   tbCaixa  with (nolock)WHERE  Id = @pCaixaFim AND IdPosto = @pIdPosto)  
  
INSERT INTO @tblCaixas  
SELECT Id FROM tbCaixa WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto  
 
SELECT
	pm.Tipo,
	pm.Nome NomePromocao,
	pr.Descricao NomeProduto,
	pr.TipoProd TipoProduto,
	vi.PrecoVenda,
	vi.PrecoPromocao,
	SUM(vi.Quantidade) QuantidadeTotal,
	SUM(ROUND(vi.PrecoVenda * vi.Quantidade, 2, 1)) TotalFaturado,
	SUM(CAST(ROUND(vi.Quantidade * PrecoVenda,2,1) - ROUND(vi.Quantidade * PrecoPromocao,2,1) as decimal(18,2))) TotalDesconto
FROM
	tbPromocao pm
	INNER JOIN tbVendasItens vi ON vi.IdPromocao = pm.Id
	INNER JOIN tbVendas v ON vi.IdVenda = v.Id
	INNER JOIN tbProdutos pr ON vi.IdProduto = pr.Id
WHERE
	vi.PrecoPromocao > 0
	AND v.IdCaixa IN (SELECT IdCaixa FROM @tblCaixas)
	AND v.IdPosto = @pIDPosto
    AND vi.Cancelado = 0  
    AND v.Status IS NULL
GROUP BY
	pm.Tipo,
	pm.Nome,
	pr.Descricao,
	pr.TipoProd,
	vi.PrecoVenda,
	vi.PrecoPromocao

UNION ALL

SELECT
	pm.Tipo,
	pm.Nome NomePromocao,
	'' NomeProduto,
	'' TipoProduto,
	NULL PrecoVenda,
	NULL PrecoPromocao,
	SUM(v.QuantidadeTotal) QuantidadeTotal,
	NULL TotalFaturado,
	SUM(v.TotalDesconto) * -1 TotalDesconto
FROM
	tbPromocao pm
	INNER JOIN (
		SELECT tbVendas.Id, tbVendas.TotalDesconto, tbVendas.IdPromocao, SUM(tbVendasItens.Quantidade) QuantidadeTotal
		FROM tbVendas
			INNER JOIN tbVendasItens ON tbVendas.Id = tbVendasItens.IdVenda
		WHERE
			tbVendas.TotalDesconto > 0
			AND tbVendas.IdCaixa IN (SELECT IdCaixa FROM @tblCaixas)
			AND tbVendas.IdPosto = @pIDPosto
			AND tbVendasItens.Cancelado = 0  
			AND tbVendas.Status IS NULL
		GROUP BY
			tbVendas.Id, tbVendas.TotalDesconto, tbVendas.IdPromocao
	) v on v.IdPromocao = pm.Id	
GROUP BY
	pm.Tipo,
	pm.Nome
	
ORDER BY
	pm.Nome
GO
/****** Object:  StoredProcedure [dbo].[rptRelVendasTipoPagamento]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptRelVendasTipoPagamento
CREATE PROCEDURE [dbo].[rptRelVendasTipoPagamento] @pIdPosto  UNIQUEIDENTIFIER
                                    ,@pTipoPagamento NVARCHAR(2)
                                    ,@pCaixaINI  UNIQUEIDENTIFIER
                                    ,@pCaixaFIM  UNIQUEIDENTIFIER
									,@pIdPontoVenda UNIQUEIDENTIFIER
AS
 DECLARE @diaIni DATETIME, @diaFim DATETIME  
    DECLARE @pMes INT  
    DECLARE @pano INT  
    DECLARE @dia INT  
 DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)  
    DECLARE @tblCaixasMes TABLE(IdCaixa UNIQUEIDENTIFIER)  
  
 --Caixas avaliados  
 SET @diaIni = (SELECT DataAbertura  
                    FROM   tbCaixa  with(nolock)  
                    WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto AND IdPontoVenda= @pIdpontoVenda)  
    SET @diaFim = (SELECT DataAbertura  
                    FROM   tbCaixa  with(nolock)  
                    WHERE  Id = @pCaixaFIM AND IdPosto = @pIdPosto AND IdPontoVenda = @pIdPontoVenda)  
      
    INSERT INTO @tblCaixas  
    SELECT Id  
    FROM tbCaixa  with(nolock)  
    WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto  
    
    SELECT 
		tbentidades.RzSocial,
		tbVendasItensPagamento.NumDoc,
		tbVendasItensPagamento.Desconto,
		tbvendasitenspagamento.Valor,
		tbVendasItensPagamento.DataVencimento ,
		dbo.tbVendasItensPagamento.ContaBancaria,
		dbo.tbVendasItensPagamento.TipoPagamento
	FROM   dbo.tbVendas  with (nolock)
	INNER JOIN dbo.tbVendasItensPagamento  with (nolock)
		ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda
	inner join tbEntidades 
		on dbo.tbVendasItensPagamento.IdEntidade = tbentidades.Id                        
          INNER JOIN @tblCaixas cx  
               ON tbVendas.IdCaixa = cx.IdCaixa  						
	 WHERE  tbVendas.IdPosto = @pIdPosto
	 AND tbVendas.IdPontoVenda = @pIdPontoVenda
	 and tbVendasItensPagamento.TipoPagamento = @pTipoPagamento
	 and tbVendas.Status is null
	 
	 order by tbvendasitenspagamento.Valor,tbentidades.RzSocial
GO
/****** Object:  StoredProcedure [dbo].[rptRelVendasTipoPgCartaFrete]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptRelVendasTipoPgCartaFrete
CREATE PROCEDURE [dbo].[rptRelVendasTipoPgCartaFrete] @pIdPosto  UNIQUEIDENTIFIER
                                                     ,@pCaixaINI  UNIQUEIDENTIFIER
                                                      ,@pCaixaFIM  UNIQUEIDENTIFIER
AS
	    DECLARE @diaIni DATETIME, @diaFim DATETIME  
    DECLARE @pMes INT  
    DECLARE @pano INT  
    DECLARE @dia INT  
 DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)  
    DECLARE @tblCaixasMes TABLE(IdCaixa UNIQUEIDENTIFIER)  
  
 --Caixas avaliados  
 SET @diaIni = (SELECT DataAbertura  
                    FROM   tbCaixa  with(nolock)  
                    WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)  
    SET @diaFim = (SELECT DataAbertura  
                    FROM   tbCaixa  with(nolock)  
                    WHERE  Id = @pCaixaFIM AND IdPosto = @pIdPosto)  
      
    INSERT INTO @tblCaixas  
    SELECT Id  
    FROM tbCaixa  with(nolock)  
    WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto  
   

    SELECT 
		tbentidades.RzSocial,
		dbo.tbCartaFrete.idCarta,
		dbo.tbCartaFrete.ValorRetorno as Troco,
		dbo.tbcartaFrete.ValorLiquido as Valor,
		dbo.tbCartaFrete.ValorAbastecimento as Comprou
	
	FROM   dbo.tbVendas  with (nolock)
	INNER JOIN dbo.tbCartaFrete with (nolock)
		on  tbCartaFrete.IdVenda = tbVendas.Id
	inner join tbEntidades 
		on dbo.tbCartaFrete.IdEntidade = tbentidades.Id  
             INNER JOIN @tblCaixas cx  
               ON tbVendas.IdCaixa = cx.IdCaixa  				
	 WHERE  tbVendas.IdPosto = @pIdPosto
	 and tbVendas.Status is null
	 
	 order by dbo.tbCartaFrete.ValorAbastecimento ,tbentidades.RzSocial
GO
/****** Object:  StoredProcedure [dbo].[rptRelVendasTipoPgDinheiro]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptRelVendasTipoPgDinheiro
CREATE PROCEDURE [dbo].[rptRelVendasTipoPgDinheiro] @pIdPosto  UNIQUEIDENTIFIER
                                    ,@pCaixaINI  UNIQUEIDENTIFIER
                                    ,@pCaixaFIM  UNIQUEIDENTIFIER
AS
	DECLARE @diaIni DATETIME, @diaFim DATETIME  
	DECLARE @pMes INT  
	DECLARE @pano INT  
	DECLARE @dia INT  
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)  

  
 --Caixas avaliados  
 SET @diaIni = (SELECT DataAbertura  
                    FROM   tbCaixa  with(nolock)  
                    WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)  
    SET @diaFim = (SELECT DataAbertura  
                    FROM   tbCaixa  with(nolock)  
                    WHERE  Id = @pCaixaFIM AND IdPosto = @pIdPosto)  
      
    INSERT INTO @tblCaixas  
    SELECT Id  
    FROM tbCaixa  with(nolock)  
    WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto  
    
    SELECT 
		'Cliente' as Descricao
		,0 as Valor
	--	,SUM(tbVendasItens.ValorItem) as Valor
	--FROM   dbo.tbVendas  with (nolock)
	--inner join tbVendasItens with(nolock) on tbVendasItens.IdVenda = tbVendas.id

	--INNER JOIN dbo.tbVendasItensPagamento  with (nolock) ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda
	--inner join tbEntidades on dbo.tbVendasItensPagamento.IdEntidade = tbentidades.Id                        
	--INNER JOIN @tblCaixas cx ON tbVendas.IdCaixa = cx.IdCaixa  						
	-- WHERE  tbVendas.IdPosto = @pIdPosto
	-- and tbVendas.Status is null
	-- and (dbo.tbVendasItens.Cancelado = 0)
	-- and (dbo.tbVendas.Status is null)
	-- AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'DI'	)
	 
	union
	
	SELECT 
		'Troco dado na carta frete' 
		,-(SELECT ISNULL(SUM(DBO.TBCARTAFRETE.VALORRETORNO),0)
		FROM   DBO.TBVENDAS  WITH (NOLOCK)
		INNER JOIN DBO.TBCARTAFRETE WITH (NOLOCK)
			ON  TBCARTAFRETE.IDVENDA = TBVENDAS.ID
		INNER JOIN TBENTIDADES  WITH (NOLOCK)
			ON DBO.TBCARTAFRETE.IDENTIDADE = TBENTIDADES.ID  
				 INNER JOIN @TBLCAIXAS CX  
				   ON TBVENDAS.IDCAIXA = CX.IDCAIXA  				
		 WHERE  TBVENDAS.IDPOSTO = @PIDPOSTO
		 AND TBVENDAS.STATUS IS NULL)
	

GO
/****** Object:  StoredProcedure [dbo].[rptRelVendasTipoPgPrazo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptRelVendasTipoPgPrazo
CREATE PROCEDURE [dbo].[rptRelVendasTipoPgPrazo] @pCaixaIni  UNIQUEIDENTIFIER
                                             ,@pCaixaFim UNIQUEIDENTIFIER
                                             ,@pIdposto  UNIQUEIDENTIFIER
AS
    DECLARE @diaIni DATETIME, @diaFim DATETIME
    DECLARE @pMes INT
    DECLARE @pano INT
    DECLARE @dia INT
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
    DECLARE @tblCaixasMes TABLE(IdCaixa UNIQUEIDENTIFIER)

	--Caixas avaliados
	SET @diaIni = (SELECT DataAbertura
                    FROM   tbCaixa  with(nolock)
                    WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)
    SET @diaFim = (SELECT DataAbertura
                    FROM   tbCaixa  with(nolock)
                    WHERE  Id = @pCaixaFIM AND IdPosto = @pIdPosto)
    
    INSERT INTO @tblCaixas
    SELECT Id
    FROM tbCaixa  with(nolock)
    WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto
	
	--Caixas do mês
    SET @Dia=(SELECT day(dia)
              FROM   tbCaixa  with(nolock)
              WHERE  Id = @pCaixaINI)
    SET @pmes = (SELECT month(dia)
                 FROM   tbCaixa  with(nolock)
                 WHERE  Id = @pCaixaINI)
    SET @pAno = (SELECT year(dia)
                 FROM   tbCaixa  with(nolock)
                 WHERE  Id = @pCaixaINI)
    
    INSERT INTO @tblCaixasMes
    SELECT Id
    FROM tbCaixa  with(nolock)
    WHERE month(dia) = @pMes
          AND year(dia) = @pAno
		  AND IdPosto = @pIdPosto

    SELECT dbo.tbVendasItensPagamento.IdEntidade
           ,dbo.tbEntidades.RzSocial
           ,SUM(dbo.tbVendasItensPagamento.Valor)
            AS ValorDia
           ,dbo.tbVendasItensPagamento.TipoPagamento
           ,ISNULL ((SELECT Limite
                     FROM   tbEntidades  with(nolock)
                     WHERE  tbEntidades.Id = dbo.tbVendasItensPagamento.IdEntidade),
            0)
            AS
            Limite
           ,Isnull((SELECT Sum (CASE idTipo
                                  WHEN 'RC' THEN Valor
                                  WHEN 'AR' THEN Valor *- 1
                                END)
                    FROM   tbContasPagarReceber  with(nolock)
                    WHERE  idEntidade = tbVendasItensPagamento.IdEntidade
                       AND ( idTipo = 'AR'
                              OR IDTIPO = 'RC' )), 0)
            AS SaldoLimite
           ,ISNULL ((SELECT SUM(MES.Valor) AS Valor
                     FROM   dbo.tbVendasItensPagamento MES  with(nolock)
                            INNER JOIN dbo.tbVendas  with(nolock)
                                    ON MES.idVenda = dbo.tbVendas.Id
							INNER JOIN @tblCaixas cx
									ON dbo.tbVendas.idCaixa = cx.IdCaixa
                     WHERE  ( MES.IdEntidade =
                              dbo.tbVendasItensPagamento.IdEntidade )
                        AND ( MES.TipoPagamento = 'PR' )
                     GROUP  BY MES.IdEntidade), 0)
            AS ValorMes
           ,ISNULL ((SELECT SUM(Valor) AS PagoDia
                     FROM   tbContasPagarReceber  with(nolock)
					        INNER JOIN @tblCaixas cx
							        ON tbContasPagarReceber.IdPedCaixa = cx.IdCaixa
                     WHERE  idEntidade = dbo.tbVendasItensPagamento.IdEntidade
                        AND idTipo = 'PG'
                        AND ( idTipoDOcto = 'PR')), 0)
            AS PagoDia
           ,Isnull ((SELECT SUM(dbo.tbCartaFrete.ValorAdiantamento)
                     FROM   dbo.tbCartaFrete  with(nolock)
                            INNER JOIN dbo.tbVendas  with(nolock)
                                    ON dbo.tbCartaFrete.idVenda =
                                       dbo.tbVendas.Id
							INNER JOIN @tblCaixas cx
									ON dbo.tbVendas.idCaixa = cx.IdCaixa									   
                     WHERE ( idEntidade = dbo.tbVendasItensPagamento.IdEntidade )
                        AND ( dbo.tbVendas.idPosto = @pIDPosto )), 0)
            AS Adiantamento
           ,Isnull ((SELECT SUM(dbo.tbCartaFrete.ValorRetorno)
                     FROM   dbo.tbCartaFrete  with(nolock)
                            INNER JOIN dbo.tbVendas  with(nolock)
                                    ON dbo.tbCartaFrete.idVenda =
                                       dbo.tbVendas.Id
							INNER JOIN @tblCaixas cx
									ON dbo.tbVendas.idCaixa = cx.IdCaixa									   
                     WHERE  ( dbo.tbCartaFrete.idEntidade =
                              dbo.tbVendasItensPagamento.IdEntidade )
                        AND ( dbo.tbVendas.idPosto = @pIDPosto )), 0)
            AS Retorno
    FROM   dbo.tbEntidades  with(nolock)
           INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                   ON dbo.tbEntidades.Id = dbo.tbVendasItensPagamento.IdEntidade
           INNER JOIN dbo.tbVendas  with(nolock)
                   ON dbo.tbVendasItensPagamento.idVenda = dbo.tbVendas.Id
		   INNER JOIN @tblCaixas cx
			       ON dbo.tbVendas.idCaixa = cx.IdCaixa				   
    WHERE  ( dbo.tbEntidades.Prazo = 1 )
       AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'PR')
       AND ( dbo.tbVendas.idPosto = @pIDposto )
       AND ( dbo.tbVendas.status IS NULL )
    GROUP  BY dbo.tbVendasItensPagamento.IdEntidade
              ,dbo.tbEntidades.RzSocial
              ,dbo.tbVendasItensPagamento.TipoPagamento 
              
    order by ValorMes ,dbo.tbEntidades.RzSocial

GO
/****** Object:  StoredProcedure [dbo].[rptRelVendasTipoPrecoEspecial]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptRelVendasTipoPrecoEspecial
CREATE PROCEDURE [dbo].[rptRelVendasTipoPrecoEspecial] @pIdPosto  UNIQUEIDENTIFIER
                                                     ,@pCaixaINI  UNIQUEIDENTIFIER
                                                      ,@pCaixaFIM  UNIQUEIDENTIFIER
AS
	DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)

	SET @diaIni = (SELECT DataAbertura FROM   tbCaixa with (nolock) WHERE  Id = @pCaixaIni AND IdPosto = @pIdPosto)
	SET @diaFim = (SELECT DataAbertura FROM   tbCaixa  with (nolock)WHERE  Id = @pCaixaFim AND IdPosto = @pIdPosto)

	INSERT INTO @tblCaixas
	SELECT Id FROM tbCaixa WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto
	
	SELECT 
		 tbEntidades.RzSocial,
		 tbprodutos.Descricao,
		 tbVendasItens.PrecoVenda,
		 tbVendasItens.PrecoEspecial as Preco,
		-- (tbVendasItens.Quantidade * tbVendasItens.PrecoEspecial) as Vendeu,
		 (tbVendasItens.Quantidade) as Vendeu,
		 ROUND((tbVendasItens.Quantidade * tbVendasItens.PrecoEspecial),2,1) - Round((tbVendasItens.Quantidade * tbVendasItens.PrecoVenda),2,1) Diferença
	 FROM   tbVendas  with (nolock)
	INNER JOIN tbVendasItens  with (nolock)
			ON tbVendas.Id = tbVendasItens.idVenda
	INNER JOIN tbProdutos  with (nolock)
			ON tbVendasItens.idProduto = tbProdutos.Id
	INNER JOIN tbProdutosPostos  with (nolock)
			ON tbVendas.idPosto =
			   tbProdutosPostos.idPosto
			   AND tbVendasItens.idProduto =
				   tbProdutosPostos.idProduto
			   AND tbProdutos.Id =
				   tbProdutosPostos.idProduto
	INNER JOIN tbEntidades on tbVendas.IdCliente = tbentidades.id
	--inner join tbVendasItensPagamento on tbVendasItensPagamento.IdVenda = tbVendas.Id
	--inner join tbEntidades on tbVendasItensPagamento.IdEntidade = tbentidades.id
	INNER JOIN @tblCaixas cx
			ON tbVendas.idCaixa = cx.IdCaixa
	 WHERE  ( tbVendas.idPosto = @pIDPosto )
		AND tbvendasItens.cancelado = 0
		AND tbvendas.Status IS NULL
		AND ( tbVendasItens.PrecoEspecial > 0 )
		
	order by Diferença desc
GO
/****** Object:  StoredProcedure [dbo].[rptResCartoes]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptResCartoes
CREATE PROCEDURE [dbo].[rptResCartoes] @pIdposto   UNIQUEIDENTIFIER
                                      ,@pCaixaIni UNIQUEIDENTIFIER
                                      ,@pCaixaFim UNIQUEIDENTIFIER
AS
    DECLARE @Dia INT
    DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
    DECLARE @pMes INT
    DECLARE @pano INT

    SET @Dia=(SELECT day(dia)
              FROM   tbCaixa with(nolock)
              WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)
    SET @pmes = (SELECT month(dia)
                 FROM   tbCaixa with(nolock)
                 WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)
    SET @pAno = (SELECT year(dia)
                 FROM   tbCaixa with(nolock)
                 WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)
    INSERT INTO @tblCaixas
    SELECT Id
    FROM tbCaixa with(nolock)
    WHERE month(dia) = @pMes
          AND year(dia) = @pAno
		  AND IdPosto = @pIdPosto

    DECLARE @pDataCaixa AS SMALLDATETIME

    SET @pDataCaixa=(SELECT dataAbertura
                     FROM   tbCaixa with(nolock)
                     WHERE  Id = @pCAixaFim)

    SELECT dbo.tbOperadoras.idEntidade
           ,dbo.tbOperadoras.Operadora
           ,SUM(dbo.tbVendasItensPagamento.Valor)                             AS
            ValorDia
           ,AVG(dbo.tbVendasItensPagamento.Desconto)                          AS
            TaxaDia
           ,dbo.tbVendasItensPagamento.TipoPagamento
           ,ISNULL ((SELECT SUM(Valor)
                     FROM   dbo.tbContasPagarReceber with(nolock)
                     WHERE  ( IdTipoDocto =
                            dbo.tbVendasItensPagamento.TipoPagamento )
                        AND ( DataVencto = @pDataCaixa )
                        AND ( idPosto = @pIDPosto )
                     GROUP  BY idEntidade
                     HAVING ( idEntidade = dbo.tbOperadoras.idEntidade )), 0) AS
            ValorRecebendo
           ,ISNULL ((SELECT AVG(TaxaCartao)
                     FROM   dbo.tbContasPagarReceber with(nolock)
                     WHERE  ( IdTipoDocto =
                            dbo.tbVendasItensPagamento.TipoPagamento )
                        AND ( DataVencto = @pDataCaixa )
                        AND ( idPosto = @pIDPosto )
                     GROUP  BY idEntidade
                     HAVING ( idEntidade = dbo.tbOperadoras.idEntidade )), 0) AS
            TaxaRecebendo
           ,ISNULL ((SELECT SUM(Valor)
                     FROM   dbo.tbContasPagarReceber  with(nolock)
					        INNER JOIN @tblCaixas cx
							        ON dbo.tbContasPagarReceber.idPedCaixa = cx.IdCaixa
                     WHERE  ( IdTipoDocto =
                            dbo.tbVendasItensPagamento.TipoPagamento )
                        AND ( idPosto = @pIDPosto )
                     GROUP  BY idEntidade
                     HAVING ( idEntidade = dbo.tbOperadoras.idEntidade )), 0) AS
            ValorReceber
           ,ISNULL ((SELECT AVG(( 100 - TaxaCartao ) / 100)
                     FROM   dbo.tbContasPagarReceber  with(nolock)
					        INNER JOIN @tblCaixas cx
							        ON dbo.tbContasPagarReceber.idPedCaixa = cx.IdCaixa
                     WHERE  ( IdTipoDocto =
                            dbo.tbVendasItensPagamento.TipoPagamento )
                        AND ( idPosto = @pIDPosto )
                     GROUP  BY idEntidade
                     HAVING ( idEntidade = dbo.tbOperadoras.idEntidade )), 0) AS
            TaxaReceber
    FROM   dbo.tbVendasItensPagamento  with(nolock)
           INNER JOIN dbo.tbVendas  with(nolock)
                   ON dbo.tbVendasItensPagamento.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbOperadoras  with(nolock)
                   ON dbo.tbVendasItensPagamento.IdEntidade =
                      dbo.tbOperadoras.idEntidade
		   INNER JOIN @tblCaixas cx
		           ON dbo.tbVendas.idCaixa = cx.IdCaixa
    WHERE  ( dbo.tbVendas.idPosto = @pIDPosto )
    GROUP  BY dbo.tbOperadoras.Operadora
              ,dbo.tbOperadoras.idEntidade
              ,dbo.tbVendasItensPagamento.TipoPagamento 

GO
/****** Object:  StoredProcedure [dbo].[rptResChequesDevolvidos]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptResChequesDevolvidos
CREATE PROCEDURE [dbo].[rptResChequesDevolvidos] @pIdposto UNIQUEIDENTIFIER
AS
    SELECT dbo.tbEntidades.NomeUsual
           ,dbo.tbalinea.descricao
           ,dbo.tbChequeSemFundo.valor
           ,dbo.tbChequeSemFundo.DataAtualizacao
           ,dbo.tbChequeSemFundo.HistoricoAtualizacao
    FROM   dbo.tbChequeSemFundo with(nolock)
           INNER JOIN dbo.tbalinea with(nolock)
                   ON dbo.tbChequeSemFundo.IdAlinea = dbo.tbAlinea.Id
           INNER JOIN dbo.tbEntidades with(nolock)
                   ON dbo.tbChequeSemFundo.idEntidade = dbo.tbEntidades.Id
    WHERE  ( dbo.tbChequeSemFundo.idPosto = @pIDPosto )
       AND dbo.tbChequeSemFundo.Pago = 0 

GO
/****** Object:  StoredProcedure [dbo].[rptResClientesAprazo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptResClientesAprazo
CREATE PROCEDURE [dbo].[rptResClientesAprazo] @pCaixaIni  UNIQUEIDENTIFIER
                                             ,@pCaixaFim UNIQUEIDENTIFIER
                                             ,@pIdposto  UNIQUEIDENTIFIER
AS
    DECLARE @diaIni DATETIME, @diaFim DATETIME
    DECLARE @pMes INT
    DECLARE @pano INT
    DECLARE @dia INT
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
    DECLARE @tblCaixasMes TABLE(IdCaixa UNIQUEIDENTIFIER)

	--Caixas avaliados
	SET @diaIni = (SELECT DataAbertura
                    FROM   tbCaixa  with(nolock)
                    WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)
    SET @diaFim = (SELECT DataAbertura
                    FROM   tbCaixa  with(nolock)
                    WHERE  Id = @pCaixaFIM AND IdPosto = @pIdPosto)
    
    INSERT INTO @tblCaixas
    SELECT Id
    FROM tbCaixa  with(nolock)
    WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto
	
	--Caixas do mês
    SET @Dia=(SELECT day(dia)
              FROM   tbCaixa  with(nolock)
              WHERE  Id = @pCaixaINI)
    SET @pmes = (SELECT month(dia)
                 FROM   tbCaixa  with(nolock)
                 WHERE  Id = @pCaixaINI)
    SET @pAno = (SELECT year(dia)
                 FROM   tbCaixa  with(nolock)
                 WHERE  Id = @pCaixaINI)
    
    INSERT INTO @tblCaixasMes
    SELECT Id
    FROM tbCaixa  with(nolock)
    WHERE month(dia) = @pMes
          AND year(dia) = @pAno
		  AND IdPosto = @pIdPosto

    SELECT dbo.tbVendasItensPagamento.IdEntidade
           ,dbo.tbEntidades.RzSocial
		   ,tbVendas.NumeroCupomSat
		   ,tbVendas.Data
		   ,CASE dbo.tbVendas.OrigemVenda
		WHEN 'VendasLIO' THEN 'Automática'
		WHEN 'VendaManual' THEN 'Manual'
		WHEN 'MultiplasVendas' THEN 'Manual'
	END AS OrigemVenda
		   ,CASE dbo.tbVendas.OrigemVenda
		WHEN 'VendasLIO' THEN 'Mini Vendas'
		WHEN 'VendaManual' THEN 'Vendas'
		WHEN 'MultiplasVendas' THEN 'Vendas'
	END AS Emissor
			,tbEntidadesVendedor.NomeUsual
           ,SUM(dbo.tbVendasItensPagamento.Valor)
            AS ValorDia
           ,dbo.tbVendasItensPagamento.TipoPagamento
           ,ISNULL ((SELECT Limite
                     FROM   tbEntidades  with(nolock)
                     WHERE  tbEntidades.Id = dbo.tbVendasItensPagamento.IdEntidade),
            0)
            AS
            Limite
           ,Isnull((SELECT Sum (CASE idTipo
                                  WHEN 'RC' THEN Valor
                                  WHEN 'AR' THEN Valor *- 1
                                END)
                    FROM   tbContasPagarReceber  with(nolock)
                    WHERE  idEntidade = tbVendasItensPagamento.IdEntidade
                       AND ( idTipo = 'AR'
                              OR IDTIPO = 'RC' )), 0)
            AS SaldoLimite
           ,ISNULL ((SELECT SUM(MES.Valor) AS Valor
                     FROM   dbo.tbVendasItensPagamento MES  with(nolock)
                            INNER JOIN dbo.tbVendas  with(nolock)
                                    ON MES.idVenda = dbo.tbVendas.Id
							INNER JOIN @tblCaixas cx
									ON dbo.tbVendas.idCaixa = cx.IdCaixa
                     WHERE  ( MES.IdEntidade =
                              dbo.tbVendasItensPagamento.IdEntidade )
                        AND ( MES.TipoPagamento = 'PR'
                               OR MES.TipoPagamento = 'CP'
                               OR MES.TipoPagamento = 'CF' )
                     GROUP  BY MES.IdEntidade), 0)
            AS ValorMes
           ,ISNULL ((SELECT SUM(Valor) AS PagoDia
                     FROM   tbContasPagarReceber  with(nolock)
					        INNER JOIN @tblCaixas cx
							        ON tbContasPagarReceber.IdPedCaixa = cx.IdCaixa
                     WHERE  idEntidade = dbo.tbVendasItensPagamento.IdEntidade
                        AND idTipo = 'PG'
                        AND ( idTipoDOcto = 'PR'
                               OR idTipoDocto = 'CP'
                               OR idTipoDocto = 'CF' )), 0)
            AS PagoDia
           ,Isnull ((SELECT SUM(dbo.tbCartaFrete.ValorAdiantamento)
                     FROM   dbo.tbCartaFrete  with(nolock)
                            INNER JOIN dbo.tbVendas  with(nolock)
                                    ON dbo.tbCartaFrete.idVenda =
                                       dbo.tbVendas.Id
							INNER JOIN @tblCaixas cx
									ON dbo.tbVendas.idCaixa = cx.IdCaixa									   
                     WHERE ( idEntidade = dbo.tbVendasItensPagamento.IdEntidade )
                        AND ( dbo.tbVendas.idPosto = @pIDPosto )), 0)
            AS Adiantamento
           ,Isnull ((SELECT SUM(dbo.tbCartaFrete.ValorRetorno)
                     FROM   dbo.tbCartaFrete  with(nolock)
                            INNER JOIN dbo.tbVendas  with(nolock)
                                    ON dbo.tbCartaFrete.idVenda =
                                       dbo.tbVendas.Id
							INNER JOIN @tblCaixas cx
									ON dbo.tbVendas.idCaixa = cx.IdCaixa									   
                     WHERE  ( dbo.tbCartaFrete.idEntidade =
                              dbo.tbVendasItensPagamento.IdEntidade )
                        AND ( dbo.tbVendas.idPosto = @pIDPosto )), 0)
            AS Retorno
    FROM   dbo.tbEntidades  with(nolock)
           INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                   ON dbo.tbEntidades.Id = dbo.tbVendasItensPagamento.IdEntidade
           INNER JOIN dbo.tbVendas  with(nolock)
                   ON dbo.tbVendasItensPagamento.idVenda = dbo.tbVendas.Id
		   INNER JOIN @tblCaixas cx
			       ON dbo.tbVendas.idCaixa = cx.IdCaixa		
		   LEFT JOIN tbEntidades AS tbEntidadesVendedor 
					ON tbVendas.IdVendedor = tbEntidadesVendedor.id
    WHERE  ( dbo.tbEntidades.Prazo = 1
              OR dbo.tbEntidades.CartaFrete = 1
              OR dbo.tbEntidades.PagaChequePrazo = 1 )
       AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'PR'
              OR ( dbo.tbVendasItensPagamento.TipoPagamento = 'CF' )
              OR dbo.tbVendasItensPagamento.TipoPagamento = 'CP' )
       AND dbo.tbVendas.idPosto = @pIDposto
       AND ( dbo.tbVendas.status IS NULL )
    GROUP  BY dbo.tbVendasItensPagamento.IdEntidade
              ,dbo.tbEntidades.RzSocial
			  ,tbVendas.NumeroCupomSat
			  ,tbVendas.Data
			  ,tbVendas.OrigemVenda
              ,dbo.tbVendasItensPagamento.TipoPagamento
			  ,tbEntidadesVendedor.NomeUsual
              
    order by tbVendas.Data

	--EXEC [dbo].[rptResClientesAprazo] '548F4111-FEA5-44A3-9571-AF84016AA48D','548F4111-FEA5-44A3-9571-AF84016AA48D', 'A94EB478-1BCF-4A4E-9039-0748EC51BBE0'

GO
/****** Object:  StoredProcedure [dbo].[rptResContaCorrenteFrentista]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- [rptResContaCorrenteFrentista]
  CREATE PROCEDURE [dbo].[rptResContaCorrenteFrentista] @pIdposto UNIQUEIDENTIFIER
AS
    SELECT Colaboradores.RzSocial
           ,tbUsuarios.NomeUsual
           ,ISNULL ((SELECT SUM(tbColaboradoresDifCaixa.valor) AS Devedor
                     FROM   tbColaboradoresDifCaixa with(nolock)
                            INNER JOIN tbCaixa  with(nolock) ON tbColaboradoresDifCaixa.idCaixa = tbCaixa.Id
					WHERE  ( tbColaboradoresDifCaixa.Tipo = 'C'
                               OR tbColaboradoresDifCaixa.Tipo = 'D' )
                        AND ( tbColaboradoresDifCaixa.valor < 0 )
                        AND ( tbColaboradoresDifCaixa.idEntidade =
                            Colaboradores.Id )
                         OR ( tbColaboradoresDifCaixa.Tipo = 'E' )
                            AND ( tbColaboradoresDifCaixa.valor > 0 )
                            AND ( tbColaboradoresDifCaixa.idEntidade =
                                Colaboradores.Id )
                         OR ( tbColaboradoresDifCaixa.Tipo = 'L' )
                         AND ( tbColaboradoresDifCaixa.idEntidade = Colaboradores.Id )), 0) AS 
               Devedor
           ,ISNULL ((SELECT SUM(tbColaboradoresDifCaixa_1.valor) AS Expr1
                     FROM   tbColaboradoresDifCaixa AS tbColaboradoresDifCaixa_1 with(nolock)
                            INNER JOIN tbCaixa AS tbCaixa_1  with(nolock) ON tbColaboradoresDifCaixa_1.idCaixa = tbCaixa_1.Id
                            INNER JOIN tbEntidades  with(nolock) ON tbColaboradoresDifCaixa_1.IdEntidade = tbEntidades.Id
                     WHERE  ( tbColaboradoresDifCaixa_1.Tipo = 'R' )
						AND ( tbColaboradoresDifCaixa_1.idEntidade = Colaboradores.Id )
                        AND ( tbColaboradoresDifCaixa_1.valor <> 0 )), 0)              AS
            RetaGuarda
           ,ISNULL ((SELECT SUM(Valor) AS Expr1
                     FROM   tbPLR with(nolock)
                     WHERE  ( IDEntidade = Colaboradores.Id )), 0) AS
            PLR
    FROM   tbEntidades AS Colaboradores  with(nolock)
			inner join tbFuncs  with(nolock) on Colaboradores.Id = tbFuncs.IdEntidade
			inner join tbPostos  with(nolock) on tbFuncs.IdPosto = tbPostos.Id
           INNER JOIN tbEntidades  with(nolock)
                   ON Colaboradores.Id = tbEntidades.Id
           INNER JOIN tbUsuarios  with(nolock)
                   ON Colaboradores.Id = tbUsuarios.idEntidade
    WHERE  ( tbPostos.Id =  @pIdposto )
       AND ( tbEntidades.Tipo = 'FU' )
    ORDER  BY Colaboradores.NomeUsual 



GO
/****** Object:  StoredProcedure [dbo].[rptResDepositos]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



--rptResDepositos
CREATE PROCEDURE [dbo].[rptResDepositos] @pIdposto   UNIQUEIDENTIFIER
                                        ,@pCaixaIni UNIQUEIDENTIFIER
                                        ,@pCaixaFim UNIQUEIDENTIFIER
AS
	DECLARE @ValorRetirado MONEY
    DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
	
	SET @diaIni = (SELECT DataAbertura
                    FROM   tbCaixa with(nolock)
                    WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)
    SET @diaFim = (SELECT DataAbertura
                    FROM   tbCaixa with(nolock)
                    WHERE  Id = @pCaixaFIM AND IdPosto = @pIdPosto)
    
    INSERT INTO @tblCaixas
    SELECT Id
    FROM tbCaixa with(nolock)
    WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto
    
    SELECT Isnull(SUM(Valor), 0)          AS Depositado
           ,(SELECT Sum(valor)
             FROM   tbColaboradoresDifCAixa with(nolock)
             WHERE  tipo = 'D'
                AND idCAixa = @pCaixaFIM) DiferencaDia
           ,Isnull((SELECT Sum(Valor)
                    FROM   tbChequeSemFundo with(nolock)
                    WHERE  idPosto = @pIDposto
                       AND Pago = 0), 0)  AS ChequeSemFundo
    FROM   dbo.tbDepositos with(nolock)
    WHERE  ( idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
       AND ( idPosto = @pIDPosto ) 



GO
/****** Object:  StoredProcedure [dbo].[rptResDespesas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



--rptResDespesas
CREATE PROCEDURE [dbo].[rptResDespesas] @pIdposto   UNIQUEIDENTIFIER
                                       ,@pCaixaIni UNIQUEIDENTIFIER
                                       ,@pCaixaFim UNIQUEIDENTIFIER
AS
    DECLARE @diaIni DATETIME, @diaFim DATETIME
    DECLARE @pMes INT
    DECLARE @pano INT
    DECLARE @dia INT
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
    DECLARE @tblCaixasMes TABLE(IdCaixa UNIQUEIDENTIFIER)

	--Caixas avaliados
	SET @diaIni = (SELECT DataAbertura
                    FROM   tbCaixa with(nolock)
                    WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)
    SET @diaFim = (SELECT DataAbertura
                    FROM   tbCaixa with(nolock)
                    WHERE  Id = @pCaixaFIM AND IdPosto = @pIdPosto)
    
    INSERT INTO @tblCaixas
    SELECT Id
    FROM tbCaixa with(nolock)
    WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto
	
	--Caixas do mês
    SET @Dia=(SELECT day(dia)
              FROM   tbCaixa with(nolock)
              WHERE  Id = @pCaixaINI)
    SET @pmes = (SELECT month(dia)
                 FROM   tbCaixa with(nolock)
                 WHERE  Id = @pCaixaINI)
    SET @pAno = (SELECT year(dia)
                 FROM   tbCaixa with(nolock)
                 WHERE  Id = @pCaixaINI)
    
    INSERT INTO @tblCaixasMes
    SELECT Id
    FROM tbCaixa with(nolock)
    WHERE day(Dia)<= @Dia
          AND  month(dia) = @pMes
          AND year(dia) = @pAno
		  AND IdPosto = @pIdPosto
    
    SELECT dbo.tbHistoricos.Descricao
           ,dbo.tbContasPagarReceber.VrUDespesa                     AS VU
           ,dbo.tbContasPagarReceber.Valor
           ,dbo.tbContasPagarReceber.InfoAdic
           ,dbo.tbEntidades.RZSocial                                AS Forn
           ,ISNULL((SELECT SUM(dbo.tbContasPagarReceber.Valor)
                    FROM   dbo.tbContasPagarReceber with(nolock)
                           INNER JOIN dbo.tbHistoricos with(nolock)
                                   ON dbo.tbContasPagarReceber.idHistorico =
                                      dbo.tbHistoricos.Id
                    WHERE  ( dbo.tbContasPagarReceber.Despesa = 1 )
                       AND ( dbo.tbContasPagarReceber.idPosto = @pIDPosto )
                       AND ( dbo.tbContasPagarReceber.IdHistorico in (select Id from tbHistoricos  with(nolock)where Descricao in ('Conveniência','Lubrificantes')))
                       AND ( dbo.tbContasPagarReceber.idPedCaixa IN (SELECT IdCaixa FROM @tblCaixasMes))), 0) AS ValorMes
           ,ISNULL((SELECT SUM(dbo.tbContasPagarReceber.Valor)
                    FROM   dbo.tbContasPagarReceber with(nolock)
                           INNER JOIN dbo.tbHistoricos with(nolock)
                                   ON dbo.tbContasPagarReceber.idHistorico =
                                      dbo.tbHistoricos.Id
                    WHERE  ( dbo.tbContasPagarReceber.Despesa = 1 )
                       AND ( dbo.tbContasPagarReceber.idPosto = @pIDPosto )
                       AND ( dbo.tbContasPagarReceber.IdHistorico in (select Id from tbHistoricos  with(nolock)where Descricao  not in ('Conveniência','Lubrificantes')))
                       AND ( dbo.tbContasPagarReceber.idPedCaixa IN (SELECT IdCaixa FROM @tblCaixasMes))), 0) AS ValorMesPaga            
    FROM   dbo.tbContasPagarReceber with(nolock)
           INNER JOIN dbo.tbHistoricos with(nolock)
                   ON dbo.tbContasPagarReceber.idHistorico = dbo.tbHistoricos.Id
           INNER JOIN dbo.tbEntidades with(nolock)
                   ON dbo.tbContasPagarReceber.idEntidade = dbo.tbEntidades.Id
    WHERE  ( dbo.tbContasPagarReceber.Despesa = 1 )
       AND ( dbo.tbContasPagarReceber.idPosto = @pIDPosto )
       AND ( dbo.tbContasPagarReceber.idPedCaixa IN (SELECT IdCaixa FROM @tblCaixas) ) 


GO
/****** Object:  StoredProcedure [dbo].[rptResEstoque]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptResEstoque
CREATE  PROCEDURE [dbo].[rptResEstoque] @pCaixaTurnoAnt UNIQUEIDENTIFIER
                                      ,@pCaixaIni     UNIQUEIDENTIFIER
                                      ,@pCaixaFim     UNIQUEIDENTIFIER
                                      ,@pIdposto      UNIQUEIDENTIFIER
AS
    DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
	
	SET @diaIni = (SELECT DataAbertura
                    FROM   tbCaixa with(nolock)
                    WHERE  Id = @pCaixaINI AND idposto=@pIdposto)
    SET @diaFim = (SELECT DataAbertura
                    FROM   tbCaixa with(nolock)
                    WHERE  Id = @pCaixaFIM AND idposto=@pIdposto)
    
    INSERT INTO @tblCaixas
    SELECT Id
    FROM tbCaixa with(nolock)
    WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND idposto=@pIdposto
    
    SELECT Caixa.idObjeto
           ,Descricao = RTRIM(dbo.tbProdutos.Descricao + ' ' + '('+ Cast(Caixa.idObjeto AS VARCHAR) + ')') 
           ,Inicial = ROUND(Caixa.ValorLido, 3)          
           ,Preco = ISNULL ((SELECT AVG(dbo.tbVendasItens.PrecoVenda)
                     FROM   dbo.tbVendas with(nolock)
                            INNER JOIN dbo.tbVendasItens with(nolock)
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda   
                             INNER JOIN dbo.tbProdutos with(Nolock)
                                     ON tbVendasItens.idProduto = dbo.tbProdutos.id
                              INNER JOIN dbo.tbtanques with(Nolock)
                                     ON dbo.tbtanques.idProduto = dbo.tbProdutos.id                       
                     WHERE    ( dbo.tbVendas.Status IS NULL )
                           AND( dbo.tbVendasItens.Cancelado = 0 )
                           AND ( dbo.tbVendas.idcaixa IN(Select * from @tblCaixas ))
                           AND ( dbo.tbProdutos.id = ( Select tbProdutos.id From tbProdutos INNER JOIN tbTanques ON tbProdutos.id = tbtanques.idProduto WHERE tbTanques.NumTanque = Caixa.idObjeto AND tbTanques.idPosto = @pidPosto))
                     GROUP  BY dbo.tbProdutos.ID) ,0) 
            ,PrecoCusto = ISNULL ((SELECT AVG(dbo.tbVendasItens.PrecoCusto)
                     FROM   dbo.tbVendas with(nolock)
                            INNER JOIN dbo.tbVendasItens with(nolock)
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                            INNER JOIN dbo.tbTanques with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbTanques.IdPosto
                            INNER JOIN dbo.tbBombas with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbVendasItens.idBomba =
                                           dbo.tbBombas.Id
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
							INNER JOIN @tblCaixas cx
							        ON dbo.tbVendas.idCaixa = cx.IdCaixa
                     WHERE  ( tbVendasItens.Cancelado = 0 )
                     GROUP  BY dbo.tbTanques.NumTanque
                               ,dbo.tbTanques.IdPosto
                     HAVING ( dbo.tbTanques.NumTanque = Caixa.idObjeto )
                            AND ( dbo.tbTanques.IdPosto = @pIDPosto )),0)
           -- Novo campo de total das vendas, basedo  no caulculo por encerrantes
           ,Venda =  CAST((SELECT  SUM(CASE WHEN ca_atual.ValorLido > ca_Ant.ValorLido THEN ca_atual.ValorLido - ca_Ant.ValorLido
		                                     WHEN ca_atual.ValorLido = ca_Ant.ValorLido THEN 0
											 ELSE b.LimiteEncerrante - 0.01 - ca_Ant.ValorLido + ca_atual.ValorLido END)                                                  
                           FROM tbCaixaItens AS ca_Ant 
                            INNER JOIN tbCaixaItens AS ca_atual ON ca_Ant.idObjeto = ca_atual.idObjeto 
                            INNER JOIN tbBombas as b ON ca_Ant.idObjeto = b.NumBomba AND ca_atual.idObjeto = b.NumBomba 
                            INNER JOIN tbTanques AS t ON b.IdTanque = t.Id
                          WHERE     (ca_Ant.IdCaixa = @pCaixaTurnoAnt) 
                            AND (ca_atual.IdCaixa = @pCaixaFim)
                            AND (ca_Ant.TipoLeitura = 'B') 
                            AND (ca_atual.TipoLeitura = 'B') 
                            AND (t.NumTanque = caixa.IdObjeto)
                            AND (b.Idposto= @pIdPosto))    
                         -
                         (SELECT  ISNULL(SUM(af.QTD),0)
                          FROM  tbAfericao as af
                            INNER JOIN @tblCaixas cx ON af.idCaixa = cx.IdCaixa
                            INNER JOIN tbBombas as b ON af.idBomba = b.Id
                            INNER JOIN tbTanques as t ON b.IdTanque = t.Id
                          WHERE ( b.IdPosto = @pIdPosto )
                            AND ( t.NumTanque = caixa.IdObjeto ) ) 
                        AS numeric(12, 3))
           ,Recebimento = ISNULL ((SELECT SUM(dbo.tbPedidosItensRecebidos.qtd) AS Recebimento
                     FROM   dbo.tbPedidosItens with(nolock)
                            INNER JOIN dbo.tbTanques with(nolock)
                                    ON dbo.tbPedidosItens.idPosto = dbo.tbTanques.IdPosto
                                       AND dbo.tbPedidosItens.idProduto = dbo.tbTanques.IdProduto
                            INNER JOIN dbo.tbPedidosItensRecebidos with(nolock)
                                    ON dbo.tbPedidosItens.id = dbo.tbPedidosItensRecebidos.idItem
                                       AND dbo.tbPedidosItens.idPosto = dbo.tbPedidosItensRecebidos.idPosto
                                       AND dbo.tbTanques.Id = dbo.tbPedidosItensRecebidos.IdTanque
							INNER JOIN @tblCaixas cx
							        ON dbo.tbPedidosItensRecebidos.idCaixaRecebimento = cx.IdCaixa
                     WHERE  ( dbo.tbTanques.NumTanque = caixa.idOBjeto )
                        AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0)  
           ,Faturado = ISNULL((SELECT ROUND(SUM(dbo.tbVendasItens.ValorItem),2)
                     FROM   dbo.tbVendas with(nolock)
                            INNER JOIN dbo.tbVendasItens with(nolock)
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                            INNER JOIN dbo.tbTanques with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbTanques.IdPosto
                            INNER JOIN dbo.tbBombas with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbVendasItens.idBomba =
                                           dbo.tbBombas.Id
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
							INNER JOIN @tblCaixas cx
							        ON dbo.tbVendas.idCaixa = cx.IdCaixa
                     WHERE  ( tbVendasItens.Cancelado = 0 ) 
					        AND (tbVendas.Status IS NULL)
                     GROUP  BY dbo.tbTanques.NumTanque
                               ,dbo.tbTanques.IdPosto
                     HAVING ( dbo.tbTanques.NumTanque = Caixa.idObjeto )
                            AND ( dbo.tbTanques.IdPosto = @pIDPosto )),0) 
           ,Final = (SELECT ValorLido
             FROM   dbo.tbCaixaItens with(nolock)
             WHERE  ( dbo.tbCaixaItens.idCaixa = @pCaixaFim )
                AND ( dbo.tbCaixaItens.TipoLeitura = 'T' )
                AND ( dbo.tbCaixaItens.idObjeto = Caixa.idObjeto )) 
           ,Medido = (SELECT ValorCalculado
             FROM   dbo.tbCaixaItens with(nolock)
             WHERE  ( dbo.tbCaixaItens.idCaixa = @pCaixaFim )
                AND ( dbo.tbCaixaItens.TipoLeitura = 'T' )
                AND ( dbo.tbCaixaItens.idObjeto = Caixa.idObjeto ))   
    FROM   dbo.tbProdutosPostos with(nolock)
           INNER JOIN dbo.tbProdutos with(nolock)
                   ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbCaixa with(nolock)
                      INNER JOIN dbo.tbCaixaItens Caixa with(nolock)
                              ON dbo.tbCaixa.Id = Caixa.idCaixa
                   ON dbo.tbProdutosPostos.idPosto = dbo.tbCaixa.idPosto
           INNER JOIN dbo.tbTanques with(nolock)
                   ON dbo.tbProdutosPostos.idPosto = dbo.tbTanques.IdPosto
                      AND Caixa.idObjeto = dbo.tbTanques.NumTanque
                      AND dbo.tbProdutos.Id = dbo.tbTanques.IdProduto
                      AND dbo.tbProdutosPostos.idProduto =
                          dbo.tbTanques.IdProduto
    WHERE  ( Caixa.idCaixa = @pCaixaTurnoAnt )
       AND ( Caixa.TipoLeitura = 'T' )
       AND ( dbo.tbTanques.IdPosto = @pIDPosto )
       AND ( dbo.tbTanques.Ativo = 1 )
    ORDER  BY dbo.tbProdutos.ordem
              ,caixa.idObjeto 



GO
/****** Object:  StoredProcedure [dbo].[rptResEstoqueNovo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptResEstoqueNovo
CREATE PROCEDURE [dbo].[rptResEstoqueNovo] @pCaixaTurnoAnt UNIQUEIDENTIFIER
                                          ,@pCaixaIni     UNIQUEIDENTIFIER
                                          ,@pCaixaFim     UNIQUEIDENTIFIER
                                          ,@pIdposto      UNIQUEIDENTIFIER


AS
	DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
	
	SET @diaIni = (SELECT DataAbertura
                    FROM   tbCaixa with(nolock)
                    WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)
    SET @diaFim = (SELECT DataAbertura
                    FROM   tbCaixa with(nolock)
                    WHERE  Id = @pCaixaFIM AND IdPosto = @pIdPosto)
    
    INSERT INTO @tblCaixas
    SELECT Id
    FROM tbCaixa  with(nolock)
    WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto
	
    SELECT 
			Caixa.idObjeto
           ,
			(SELECT Tcaixa
             FROM   tbCaixa  with(nolock)
             WHERE  id = @pCaixaINI)                                  AS
            TCaixa
           ,dbo.tbProdutos.Descricao                                       AS
            Imagem
           ,RTRIM(dbo.tbProdutos.Descricao+ + ' ' + '('
                  + Cast(Caixa.idObjeto AS VARCHAR) + ')')                 AS
            Descricao
           ,Caixa.ValorLido                                                AS
            Inicial
           ,ISNULL ((SELECT AVG(dbo.tbVendasItens.PrecoVenda)
                     FROM   dbo.tbVendas  with(nolock)
                            INNER JOIN dbo.tbVendasItens  with(nolock)
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                            INNER JOIN dbo.tbTanques  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbTanques.IdPosto
                            INNER JOIN dbo.tbBombas  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbVendasItens.idBomba =
                                           dbo.tbBombas.Id
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
							INNER JOIN @tblCaixas cx
						            ON dbo.tbVendas.idCaixa = cx.IdCaixa
                     WHERE  ( tbVendasItens.Cancelado = 0 )
                     GROUP  BY dbo.tbTanques.NumTanque
                               ,dbo.tbTanques.IdPosto
                     HAVING ( dbo.tbTanques.NumTanque = Caixa.idObjeto )
                            AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0) AS
            Preco
           ,ISNULL ((SELECT AVG(dbo.tbVendasItens.PrecoCusto)
                     FROM   dbo.tbVendas  with(nolock)
                            INNER JOIN dbo.tbVendasItens  with(nolock)
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                            INNER JOIN dbo.tbTanques  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbTanques.IdPosto
                            INNER JOIN dbo.tbBombas  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbVendasItens.idBomba =
                                           dbo.tbBombas.Id
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
							INNER JOIN @tblCaixas cx
						            ON dbo.tbVendas.idCaixa = cx.IdCaixa
                     WHERE  ( tbVendasItens.Cancelado = 0 )
                     GROUP  BY dbo.tbTanques.NumTanque
                               ,dbo.tbTanques.IdPosto
                     HAVING ( dbo.tbTanques.NumTanque = Caixa.idObjeto )
                            AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0) AS
            PrecoCusto
           ,ISNULL ((SELECT SUM(dbo.tbVendasItens.Quantidade)
                     FROM   dbo.tbVendas  with(nolock)
                            INNER JOIN dbo.tbVendasItens  with(nolock)
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                            INNER JOIN dbo.tbTanques  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbTanques.IdPosto
                            INNER JOIN dbo.tbBombas  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbVendasItens.idBomba =
                                           dbo.tbBombas.Id
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
							INNER JOIN @tblCaixas cx
						            ON dbo.tbVendas.idCaixa = cx.IdCaixa										   
                     WHERE  ( tbVendasItens.Cancelado = 0 )
                        AND ( tbvendas.Status IS NULL )
                     GROUP  BY dbo.tbTanques.NumTanque
                               ,dbo.tbTanques.IdPosto
                     HAVING ( dbo.tbTanques.NumTanque = Caixa.idObjeto )
                            AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0) AS
            Venda
           ,ISNULL ((SELECT SUM(dbo.tbPedidosItensRecebidos.qtd) AS Recebimento
                     FROM   dbo.tbPedidosItens  with(nolock)
                            INNER JOIN dbo.tbTanques  with(nolock)
                                    ON dbo.tbPedidosItens.idPosto =
                                       dbo.tbTanques.IdPosto
                                       AND dbo.tbPedidosItens.idProduto =
                                           dbo.tbTanques.IdProduto
                            INNER JOIN dbo.tbPedidosItensRecebidos  with(nolock)
                                    ON dbo.tbPedidosItens.idPedido =
                                       dbo.tbPedidosItensRecebidos.idPedido
                                       AND dbo.tbPedidosItens.idPosto =
                                           dbo.tbPedidosItensRecebidos.idPosto
                                       AND dbo.tbTanques.Id =
                                           dbo.tbPedidosItensRecebidos.IdTanque
							INNER JOIN @tblCaixas cx
							        ON dbo.tbPedidosItens.idCaixaRecebimento = cx.IdCaixa
                     WHERE  ( dbo.tbTanques.NumTanque = caixa.idOBjeto )
                        AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0)     AS
            Recebimento
           ,(SELECT Medicao
             FROM   dbo.tbTanques  with(nolock)
             WHERE  ( idPosto = @pIDPosto )
                AND ( NumTanque = Caixa.idObjeto ))                        AS
            Final
           ,Isnull ((SELECT SUM(0)
                     FROM   dbo.tbTanques  with(nolock)
                            INNER JOIN dbo.tbBombas  with(nolock)
                                    ON dbo.tbTanques.IdPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
                            INNER JOIN dbo.tbAfericao  with(nolock)
                                    ON dbo.tbBombas.IdPosto =
                                       dbo.tbAfericao.idPosto
                                       AND dbo.tbBombas.Id =
                                           dbo.tbAfericao.IdBomba
							INNER JOIN @tblCaixas cx
							        ON dbo.tbAfericao.idCaixa = cx.IdCaixa
                     WHERE  ( dbo.tbBombas.IdPosto = @pIDPosto )
                        AND ( dbo.tbTanques.NumTanque = Caixa.idObjeto )),
            0
            )                                                              AS
            Afericao
           ,ROUND(ISNULL ((SELECT AVG(dbo.tbVendasItens.PrecoVenda)
                           FROM   dbo.tbVendas  with(nolock)
                                  INNER JOIN dbo.tbVendasItens  with(nolock)
                                          ON dbo.tbVendas.Id =
                                             dbo.tbVendasItens.idVenda
                                  INNER JOIN dbo.tbTanques  with(nolock)
                                          ON dbo.tbVendas.idPosto =
                                             dbo.tbTanques.IdPosto
                                  INNER JOIN dbo.tbBombas  with(nolock)
                                          ON dbo.tbVendas.idPosto =
                                             dbo.tbBombas.IdPosto
                                             AND dbo.tbVendasItens.idBomba =
                                                 dbo.tbBombas.Id
                                             AND dbo.tbTanques.Id =
                                                 dbo.tbBombas.IdTanque
								  INNER JOIN @tblCaixas cx
								          ON dbo.tbVendas.idCaixa = cx.IdCaixa
                           WHERE  ( tbVendasItens.Cancelado = 0 )
                           GROUP  BY dbo.tbTanques.NumTanque
                                     ,dbo.tbTanques.IdPosto
                           HAVING ( dbo.tbTanques.NumTanque = Caixa.idObjeto )
                                  AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0)
                  *
                         ISNULL ((SELECT SUM(dbo.tbVendasItens.Quantidade)
                                  FROM   dbo.tbVendas  with(nolock)
                                         INNER JOIN dbo.tbVendasItens  with(nolock)
                                                 ON dbo.tbVendas.Id =
                                                    dbo.tbVendasItens.idVenda
                                         INNER JOIN dbo.tbTanques  with(nolock)
                                                 ON dbo.tbVendas.idPosto =
                                                    dbo.tbTanques.IdPosto
                                         INNER JOIN dbo.tbBombas  with(nolock)
                                                 ON dbo.tbVendas.idPosto =
                                                    dbo.tbBombas.IdPosto
                                                    AND
                                         dbo.tbVendasItens.idBomba =
                                         dbo.tbBombas.Id
                                                    AND dbo.tbTanques.Id =
                                                        dbo.tbBombas.IdTanque
										 INNER JOIN @tblCaixas cx
										         ON dbo.tbVendas.idCaixa = cx.IdCaixa
                                  WHERE  ( tbVendasItens.Cancelado = 0 )
                                  GROUP  BY dbo.tbTanques.NumTanque
                                            ,dbo.tbTanques.IdPosto
                                  HAVING ( dbo.tbTanques.NumTanque = Caixa.idObjeto )
                                         AND ( dbo.tbTanques.IdPosto = @pIDPosto
                                             )),
                         0), 1)
                                                                          AS
            Total
           ,tbProdutos.Ordem
    FROM   dbo.tbProdutosPostos  with(nolock)
           INNER JOIN dbo.tbProdutos  with(nolock)
                   ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbCaixa  with(nolock)
                      INNER JOIN dbo.tbCaixaItens Caixa  with(nolock)
                              ON dbo.tbCaixa.Id = Caixa.idCaixa
                   ON dbo.tbProdutosPostos.idPosto = dbo.tbCaixa.idPosto
           INNER JOIN dbo.tbTanques  with(nolock)
                   ON dbo.tbProdutosPostos.idPosto = dbo.tbTanques.IdPosto
                      AND Caixa.idObjeto = dbo.tbTanques.NumTanque
                      AND dbo.tbProdutos.Id = dbo.tbTanques.IdProduto
                      AND dbo.tbProdutosPostos.idProduto =
                          dbo.tbTanques.IdProduto
    WHERE  ( Caixa.idCaixa = @pCaixaTurnoAnt )
       AND ( Caixa.TipoLeitura = 'T' )
       AND ( dbo.tbTanques.IdPosto = @pIDPosto )
       
       
       
       
    UNION
    SELECT 20
           ,7
           ,'LB'
           ,'Lubrificantes'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbVendasItens.PrecoVenda *
                               dbo.tbVendasItens.Quantidade)
                    FROM   dbo.tbVendas  with(nolock)
                           INNER JOIN dbo.tbVendasItens  with(nolock)
                                   ON dbo.tbVendas.Id =
                                      dbo.tbVendasItens.idVenda
                           INNER JOIN dbo.tbProdutos  with(nolock)
                                   ON dbo.tbVendasItens.idProduto =
                                      dbo.tbProdutos.Id
                           INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                   ON dbo.tbVendas.idPosto =
                                      dbo.tbProdutosPostos.idPosto
                                      AND dbo.tbVendasItens.idProduto =
                                          dbo.tbProdutosPostos.idProduto
                                      AND dbo.tbProdutos.Id =
                                          dbo.tbProdutosPostos.idProduto
						   INNER JOIN @tblCaixas cx
						           ON dbo.tbVendas.idCaixa = cx.IdCaixa
                    WHERE  dbo.tbVendas.idPosto = @pIDPosto
                       AND ( tbVendasItens.Cancelado = 0 )
                       AND ( tbVendas.Status IS NULL )
                    GROUP  BY dbo.tbVendas.idCaixa
                              ,dbo.tbProdutos.TipoProd
                    HAVING ( dbo.tbProdutos.TipoProd = 'LB' )), 0)
           ,21
    UNION
    SELECT 21
           ,7
           ,'LC'
           ,'Conveniência'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbVendasItens.PrecoVenda *
                               dbo.tbVendasItens.Quantidade)
                    FROM   dbo.tbVendas  with(nolock)
                           INNER JOIN dbo.tbVendasItens  with(nolock)
                                   ON dbo.tbVendas.Id =
                                      dbo.tbVendasItens.idVenda
                           INNER JOIN dbo.tbProdutos  with(nolock)
                                   ON dbo.tbVendasItens.idProduto =
                                      dbo.tbProdutos.Id
                           INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                   ON dbo.tbVendas.idPosto =
                                      dbo.tbProdutosPostos.idPosto
                                      AND dbo.tbVendasItens.idProduto =
                                          dbo.tbProdutosPostos.idProduto
                                      AND dbo.tbProdutos.Id =
                                          dbo.tbProdutosPostos.idProduto
						   INNER JOIN @tblCaixas cx
						           ON dbo.tbVendas.idCaixa = cx.IdCaixa
                    WHERE  dbo.tbVendas.idPosto = @pIDPosto
                       AND ( tbVendasItens.Cancelado = 0 )
                       AND ( tbVendas.Status IS NULL )
                    GROUP  BY dbo.tbVendas.idCaixa
                              ,dbo.tbProdutos.TipoProd
                    HAVING ( dbo.tbProdutos.TipoProd = 'LC' )), 0)
           ,22
    UNION
    SELECT 22
           ,7
           ,'SE'
           ,'Prestação de serviços'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbVendasItens.PrecoVenda *
                               dbo.tbVendasItens.Quantidade)
                    FROM   dbo.tbVendas  with(nolock)
                           INNER JOIN dbo.tbVendasItens  with(nolock)
                                   ON dbo.tbVendas.Id =
                                      dbo.tbVendasItens.idVenda
                           INNER JOIN dbo.tbProdutos  with(nolock)
                                   ON dbo.tbVendasItens.idProduto =
                                      dbo.tbProdutos.Id
                           INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                   ON dbo.tbVendas.idPosto =
                                      dbo.tbProdutosPostos.idPosto
                                      AND dbo.tbVendasItens.idProduto =
                                          dbo.tbProdutosPostos.idProduto
                                      AND dbo.tbProdutos.Id =
                                          dbo.tbProdutosPostos.idProduto
						   INNER JOIN @tblCaixas cx
						           ON dbo.tbVendas.idCaixa = cx.IdCaixa
                    WHERE  dbo.tbVendas.idPosto = @pIDPosto
                       AND ( tbVendasItens.Cancelado = 0 )
                       AND ( tbVendas.Status IS NULL )
                    GROUP  BY dbo.tbVendas.idCaixa
                              ,dbo.tbProdutos.TipoProd
                    HAVING ( dbo.tbProdutos.TipoProd = 'SE' )), 0)
           ,23
    UNION
    SELECT 23
           ,7
           ,'TOT'
           ,'Total Faturado'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,24
    UNION
    SELECT 24
           ,7
           ,'MEN'
           ,'Formas de pagamento recebido'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,25
    UNION
    SELECT 25
           ,7
           ,'CV'
           ,'Cheque Vista'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
					INNER JOIN @tblCaixas cx
						    ON dbo.tbVendas.idCaixa = cx.IdCaixa
             WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'CV' )
                AND ( tbVendas.Status IS NULL ))
           ,26
    UNION
    SELECT 26
           ,7
           ,'CP'
           ,'Cheque Prazo'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
					INNER JOIN @tblCaixas cx
						    ON dbo.tbVendas.idCaixa = cx.IdCaixa
             WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'CP' )
                AND ( tbVendas.Status IS NULL ))
           ,27
    UNION
    SELECT 27
           ,7
           ,'CC'
           ,'Cartão de Crédito'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
					INNER JOIN @tblCaixas cx
						    ON dbo.tbVendas.idCaixa = cx.IdCaixa
             WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'CC' )
                AND ( tbVendas.Status IS NULL ))
           ,28
    UNION
    SELECT 28
           ,7
           ,'CD'
           ,'Cartão de Débito'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
					INNER JOIN @tblCaixas cx
						    ON dbo.tbVendas.idCaixa = cx.IdCaixa
             WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'CD' )
                AND ( tbVendas.Status IS NULL ))
           ,29
    UNION
    SELECT 29
           ,7
           ,'PR'
           ,'Prazo'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
					INNER JOIN @tblCaixas cx
						    ON dbo.tbVendas.idCaixa = cx.IdCaixa
             WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'PR' )
                AND ( tbVendas.Status IS NULL ))
           ,30
    UNION
    SELECT 30
           ,7
           ,'CF'
           ,'Carta Frete'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
					INNER JOIN @tblCaixas cx
						    ON dbo.tbVendas.idCaixa = cx.IdCaixa
             WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'CF' )
                AND ( tbVendas.Status IS NULL ))
           ,31
    UNION
    SELECT 31
           ,7
           ,'DI'
           ,'Dinheiro'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
					INNER JOIN @tblCaixas cx
						    ON dbo.tbVendas.idCaixa = cx.IdCaixa
             WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'DI' ))
           ,32
    UNION
    SELECT 32
           ,7
           ,'DP'
           ,'Cliente Especial'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbVendasItens.PrecoEspecial *
                                dbo.tbVendasItens.Quantidade) -
                                           SUM(dbo.tbVendasItens.PrecoVenda *
                                               dbo.tbVendasItens.Quantidade)
                    FROM   dbo.tbVendas  with(nolock)
                           INNER JOIN dbo.tbVendasItens  with(nolock)
                                   ON dbo.tbVendas.Id =
                                      dbo.tbVendasItens.idVenda
                           INNER JOIN dbo.tbProdutos  with(nolock)
                                   ON dbo.tbVendasItens.idProduto =
                                      dbo.tbProdutos.Id
                           INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                   ON dbo.tbVendas.idPosto =
                                      dbo.tbProdutosPostos.idPosto
                                      AND dbo.tbVendasItens.idProduto =
                                          dbo.tbProdutosPostos.idProduto
                                      AND dbo.tbProdutos.Id =
                                          dbo.tbProdutosPostos.idProduto
						   INNER JOIN @tblCaixas cx
								   ON dbo.tbVendas.idCaixa = cx.IdCaixa
                    WHERE  dbo.tbVendas.idPosto = @pIDPosto
                       AND precoEspecial > 0
                       AND ( tbVendasItens.Cancelado = 0 )
                       AND ( tbVendas.Status IS NULL )
                    GROUP  BY dbo.tbProdutos.TipoProd
                              ,dbo.tbVendas.idCaixa), 0)
           ,33
    UNION
    SELECT 33
           ,7
           ,'AF'
           ,'Troco Carta Frete'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbCartaFrete.ValorAdiantamento) *- 1
                    FROM   dbo.tbCartaFrete  with(nolock)
                           INNER JOIN dbo.tbVendas  with(nolock)
                                   ON dbo.tbCartaFrete.idVenda = dbo.tbVendas.Id
                    WHERE  dbo.tbVendas.idCaixa BETWEEN
                           @pCaixaFIM AND @pCaixaFIM),
            0)
           ,34
    UNION
    SELECT 34
           ,7
           ,'RF'
           ,'Retorno Carta Frete'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbCartaFrete.ValorRetorno) *- 1
                    FROM   dbo.tbCartaFrete  with(nolock)
					       INNER JOIN @tblCaixas cx
						           ON dbo.tbCartaFrete.idCaixaRetorno = cx.IdCaixa
                    ), 0)
           ,35
    UNION
    SELECT 35
           ,7
           ,'TO'
           ,'Total Vendido'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,36
    UNION
    SELECT 36
           ,7
           ,'RT'
           ,'Retiradas'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT Sum(Valor) *- 1
                    FROM   tbRetiradas  with(nolock)
					       INNER JOIN @tblCaixas cx
						           ON tbRetiradas.idCaixa = cx.IdCaixa
                    WHERE  idPosto = @pIDPosto), 0)
           ,37
    UNION
    SELECT 37
           ,8
           ,'SD'
           ,'Saldo Retirar'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,38
    ORDER  BY tbProdutos.ordem 


GO
/****** Object:  StoredProcedure [dbo].[rptResEstoqueNovoVer]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptResEstoqueNovoVer
CREATE PROCEDURE [dbo].[rptResEstoqueNovoVer] @pCaixaTurnoAnt UNIQUEIDENTIFIER
                                             ,@pCaixaIni     UNIQUEIDENTIFIER
                                             ,@pCaixaFim     UNIQUEIDENTIFIER
                                             ,@pIdposto      UNIQUEIDENTIFIER
AS
    SELECT Caixa.idObjeto
           ,(SELECT Tcaixa
             FROM   tbCaixa with(nolock)
             WHERE  idCaixa = @pCaixaINI)                                  AS
            TCaixa
           ,dbo.tbProdutos.Descricao                                       AS
            Imagem
           ,RTRIM(dbo.tbProdutos.Descricao+ + ' ' + '('
                  + Cast(Caixa.idObjeto AS VARCHAR) + ')')                 AS
            Descricao
           ,Caixa.ValorLido                                                AS
            Inicial
           ,ISNULL ((SELECT AVG(dbo.tbVendasItens.PrecoVenda)
                     FROM   dbo.tbVendas with(nolock)
                            INNER JOIN dbo.tbVendasItens with(nolock)
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                            INNER JOIN dbo.tbTanques with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbTanques.IdPosto
                            INNER JOIN dbo.tbBombas with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbVendasItens.idBomba =
                                           dbo.tbBombas.Id
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
                     WHERE  ( dbo.tbVendas.idCaixa BETWEEN
                              @pCaixaIni AND @pCaixaFim
                            )
                        AND ( tbVendasItens.Cancelado = 0 )
                     GROUP  BY dbo.tbTanques.Id
                               ,dbo.tbTanques.IdPosto
                     HAVING ( dbo.tbTanques.Id = Caixa.idObjeto )
                            AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0) AS
            Preco
           ,ISNULL ((SELECT AVG(dbo.tbVendasItens.PrecoCusto)
                     FROM   dbo.tbVendas  with(nolock)
                            INNER JOIN dbo.tbVendasItens  with(nolock)
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                            INNER JOIN dbo.tbTanques with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbTanques.IdPosto
                            INNER JOIN dbo.tbBombas with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbVendasItens.idBomba =
                                           dbo.tbBombas.Id
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
                     WHERE  ( dbo.tbVendas.idCaixa BETWEEN
                              @pCaixaIni AND @pCaixaFim
                            )
                        AND ( tbVendasItens.Cancelado = 0 )
                     GROUP  BY dbo.tbTanques.Id
                               ,dbo.tbTanques.IdPosto
                     HAVING ( dbo.tbTanques.Id = Caixa.idObjeto )
                            AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0) AS
            PrecoCusto
           ,ISNULL ((SELECT SUM(dbo.tbVendasItens.Quantidade)
                     FROM   dbo.tbVendas  with(nolock)
                            INNER JOIN dbo.tbVendasItens  with(nolock)
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                            INNER JOIN dbo.tbTanques  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbTanques.IdPosto
                            INNER JOIN dbo.tbBombas  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbVendasItens.idBomba =
                                           dbo.tbBombas.Id
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
                     WHERE  ( dbo.tbVendas.idCaixa BETWEEN
                              @pCaixaIni AND @pCaixaFim
                            )
                        AND ( tbVendasItens.Cancelado = 0 )
                        AND ( tbvendas.Status IS NULL )
                     GROUP  BY dbo.tbTanques.Id
                               ,dbo.tbTanques.IdPosto
                     HAVING ( dbo.tbTanques.Id = Caixa.idObjeto )
                            AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0) AS
            Venda
           ,ISNULL ((SELECT SUM(dbo.tbPedidosItensRecebidos.qtd) AS Recebimento
                     FROM   dbo.tbPedidosItens  with(nolock)
                            INNER JOIN dbo.tbTanques  with(nolock)
                                    ON dbo.tbPedidosItens.idPosto =
                                       dbo.tbTanques.IdPosto
                                       AND dbo.tbPedidosItens.idProduto =
                                           dbo.tbTanques.IdProduto
                            INNER JOIN dbo.tbPedidosItensRecebidos with(nolock)
                                    ON dbo.tbPedidosItens.idPedido =
                                       dbo.tbPedidosItensRecebidos.idPedido
                                       AND dbo.tbPedidosItens.idPosto =
                                           dbo.tbPedidosItensRecebidos.idPosto
                                       AND dbo.tbTanques.Id =
                                           dbo.tbPedidosItensRecebidos.IdTanque
                     WHERE  ( dbo.tbPedidosItens.idCaixaRecebimento BETWEEN
                              @pCaixaINI AND @pCaixaFIM )
                        AND ( dbo.tbTanques.Id = caixa.idOBjeto )
                        AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0)     AS
            Recebimento
           ,(SELECT Medicao
             FROM   dbo.tbTanques
             WHERE  ( idPosto = @pIDPosto )
                AND ( NumTanque = Caixa.idObjeto ))                        AS
            Final
           ,Isnull ((SELECT SUM(0)
                     FROM   dbo.tbTanques  with(nolock)
                            INNER JOIN dbo.tbBombas  with(nolock)
                                    ON dbo.tbTanques.IdPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
                            INNER JOIN dbo.tbAfericao  with(nolock)
                                    ON dbo.tbBombas.IdPosto =
                                       dbo.tbAfericao.idPosto
                                       AND dbo.tbBombas.Id =
                                           dbo.tbAfericao.IdBomba
                     WHERE  ( dbo.tbBombas.IdPosto = @pIDPosto )
                        AND ( dbo.tbTanques.Id = Caixa.idObjeto )
                        AND ( dbo.tbAfericao.idCaixa BETWEEN
                              @pCaixaINI AND @pCaixaFIM )),
            0
            )                                                              AS
            Afericao
           ,ROUND(ISNULL ((SELECT AVG(dbo.tbVendasItens.PrecoVenda)
                           FROM   dbo.tbVendas  with(nolock)
                                  INNER JOIN dbo.tbVendasItens  with(nolock)
                                          ON dbo.tbVendas.Id =
                                             dbo.tbVendasItens.idVenda
                                  INNER JOIN dbo.tbTanques  with(nolock)
                                          ON dbo.tbVendas.idPosto =
                                             dbo.tbTanques.IdPosto
                                  INNER JOIN dbo.tbBombas  with(nolock)
                                          ON dbo.tbVendas.idPosto =
                                             dbo.tbBombas.IdPosto
                                             AND dbo.tbVendasItens.idBomba =
                                                 dbo.tbBombas.Id
                                             AND dbo.tbTanques.Id =
                                                 dbo.tbBombas.IdTanque
                           WHERE  ( dbo.tbVendas.idCaixa BETWEEN
                                    @pCaixaIni AND @pCaixaFim
                                  )
                              AND ( tbVendasItens.Cancelado = 0 )
                           GROUP  BY dbo.tbTanques.Id
                                     ,dbo.tbTanques.IdPosto
                           HAVING ( dbo.tbTanques.Id = Caixa.idObjeto )
                                  AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0)
                  *
                         ISNULL ((SELECT SUM(dbo.tbVendasItens.Quantidade)
                                  FROM   dbo.tbVendas  with(nolock)
                                         INNER JOIN dbo.tbVendasItens  with(nolock)
                                                 ON dbo.tbVendas.Id =
                                                    dbo.tbVendasItens.idVenda
                                         INNER JOIN dbo.tbTanques  with(nolock)
                                                 ON dbo.tbVendas.idPosto =
                                                    dbo.tbTanques.IdPosto
                                         INNER JOIN dbo.tbBombas  with(nolock)
                                                 ON dbo.tbVendas.idPosto =
                                                    dbo.tbBombas.IdPosto
                                                    AND
                                         dbo.tbVendasItens.idBomba =
                                         dbo.tbBombas.Id
                                                    AND dbo.tbTanques.Id =
                                                        dbo.tbBombas.IdTanque
                                  WHERE  ( dbo.tbVendas.idCaixa BETWEEN
                                           @pCaixaIni AND @pCaixaFim
                                         )
                                     AND ( tbVendasItens.Cancelado = 0 )
                                  GROUP  BY dbo.tbTanques.Id
                                            ,dbo.tbTanques.IdPosto
                                  HAVING ( dbo.tbTanques.Id = Caixa.idObjeto )
                                         AND ( dbo.tbTanques.IdPosto = @pIDPosto
                                             )),
                         0), 1)
                                                                          AS
            Total
           ,tbProdutos.Ordem
    FROM   dbo.tbProdutosPostos  with(nolock)
           INNER JOIN dbo.tbProdutos  with(nolock)
                   ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbCaixa  with(nolock)
                      INNER JOIN dbo.tbCaixaItens Caixa  with(nolock)
                              ON dbo.tbCaixa.Id = Caixa.idCaixa
                   ON dbo.tbProdutosPostos.idPosto = dbo.tbCaixa.idPosto
           INNER JOIN dbo.tbTanques  with(nolock)
                   ON dbo.tbProdutosPostos.idPosto = dbo.tbTanques.IdPosto
                      AND Caixa.idObjeto = dbo.tbTanques.Id
                      AND dbo.tbProdutos.Id = dbo.tbTanques.IdProduto
                      AND dbo.tbProdutosPostos.idProduto =
                          dbo.tbTanques.IdProduto
    WHERE  ( Caixa.idCaixa = @pCaixaTurnoAnt )
       AND ( Caixa.TipoLeitura = 'T' )
       AND ( dbo.tbTanques.IdPosto = @pIDPosto )
    UNION
    SELECT 20
           ,7
           ,'LB'
           ,'Lubrificantes'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbVendasItens.PrecoVenda *
                               dbo.tbVendasItens.Quantidade)
                    FROM   dbo.tbVendas  with(nolock)
                           INNER JOIN dbo.tbVendasItens  with(nolock)
                                   ON dbo.tbVendas.Id =
                                      dbo.tbVendasItens.idVenda
                           INNER JOIN dbo.tbProdutos  with(nolock)
                                   ON dbo.tbVendasItens.idProduto =
                                      dbo.tbProdutos.Id
                           INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                   ON dbo.tbVendas.idPosto =
                                      dbo.tbProdutosPostos.idPosto
                                      AND dbo.tbVendasItens.idProduto =
                                          dbo.tbProdutosPostos.idProduto
                                      AND dbo.tbProdutos.Id =
                                          dbo.tbProdutosPostos.idProduto
                    WHERE  dbo.tbVendas.idPosto = @pIDPosto
                       AND ( tbVendasItens.Cancelado = 0 )
                    GROUP  BY dbo.tbProdutos.TipoProd
                              ,dbo.tbVendas.idCaixa
                    HAVING ( dbo.tbVendas.idCaixa BETWEEN
                             @pCaixaINI AND @pCaixaFIM
                           )
                           AND ( dbo.tbProdutos.TipoProd = 'LB' )), 0)
           ,21
    UNION
    SELECT 21
           ,7
           ,'LC'
           ,'Conveniência'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbVendasItens.PrecoVenda *
                               dbo.tbVendasItens.Quantidade)
                    FROM   dbo.tbVendas  with(nolock)
                           INNER JOIN dbo.tbVendasItens  with(nolock)
                                   ON dbo.tbVendas.Id =
                                      dbo.tbVendasItens.idVenda
                           INNER JOIN dbo.tbProdutos  with(nolock)
                                   ON dbo.tbVendasItens.idProduto =
                                      dbo.tbProdutos.Id
                           INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                   ON dbo.tbVendas.idPosto =
                                      dbo.tbProdutosPostos.idPosto
                                      AND dbo.tbVendasItens.idProduto =
                                          dbo.tbProdutosPostos.idProduto
                                      AND dbo.tbProdutos.Id =
                                          dbo.tbProdutosPostos.idProduto
                    WHERE  dbo.tbVendas.idPosto = @pIDPosto
                       AND ( tbVendasItens.Cancelado = 0 )
                    GROUP  BY dbo.tbProdutos.TipoProd
                              ,dbo.tbVendas.idCaixa
                    HAVING ( dbo.tbVendas.idCaixa BETWEEN
                             @pCaixaINI AND @pCaixaFIM
                           )
                           AND ( dbo.tbProdutos.TipoProd = 'LC' )), 0)
           ,22
    UNION
    SELECT 22
           ,7
           ,'SE'
           ,'Prestação de serviços'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbVendasItens.PrecoVenda *
                               dbo.tbVendasItens.Quantidade)
                    FROM   dbo.tbVendas  with(nolock)
                           INNER JOIN dbo.tbVendasItens  with(nolock)
                                   ON dbo.tbVendas.Id =
                                      dbo.tbVendasItens.idVenda
                           INNER JOIN dbo.tbProdutos  with(nolock)
                                   ON dbo.tbVendasItens.idProduto =
                                      dbo.tbProdutos.Id
                           INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                   ON dbo.tbVendas.idPosto =
                                      dbo.tbProdutosPostos.idPosto
                                      AND dbo.tbVendasItens.idProduto =
                                          dbo.tbProdutosPostos.idProduto
                                      AND dbo.tbProdutos.Id =
                                          dbo.tbProdutosPostos.idProduto
                    WHERE  dbo.tbVendas.idPosto = @pIDPosto
                       AND ( tbVendasItens.Cancelado = 0 )
                    GROUP  BY dbo.tbProdutos.TipoProd
                              ,dbo.tbVendas.idCaixa
                    HAVING ( dbo.tbVendas.idCaixa BETWEEN
                             @pCaixaINI AND @pCaixaFIM
                           )
                           AND ( dbo.tbProdutos.TipoProd = 'SE' )), 0)
           ,23
    UNION
    SELECT 23
           ,7
           ,'TOT'
           ,'Total Faturado'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,24
    UNION
    SELECT 24
           ,7
           ,'MEN'
           ,'Formas de pagamento recebido'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,25
    UNION
    SELECT 25
           ,7
           ,'CV'
           ,'Cheque Vista'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CV' ))
           ,26
    UNION
    SELECT 26
           ,7
           ,'CP'
           ,'Cheque Prazo'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CP' ))
           ,27
    UNION
    SELECT 27
           ,7
           ,'CC'
           ,'Cartão de Crédito'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CC' ))
           ,28
    UNION
    SELECT 28
           ,7
           ,'CD'
           ,'Cartão de Débito'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CD' ))
           ,29
    UNION
    SELECT 29
           ,7
           ,'PR'
           ,'Prazo'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'PR' ))
           ,30
    UNION
    SELECT 30
           ,7
           ,'CF'
           ,'Carta Frete'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CF' ))
           ,31
    UNION
    SELECT 31
           ,7
           ,'DI'
           ,'Dinheiro'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'DI' ))
           ,32
    UNION
    SELECT 32
           ,7
           ,'DP'
           ,'Cliente Especial'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbVendasItens.PrecoEspecial *
                                dbo.tbVendasItens.Quantidade) -
                                           SUM(dbo.tbVendasItens.PrecoVenda *
                                               dbo.tbVendasItens.Quantidade)
                    FROM   dbo.tbVendas  with(nolock)
                           INNER JOIN dbo.tbVendasItens  with(nolock)
                                   ON dbo.tbVendas.Id =
                                      dbo.tbVendasItens.idVenda
                           INNER JOIN dbo.tbProdutos  with(nolock)
                                   ON dbo.tbVendasItens.idProduto =
                                      dbo.tbProdutos.Id
                           INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                   ON dbo.tbVendas.idPosto =
                                      dbo.tbProdutosPostos.idPosto
                                      AND dbo.tbVendasItens.idProduto =
                                          dbo.tbProdutosPostos.idProduto
                                      AND dbo.tbProdutos.Id =
                                          dbo.tbProdutosPostos.idProduto
                    WHERE  dbo.tbVendas.idPosto = @pIDPosto
                       AND precoEspecial > 0
                       AND ( tbVendasItens.Cancelado = 0 )
                    GROUP  BY dbo.tbProdutos.TipoProd
                              ,dbo.tbVendas.idCaixa
                    HAVING ( dbo.tbVendas.idCaixa BETWEEN
                             @pCaixaIni AND @pCAixaFim
                           )), 0)
           ,33
    UNION
    SELECT 33
           ,7
           ,'AF'
           ,'Troco Carta Frete'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbCartaFrete.ValorAdiantamento) *- 1
                    FROM   dbo.tbCartaFrete  with(nolock)
                           INNER JOIN dbo.tbVendas  with(nolock)
                                   ON dbo.tbCartaFrete.idVenda = dbo.tbVendas.Id
                    WHERE  dbo.tbVendas.idCaixa BETWEEN
                           @pCaixaFIM AND @pCaixaFIM),
            0)
           ,34
    UNION
    SELECT 34
           ,7
           ,'RF'
           ,'Retorno Carta Frete'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbCartaFrete.ValorRetorno) *- 1
                    FROM   dbo.tbCartaFrete  with(nolock)
                    WHERE  dbo.tbCartaFrete.idCaixaRetorno BETWEEN
                           @pCaixaINI AND @pCaixaFIM
                    ), 0)
           ,35
    UNION
    SELECT 35
           ,7
           ,'TO'
           ,'Total Vendido'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,36
    UNION
    SELECT 36
           ,7
           ,'RT'
           ,'Retiradas'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT Sum(Valor) *- 1
                    FROM   tbRetiradas  with(nolock)
                    WHERE  idPosto = @pIDPosto
                       AND idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM), 0)
           ,37
    UNION
    SELECT 37
           ,8
           ,'SD'
           ,'Saldo Retirar'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,38
    ORDER  BY tbProdutos.ordem 

GO
/****** Object:  StoredProcedure [dbo].[rptResFechamento]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptResFechamento
CREATE PROCEDURE [dbo].[rptResFechamento] @pIdposto   UNIQUEIDENTIFIER
                                         ,@pCaixaIni UNIQUEIDENTIFIER
                                         ,@pCaixaFim UNIQUEIDENTIFIER
                                         
AS
    DECLARE @pCaixaTurnoAnt UNIQUEIDENTIFIER
    DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER) 
    DECLARE @pDataCaixa AS SMALLDATETIME
	DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tbvendas table (vendido money, idobjeto int, idproduto uniqueidentifier, valormedio money,faturado money, Afericao money, TotalVendas money, NumTanque  int)
    	
	SET @pDataCaixa = (SELECT Dia
					   FROM   tbCaixa with(nolock)
					   WHERE  Id = @pCaixaINI)
	
	SET @diaIni = (SELECT DataAbertura FROM tbCaixa  with(nolock)WHERE Id = @pCaixaIni AND IDPosto= @pIdposto)
	SET @diaFim = (SELECT DataAbertura FROM tbCaixa  with(nolock)WHERE Id = @pCaixaFim AND IdPOsto = @pIdposto)

	
	SET @pCaixaTurnoAnt = ( SELECT id
							 FROM tbCaixa with(nolock)
							 WHERE dia = dateadd(day, -1, @pdataCaixa)
							 AND TCaixa = (Select count(id) from tbTurno where idPOsto = @pIdposto )
							 AND idPOsto = @pIdPosto)
		
	INSERT INTO @tblCaixas
    SELECT Id
    FROM tbCaixa with(nolock)  
    WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IDPosto= @pIdPOsto

	
	
	INSERT INTO @tbvendas 
    SELECT  SUM(ca_atual.ValorLido - ca_Ant.ValorLido ),0 ,t.idproduto  ,0  ,0   ,0 , 0 ,t.NumTanque                           
                           FROM tbCaixaItens AS ca_Ant 
                            INNER JOIN tbCaixaItens AS ca_atual ON ca_Ant.idObjeto = ca_atual.idObjeto 
                            INNER JOIN tbBombas as b ON ca_Ant.idObjeto = b.NumBomba AND ca_atual.idObjeto = b.NumBomba 
                            INNER JOIN tbTanques AS t ON b.IdTanque = t.Id
                           
                          WHERE (ca_Ant.IdCaixa = @pCaixaTurnoAnt) 
                            AND (ca_atual.IdCaixa = @pCaixaFim)
                            AND (ca_Ant.TipoLeitura = 'B') 
                            AND (ca_atual.TipoLeitura = 'B')
                            AND (b.Idposto= @pIdPosto)       
    GROUP BY       t.numtanque, t.idproduto


	--select * from @tbVendas
	
	Update @tbVendas
	set TotalVendas= sub.TotalVendas
	from @tbvendas t inner join
	(SELECT ROUND(SUM(tvi.ValorItem),2) as TotalVendas, tt.NumTanque
                     FROM   dbo.tbVendas tv with(nolock)
                            INNER JOIN dbo.tbVendasItens tvi with(nolock)
                                    ON tv.Id = tvi.idVenda
                            INNER JOIN dbo.tbTanques tt with(nolock)
                                    ON tv.idPosto = tt.IdPosto
                            INNER JOIN dbo.tbBombas tb with(nolock)
                                    ON tv.idPosto = tb.IdPosto
                                       AND tvi.idBomba = tb.Id
                                       AND tt.Id = tb.IdTanque
							INNER JOIN @tblCaixas cx
							        ON tv.idCaixa = cx.IdCaixa
                     WHERE  tvi.Cancelado = 0 
					   AND  tv.status IS NULL
					   AND  tt.Idposto = @pIdposto
                     GROUP  BY tt.NumTanque) sub on t.NumTanque = sub.NumTanque

	--Select * from @tbVendas



	Update @tbVendas
	Set Afericao=  sub.qtd
	from @tbvendas t inner join
			 (SELECT  SUM(af.QTD) as qtd,tt.NumTanque
			  FROM  tbAfericao as af
				INNER JOIN @tblCaixas cx ON af.idCaixa = cx.IdCaixa
				INNER JOIN tbBombas as b ON af.idBomba = b.Id
				INNER JOIN tbTanques as tt ON b.IdTanque = tt.Id
			  WHERE ( b.IdPosto = @pIdPosto) group by tt.NumTanque) sub on t.NumTanque = sub.Numtanque


	UPDATE  @tbvendas
	SET     valormedio =  sub.precoMedio
	FROM    @tbvendas t INNER JOIN
		(
			SELECT  AVG(tvi.PrecoVenda) precoMedio,tvi.IdProduto
	 FROM  tbVendas  tv 
	INNER JOIN tbVendasItens tvi ON tv.Id = tvi.IdVenda 
	INNER JOIN tbProdutos  tp ON tvi.IdProduto = tp.Id
	INNER JOIN tbTanques tt ON tp.id = tt.IdProduto
	INNER JOIN @tblCaixas cx ON tv.idCaixa = cx.IdCaixa
	inner join @tbvendas tvii on tvii.idproduto = tvi.IdProduto

	WHERE  (tv.IdPosto = @pIdPosto) 
	 AND (tv.Status IS NULL) 
	 AND (tvi.cancelado=0)
	 group by tvi.IdProduto
	 
		) sub ON t.idproduto = sub.IdProduto

	 --Update @tbVendas Set ValorMedio = (totalVendas / Case Vendido WHEN 0 THEN 1 ELSE VENDIDO END)
	 -- Select * from @tbVendas
	    
	UPDATE  @tbvendas set faturado = (vendido  - afericao) * valormedio
	--select * from @tbvendas         

	--Select Sum(Faturado) from @tbVendas AS Valor  
					 

    SELECT id = 1
           ,'Combustível'
            AS Tipo  
          ,(Select ISNULL(SUM(Faturado), 0) from @tbvendas )  
           As Valor  
          ,0
           As Depositado

    UNION
    SELECT id = 2
           ,'Lubrificante'
            AS Tipo
           ,Isnull(SUM(dbo.tbVendasItens.Quantidade *
            dbo.tbVendasItens.PrecoVenda), 0) 
            AS Valor
           ,0
            AS Depositado
    FROM   dbo.tbVendas  with(nolock)
           --INNER JOIN dbo.tbCaixa  with(nolock)
                  -- ON dbo.tbVendas.IdCaixa = dbo.tbCaixa.Id
		  INNER JOIN @tblCaixas cx
				  ON dbo.tbVendas.idCaixa = cx.IdCaixa
           INNER JOIN dbo.tbVendasItens  with(nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos  with(nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbProdutosPostos  with(nolock)
                   ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
                      AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
                      AND dbo.tbVendasItens.idProduto =
                          dbo.tbProdutosPostos.idProduto
    WHERE  ( dbo.tbVendas.idPosto = @pIDPosto )
       --AND ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
       AND ( dbo.tbProdutos.TipoProd = 'LB' )
       AND ( tbVendasItens.Cancelado = 0 )
       AND ( tbVendas.Status IS NULL )
    UNION
    SELECT id = 3
           ,'Conveniência'
            AS Tipo
           ,Isnull(SUM(dbo.tbVendasItens.Quantidade *
            dbo.tbVendasItens.PrecoVenda), 0) AS
            Valor
           ,0
            AS Depositado
    FROM   dbo.tbVendas  with(nolock)
           --INNER JOIN dbo.tbCaixa  with(nolock)
                  -- ON dbo.tbVendas.IdCaixa = dbo.tbCaixa.Id
		   INNER JOIN @tblCaixas cx
				  ON dbo.tbVendas.idCaixa = cx.IdCaixa
           INNER JOIN dbo.tbVendasItens  with(nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos  with(nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbProdutosPostos  with(nolock)
                   ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
                      AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
                      AND dbo.tbVendasItens.idProduto =
                          dbo.tbProdutosPostos.idProduto
    WHERE  ( dbo.tbVendas.idPosto = @pIDPosto )
       --AND ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
       AND ( dbo.tbProdutos.TipoProd = 'LC' )
       AND ( tbVendasItens.Cancelado = 0 )
       AND ( tbVendas.Status IS NULL )
    UNION
    SELECT id = 4
           ,'Prestação de serviços'
            AS Tipo
           ,Isnull(SUM(dbo.tbVendasItens.Quantidade *
            dbo.tbVendasItens.PrecoVenda), 0) 
            AS Valor
           ,0
            AS Depositado
    FROM   dbo.tbVendas  with(nolock)
           --INNER JOIN dbo.tbCaixa  with(nolock)
                   --ON dbo.tbVendas.IdCaixa = dbo.tbCaixa.Id
		INNER JOIN @tblCaixas cx
				  ON dbo.tbVendas.idCaixa = cx.IdCaixa
           INNER JOIN dbo.tbVendasItens  with(nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos  with(nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbProdutosPostos  with(nolock)
                   ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
                      AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
                      AND dbo.tbVendasItens.idProduto =
                          dbo.tbProdutosPostos.idProduto
    WHERE  ( dbo.tbVendas.idPosto = @pIDPosto )
       --AND ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
       AND ( dbo.tbProdutos.TipoProd = 'SE' )
       AND ( tbVendasItens.Cancelado = 0 )
       AND ( tbVendas.Status IS NULL )
    UNION
    SELECT id = 5
           ,'Cartão de crédito'                                      
            AS Tipo
           ,Isnull(( SUM(dbo.tbVendasItensPagamento.Valor) ), 0) *- 1 
           AS Valor
           ,0                                                         
           AS Depositado
    FROM   dbo.tbVendas  with(nolock)
           INNER JOIN dbo.tbCaixa  with(nolock)
                   ON dbo.tbVendas.IdCaixa = dbo.tbCaixa.Id
           INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda
		   INNER JOIN @tblCaixas cx
				  ON dbo.tbVendas.idCaixa = cx.IdCaixa
    WHERE  ( dbo.tbVendas.idPosto = @pIDPosto )
       --AND ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
       AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CC' )
       AND ( tbVendas.Status IS NULL )
    UNION
    SELECT id = 6
           ,'Cartão de débito'                                       
            AS Tipo
           ,isnull(( SUM(dbo.tbVendasItensPagamento.Valor) ), 0) *- 1 
           AS Valor
           ,0                                                         
           AS Depositado
    FROM   dbo.tbVendas  with(nolock)
           INNER JOIN dbo.tbCaixa  with(nolock)
                   ON dbo.tbVendas.IdCaixa = dbo.tbCaixa.Id
           INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda
		   INNER JOIN @tblCaixas cx
				  ON dbo.tbVendas.idCaixa = cx.IdCaixa
    WHERE  ( dbo.tbVendas.idPosto = @pIDPosto )
       --AND ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
       AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CD' )
       AND ( tbVendas.Status IS NULL )
    UNION
    SELECT id = 7
           ,'Prazo'                                                       
           AS Tipo
           ,Isnull(SUM(dbo.tbVendasItensPagamento.Valor), 0) * -1
		  --  + Isnull(
    --         (SELECT SUM(dbo.tbCartaFrete.ValorAbastecimento) * -1
    --         FROM   dbo.tbCartaFrete  with(nolock)
    --                INNER JOIN dbo.tbVendas  with(nolock)
    --                        ON dbo.tbCartaFrete.idVenda = dbo.tbVendas.Id
    --               -- INNER JOIN dbo.tbCaixa  with(nolock)
    --                       -- ON dbo.tbVendas.idCaixa = dbo.tbCaixa.Id
    --                          -- AND dbo.tbCartaFrete.IdPosto =
    --                              -- dbo.tbCaixa.idPosto
    --                          -- AND dbo.tbVendas.idPosto = dbo.tbCaixa.idPosto
				--   INNER JOIN @tblCaixas cx
				--           ON dbo.tbVendas.idCaixa = cx.IdCaixa
    --         WHERE  ( dbo.tbVendas.idPosto = @pIDPosto )
    --            --AND ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
				--AND (tbVendas.Status IS NULL)), 0)
           AS Valor
           ,0                                                                
           AS Depositado
    FROM   dbo.tbVendasItensPagamento  with(nolock)
           INNER JOIN dbo.tbVendas  with(nolock)
                   ON dbo.tbVendasItensPagamento.idVenda = dbo.tbVendas.Id
                  AND dbo.tbVendasItensPagamento.IdEntidade = dbo.tbVendas.IdCliente
		   INNER JOIN @tblCaixas cx
				  ON dbo.tbVendas.idCaixa = cx.IdCaixa
    WHERE  ( dbo.tbVendas.idPosto = @pIDPosto )
       --AND ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
       AND ( (dbo.tbVendasItensPagamento.IdEntidade <> dbo.GuidEmpty() AND dbo.tbVendasItensPagamento.IdEntidade IS NOT NULL) )
	   AND (tbVendas.Status IS NULL)
       AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'PR'
              OR dbo.tbVendasItensPagamento.TipoPagamento = 'CP' )
    UNION
    SELECT id = 8
           ,'Despesas'                     AS Tipo
           ,Isnull(( SUM(Valor) ), 0) *- 1 AS Valor
           ,0                              AS Depositado
    FROM   dbo.tbContasPagarReceber  with(nolock)
           INNER JOIN @tblCaixas cx
					    ON dbo.tbContasPagarReceber.IdPedCaixa = cx.IdCaixa
			--INNER JOIN dbo.tbCaixa  with(nolock)
                   --ON dbo.tbContasPagarReceber.IdPedCaixa = dbo.tbCaixa.Id
    WHERE  ( Despesa = 1 )
       AND ( dbo.tbContasPagarReceber.idPosto = @pIDPosto )
       --AND ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
    UNION
    SELECT id = 10
           ,'Retorno de carta frete'                           AS Tipo
           ,Isnull(SUM(dbo.tbCartaFrete.ValorRetorno), 0) * -1 AS Valor
           ,0                                                  AS Depositado
    FROM   dbo.tbCartaFrete  with(nolock)
           --INNER JOIN dbo.tbCaixa  with(nolock)
                   --ON dbo.tbCartaFrete.IdCaixaRetorno = dbo.tbCaixa.Id
           INNER JOIN @tblCaixas cx
					    ON dbo.tbCartaFrete.IdCaixaRetorno = cx.IdCaixa
    WHERE  ( dbo.tbCartaFrete.idPosto = @pIDPosto )
      -- AND ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
    UNION
    SELECT id = 11
           ,'Troco de carta frete'                                  AS Tipo
           ,Isnull(SUM(dbo.tbCartaFrete.ValorAdiantamento), 0) * -1 AS Valor
           ,0                                                       AS Depositado
    FROM   dbo.tbCartaFrete  with(nolock)
           INNER JOIN dbo.tbVendas  with(nolock)
                   ON dbo.tbCartaFrete.idVenda = dbo.tbVendas.Id
           --INNER JOIN dbo.tbCaixa  with(nolock)
                  -- ON dbo.tbVendas.idCaixa = dbo.tbCaixa.Id
                      --AND dbo.tbCartaFrete.IdPosto = dbo.tbCaixa.idPosto
                      --AND dbo.tbVendas.idPosto = dbo.tbCaixa.idPosto
		INNER JOIN @tblCaixas cx
				  ON dbo.tbVendas.idCaixa = cx.IdCaixa
    WHERE  ( dbo.tbVendas.idPosto = @pIDPosto )
      -- AND ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
    UNION
    SELECT id=14
           ,'Recebimentos'        AS Tipo
           ,Isnull(Sum(valor), 0) AS valor
           ,0                     AS Depositado
    FROM   tbContasPagarReceber  with(nolock)
           --INNER JOIN dbo.tbCaixa  with(nolock)
                   --ON dbo.tbContasPagarReceber.IdPedCaixa = dbo.tbCaixa.Id
		   INNER JOIN @tblCaixas cx
				  ON dbo.tbContasPagarReceber.IdPedCaixa = cx.IdCaixa
    WHERE  ( dbo.tbContasPagarReceber.idPosto = @pIDPosto )
       AND ( dbo.tbContasPagarReceber.idTipo = 'RC' )
       AND idTipoDocto NOT IN ( 'CC', 'CD', 'DF' )
      -- AND ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
    UNION
    SELECT id=16
           ,'Preço diferenciado'                                     
            AS Tipo
           ,ROUND(Isnull(SUM(dbo.tbVendasItens.PrecoVenda *
                       dbo.tbVendasItens.Quantidade -
                       dbo.tbVendasItens.PrecoEspecial *
                       dbo.tbVendasItens.Quantidade) *- 1, 0) ,2)
            AS Valor
           ,0                                                         
           AS Depositado
    FROM   dbo.tbVendas  with(nolock)
           --INNER JOIN dbo.tbCaixa  with(nolock)
                   --ON dbo.tbVendas.IdCaixa = dbo.tbCaixa.Id
           INNER JOIN @tblCaixas cx
				  ON dbo.tbVendas.IdCaixa = cx.IdCaixa
           INNER JOIN dbo.tbVendasItens  with(nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos  with(nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbProdutosPostos  with(nolock)
                   ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
                      AND dbo.tbVendasItens.idProduto =
                          dbo.tbProdutosPostos.idProduto
                      AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
    WHERE  ( dbo.tbVendas.idPosto = @pIDPosto )
      -- AND ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
       AND ( dbo.tbVendasItens.PrecoEspecial > 0 )
       AND ( tbVendasItens.Cancelado = 0 )
       AND ( tbVendas.Status IS NULL )
    UNION
    SELECT id=17
           ,'Quebra de caixa'                AS Tipo
           ,( ROUND(Isnull(Sum(valor), 0), 2) )        AS Valor
           ,(SELECT Isnull(SUM(Valor), 0)    AS Depositado 
             FROM   dbo.tbDepositos  with(nolock)
                    --INNER JOIN dbo.tbCaixa  with(nolock)
                            --ON dbo.tbDepositos.IdCaixa = dbo.tbCaixa.Id
					INNER JOIN @tblCaixas cx
				             ON dbo.tbDepositos.IdCaixa = cx.IdCaixa
             WHERE  --( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim ) AND 
			          ( tbDepositos.idPosto = @pIDPosto )) AS Depositado
    FROM   tbColaboradoresDifCaixa  with(nolock)
           --INNER JOIN dbo.tbCaixa  with(nolock)
                  -- ON dbo.tbColaboradoresDifCaixa.IdCaixa = dbo.tbCaixa.Id
		   INNER JOIN @tblCaixas cx
				  ON dbo.tbColaboradoresDifCaixa.IdCaixa = cx.IdCaixa

    WHERE  --dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim AND 
	   Tipo = 'C'
       AND tbColaboradoresDifCaixa.idPosto = @pidPosto
    UNION
    SELECT id = 18                                                
           ,'Retaguarda'                                      AS Tipo
           ,ISNULL(SUM(dbo.tbColaboradoresDifCaixa.valor), 0) AS Valor
           ,0                                                 AS Depositado
    FROM   dbo.tbColaboradoresDifCaixa  with(nolock)
           --INNER JOIN dbo.tbCaixa  with(nolock)
                  -- ON dbo.tbColaboradoresDifCaixa.IdCaixa = dbo.tbCaixa.Id
		   INNER JOIN @tblCaixas cx
				  ON dbo.tbColaboradoresDifCaixa.IdCaixa = cx.IdCaixa
           INNER JOIN dbo.tbFuncs  with(nolock)
                   ON dbo.tbColaboradoresDifCaixa.idEntidade =
                      dbo.tbFuncs.IdEntidade
    WHERE  --( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim ) AND 
	       ( dbo.tbColaboradoresDifCaixa.Tipo = 'R' )
       AND ( dbo.tbColaboradoresDifCaixa.idPosto = @pidPosto )
       AND ( dbo.tbFuncs.Administrativa = 0 )
       AND ( dbo.tbFuncs.Gerente = 0 )
       AND ( dbo.tbColaboradoresDifCaixa.valor > 0 ) 
GO
/****** Object:  StoredProcedure [dbo].[rptResFechamentoCaixa]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptResFechamentoCaixa
CREATE PROCEDURE [dbo].[rptResFechamentoCaixa] @pCaixaTurnoAnt UNIQUEIDENTIFIER
                                              ,@pCaixaIni     UNIQUEIDENTIFIER
                                              ,@pCaixaFim     UNIQUEIDENTIFIER
                                              ,@pIdposto      UNIQUEIDENTIFIER
AS

	DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)

	SET @diaIni = (SELECT DataAbertura FROM   tbCaixa with(nolock) WHERE  Id = @pCaixaIni AND IdPosto = @pIdPosto)
	SET @diaFim = (SELECT DataAbertura FROM   tbCaixa  with(nolock)WHERE  Id = @pCaixaFim AND IdPosto = @pIdPosto)

	INSERT INTO @tblCaixas
	SELECT Id
	FROM tbCaixa  with(nolock)
	WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto


    SELECT Caixa.idObjeto
           ,(SELECT Tcaixa
             FROM   tbCaixa with(nolock)
             WHERE  idCaixa = @pCaixaINI)                                  AS
            TCaixa
           ,dbo.tbProdutos.Descricao                                       AS
            Imagem
           ,RTRIM(dbo.tbProdutos.Descricao + '('
                  + Cast(Caixa.idObjeto AS VARCHAR) + ')')                 AS
            Descricao
           ,Caixa.ValorLido                                                AS
            Inicial
           ,ISNULL ((SELECT AVG(dbo.tbVendasItens.PrecoVenda)
                     FROM   dbo.tbVendas with(nolock)
                            INNER JOIN dbo.tbVendasItens with(nolock)
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                            INNER JOIN dbo.tbTanques with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbTanques.IdPosto
                            INNER JOIN dbo.tbBombas with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbVendasItens.idBomba =
                                           dbo.tbBombas.Id
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
							INNER JOIN @tblCaixas cx
							        ON dbo.tbVendas.idCaixa = cx.IdCaixa
                     WHERE  ( tbVendasItens.Cancelado = 0 )
                     GROUP  BY dbo.tbTanques.Id
                               ,dbo.tbTanques.IdPosto
                     HAVING ( dbo.tbTanques.Id = Caixa.idObjeto )
                            AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0) AS
            Preco
           ,ISNULL ((SELECT AVG(dbo.tbVendasItens.PrecoCusto)
                     FROM   dbo.tbVendas with(nolock)
                            INNER JOIN dbo.tbVendasItens with(nolock)
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                            INNER JOIN dbo.tbTanques with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbTanques.IdPosto
                            INNER JOIN dbo.tbBombas with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbVendasItens.idBomba =
                                           dbo.tbBombas.Id
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
							INNER JOIN @tblCaixas cx
							        ON dbo.tbVendas.idCaixa = cx.IdCaixa
                     WHERE  ( tbVendasItens.Cancelado = 0 )
                     GROUP  BY dbo.tbTanques.Id
                               ,dbo.tbTanques.IdPosto
                     HAVING ( dbo.tbTanques.Id = Caixa.idObjeto )
                            AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0) AS
            PrecoCusto
           ,ISNULL ((SELECT SUM(dbo.tbVendasItens.Quantidade)
                     FROM   dbo.tbVendas with(nolock)
                            INNER JOIN dbo.tbVendasItens with(nolock)
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                            INNER JOIN dbo.tbTanques  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbTanques.IdPosto
                            INNER JOIN dbo.tbBombas  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbVendasItens.idBomba =
                                           dbo.tbBombas.Id
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
							INNER JOIN @tblCaixas cx
							        ON dbo.tbVendas.idCaixa = cx.IdCaixa
                     WHERE  ( tbVendasItens.Cancelado = 0 )
                     GROUP  BY dbo.tbTanques.Id
                               ,dbo.tbTanques.IdPosto
                     HAVING ( dbo.tbTanques.Id = Caixa.idObjeto )
                            AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0) AS
            Venda
           ,ISNULL ((SELECT SUM(dbo.tbPedidosItensRecebidos.qtd) AS Recebimento
                     FROM   dbo.tbPedidosItens with(nolock)
                            INNER JOIN dbo.tbTanques  with(nolock)
                                    ON dbo.tbPedidosItens.idPosto =
                                       dbo.tbTanques.IdPosto
                                       AND dbo.tbPedidosItens.idProduto =
                                           dbo.tbTanques.IdProduto
                            INNER JOIN dbo.tbPedidosItensRecebidos  with(nolock)
                                    ON dbo.tbPedidosItens.idPedido =
                                       dbo.tbPedidosItensRecebidos.idPedido
                                       AND dbo.tbPedidosItens.idPosto =
                                           dbo.tbPedidosItensRecebidos.idPosto
                                       AND dbo.tbTanques.Id =
                                           dbo.tbPedidosItensRecebidos.IdTanque
							INNER JOIN @tblCaixas cx
							        ON dbo.tbPedidosItens.idCaixaRecebimento = cx.IdCaixa
                     WHERE  ( dbo.tbTanques.Id = caixa.idOBjeto )
                        AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0)     AS
            Recebimento
           ,(SELECT Encerrante
             FROM   dbo.tbBombas  with(nolock)
             WHERE  ( idPosto = @pIDPosto )
                AND ( NumBomba = Caixa.idObjeto ))                         AS
            Final
           ,Isnull ((SELECT SUM(0)
                     FROM   dbo.tbTanques  with(nolock)
                            INNER JOIN dbo.tbBombas  with(nolock)
                                    ON dbo.tbTanques.IdPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
                            INNER JOIN dbo.tbAfericao  with(nolock)
                                    ON dbo.tbBombas.IdPosto =
                                       dbo.tbAfericao.idPosto
                                       AND dbo.tbBombas.Id =
                                           dbo.tbAfericao.IdBomba
							INNER JOIN @tblCaixas cx
							        ON dbo.tbAfericao.idCaixa = cx.IdCaixa
                     WHERE  ( dbo.tbBombas.IdPosto = @pIDPosto )
                        AND ( dbo.tbTanques.Id = Caixa.idObjeto )),
            0
            )                                                              AS
            Afericao
           ,ROUND(ISNULL ((SELECT AVG(dbo.tbVendasItens.PrecoVenda)
                           FROM   dbo.tbVendas  with(nolock)
                                  INNER JOIN dbo.tbVendasItens  with(nolock)
                                          ON dbo.tbVendas.Id =
                                             dbo.tbVendasItens.idVenda
                                  INNER JOIN dbo.tbTanques  with(nolock)
                                          ON dbo.tbVendas.idPosto =
                                             dbo.tbTanques.IdPosto
                                  INNER JOIN dbo.tbBombas  with(nolock)
                                          ON dbo.tbVendas.idPosto =
                                             dbo.tbBombas.IdPosto
                                             AND dbo.tbVendasItens.idBomba =
                                                 dbo.tbBombas.Id
                                             AND dbo.tbTanques.Id =
                                                 dbo.tbBombas.IdTanque
								  INNER JOIN @tblCaixas cx
							              ON dbo.tbVendas.idCaixa = cx.IdCaixa
                           WHERE  ( tbVendasItens.Cancelado = 0 )
                           GROUP  BY dbo.tbTanques.Id
                                     ,dbo.tbTanques.IdPosto
                           HAVING ( dbo.tbTanques.Id = Caixa.idObjeto )
                                  AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0)
                  *
                         ISNULL ((SELECT SUM(dbo.tbVendasItens.Quantidade)
                                  FROM   dbo.tbVendas  with(nolock)
                                         INNER JOIN dbo.tbVendasItens  with(nolock)
                                                 ON dbo.tbVendas.Id =
                                                    dbo.tbVendasItens.idVenda
                                         INNER JOIN dbo.tbTanques  with(nolock)
                                                 ON dbo.tbVendas.idPosto =
                                                    dbo.tbTanques.IdPosto
                                         INNER JOIN dbo.tbBombas  with(nolock)
                                                 ON dbo.tbVendas.idPosto =
                                                    dbo.tbBombas.IdPosto
                                                    AND
                                         dbo.tbVendasItens.idBomba =
                                         dbo.tbBombas.Id
                                                    AND dbo.tbTanques.Id =
                                                        dbo.tbBombas.IdTanque
										 INNER JOIN @tblCaixas cx
							                     ON dbo.tbVendas.idCaixa = cx.IdCaixa
                                  WHERE  ( tbVendasItens.Cancelado = 0 )
                                  GROUP  BY dbo.tbTanques.Id
                                            ,dbo.tbTanques.IdPosto
                                  HAVING ( dbo.tbTanques.Id = Caixa.idObjeto )
                                         AND ( dbo.tbTanques.IdPosto = @pIDPosto
                                             )),
                         0), 1)
                                                                          AS
            Total
           ,tbProdutos.Ordem
    FROM   dbo.tbProdutosPostos   with(nolock)
           INNER JOIN dbo.tbProdutos  with(nolock)
                   ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbCaixa  with(nolock)
                      INNER JOIN dbo.tbCaixaItens Caixa  with(nolock)
                              ON dbo.tbCaixa.Id = Caixa.idCaixa
                   ON dbo.tbProdutosPostos.idPosto = dbo.tbCaixa.idPosto
           INNER JOIN dbo.tbTanques  with(nolock)
                   ON dbo.tbProdutosPostos.idPosto = dbo.tbTanques.IdPosto
                      AND Caixa.idObjeto = dbo.tbTanques.Id
                      AND dbo.tbProdutos.Id = dbo.tbTanques.IdProduto
                      AND dbo.tbProdutosPostos.idProduto =
                          dbo.tbTanques.IdProduto
    WHERE  ( Caixa.idCaixa = @pCaixaTurnoAnt )
       AND ( Caixa.TipoLeitura = 'B' )
       AND ( dbo.tbTanques.IdPosto = @pIDPosto )
    UNION
    SELECT 20
           ,4
           ,'LB'
           ,'Lubrificantes'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbVendasItens.PrecoVenda *
                               dbo.tbVendasItens.Quantidade)
                    FROM   dbo.tbVendas  with(nolock)
                           INNER JOIN dbo.tbVendasItens  with(nolock)
                                   ON dbo.tbVendas.Id =
                                      dbo.tbVendasItens.idVenda
                           INNER JOIN dbo.tbProdutos  with(nolock)
                                   ON dbo.tbVendasItens.idProduto =
                                      dbo.tbProdutos.Id
                           INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                   ON dbo.tbVendas.idPosto =
                                      dbo.tbProdutosPostos.idPosto
                                      AND dbo.tbVendasItens.idProduto =
                                          dbo.tbProdutosPostos.idProduto
                                      AND dbo.tbProdutos.Id =
                                          dbo.tbProdutosPostos.idProduto
						   INNER JOIN @tblCaixas cx
							       ON dbo.tbVendas.idCaixa = cx.IdCaixa
                    WHERE  dbo.tbVendas.idPosto = @pIDPosto
                       AND ( tbVendasItens.Cancelado = 0 )
                    GROUP  BY dbo.tbProdutos.TipoProd
                              ,dbo.tbVendas.idCaixa
                    HAVING ( dbo.tbProdutos.TipoProd = 'LB' )), 0)
           ,21
    UNION
    SELECT 21
           ,4
           ,'LC'
           ,'Conveniência'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbVendasItens.PrecoVenda *
                               dbo.tbVendasItens.Quantidade)
                    FROM   dbo.tbVendas  with(nolock)
                           INNER JOIN dbo.tbVendasItens  with(nolock)
                                   ON dbo.tbVendas.Id =
                                      dbo.tbVendasItens.idVenda
                           INNER JOIN dbo.tbProdutos  with(nolock)
                                   ON dbo.tbVendasItens.idProduto =
                                      dbo.tbProdutos.Id
                           INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                   ON dbo.tbVendas.idPosto =
                                      dbo.tbProdutosPostos.idPosto
                                      AND dbo.tbVendasItens.idProduto =
                                          dbo.tbProdutosPostos.idProduto
                                      AND dbo.tbProdutos.Id =
                                          dbo.tbProdutosPostos.idProduto
						   INNER JOIN @tblCaixas cx
							       ON dbo.tbVendas.idCaixa = cx.IdCaixa
                    WHERE  dbo.tbVendas.idPosto = @pIDPosto
                       AND ( tbVendasItens.Cancelado = 0 )
                    GROUP  BY dbo.tbProdutos.TipoProd
                              ,dbo.tbVendas.idCaixa
                    HAVING ( dbo.tbProdutos.TipoProd = 'LC' )), 0)
           ,22
    UNION
    SELECT 22
           ,4
           ,'TOT'
           ,'Total Vendas'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,22
    UNION
    SELECT 23
           ,4
           ,'CV'
           ,'Cheque Vista'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
					INNER JOIN @tblCaixas cx
							ON dbo.tbVendas.idCaixa = cx.IdCaixa
             WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'CV' ))
           ,23
    UNION
    SELECT 24
           ,4
           ,'CP'
           ,'Cheque Prazo'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
					INNER JOIN @tblCaixas cx
							ON dbo.tbVendas.idCaixa = cx.IdCaixa
             WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'CP' ))
           ,24
    UNION
    SELECT 25
           ,4
           ,'CC'
           ,'Cartão Crédito'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
					INNER JOIN @tblCaixas cx
							ON dbo.tbVendas.idCaixa = cx.IdCaixa
             WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'CC' ))
           ,25
    UNION
    SELECT 26
           ,4
           ,'CD'
           ,'Cartão Débito'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
					INNER JOIN @tblCaixas cx
							ON dbo.tbVendas.idCaixa = cx.IdCaixa
             WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'CD' ))
           ,26
    UNION
    SELECT 27
           ,4
           ,'PR'
           ,'Prazo'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
					INNER JOIN @tblCaixas cx
							ON dbo.tbVendas.idCaixa = cx.IdCaixa
             WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'PR' ))
           ,27
    UNION
    SELECT 28
           ,4
           ,'CF'
           ,'Carta Frete'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
					INNER JOIN @tblCaixas cx
							ON dbo.tbVendas.idCaixa = cx.IdCaixa
             WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'CF' ))
           ,28
    UNION
    SELECT 29
           ,4
           ,'DI'
           ,'Dinheiro'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
					INNER JOIN @tblCaixas cx
							ON dbo.tbVendas.idCaixa = cx.IdCaixa
             WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'DI' ))
           ,29
    UNION
    SELECT 30
           ,4
           ,'DP'
           ,' Cliente Especial.'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbVendasItens.PrecoEspecial *
                                dbo.tbVendasItens.Quantidade) -
                                           SUM(dbo.tbVendasItens.PrecoVenda *
                                               dbo.tbVendasItens.Quantidade)
                    FROM   dbo.tbVendas  with(nolock)
                           INNER JOIN dbo.tbVendasItens  with(nolock)
                                   ON dbo.tbVendas.Id =
                                      dbo.tbVendasItens.idVenda
                           INNER JOIN dbo.tbProdutos  with(nolock)
                                   ON dbo.tbVendasItens.idProduto =
                                      dbo.tbProdutos.Id
                           INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                   ON dbo.tbVendas.idPosto =
                                      dbo.tbProdutosPostos.idPosto
                                      AND dbo.tbVendasItens.idProduto =
                                          dbo.tbProdutosPostos.idProduto
                                      AND dbo.tbProdutos.Id =
                                          dbo.tbProdutosPostos.idProduto
						   INNER JOIN @tblCaixas cx
							       ON dbo.tbVendas.idCaixa = cx.IdCaixa
                    WHERE  dbo.tbVendas.idPosto = @pIDPosto
                       AND precoEspecial > 0
                       AND ( tbVendasItens.Cancelado = 0 )
                    GROUP  BY dbo.tbProdutos.TipoProd
                              ,dbo.tbVendas.idCaixa), 0)
           ,30
    UNION
    SELECT 31
           ,4
           ,'AF'
           ,'Troco Carta Frete'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbCartaFrete.ValorAdiantamento) *- 1
                    FROM   dbo.tbCartaFrete  with(nolock)
                           INNER JOIN dbo.tbVendas  with(nolock)
                                   ON dbo.tbCartaFrete.idVenda = dbo.tbVendas.Id
                    WHERE  dbo.tbVendas.idCaixa BETWEEN
                           @pCaixaFIM AND @pCaixaFIM),
            0)
           ,31
    UNION
    SELECT 32
           ,4
           ,'RF'
           ,'Retorno Carta Frete'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbCartaFrete.ValorRetorno) *- 1
                    FROM   dbo.tbCartaFrete with(nolock)
					       INNER JOIN @tblCaixas cx
							       ON dbo.tbCartaFrete.idCaixaRetorno = cx.IdCaixa), 0)
           ,32
    UNION
    SELECT 33
           ,4
           ,'TO'
           ,'Total Vendido'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,33
    UNION
    SELECT 34
           ,4
           ,'RT'
           ,'Retiradas'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT Sum(Valor) *- 1
                    FROM   tbRetiradas  with(nolock)
					       INNER JOIN @tblCaixas cx
							       ON dbo.tbRetiradas.idCaixa = cx.IdCaixa
                    WHERE  idPosto = @pIDPosto), 0)
           ,34
    UNION
    SELECT 35
           ,5
           ,'SD'
           ,'Saldo Retirar'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,36
    ORDER  BY tbProdutos.ordem 


GO
/****** Object:  StoredProcedure [dbo].[rptResFechamentoPostoCaixa]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptResFechamentoPostoCaixa
CREATE PROCEDURE [dbo].[rptResFechamentoPostoCaixa] @pIdposto   UNIQUEIDENTIFIER
                                                   ,@pCaixaIni UNIQUEIDENTIFIER
                                                   ,@pCaixaFim UNIQUEIDENTIFIER
AS
    DECLARE @ValorRetirado MONEY
	Declare @pTurno as int
	DECLARE @pDataCaixa AS SMALLDATETIME
    DECLARE @pCaixaTurnoAnt UNIQUEIDENTIFIER
	DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
	DECLARE @tbvendas table (vendido money, idobjeto int, idproduto uniqueidentifier, valormedio money,faturado money, Afericao money, Conveniencia money, Lubrificante money)

	SET @pDataCaixa = (SELECT Dia
					   FROM   tbCaixa with(nolock)
					   WHERE  Id = @pCaixaINI)

    SET @pTurno = (Select tcaixa
	                   From tbCaixa with(nolock)
					   WHERE id = @pCaixaINI)

	SET @diaIni = (SELECT DataAbertura
				FROM   tbCaixa  with(nolock)
				WHERE  Id = @pCaixaIni AND IdPosto = @pIdPosto)

	SET @diaFim = (SELECT DataAbertura
				FROM   tbCaixa  with(nolock)
				WHERE  Id = @pCaixaFim AND IdPosto = @pIdPosto)

IF @pTurno = 1
   BEgin
   SET @pCaixaTurnoAnt = ( SELECT id
							 FROM tbCaixa with(nolock)
							 WHERE dia = dateadd(day, -1, @pdataCaixa)
							 AND TCaixa = (Select count(id) from tbTurno where idPOsto = @pIdposto )
							 AND idPOsto = @pIdPosto)
   END
     ELSE
   SET @pCaixaTurnoAnt = (Select id
                             FROM tbCaixa with(nolock)
							 WHERE dia = @pDataCAixa
							 AND Tcaixa = @pturno - 1
							 AND idPosto = @pidPosto)


	INSERT INTO @tblCaixas
	SELECT Id
	FROM tbCaixa  with(nolock)
	WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto
    
    
    SET @ValorRetirado = Isnull((SELECT Sum(Valor)
                                 FROM   tbRetiradas  with(nolock)
								        INNER JOIN @tblCaixas cx
							                    ON dbo.tbRetiradas.idCaixa = cx.IdCaixa
                                 WHERE  idPosto = @pIDPosto), 0)

INSERT INTO @tbvendas 
    SELECT  SUM(ca_atual.ValorLido - ca_Ant.ValorLido ),ca_atual.idobjeto   ,t.idproduto  ,0  ,0   ,0 , 0 , 0                              
                           FROM tbCaixaItens AS ca_Ant 
                            INNER JOIN tbCaixaItens AS ca_atual ON ca_Ant.idObjeto = ca_atual.idObjeto 
                            INNER JOIN tbBombas as b ON ca_Ant.idObjeto = b.NumBomba AND ca_atual.idObjeto = b.NumBomba 
                            INNER JOIN tbTanques AS t ON b.IdTanque = t.Id
                           
                          WHERE     (ca_Ant.IdCaixa = @pCaixaTurnoAnt) 
                            AND (ca_atual.IdCaixa = @pCaixaFim)
                            AND (ca_Ant.TipoLeitura = 'B') 
                            AND (ca_atual.TipoLeitura = 'B')
                            AND (b.Idposto= @pIdPosto)
                                                   
    GROUP BY        ca_atual.idobjeto ,t.idproduto             

	--Select * from @tbVendas

	Update @tbVendas
	Set Afericao=  sub.qtd
	from @tbvendas t inner join
			 (SELECT SUM(af.QTD) as QTD,b.numbomba
			  FROM  tbAfericao as af
				INNER JOIN @tblCaixas cx ON af.idCaixa = cx.IdCaixa
				INNER JOIN tbBombas as b ON af.idBomba = b.Id
				INNER JOIN tbTanques as t ON b.IdTanque = t.Id
			  WHERE ( b.IdPosto = @pIdPosto) Group By b.NumBomba) sub on t.idobjeto = sub.numbomba

	--select * from @tbvendas 

	UPDATE  @tbvendas
	SET     valormedio =  sub.precoMedio
	FROM    @tbvendas t INNER JOIN
		(
			SELECT  AVG(tvi.PrecoVenda) precoMedio,tvi.IdProduto
	 FROM  tbVendas  tv 
	INNER JOIN tbVendasItens tvi ON tv.Id = tvi.IdVenda 
	INNER JOIN tbProdutos  tp ON tvi.IdProduto = tp.Id
	INNER JOIN tbTanques tt ON tp.id = tt.IdProduto
	INNER JOIN @tblCaixas cx ON tv.idCaixa = cx.IdCaixa
	inner join @tbvendas tvii on tvii.idproduto = tvi.IdProduto

	WHERE  (tv.IdPosto = @pIdPosto) 
	 AND (tv.Status IS NULL) 
	 AND (tvi.cancelado=0)
	 group by tvi.IdProduto
	 
		) sub ON t.idproduto = sub.IdProduto

		--select * from @tbVendas

Update @tbVendas 
Set Conveniencia =ISNULL((Select Sum(tbVendasItens.quantidade * tbVendasItens.PrecoVenda) 
	   FROM tbVendas 
	      INNER JOIN @tblCaixas cx
				  ON dbo.tbVendas.idCaixa = cx.IdCaixa
           INNER JOIN dbo.tbVendasItens 
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos  
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbProdutosPostos  
                   ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
                      AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
                      AND dbo.tbVendasItens.idProduto =
                          dbo.tbProdutosPostos.idProduto
    WHERE  ( dbo.tbVendas.idPosto = @pIDPosto )
       --AND ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
       AND ( dbo.tbProdutos.TipoProd = 'LC' )
       AND ( tbVendasItens.Cancelado = 0 )
       AND ( tbVendas.Status IS NULL )),0)

	  -- select * from @tbvendas

Update @tbVendas 
Set Lubrificante =ISNULL((Select Sum(tbVendasItens.quantidade * tbVendasItens.PrecoVenda) 
	   FROM tbVendas 
	      INNER JOIN @tblCaixas cx
				  ON dbo.tbVendas.idCaixa = cx.IdCaixa
           INNER JOIN dbo.tbVendasItens 
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos  
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbProdutosPostos  
                   ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
                      AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
                      AND dbo.tbVendasItens.idProduto =
                          dbo.tbProdutosPostos.idProduto
    WHERE  ( dbo.tbVendas.idPosto = @pIDPosto )
       --AND ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
       AND ( dbo.tbProdutos.TipoProd = 'LB' )
       AND ( tbVendasItens.Cancelado = 0 )
       AND ( tbVendas.Status IS NULL )),0)

	  -- select * from @tbVendas
  
UPDATE  @tbvendas set faturado = (vendido  - afericao) * valormedio

      --select * from @tbVendas

SELECT 1                                             AS ID
       ,'Total faturado'                             AS Descricao
,( Select ROUND(ISNULL(SUM(faturado), 0), 2) + Conveniencia + Lubrificante from @tbvendas  Group By Conveniencia, lubrificante) AS Valor 

UNION
SELECT 2
       ,'Cheque à vista'
       ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
         FROM   dbo.tbVendas  with(nolock)
                INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                        ON dbo.tbVendas.Id =
                           dbo.tbVendasItensPagamento.idVenda
				INNER JOIN @tblCaixas cx
					    ON dbo.tbVendas.idCaixa = cx.IdCaixa
         WHERE  ( tbVendas.IDposto = @pIDPosto )
            AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CV' ))
UNION
SELECT 3
       ,'Cheque pré-datado'
       ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
         FROM   dbo.tbVendas  with(nolock)
                INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                        ON dbo.tbVendas.Id =
                           dbo.tbVendasItensPagamento.idVenda
				INNER JOIN @tblCaixas cx
					    ON dbo.tbVendas.idCaixa = cx.IdCaixa
         WHERE  ( tbVendas.IDposto = @pIDPosto )
            AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CP' ))
UNION
SELECT 4
       ,'Cartão de crédito'
       ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
         FROM   dbo.tbVendas  with(nolock)
                INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                        ON dbo.tbVendas.Id =
                           dbo.tbVendasItensPagamento.idVenda
			    INNER JOIN @tblCaixas cx
					    ON dbo.tbVendas.idCaixa = cx.IdCaixa
         WHERE  ( tbVendas.IDposto = @pIDPosto )
            AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CC' ))
UNION
SELECT 5
       ,'Cartão de débito'
       ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
         FROM   dbo.tbVendas  with(nolock)
                INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                        ON dbo.tbVendas.Id =
                           dbo.tbVendasItensPagamento.idVenda
			    INNER JOIN @tblCaixas cx
					    ON dbo.tbVendas.idCaixa = cx.IdCaixa
         WHERE  ( tbVendas.IDposto = @pIDPosto )
            AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CD' ))
UNION
SELECT 6
       ,'Prazo'
       ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
         FROM   dbo.tbVendas  with(nolock)
                INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                        ON dbo.tbVendas.Id =
                           dbo.tbVendasItensPagamento.idVenda
				INNER JOIN @tblCaixas cx
					    ON dbo.tbVendas.idCaixa = cx.IdCaixa
         WHERE  ( tbVendas.IDposto = @pIDPosto )
            AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'PR' ))
UNION
SELECT 7
       ,'Carta frete'
       ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
         FROM   dbo.tbVendas  with(nolock)
                INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                        ON dbo.tbVendas.Id =
                           dbo.tbVendasItensPagamento.idVenda
				INNER JOIN @tblCaixas cx
					    ON dbo.tbVendas.idCaixa = cx.IdCaixa
         WHERE  ( tbVendas.IDposto = @pIDPosto )
            AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CF' ))
UNION
SELECT 8
       ,'Notas fiscais'
       ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
         FROM   dbo.tbVendas  with(nolock)
                INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                        ON dbo.tbVendas.Id =
                           dbo.tbVendasItensPagamento.idVenda
				INNER JOIN @tblCaixas cx
					    ON dbo.tbVendas.idCaixa = cx.IdCaixa
         WHERE  ( tbVendas.IDposto = @pIDPosto )
            AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'SD'
                   OR dbo.tbVendasItensPagamento.TipoPagamento = 'M1' ))
UNION
SELECT 9
       ,'Dinheiro'
       ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
         FROM   dbo.tbVendas  with(nolock)
                INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                        ON dbo.tbVendas.Id =
                           dbo.tbVendasItensPagamento.idVenda
				INNER JOIN @tblCaixas cx
					    ON dbo.tbVendas.idCaixa = cx.IdCaixa
         WHERE  ( tbVendas.IDposto = @pIDPosto )
            AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'DI' ))
UNION
SELECT 11                                                        AS Expr1
       ,'Cliente especial'                                       AS Expr2
       ,ISNULL ((SELECT SUM(tbVendasItens.PrecoEspecial *
                            tbVendasItens.Quantidade)
                         - SUM(
                                         tbVendasItens.PrecoVenda
                                         * tbVendasItens.Quantidade) AS
                        Expr1
                 FROM   tbVendas  with(nolock)
                        INNER JOIN tbVendasItens  with(nolock)
                                ON tbVendas.Id = tbVendasItens.idVenda
                        INNER JOIN tbProdutos  with(nolock)
                                ON tbVendasItens.idProduto = tbProdutos.Id
                        INNER JOIN tbProdutosPostos   with(nolock)
                                ON tbVendas.idPosto =
                                   tbProdutosPostos.idPosto
                                   AND tbVendasItens.idProduto =
                                       tbProdutosPostos.idProduto
                                   AND tbProdutos.Id =
                                       tbProdutosPostos.idProduto
                 WHERE  ( tbVendas.idPosto = @pIDPosto )
                    AND ( tbVendas.idCaixa in (@pCaixaINI , @pCaixaFIM))
                    AND ( tbVendasItens.PrecoEspecial > 0 )), 0) AS Valor
UNION
SELECT 12
       ,'Troco de carta frete'
       ,Isnull((SELECT SUM(dbo.tbCartaFrete.ValorAdiantamento) *- 1
                FROM   dbo.tbCartaFrete  with(nolock)
                       INNER JOIN dbo.tbVendas  with(nolock)
                               ON dbo.tbCartaFrete.idVenda = dbo.tbVendas.Id
                WHERE  ( tbVendas.IDposto = @pIDPosto )
                   AND dbo.tbVendas.idCaixa in (@pCaixaINI , @pCaixaFIM)),
        0)
UNION
SELECT 13
       ,'Retorno de carta frete'
       ,Isnull((SELECT SUM(dbo.tbCartaFrete.ValorRetorno) *- 1
                FROM   dbo.tbCartaFrete  with(nolock)
                WHERE  ( tbCartaFrete.IDposto = @pIDPosto )
                   AND dbo.tbCartaFrete.idCaixaRetorno in (@pCaixaINI , @pCaixaFIM)), 0)
UNION
SELECT 14
       ,'Total a retirar'
       ,0
UNION
SELECT 15
       ,'Retirado'
       ,@ValorRetirado
UNION
SELECT 16
       AS ID
       ,'Quebra de caixa'
        AS
        Descricao
       ,ISNULL ((SELECT SUM(valor) AS Expr1
                 FROM   dbo.tbColaboradoresDifCaixa  with(nolock)
				        INNER JOIN @tblCaixas cx
							    ON dbo.tbColaboradoresDifCaixa.idCaixa = cx.IdCaixa
                 WHERE  ( Tipo = 'C'
                           OR Tipo = 'R' )
                    AND ( idPosto = @pIDPosto )), 0)
        AS
        Valor 

GO
/****** Object:  StoredProcedure [dbo].[rptResFechamentoPrecoEspecial]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




--rptResFechamentoPrecoEspecial
CREATE PROCEDURE [dbo].[rptResFechamentoPrecoEspecial]
@pIdposto   UNIQUEIDENTIFIER
,@pCaixaIni UNIQUEIDENTIFIER
,@pCaixaFim UNIQUEIDENTIFIER
AS
    DECLARE @pMes INT
    DECLARE @pano INT
    DECLARE @dia INT
    DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)

    SET @Dia=(SELECT day(dia)
              FROM   tbCaixa with(nolock)
              WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)
    SET @pmes = (SELECT month(dia)
                 FROM   tbCaixa with(nolock)
                 WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)
    SET @pAno = (SELECT year(dia)
                 FROM   tbCaixa with(nolock)
                 WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)
    INSERT INTO @tblCaixas
    SELECT Id
    FROM   tbCaixa  with(nolock)
    WHERE  idPosto = @pIDPosto
        AND Month(dia) = @pMes
        AND year(dia) = @pAno
        AND ( DataFechamento IS NOT NULL )
    
    SELECT dbo.tbEntidades.NomeUsual
           ,dbo.tbVendasItensPagamento.TipoPagamento
           ,dbo.tbProdutos.Descricao
           ,dbo.tbVendasItens.Quantidade
           ,dbo.tbVendasItens.PrecoVenda
           ,dbo.tbVendasItens.PrecoEspecial
           ,dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda    AS
            TotalVenda
           ,dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoEspecial AS
            TotalEspecial
           ,dbo.tbVendas.Id
    FROM   dbo.tbVendas  with(nolock)
           INNER JOIN dbo.tbCaixa  with(nolock)
                   ON dbo.tbVendas.IdCaixa = dbo.tbCaixa.Id
           INNER JOIN dbo.tbVendasItens  with(nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos  with(nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda
                      AND dbo.tbVendasItens.idVenda =
                          dbo.tbVendasItensPagamento.idVenda
           INNER JOIN dbo.tbEntidades  with(nolock)
                   ON dbo.tbVendasItensPagamento.IdEntidade = dbo.tbEntidades.Id
		   INNER JOIN @tblCaixas cx
				   ON dbo.tbVendas.idCaixa = cx.IdCaixa
    WHERE  ( dbo.tbVendas.idPosto = @pIDPosto )
       AND ( tbvendas.status IS NULL )
       AND ( tbvendasitens.cancelado = 0 )
    GROUP  BY dbo.tbEntidades.NomeUsual
              ,dbo.tbVendasItensPagamento.TipoPagamento
              ,dbo.tbProdutos.Descricao
              ,dbo.tbVendasItens.Quantidade
              ,dbo.tbVendasItens.PrecoVenda
              ,dbo.tbVendasItens.PrecoEspecial
              ,dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda
              ,dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoEspecial
              ,dbo.tbVendas.Id
    HAVING ( dbo.tbVendasItens.PrecoEspecial > 0 ) 

GO
/****** Object:  StoredProcedure [dbo].[rptResFomasRecebimento]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptResFomasRecebimento
CREATE PROCEDURE [dbo].[rptResFomasRecebimento] @pCaixaIni  UNIQUEIDENTIFIER
                                               ,@pCaixaFim UNIQUEIDENTIFIER
AS
	DECLARE @diaIni DATETIME, @diaFim DATETIME
	SET @diaIni = (SELECT DataFechamento FROM tbCaixa  with (nolock) WHERE Id = @pCaixaIni)
	SET @diaFim = (SELECT DataFechamento FROM tbCaixa   with (nolock)WHERE Id = @pCaixaFim)

    SELECT dbo.tbCaixaItens.idObjeto        AS Descricao
           ,SUM(dbo.tbCaixaItens.ValorLido) AS Valor
    FROM   dbo.tbCaixaItens with (nolock)
           INNER JOIN dbo.tbCaixa with (nolock)
                   ON dbo.tbCaixaItens.idCaixa = dbo.tbCaixa.Id
    WHERE  ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
       AND ( dbo.tbCaixaItens.TipoLeitura = 'V' )
       AND ( dbo.tbCaixaItens.ValorLido > 0 )
    GROUP  BY dbo.tbCaixaItens.idObjeto
    HAVING ( dbo.tbCaixaItens.idObjeto <> 'Caixa' )
    ORDER  BY SUM(dbo.tbCaixaItens.ValorLido) DESC 

GO
/****** Object:  StoredProcedure [dbo].[rptResLeituraBombas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptResLeituraBombas
CREATE PROCEDURE [dbo].[rptResLeituraBombas] @pIdposto        UNIQUEIDENTIFIER
                                            ,@pCaixaIni      UNIQUEIDENTIFIER
                                            ,@pCaixaFim      UNIQUEIDENTIFIER
                                            ,@pCaixaTurnoAnt UNIQUEIDENTIFIER
AS
    DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
	
	SET @diaIni = (SELECT DataAbertura
                    FROM   tbCaixa with (nolock)
                    WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)
    SET @diaFim = (SELECT DataAbertura
                    FROM   tbCaixa with (nolock)
                    WHERE  Id = @pCaixaFIM AND IdPosto = @pIdPosto)
    
    INSERT INTO @tblCaixas
    SELECT Id
    FROM tbCaixa with (nolock)
    WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto
    
    SELECT Caixa.idObjeto
           ,Caixa.ValorLido
            AS Inicio
           ,dbo.tbProdutos.Descricao
           ,dbo.tbProdutos.ordem
           ,(SELECT SUM(ValorLido)
             FROM   dbo.tbCaixaItens with (nolock)
             WHERE  ( dbo.tbCaixaItens.idCaixa = @pCAixaFIM )
                AND ( dbo.tbCaixaItens.TipoLeitura = 'B' )
                AND ( dbo.tbCaixaItens.idObjeto = Caixa.idObjeto ))
            AS Termino
           ,ISNULL ((SELECT SUM(dbo.tbVendasItens.Quantidade)
                     FROM   dbo.tbVendas with (nolock)
                            INNER JOIN dbo.tbVendasItens with (nolock)
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                            INNER JOIN dbo.tbBombas with (nolock)
                                    ON dbo.tbVendasItens.IdBomba = dbo.tbBombas.Id
                     WHERE  ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas)
                            )
                        AND dbo.tbVendas.idPosto = @pIDposto
                        AND ( tbvendas.status IS NULL )
                        AND ( tbvendasItens.cancelado = 0 )
                     GROUP  BY dbo.tbBombas.NumBomba
                     HAVING ( dbo.tbBombas.NumBomba = Caixa.idObjeto )),
            0)
            AS
            Saidas
           ,ISNULL ((SELECT SUM(QTD)
                     FROM   dbo.tbAfericao with (nolock)
                            INNER JOIN dbo.tbBombas  with (nolock)
                                    ON dbo.tbAfericao.IdBomba = dbo.tbBombas.Id
                     WHERE  ( IdBomba <> dbo.GuidEmpty()
                              AND dbo.tbBombas.NumBomba = Caixa.idObjeto )
                        AND ( idCaixa IN (SELECT IdCaixa FROM @tblCaixas)
                              AND ( dbo.tbAfericao.idPosto = @pIDposto ) )), 0)
            AS Afericao
    FROM   dbo.tbProdutos with (nolock)
           INNER JOIN dbo.tbTanques with (nolock)
                   ON dbo.tbProdutos.Id = dbo.tbTanques.IdProduto
           INNER JOIN dbo.tbProdutosPostos with (nolock)
                   ON dbo.tbTanques.IdPosto = dbo.tbProdutosPostos.idPosto
                      AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
           INNER JOIN dbo.tbBombas with (nolock)
                   ON dbo.tbTanques.IdPosto = dbo.tbBombas.IdPosto
                      AND dbo.tbTanques.Id = dbo.tbBombas.IdTanque
           INNER JOIN dbo.tbCaixaItens Caixa with (nolock)
                   ON dbo.tbBombas.NumBomba = Caixa.idObjeto
    WHERE  ( Caixa.idCaixa = @pCaixaTurnoAnt )
       AND ( Caixa.TipoLeitura = 'B' )
       AND ( dbo.tbProdutosPostos.idPosto = @pIDPosto )
    ORDER  BY dbo.tbProdutos.ordem
              ,dbo.tbTanques.NumTanque
              ,dbo.tbBombas.NumBomba



GO
/****** Object:  StoredProcedure [dbo].[rptResLojaConv]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptResLojaConv
CREATE PROCEDURE [dbo].[rptResLojaConv] @pCaixaTurnoAnt UNIQUEIDENTIFIER
                                       ,@pCaixaIni     UNIQUEIDENTIFIER
                                       ,@pCaixaFim     UNIQUEIDENTIFIER
                                       ,@pIdposto      UNIQUEIDENTIFIER
AS
	DECLARE @diaIni DATETIME, @diaFim DATETIME
	SET @diaIni = (SELECT DataFechamento FROM tbCaixa  with (nolock)WHERE Id = @pCaixaIni)
	SET @diaFim = (SELECT DataFechamento FROM tbCaixa  with (nolock)WHERE Id = @pCaixaFim)
	
    SELECT SUM(dbo.tbVendasItens.Quantidade)                AS QTD
           ,AVG(dbo.tbVendasItens.PrecoCusto)               AS PrecoCusto
           ,AVG(dbo.tbVendasItens.PrecoVenda)               AS Precovenda
           ,RTRIM (dbo.tbProdutos.Descricao)                AS Produto
           ,tbLocalEstoque.Descricao                        AS LocalEstoque
           ,CustoEstoque = (SELECT SUM(dbo.tbProdutosPostos.Estoque *
                        dbo.tbProdutosPostos.PrecoCusto) AS
                     Estoque
             FROM   dbo.tbProdutosPostos with (nolock)
                    INNER JOIN dbo.tbProdutos with (nolock)
                            ON dbo.tbProdutosPostos.idProduto =
                               dbo.tbProdutos.Id
             GROUP  BY dbo.tbProdutosPostos.idPosto
                       ,dbo.tbProdutos.TipoProd
             HAVING ( dbo.tbProdutosPostos.idPosto = @pIDPosto )
                    AND ( dbo.tbProdutos.TipoProd = 'LC' ))
           ,VendasEstoque = Isnull((SELECT ValorCalculado
                    FROM   dbo.tbCaixaItens with (nolock)
                    WHERE  tbCaixaItens.idCAixa = @pCaixaTurnoAnt
                       AND idObjeto = 11
					   AND TipoLeitura='V'), 0)    
            ,FaturadoAux = (SUM(dbo.tbVendasItens.Quantidade)  * AVG(dbo.tbVendasItens.PrecoVenda))
    FROM   dbo.tbVendas with (nolock)
		   INNER JOIN dbo.tbCaixa with (nolock)
                   ON dbo.tbVendas.IdCaixa = dbo.tbCaixa.Id
           INNER JOIN dbo.tbVendasItens with (nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos with (nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbProdutosPostos with (nolock)
                   ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
                      AND dbo.tbVendasItens.idProduto =
                          dbo.tbProdutosPostos.idProduto
                      AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
           LEFT JOIN tbLocalEstoque with (nolock)
                   ON tbProdutosPostos.IdLocal = tbLocalEstoque.id
    WHERE  ( dbo.tbVendas.idPosto = @pIDPosto )
       AND ( tbVendasItens.Cancelado = 0 )
       AND ( tbvendas.Status IS NULL )
    GROUP  BY dbo.tbProdutos.Descricao
              ,dbo.tbVendasItens.idBomba
              ,dbo.tbVendas.idCaixa
              ,dbo.tbCaixa.DataFechamento
              ,dbo.tbProdutos.TipoProd
              ,tbLocalEstoque.Descricao
			  ,tbVendasItens.PrecoVenda
    HAVING ( (dbo.tbVendasItens.idBomba = '00000000-0000-0000-0000-000000000000' OR dbo.tbVendasItens.idBomba is null) )
           AND ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
           AND ( dbo.tbProdutos.TipoProd = 'LC' ) 
           
    order by FaturadoAux,Produto
GO
/****** Object:  StoredProcedure [dbo].[rptResLojaConvFD]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptResLojaConvFD
CREATE PROCEDURE [dbo].[rptResLojaConvFD] @pCaixaTurnoAnt UNIQUEIDENTIFIER
                                       ,@pCaixaIni     UNIQUEIDENTIFIER
                                       ,@pCaixaFim     UNIQUEIDENTIFIER
                                       ,@pIdposto      UNIQUEIDENTIFIER
									   ,@pIdPontoVenda      UNIQUEIDENTIFIER
AS
	DECLARE @diaIni DATETIME, @diaFim DATETIME
	SET @diaIni = (SELECT DataFechamento FROM tbCaixa  with (nolock)WHERE Id = @pCaixaIni and IdpontoVenda = @pIdPontoVenda)
	SET @diaFim = (SELECT DataFechamento FROM tbCaixa  with (nolock)WHERE Id = @pCaixaFim and IdpontoVenda = @pIdPontoVenda)
	
    SELECT SUM(dbo.tbVendasItens.Quantidade)                AS QTD
           ,tbLocalEstoque.Descricao                        AS LocalEstoque
           ,CustoEstoque = (SELECT SUM(dbo.tbProdutosPostos.Estoque *
                        dbo.tbProdutosPostos.PrecoCusto) AS
                     Estoque
             FROM   dbo.tbProdutosPostos with (nolock)
                    INNER JOIN dbo.tbProdutos with (nolock)
                            ON dbo.tbProdutosPostos.idProduto =
                               dbo.tbProdutos.Id
             GROUP  BY dbo.tbProdutosPostos.idPosto
                       ,dbo.tbProdutos.TipoProd
             HAVING ( dbo.tbProdutosPostos.idPosto = @pIDPosto )
                    AND ( dbo.tbProdutos.TipoProd = 'LC' ))
           ,VendasEstoque = Isnull((SELECT ValorCalculado
                    FROM   dbo.tbCaixaItens with (nolock)
                    WHERE  tbCaixaItens.idCAixa = @pCaixaTurnoAnt
                       AND idObjeto = 11
					   AND TipoLeitura='V'), 0)    
            ,FaturadoAux = (SUM(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda))
    FROM   dbo.tbVendas with (nolock)
		   INNER JOIN dbo.tbCaixa with (nolock)
                   ON dbo.tbVendas.IdCaixa = dbo.tbCaixa.Id
           INNER JOIN dbo.tbVendasItens with (nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos with (nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbProdutosPostos with (nolock)
                   ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
                      AND dbo.tbVendasItens.idProduto =
                          dbo.tbProdutosPostos.idProduto
                      AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
           LEFT JOIN tbLocalEstoque with (nolock)
                   ON tbProdutosPostos.IdLocal = tbLocalEstoque.id
    WHERE  ( dbo.tbVendas.idPosto = @pIDPosto )
	   AND ( dbo.tbVendas.IdPontoVenda = @pIdPontoVenda )
       AND ( tbVendasItens.Cancelado = 0 )
       AND ( tbvendas.Status IS NULL )
	   AND ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
	   AND ( dbo.tbProdutos.TipoProd = 'LC' )
    GROUP BY tbLocalEstoque.Descricao
    ORDER BY tbLocalEstoque.Descricao
GO
/****** Object:  StoredProcedure [dbo].[rptResLojaLub]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptResLojaLub
CREATE PROCEDURE [dbo].[rptResLojaLub] @pCaixaTurnoAnt UNIQUEIDENTIFIER
                                      ,@pCaixaIni     UNIQUEIDENTIFIER
                                      ,@pCaixaFim     UNIQUEIDENTIFIER
                                      ,@pIdposto      UNIQUEIDENTIFIER
AS
	DECLARE @diaIni DATETIME, @diaFim DATETIME
	SET @diaIni = (SELECT DataFechamento FROM tbCaixa WHERE Id = @pCaixaIni)
	SET @diaFim = (SELECT DataFechamento FROM tbCaixa WHERE Id = @pCaixaFim)
	
    SELECT 
			SUM(dbo.tbVendasItens.Quantidade)                AS QTD
           ,AVG(dbo.tbVendasItens.PrecoCusto)               AS PrecoCusto
           ,AVG(dbo.tbVendasItens.PrecoVenda)               AS Precovenda
           ,RTRIM (dbo.tbProdutos.Descricao)                AS Produto
           ,tbLocalEstoque.Descricao                        AS LocalEstoque
           ,CustoEstoque = (SELECT SUM(dbo.tbProdutosPostos.Estoque *
                        dbo.tbProdutosPostos.PrecoCusto) AS
                     Estoque
             FROM   dbo.tbProdutosPostos  with (nolock)
                    INNER JOIN dbo.tbProdutos  with (nolock)
                            ON dbo.tbProdutosPostos.idProduto =
                               dbo.tbProdutos.Id
             GROUP  BY dbo.tbProdutosPostos.idPosto
                       ,dbo.tbProdutos.TipoProd
             HAVING ( dbo.tbProdutosPostos.idPosto = @pIDPosto )
                    AND ( dbo.tbProdutos.TipoProd = 'LB' )) 
           ,VendasEstoque = Isnull((SELECT ValorCalculado
                    FROM   dbo.tbCaixaItens  with (nolock)
                    WHERE  tbCaixaItens.idCAixa = @pCaixaTurnoAnt
                       AND idObjeto = 12
					   AND TipoLeitura='V'), 0)              
           ,FaturadoAux = (SUM(dbo.tbVendasItens.Quantidade)  * AVG(dbo.tbVendasItens.PrecoVenda))
    FROM   dbo.tbVendas  with (nolock)
           INNER JOIN dbo.tbVendasItens  with (nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbCaixa  with (nolock)
                   ON dbo.tbVendas.IdCaixa = dbo.tbCaixa.Id
           INNER JOIN dbo.tbProdutos  with (nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbProdutosPostos  with (nolock)
                   ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
                      AND dbo.tbVendasItens.idProduto =
                          dbo.tbProdutosPostos.idProduto
                      AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
           LEFT JOIN tbLocalEstoque  with (nolock)
                   ON tbProdutosPostos.IdLocal = tbLocalEstoque.id
    WHERE  ( dbo.tbVendas.idPosto = @pIDPosto )
       AND ( tbVendasItens.Cancelado = 0 )
    GROUP  BY dbo.tbProdutos.Descricao
              ,dbo.tbVendasItens.idBomba
              ,dbo.tbVendas.idCaixa
              ,dbo.tbCaixa.DataFechamento
              ,dbo.tbProdutos.TipoProd
              ,tbLocalEstoque.Descricao
			  ,tbVendasItens.PrecoVenda
    HAVING ( (dbo.tbVendasItens.idBomba = '00000000-0000-0000-0000-000000000000' OR dbo.tbVendasItens.idBomba is null))
           AND ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
           AND ( dbo.tbProdutos.TipoProd = 'LB' ) 
    order by   FaturadoAux ,[Produto]
GO
/****** Object:  StoredProcedure [dbo].[rptResLojaLubConvCx]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptResLojaLubConvCx
CREATE PROCEDURE [dbo].[rptResLojaLubConvCx] 
                                      @pCaixa     UNIQUEIDENTIFIER
                                      ,@pIdposto      UNIQUEIDENTIFIER
                                      ,@pTipoLubConv char(2)
AS

    SELECT  tbProdutos.Id idProduto
			,SUM(dbo.tbVendasItens.Quantidade)                AS QTD  
           ,AVG(dbo.tbVendasItens.PrecoVenda)               AS Precovenda  
           ,RTRIM (dbo.tbProdutos.Descricao)                AS Produto  
           ,Faturado = ((SUM(dbo.tbVendasItens.Quantidade))  * AVG(dbo.tbVendasItens.PrecoVenda))
           
          

    FROM   dbo.tbVendas  with (nolock)  
           INNER JOIN dbo.tbVendasItens  with (nolock)  
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda  
           INNER JOIN dbo.tbCaixa  with (nolock)  
                   ON dbo.tbVendas.IdCaixa = dbo.tbCaixa.Id  
           INNER JOIN dbo.tbProdutos  with (nolock)  
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id  
           INNER JOIN dbo.tbProdutosPostos  with (nolock)  
                   ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto  
                      AND dbo.tbVendasItens.idProduto =  
                          dbo.tbProdutosPostos.idProduto  
                      AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto  
           INNER JOIN tbLocalEstoque  with (nolock)  
                   ON tbProdutosPostos.IdLocal = tbLocalEstoque.id  
    WHERE  ( dbo.tbVendas.idPosto = @pIDPosto )  
       AND ( tbVendasItens.Cancelado = 0 )  
    GROUP  BY dbo.tbProdutos.Descricao  
              ,dbo.tbVendasItens.idBomba  
              ,dbo.tbVendas.idCaixa  
              ,dbo.tbCaixa.DataFechamento  
              ,dbo.tbProdutos.TipoProd  
              ,tbLocalEstoque.Descricao 
              ,tbCaixa.id
              ,tbProdutos.id
              
HAVING 
( dbo.tbVendasItens.idBomba = '00000000-0000-0000-0000-000000000000' OR dbo.tbVendasItens.idBomba = NULL) 
AND ( dbo.tbCaixa.id = @pCaixa)
AND ( dbo.tbProdutos.TipoProd = @pTipoLubConv  ) 
GO
/****** Object:  StoredProcedure [dbo].[rptResLojaLubFD]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptResLojaLubFD
CREATE PROCEDURE [dbo].[rptResLojaLubFD] @pCaixaTurnoAnt UNIQUEIDENTIFIER
                                      ,@pCaixaIni     UNIQUEIDENTIFIER
                                      ,@pCaixaFim     UNIQUEIDENTIFIER
                                      ,@pIdposto      UNIQUEIDENTIFIER
									  ,@pIdPontoVenda      UNIQUEIDENTIFIER
AS
	DECLARE @diaIni DATETIME, @diaFim DATETIME
	SET @diaIni = (SELECT DataFechamento FROM tbCaixa WHERE Id = @pCaixaIni and IdPontoVenda = @pIdPontoVenda)
	SET @diaFim = (SELECT DataFechamento FROM tbCaixa WHERE Id = @pCaixaFim and IdPontoVenda = @pIdPontoVenda)
	
    SELECT SUM(dbo.tbVendasItens.Quantidade)                AS QTD
           ,tbLocalEstoque.Descricao                        AS LocalEstoque
           ,CustoEstoque = (SELECT SUM(dbo.tbProdutosPostos.Estoque *
                        dbo.tbProdutosPostos.PrecoCusto) AS
                     Estoque
             FROM   dbo.tbProdutosPostos with (nolock)
                    INNER JOIN dbo.tbProdutos with (nolock)
                            ON dbo.tbProdutosPostos.idProduto =
                               dbo.tbProdutos.Id
             GROUP  BY dbo.tbProdutosPostos.idPosto
                       ,dbo.tbProdutos.TipoProd
             HAVING ( dbo.tbProdutosPostos.idPosto = @pIDPosto )
                    AND ( dbo.tbProdutos.TipoProd = 'LB' ))
           ,VendasEstoque = Isnull((SELECT ValorCalculado
                    FROM   dbo.tbCaixaItens with (nolock)
                    WHERE  tbCaixaItens.idCAixa = @pCaixaTurnoAnt
                       AND idObjeto = 11
					   AND TipoLeitura='V'), 0)    
            ,FaturadoAux = (SUM(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda))
    FROM   dbo.tbVendas with (nolock)
		   INNER JOIN dbo.tbCaixa with (nolock)
                   ON dbo.tbVendas.IdCaixa = dbo.tbCaixa.Id
           INNER JOIN dbo.tbVendasItens with (nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos with (nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbProdutosPostos with (nolock)
                   ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
                      AND dbo.tbVendasItens.idProduto =
                          dbo.tbProdutosPostos.idProduto
                      AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
           LEFT JOIN tbLocalEstoque with (nolock)
                   ON tbProdutosPostos.IdLocal = tbLocalEstoque.id
    WHERE  ( dbo.tbVendas.idPosto = @pIDPosto )
	   AND ( dbo.tbVendas.idPontoVenda = @pIdPontoVenda )
       AND ( tbVendasItens.Cancelado = 0 )
       AND ( tbvendas.Status IS NULL )
	   AND ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
	   AND ( dbo.tbProdutos.TipoProd = 'LB' )
    GROUP BY tbLocalEstoque.Descricao
    ORDER BY tbLocalEstoque.Descricao
GO
/****** Object:  StoredProcedure [dbo].[rptResLucro]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptResLucro
CREATE PROCEDURE [dbo].[rptResLucro] @pIdposto   UNIQUEIDENTIFIER
                                    ,@pCaixaIni UNIQUEIDENTIFIER
                                    ,@pCaixaFim UNIQUEIDENTIFIER
AS
    DECLARE @pMes INT
    DECLARE @pano INT
    DECLARE @dia INT
    DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)

    SET @Dia=(SELECT day(dia)
              FROM   tbCaixa with (nolock)
              WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)
    SET @pmes = (SELECT month(dia)
                 FROM   tbCaixa with (nolock)
                 WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)
    SET @pAno = (SELECT year(dia)
                 FROM   tbCaixa with (nolock)
                 WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)
    INSERT INTO @tblCaixas
    SELECT Id
    FROM   tbCaixa with (nolock)
    WHERE  idPosto = @pIDPosto
      AND Month(dia) = @pMes
      AND year(dia) = @pAno
      AND ( DataFechamento IS NOT NULL )

    SELECT SUM(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoCusto)   AS
           Custo
           ,SUM(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda)  AS
            Venda
           ,ISNULL ((SELECT SUM(Valor)
                     FROM   tbContasPagarReceber with (nolock)
					        INNER JOIN tbHistoricos ON tbContasPagarReceber.IdHistorico = tbHistoricos.Id
                            INNER JOIN @tblCaixas cx
							        ON tbContasPagarReceber.idPedCaixa = cx.IdCaixa
                     WHERE  tbContasPagarReceber.idPOsto = @pIDPosto
					    AND dbo.tbHistoricos.Descricao NOT IN ('Conveniência', 'Lubrificantes')
                        AND tbContasPagarReceber.Despesa = 1), 0) AS
            Despesa
           ,1                                                                 AS
            id
           ,'Dia'                                                             AS
            Tipo
    FROM   dbo.tbVendas with (nolock)
           INNER JOIN dbo.tbVendasItens with (nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
		   INNER JOIN @tblCaixas cx
		           ON dbo.tbVendas.idCaixa = cx.IdCaixa
    WHERE  dbo.tbVendas.idPosto = @pIDPosto
       AND dbo.tbVendas.Status IS NULL
       AND dbo.tbVendasItens.cancelado = 0
    UNION
    SELECT SUM(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoCusto)
           AS
           Custo
           ,SUM(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda)
            AS Venda
           ,ISNULL ((SELECT SUM(Valor)
                     FROM   tbContasPagarReceber with (nolock)
					        INNER JOIN tbHistoricos ON tbContasPagarReceber.IdHistorico = tbHistoricos.Id
					        INNER JOIN @tblCaixas cx
							        ON tbContasPagarReceber.idPedCaixa = cx.IdCaixa
                     WHERE  tbContasPagarReceber.idPOsto = @pIDPosto
					    AND dbo.tbHistoricos.Descricao NOT IN ('Conveniência', 'Lubrificantes')
                        AND tbContasPagarReceber.Despesa = 1),
            0)
            AS
            Despesa
           ,2
            AS id
           ,'Mês'
            AS Tipo
    FROM   dbo.tbVendas with (nolock)
           INNER JOIN dbo.tbVendasItens with (nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
		   INNER JOIN @tblCaixas cx
		           ON dbo.tbVendas.idCaixa = cx.IdCaixa
    WHERE  dbo.tbVendas.idPosto = @pIDPosto
       AND dbo.tbVendas.Status IS NULL
       AND dbo.tbVendasItens.cancelado = 0
    ORDER  BY id 
GO
/****** Object:  StoredProcedure [dbo].[rptResLucroAnt]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptResLucroAnt
CREATE PROCEDURE [dbo].[rptResLucroAnt] @pIdposto   UNIQUEIDENTIFIER
                                       ,@pCaixaIni UNIQUEIDENTIFIER
AS
    DECLARE @pMes INT
    DECLARE @pano INT
    DECLARE @dia INT
    DECLARE @tblCaixasAnt TABLE(IdCaixa UNIQUEIDENTIFIER)

    SET @Dia=(SELECT day(dia)
              FROM   tbCaixa with (nolock)
              WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)
    SET @pmes = (SELECT month(dia) - 1
                 FROM   tbCaixa with (nolock)
                 WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)
    SET @pAno = (SELECT year(dia)
                 FROM   tbCaixa with (nolock)
                 WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)
    INSERT INTO @tblCaixasAnt
    SELECT Id
    FROM   tbCaixa with (nolock)
    WHERE  idPosto = @pIDPosto
       AND Month(dia) = @pMes
       AND year(dia) = @pAno
           AND ( DataFechamento IS NOT NULL )
    
    SELECT SUM(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoCusto)
           AS
           Custo
           ,SUM(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda)
            AS Venda
           ,ISNULL ((SELECT SUM(Valor)
                     FROM   tbContasPagarReceber with (nolock)
					        INNER JOIN @tblCaixasAnt cx
							        ON tbContasPagarReceber.idPedCaixa = cx.IdCaixa
                     WHERE  Despesa = 1
                    ), 0
            ) AS
            Despesa
    FROM   dbo.tbVendas with (nolock)
           INNER JOIN dbo.tbVendasItens with (nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
		   INNER JOIN @tblCaixasAnt cx
		           ON dbo.tbVendas.idCaixa = cx.IdCaixa 
GO
/****** Object:  StoredProcedure [dbo].[rptResNotasFiscais]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptResNotasFiscais
CREATE PROCEDURE [dbo].[rptResNotasFiscais] @pIdposto   UNIQUEIDENTIFIER
                                           ,@pCaixaIni UNIQUEIDENTIFIER
                                           ,@pCaixaFim UNIQUEIDENTIFIER
AS
	DECLARE @diaIni DATETIME, @diaFim DATETIME
	
	SET @diaIni = (SELECT DataFechamento
                    FROM   tbCaixa with (nolock) 
                    WHERE  Id = @pCaixaINI)
    SET @diaFim = (SELECT DataFechamento
                    FROM   tbCaixa with (nolock) 
                    WHERE  Id = @pCaixaFIM)
          
    SELECT dbo.tbEntidades.Id
           ,dbo.tbEntidades.RzSocial
           ,dbo.tbVendasItensPagamento.TipoPagamento
           ,dbo.tbVendasItensPagamento.Valor
           ,dbo.tbVendas.NotaFiscal
    FROM   dbo.tbVendas with (nolock) 
           INNER JOIN dbo.tbVendasItensPagamento with (nolock) 
                   ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda
           INNER JOIN dbo.tbEntidades with (nolock) 
                   ON dbo.tbVendasItensPagamento.IdEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbCaixa with (nolock) 
                   ON dbo.tbVendas.idCaixa = dbo.tbCaixa.Id
    WHERE  ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
       AND ( dbo.tbVendas.NotaFiscal IS NOT NULL ) 

GO
/****** Object:  StoredProcedure [dbo].[rptResPrecoEspecial]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptResPrecoEspecial
CREATE PROCEDURE [dbo].[rptResPrecoEspecial] @pIdposto   UNIQUEIDENTIFIER
                                            ,@pCaixaIni UNIQUEIDENTIFIER
                                            ,@pCaixaFim UNIQUEIDENTIFIER
AS

	DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)

	SET @diaIni = (SELECT DataAbertura FROM   tbCaixa  with (nolock) WHERE  Id = @pCaixaIni AND IdPosto = @pIdPosto)
	SET @diaFim = (SELECT DataAbertura FROM   tbCaixa  with (nolock) WHERE  Id = @pCaixaFim AND IdPosto = @pIdPosto)

	INSERT INTO @tblCaixas
	SELECT Id FROM tbCaixa  with (nolock)  WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto


    SELECT dbo.tbEntidades.RZSocial           AS NomeUsual
           ,dbo.tbProdutos.Descricao
           ,SUM(dbo.tbVendasItens.Quantidade) AS Quantidade
           ,dbo.tbVendasItens.PrecoVenda
           ,dbo.tbVendasItens.PrecoEspecial
           ,dbo.tbEntidades.RzSocial
    FROM   dbo.tbVendas with (nolock) 
           INNER JOIN dbo.tbVendasItens with (nolock) 
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos with (nolock) 
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbEntidades with (nolock) 
                   ON dbo.tbVendas.IDCliente = dbo.tbEntidades.Id
		   INNER JOIN @tblCaixas cx
		           ON dbo.tbVendas.idCaixa = cx.IdCaixa
    WHERE  ( dbo.tbVendas.idPosto = @pIDPosto )
       AND ( dbo.tbVendas.Status IS NULL )
       AND ( dbo.tbVendasItens.Cancelado = 0 )
       AND ( dbo.tbVendasItens.PrecoEspecial > 0 )
    GROUP  BY dbo.tbEntidades.RZSocial
              ,dbo.tbVendasItens.idProduto
              ,dbo.tbProdutos.Descricao
              ,dbo.tbVendasItens.PrecoEspecial
              ,dbo.tbEntidades.RzSocial
              ,dbo.tbVendasItens.PrecoVenda 


GO
/****** Object:  StoredProcedure [dbo].[rptResProdutosAReceber]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptResProdutosAReceber
CREATE PROCEDURE [dbo].[rptResProdutosAReceber] @pIdposto UNIQUEIDENTIFIER
AS
	DECLARE @GuidEmpty UNIQUEIDENTIFIER
	SET @GuidEmpty = dbo.GuidEmpty()

    SELECT tbPedidos.NumPedido 
		   ,tbPedidos.Id
           ,tbProdutos.Descricao
           ,tbEntidades.RzSocial
           ,tbPedidosItens.QTD
           ,tbPedidosItens.VUPro
            + tbPedidosItens.VUFrete
            + tbPedidosItens.VUGNRE AS PrecoCusto
           ,tbPedidos.Dataped
           ,tbPedidosItens.PrevisaoEntrega
		   ,tbPedidosItens.IntencaoDescarregar
    FROM   tbPedidos with (nolock) 
           INNER JOIN tbPedidosItens with (nolock) 
                   ON tbPedidos.Id = tbPedidosItens.idPedido
           INNER JOIN tbProdutos with (nolock) 
                   ON tbPedidosItens.idProduto = tbProdutos.Id
           INNER JOIN tbEntidades with (nolock) 
                   ON tbPedidos.IdEntidade = tbEntidades.Id
           INNER JOIN tbProdutosPostos with (nolock) 
                   ON tbPedidosItens.idPosto = tbProdutosPostos.idPosto
                      AND tbProdutos.Id = tbProdutosPostos.idProduto
                      AND tbPedidosItens.idProduto = tbProdutosPostos.idProduto
    WHERE  ( tbPedidosItens.idCaixaRecebimento = @GuidEmpty OR tbPedidosItens.idCaixaRecebimento IS NULL )
       AND ( tbPedidosItens.idPosto = @pIDPosto ) 

GO
/****** Object:  StoredProcedure [dbo].[rptResProdutosRecebidos]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptResProdutosRecebidos
CREATE PROCEDURE [dbo].[rptResProdutosRecebidos] @pIdposto   UNIQUEIDENTIFIER
                                                ,@pCaixaIni UNIQUEIDENTIFIER
                                                ,@pCaixaFim UNIQUEIDENTIFIER
AS

DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
DECLARE @diaIni DATETIME, @diaFim DATETIME

SET @diaIni = (SELECT DataAbertura FROM   tbCaixa with (nolock) WHERE  Id = @pCaixaIni AND IdPosto = @pIdPosto)
SET @diaFim = (SELECT DataAbertura FROM   tbCaixa  with (nolock) WHERE  Id = @pCaixaFim AND IdPosto = @pIdPosto)

INSERT INTO @tblCaixas
SELECT Id
FROM tbCaixa with (nolock) 
WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto
	
 SELECT	dbo.tbPedidos.NumPedido 
		   ,dbo.tbPedidos.Id
           ,dbo.tbPedidos.Dataped       AS Comprado
           ,dbo.tbProdutos.Descricao
           ,dbo.tbEntidades.RzSocial    AS Produto
           ,dbo.tbPedidosItens.FaltaSobra
           ,dbo.tbPedidosItens.Lacre
           ,dbo.tbPedidosItens.NumeroNota
          -- ,dbo.tbPedidosItens.QTDRecebido
		   ,dbo.tbPedidosItensRecebidos.QTD as QTDRecebido
           ,dbo.tbPedidosItens.Hora     AS HoraDescarga
           ,dbo.tbPedidosItens.VUPro AS Custo
           ,dbo.tbCaixa.DataAbertura    AS DataDescarga
    FROM   dbo.tbProdutos with (nolock) 
           INNER JOIN dbo.tbPedidosItens with (nolock) 
		   INNER JOIN dbo.tbPedidosItensRecebidos with (nolock)
			     ON dbo.tbpedidosItens.id = dbo.tbPedidosItensrecebidos.IdItem  
           INNER JOIN dbo.tbPedidos with (nolock) 
           INNER JOIN dbo.tbEntidades with (nolock) 
                 ON dbo.tbPedidos.IdEntidade = dbo.tbEntidades.Id
                 ON dbo.tbPedidosItens.idPedido = dbo.tbPedidos.Id
           INNER JOIN dbo.tbProdutosPostos with (nolock) 
                 ON dbo.tbPedidosItens.idPosto = dbo.tbProdutosPostos.idPosto
                      AND dbo.tbPedidosItens.idProduto = dbo.tbProdutosPostos.idProduto
                   ON dbo.tbProdutos.Id = dbo.tbPedidosItens.idProduto
                AND dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
           INNER JOIN dbo.tbCaixa with (nolock) 
                   ON dbo.tbPedidosItens.idPosto = dbo.tbCaixa.idPosto
                      AND dbo.tbProdutosPostos.idPosto = dbo.tbCaixa.idPosto
                      AND dbo.tbPedidosItensRecebidos.idCaixaRecebimento = dbo.tbCaixa.Id
		   INNER JOIN @tblCaixas cx
		           ON dbo.tbPedidosItensRecebidos.idCaixaRecebimento = cx.IdCaixa
    WHERE  ( dbo.tbPedidosItens.idPosto = @pIDPosto )
     



GO
/****** Object:  StoredProcedure [dbo].[rptResRelFechamentoPosto]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptResRelFechamentoPosto
CREATE PROCEDURE [dbo].[rptResRelFechamentoPosto] @pIdposto   UNIQUEIDENTIFIER
                                                 ,@pCaixaIni UNIQUEIDENTIFIER
                                                 ,@pCaixaFim UNIQUEIDENTIFIER
AS
    DECLARE @ValorRetirado MONEY
    
	DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)

	SET @diaIni = (SELECT DataAbertura
				FROM   tbCaixa  with (nolock)
				WHERE  Id = @pCaixaIni AND IdPosto = @pIdPosto)
	SET @diaFim = (SELECT DataAbertura
				FROM   tbCaixa  with (nolock)
				WHERE  Id = @pCaixaFim AND IdPosto = @pIdPosto)

	INSERT INTO @tblCaixas
	SELECT Id
	FROM tbCaixa  with (nolock)
	WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto




    SET @ValorRetirado = Isnull((SELECT Sum(Valor)
                                 FROM   tbRetiradas  with (nolock)
								        INNER JOIN @tblCaixas cx
										        ON tbRetiradas.IdCaixa = cx.IdCaixa
                                 WHERE  idPosto = @pIDPosto),
                         0)

    SELECT 1                                             AS ID
           ,'Total Vendas'                               AS Descricao
,(SELECT
(
 ISnull(Sum(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda), 0) )
  FROM   dbo.tbVendas  with (nolock)
         INNER JOIN dbo.tbVendasItens  with (nolock)
                 ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
		 INNER JOIN @tblCaixas cx
		         ON dbo.tbVendas.idCaixa = cx.IdCaixa
  WHERE  ( tbVendas.IDposto = @pIDPosto )
     AND ( dbo.tbVendasItens.Cancelado = 0 )) AS Valor
UNION
SELECT 2
       ,'Cheque Vista'
       ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
         FROM   dbo.tbVendas  with (nolock)
                INNER JOIN dbo.tbVendasItensPagamento  with (nolock)
                        ON dbo.tbVendas.Id =
                           dbo.tbVendasItensPagamento.idVenda
				INNER JOIN @tblCaixas cx
				        ON dbo.tbVendas.idCaixa = cx.IdCaixa
         WHERE  ( tbVendas.IDposto = @pIDPosto )
            AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CV' ))
UNION
SELECT 3
       ,'Cheque Prazo'
       ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
         FROM   dbo.tbVendas  with (nolock)
                INNER JOIN dbo.tbVendasItensPagamento  with (nolock)
                        ON dbo.tbVendas.Id =
                           dbo.tbVendasItensPagamento.idVenda
				INNER JOIN @tblCaixas cx
				        ON dbo.tbVendas.IdCaixa = cx.IdCaixa
         WHERE  ( tbVendas.IDposto = @pIDPosto )
            AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CP' ))
UNION
SELECT 4
       ,'Cartão Crédito'
       ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
         FROM   dbo.tbVendas  with (nolock)
                INNER JOIN dbo.tbVendasItensPagamento  with (nolock)
                        ON dbo.tbVendas.Id =
                           dbo.tbVendasItensPagamento.idVenda
				INNER JOIN @tblCaixas cx
				        ON dbo.tbVendas.idCaixa = cx.IdCaixa
         WHERE  ( tbVendas.IDposto = @pIDPosto )
            AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CC' ))
UNION
SELECT 5
       ,'Cartão Débito'
       ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
         FROM   dbo.tbVendas  with (nolock)
                INNER JOIN dbo.tbVendasItensPagamento  with (nolock)
                        ON dbo.tbVendas.Id =
                           dbo.tbVendasItensPagamento.idVenda
				INNER JOIN @tblCaixas cx
				        ON dbo.tbVendas.idCaixa = cx.IdCaixa
         WHERE  ( tbVendas.IDposto = @pIDPosto )
            AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CD' ))
UNION
SELECT 6
       ,'Prazo'
       ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
         FROM   dbo.tbVendas  with (nolock)
                INNER JOIN dbo.tbVendasItensPagamento  with (nolock)
                        ON dbo.tbVendas.Id =
                           dbo.tbVendasItensPagamento.idVenda
				INNER JOIN @tblCaixas cx
				        ON dbo.tbVendas.idCaixa = cx.IdCaixa
         WHERE  ( tbVendas.IDposto = @pIDPosto )
            AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'PR' ))
UNION
SELECT 7
       ,'Carta Frete'
       ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
         FROM   dbo.tbVendas  with (nolock)
                INNER JOIN dbo.tbVendasItensPagamento  with (nolock)
                        ON dbo.tbVendas.Id =
                           dbo.tbVendasItensPagamento.idVenda
				INNER JOIN @tblCaixas cx
				        ON dbo.tbVendas.idCaixa = cx.IdCaixa
         WHERE  ( tbVendas.IDposto = @pIDPosto )
            AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CF' ))
UNION
SELECT 8
       ,'Dinheiro'
       ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
         FROM   dbo.tbVendas  with (nolock)
                INNER JOIN dbo.tbVendasItensPagamento  with (nolock)
                        ON dbo.tbVendas.Id =
                           dbo.tbVendasItensPagamento.idVenda
				INNER JOIN @tblCaixas cx
				        ON dbo.tbVendas.idCaixa = cx.IdCaixa
         WHERE  ( tbVendas.IDposto = @pIDPosto )
            AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'DI' ))
UNION
SELECT 9
       ,'Recebimentos'
       ,Isnull((SELECT sum(valor)
                FROM   tbContasPagarReceber  with (nolock)
				       INNER JOIN @tblCaixas cx
					           ON tbContasPagarReceber.idPedCaixa = cx.IdCaixa
                WHERE  idPosto = @pIDPosto
                   AND idTipo = 'RC'
                   AND idTipoDocto NOT IN ( 'CC', 'CD', 'DF' )), 0)
UNION
SELECT 10                                                        AS Expr1
       ,'Cliente Especial'                                       AS Expr2
       ,ISNULL ((SELECT SUM(tbVendasItens.PrecoEspecial *
                            tbVendasItens.Quantidade)
                         - SUM(
                                         tbVendasItens.PrecoVenda
                                         * tbVendasItens.Quantidade) AS
                        Expr1
                 FROM   tbVendas  with (nolock)
                        INNER JOIN tbVendasItens  with (nolock)
                                ON tbVendas.Id = tbVendasItens.idVenda
                        INNER JOIN tbProdutos  with (nolock)
                                ON tbVendasItens.idProduto = tbProdutos.Id
                        INNER JOIN tbProdutosPostos  with (nolock)
                                ON tbVendas.idPosto =
                                   tbProdutosPostos.idPosto
                                   AND tbVendasItens.idProduto =
                                       tbProdutosPostos.idProduto
                                   AND tbProdutos.Id =
                                       tbProdutosPostos.idProduto
						INNER JOIN @tblCaixas cx
						        ON tbVendas.idCaixa = cx.IdCaixa
                 WHERE  ( tbVendas.idPosto = @pIDPosto )
                    AND ( tbVendasItens.PrecoEspecial > 0 )), 0) AS Valor
UNION
SELECT 11
       ,'Troco Carta Frete'
       ,Isnull((SELECT SUM(dbo.tbCartaFrete.ValorAdiantamento) *- 1
                FROM   dbo.tbCartaFrete  with (nolock)
                       INNER JOIN dbo.tbVendas  with (nolock)
                               ON dbo.tbCartaFrete.idVenda = dbo.tbVendas.Id
					   INNER JOIN @tblCaixas cx
						       ON tbVendas.idCaixa = cx.IdCaixa
                WHERE  ( tbVendas.IDposto = @pIDPosto )),
        0)
UNION
SELECT 12
       ,'Retorno Carta Frete'
       ,Isnull((SELECT SUM(dbo.tbCartaFrete.ValorRetorno) *- 1
                FROM   dbo.tbCartaFrete  with (nolock)
				       INNER JOIN @tblCaixas cx
					           ON dbo.tbCartaFrete.idCaixaRetorno = cx.IdCaixa
                WHERE  ( tbCartaFrete.IDposto = @pIDPosto )), 0)
UNION
SELECT 13
       ,'Total Retirar'
       ,0
UNION
SELECT 14
       ,'Retirado'
       ,@ValorRetirado
UNION
SELECT 15                                                             AS ID
       ,'Quebra de Caixa'                                             AS
        Descricao
       ,Isnull((SELECT Sum (valor)
                FROM   tbColaboradoresDifCaixa  with (nolock)
				       INNER JOIN @tblCaixas cx
					           ON tbColaboradoresDifCaixa.IdCaixa = cx.IdCaixa
                WHERE  ( Tipo = 'C'
                          OR Tipo = 'D' )
                   AND ( tbColaboradoresDifCaixa.IDposto = @pIDPosto )), 0) AS
        Valor 


GO
/****** Object:  StoredProcedure [dbo].[rptResRelFechamentoPostoCaixa]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptResRelFechamentoPostoCaixa
CREATE PROCEDURE [dbo].[rptResRelFechamentoPostoCaixa]
@pIdposto     UNIQUEIDENTIFIER
,@pCaixaIni   UNIQUEIDENTIFIER
,@pCaixaFim   UNIQUEIDENTIFIER
,@pIDEntidade UNIQUEIDENTIFIER
,@pIdPontoVenda UNIQUEIDENTIFIER

AS
    DECLARE @ValorRetirado MONEY

	DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)

	SET @diaIni = (SELECT DataAbertura FROM   tbCaixa with (nolock) WHERE  Id = @pCaixaIni AND IdPosto = @pIdPosto AND IdPontoVenda = @pIdPontoVenda)
	SET @diaFim = (SELECT DataAbertura FROM   tbCaixa  with (nolock)WHERE  Id = @pCaixaFim AND IdPosto = @pIdPosto AND IdPontoVenda = @pIdPontoVenda)

	INSERT INTO @tblCaixas
	SELECT Id FROM tbCaixa WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto AND IdPontoVenda = @pIdPontoVenda
	

    SET @ValorRetirado = Isnull((SELECT Sum(Valor)
                                 FROM   tbRetiradas
								        INNER JOIN @tblCaixas cx
										        ON tbRetiradas.IdCaixa = cx.IdCaixa
                                 WHERE  idPosto = @pIDPosto),
                         0)

 
SELECT 1 as ID
		,'Pix' as Descricao
		,(ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) ) as Valor
		,COUNT(*) as Quantidade
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
					INNER JOIN @tblCaixas cx
							ON dbo.tbVendas.idCaixa = cx.IdCaixa   
             WHERE  (dbo.tbVendas.Status is null)
			    AND ( tbVendas.IdPontoVenda = @pIdPontoVenda )
		    	AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'DE' )

UNION
SELECT 2
		,'Prazo'
		,(ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) ) as Valor
		,COUNT(*) as Quantidade
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
					INNER JOIN @tblCaixas cx
							ON dbo.tbVendas.idCaixa = cx.IdCaixa   
             WHERE  (dbo.tbVendas.Status is null)
			    AND ( tbVendas.IdPontoVenda = @pIdPontoVenda )
		    	AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'PR' )

UNION
SELECT 3
       ,'Cartão de débito'
       ,(ISnull(Sum(dbo.tbVendasItensPagamento.Valor),0)) as Valor
	   ,COUNT(*) as Quantidade
         FROM   dbo.tbVendas  with(nolock)
                INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                        ON dbo.tbVendas.Id =
                           dbo.tbVendasItensPagamento.idVenda
			    INNER JOIN @tblCaixas cx
					    ON dbo.tbVendas.idCaixa = cx.IdCaixa
         WHERE  ( tbVendas.IDposto = @pIDPosto )
		    AND ( tbVendas.IdPontoVenda = @pIdPontoVenda )
            AND ( tbVendas.Status is null)
            AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CD' )

UNION
SELECT 4
       ,'Cartão de crédito'
       ,(ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )as Valor
	   ,COUNT(*) as Quantidade
         FROM   dbo.tbVendas  with(nolock)
                INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                        ON dbo.tbVendas.Id =
                           dbo.tbVendasItensPagamento.idVenda
			    INNER JOIN @tblCaixas cx
					    ON dbo.tbVendas.idCaixa = cx.IdCaixa
         WHERE  ( tbVendas.IDposto = @pIDPosto )
	  	    AND ( tbVendas.IdPontoVenda = @pIdPontoVenda )
            AND ( tbVendas.Status is null)
            AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CC' )
            
UNION
 SELECT 5                                          
		,'Dinheiro'
        ,0 as Valor
		,COUNT(*) as Quantidade
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
					INNER JOIN @tblCaixas cx
							ON dbo.tbVendas.idCaixa = cx.IdCaixa   
             WHERE  (dbo.tbVendas.Status is null)
			    AND ( tbVendas.IdPontoVenda = @pIdPontoVenda )
		    	AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'DI' )						
 ORDER BY ID       
 
 --EXEC [dbo].[rptResRelFechamentoPostoCaixa] 'a94eb478-1bcf-4a4e-9039-0748ec51bbe0','548f4111-fea5-44a3-9571-af84016aa48d','548f4111-fea5-44a3-9571-af84016aa48d', 'd34ddb86-6d44-4e15-b71f-41f72afb0684', '7be8cf79-ac07-4d19-8b2a-a9e3e2e598a3'



 
GO
/****** Object:  StoredProcedure [dbo].[rptresRelValorDepositado]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--rptresRelValorDepositado
CREATE PROCEDURE [dbo].[rptresRelValorDepositado]
	@pDiaMovimento datetime,
	@pIdposto uniqueidentifier,
	@pIdPontoVenda uniqueidentifier

AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

--Dinheiro (preenchido na tela)
SELECT
	1 AS Ordem,
	'Dinheiro' AS Descricao,
	0 AS Valor

UNION

--Cheque Vista
SELECT
	2 AS Ordem,
	'Cheque à vista' AS Descricao,
	ISNULL(SUM(ISNULL(vp.Valor,0)),0) AS Valor
FROM
	tbVendas v
	INNER JOIN tbCaixa c on v.IdCaixa = c.Id
	INNER JOIN tbVendasItensPagamento vp on v.Id = vp.IdVenda
WHERE
	c.Dia = @pDiaMovimento
	AND v.Status IS NULL
	AND vp.TipoPagamento = 'CV'
	AND v.IdPosto = @pIdPosto
	AND v.IdPontoVenda= @pIdPontoVenda

UNION

--Recebimento Cliente
SELECT
	3 AS Ordem,
	'Recebimento de cliente à prazo' AS Descricao,
	ISNULL(SUM(ISNULL(cc.Valor,0)),0) AS Valor
FROM
	tbContasPagarReceber cc
	INNER JOIN tbCaixa c on cc.IdPedCaixa = c.Id
WHERE
	c.Dia = @pDiaMovimento
	AND (cc.IdTipoDocto = 'DI' OR cc.IdTipoDocto = 'CV')
	AND cc.idTipo = 'RC'
	AND cc.InfoAdic = 'Recebimento Prazo'
	AND cc.IdPosto = @pIdPosto
	AND c.IdPontoVenda = @pIdPontoVenda

UNION

--Cheque pre incluso
SELECT
	4 AS Ordem,
	'Inclusão de cheque pré datado' AS Descricao,
	ISNULL(SUM(ISNULL(vp.Valor,0)),0) AS Valor
FROM
	tbDepositoChequePre d
	INNER JOIN tbVendasItensPagamento vp on d.IdVendaItemPagamento = vp.Id
	INNER JOIN tbVendas v on vp.IdVenda = v.Id
WHERE
	d.Pago = 1
	AND vp.DataVencimento = @pDiaMovimento
	AND v.IdPosto = @pIdPosto
	AND v.IdPontoVenda= @pIdPontoVenda

UNION

--Cheque sem fundo
SELECT
	5 AS Ordem,
	'Recebimento de cheque sem fundo' AS Descricao,
	ISNULL(SUM(ISNULL(cc.Valor,0)),0) AS Valor
FROM
	tbContasPagarReceber cc
	INNER JOIN tbCaixa c on cc.IdCaixaRecebimento = c.Id
WHERE
	c.Dia = @pDiaMovimento
	AND (cc.IdTipoDocto = 'DI' OR cc.IdTipoDocto = 'CV')
	AND cc.idTipo = 'RC'
	AND cc.IdChequeDev IS NOT NULL
	AND cc.IdPosto = @pIdPosto
	AND c.IdPosto = @pIdPontoVenda

UNION

--Resultado dos caixas
SELECT
	5 + c.TCaixa,
	CASE 
		WHEN d.Valor > 0 THEN 'Sobra de caixa do turno ' + CAST(c.TCaixa AS VARCHAR)
		WHEN d.Valor < 0 THEN 'Quebra de caixa do turno ' + CAST(c.TCaixa AS VARCHAR)
		ELSE 'Sem diferença no turno ' + CAST(c.TCaixa AS VARCHAR)
	END,
	ISNULL(d.Valor,0) AS Valor
FROM
	tbCaixa c
	LEFT JOIN tbColaboradoresDifCaixa d ON d.IdCaixa = c.Id and d.IdEntidade = c.IdEntidade
WHERE
	c.IdPosto = @pIdposto
	AND c.Dia = @pDiaMovimento
	AND (d.Tipo IN ('R','C') OR d.Id IS NULL)
	AND c.IdPontoVenda = @pIdPontoVenda

UNION

--Pagamento de compras
SELECT
	6 + (SELECT COUNT(Id) FROM tbTurno WHERE IdPosto = @pIdPosto) AS Ordem,
	'Pagamento de compra de produto' AS Descricao,
	ISNULL(SUM(cc.Valor), 0) * -1 AS Valor
FROM
	tbContasPagarReceber cc
	INNER JOIN tbCaixa c on cc.IdPedCaixa = c.Id
WHERE
	c.Dia = @pDiaMovimento
	AND cc.Despesa = 1
	AND cc.idTipo = 'PG'
	AND cc.InfoAdic = 'Compra de produtos para revenda'
	AND cc.IdPosto = @pIdPosto
	AND cc.TipoIntencaoPagar = 'Movimento'
	AND c.IdPontoVenda= @pIdPontoVenda

UNION

--Pagamento de despesas
SELECT
	7 + (SELECT COUNT(Id) FROM tbTurno WHERE IdPosto = @pIdPosto) AS Ordem,
	'Pagamento de despesa' AS Descricao,
	ISNULL(SUM(cc.Valor),0) * -1 AS Valor
FROM
	tbContasPagarReceber cc
	INNER JOIN tbCaixa c on cc.IdPedCaixa = c.Id
WHERE
	c.Dia = @pDiaMovimento
	AND cc.Despesa = 1
	AND cc.idTipo = 'PG'
	AND NOT cc.InfoAdic = 'Compra de produtos para revenda'
	AND cc.IdPosto = @pIdPosto
	AND cc.TipoIntencaoPagar = 'Movimento'
	AND c.IdPontoVenda = @pIdPontoVenda


ORDER BY Ordem
GO
/****** Object:  StoredProcedure [dbo].[rptResRelVendasCartao]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[rptResRelVendasCartao] @pIDPosto uniqueidentifier, @pCaixaINI uniqueidentifier, @pCaixaFIM uniqueidentifier,@ptipoPagamento nchar(2)
AS

SELECT   
	tbVendasItensPagamento.Id,   
	tbEntidades.RzSocial,
	tbVendas.NumeroCupomSat,
	ISNULL(tbVendasItensPagamento.Valor, 0) AS Valor,
	tbVendasItensPagamento.Autorizacao,
	tbVendas.Data,
	tbVendasItensPagamento.TipoPagamento,
	CASE dbo.tbVendas.OrigemVenda
		WHEN 'VendasLIO' THEN 'Automática'
		WHEN 'VendaManual' THEN 'Manual'
		WHEN 'MultiplasVendas' THEN 'Manual'
	END AS OrigemVenda,
	CASE dbo.tbVendas.OrigemVenda
		WHEN 'VendasLIO' THEN 'Mini Vendas'
		WHEN 'VendaManual' THEN 'Vendas'
		WHEN 'MultiplasVendas' THEN 'Vendas'
	END AS Emissor,
	tbEntidadesVendedor.NomeUsual

	
FROM tbEntidades 
	INNER JOIN tbOperadoras ON tbEntidades.id = tbOperadoras.idEntidade 
	INNER JOIN tbVendas 
	INNER JOIN tbVendasItensPagamento ON tbVendas.id = tbVendasItensPagamento.idVenda ON tbOperadoras.idEntidade = tbVendasItensPagamento.Operadora
	LEFT JOIN tbEntidades AS tbEntidadesVendedor ON tbVendas.IdVendedor = tbEntidadesVendedor.id -- adiciona uma cláusula LEFT JOIN para tbEntidades
WHERE    

 (tbVendas.idPosto =@pIDPosto)
 AND (tbVendas.idCaixa in (@pCaixaINI , @pCaixaFIM))
 AND (tbVendasItensPagamento.TipoPagamento = @ptipoPagamento) 
 AND (tbVendas.Status IS NULL)
GROUP BY tbVendasItensPagamento.Id, tbEntidades.RzSocial, tbVendas.NumeroCupomSat, tbVendasItensPagamento.Valor, tbVendasItensPagamento.Autorizacao, tbVendasItensPagamento.TipoPagamento, tbVendas.Data, tbVendas.OrigemVenda, tbVendas.OrigemVenda, tbVendas.Id,tbEntidadesVendedor.NomeUsual
order by Data

--EXEC [dbo].[rptResRelVendasCartao] 'D3FC958D-6348-4012-8853-0357B35D2283','C6E300EF-7147-411E-A9E8-AE9A016ECFFD','C6E300EF-7147-411E-A9E8-AE9A016ECFFD','CC'

GO
/****** Object:  StoredProcedure [dbo].[rptResRelVendasCombustivel]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[rptResRelVendasCombustivel]
 @pIDPosto uniqueidentifier,  @pCaixaTurnoAnt uniqueidentifier, @pcaixaturno uniqueidentifier 

AS

DECLARE @PostoComAutomacao bit
SET @PostoComAutomacao = (select Automacao from tbPostos where Id = @pIDPosto)

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
     
SELECT IdObjetoBico = Caixa.idobjeto, 
       IdOrdem = dbo.tbprodutos.ordem, 
       dbo.tbprodutos.descricao, 
       EncerranteInicial = CaixaAnt.valorlido, 
       EncerranteFinal = Caixa.valorlido, 
       QtdeVendida = ROUND(CASE WHEN Caixa.Valorlido = CaixaAnt.Valorlido THEN 0
	                            WHEN Caixa.Valorlido > CaixaAnt.Valorlido THEN Caixa.ValorLido - CaixaAnt.ValorLido - Isnull((SELECT Sum(qtd) FROM   dbo.tbafericao WHERE  ( idBomba = tbBombas.id ) AND ( idcaixa = @pcaixaturno AND ( idposto = @pIDposto ))), 0)
								ELSE tbbombas.LimiteEncerrante - 0.01 - CaixaAnt.ValorLido + Caixa.ValorLido - Isnull((SELECT Sum(qtd) FROM   dbo.tbafericao WHERE  ( idBomba = tbBombas.id ) AND ( idcaixa = @pcaixaturno AND ( idposto = @pIDposto ) )), 0) END, 2), --Trabalha com o encerrante
	   PrecoVendaAtual = isnull((sum(round((ROUND(vi.Quantidade,3,1)+.001) * vi.PrecoVenda,2,1))),0) / isnull((SUM(ROUND(vi.Quantidade,3,1)+.001)),1),  --Usa valor de quantidade arredondado para cima
	   Faturado = isnull((sum(round((ROUND(vi.Quantidade,3,1)+.001) * vi.PrecoVenda,2,1))),0),  --Usa valor de quantidade arredondado para cima
       Afericao = Isnull((SELECT Sum(qtd) FROM   dbo.tbafericao WHERE  ( idBomba = tbBombas.id ) AND ( idcaixa = @pcaixaturno AND ( idposto = @pIDposto ) )), 0),
	   Tanque = dbo.tbprodutos.Descricao + ' (' + CAST(dbo.tbtanques.NumTanque AS NVARCHAR(2)) + ')'
FROM   dbo.tbprodutos 
       INNER JOIN dbo.tbtanques 
               ON dbo.tbprodutos.id = dbo.tbtanques.idproduto 
       INNER JOIN dbo.tbprodutospostos 
               ON dbo.tbtanques.idposto = dbo.tbprodutospostos.idposto 
                  AND dbo.tbprodutos.id = dbo.tbprodutospostos.idproduto 
       INNER JOIN dbo.tbbombas 
               ON dbo.tbtanques.idposto = dbo.tbbombas.idposto 
                  AND dbo.tbtanques.id = dbo.tbbombas.IdTanque 
       INNER JOIN dbo.tbcaixaitens CaixaAnt 
               ON dbo.tbbombas.numbomba = CaixaAnt.idobjeto
       INNER JOIN dbo.tbcaixaitens Caixa
               ON dbo.tbbombas.numbomba = Caixa.idobjeto
       LEFT JOIN tbVendas v 
	           ON v.IdCaixa = Caixa.IdCaixa
       LEFT JOIN tbVendasItens vi 
	           ON v.id = vi.idVenda AND vi.IdBomba = dbo.tbbombas.Id
WHERE  ( CaixaAnt.idcaixa = @pCaixaTurnoAnt ) 
       AND ( CaixaAnt.tipoleitura = 'B' ) 
       AND ( Caixa.idcaixa = @pCaixaTurno ) 
       AND ( Caixa.tipoleitura = 'B' )
       AND ( dbo.tbprodutospostos.idposto = @pIDPosto )
	   AND ( v.Status is null )
	   AND ( vi.Cancelado = 0 or vi.Id is null )
GROUP BY Caixa.idObjeto,
         dbo.tbprodutos.ordem,
		 dbo.tbprodutos.descricao,
		 Caixa.valorlido,
		 CaixaAnt.valorlido,
		 tbBombas.Id,
		 dbo.tbbombas.NumBomba,
		 dbo.tbBombas.LimiteEncerrante,
		 dbo.tbtanques.NumTanque
ORDER  BY dbo.tbprodutos.ordem, 
          dbo.tbtanques.numtanque, 
          dbo.tbbombas.numbomba
GO
/****** Object:  StoredProcedure [dbo].[rptResRelVendasCombustivelDia]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

 --EXEC [dbo].[rptResRelVendasCombustivelDia] 'FC9E5169-4E55-4414-9291-3D67B8DFF774','2022-03-19 00:00:00','59291A1E-5FFC-4570-9DC8-FB5FD3841746'  -- fabbri

CREATE PROCEDURE [dbo].[rptResRelVendasCombustivelDia] 
	@pIDPosto uniqueidentifier, @pDiaMovimento datetime, @pIdPontoVenda uniqueidentifier

AS

DECLARE @PostoComAutomacao bit
SET @PostoComAutomacao = (select Automacao from tbPostos where Id = @pIDPosto)

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

WITH CTE AS (
SELECT
	rownum = ROW_NUMBER() OVER (ORDER BY ci.IdObjeto, c.DataAbertura DESC, c.TCaixa),
	ci.ValorLido,
	ci.idObjeto,
	ci.IdCaixa,
	ci.PrecoProduto,
	c.TCaixa,
	c.Dia
	FROM
		tbCaixa c
		INNER JOIN tbCaixaItens ci ON c.Id = ci.IdCaixa
	WHERE
		c.IdPosto = @pIdPosto
		AND c.IdPontoVenda = @pIdPontoVenda
		AND ci.TipoLeitura = 'B'
		AND c.Dia BETWEEN DATEADD(d, -1, @pDiaMovimento) AND @pDiaMovimento
)

SELECT
	T.IdObjetoBico, 
	T.IdOrdem, 
	T.Descricao, 
	T.Tanque,
	--MIN(T.EncerranteInicial) EncerranteInicial, 
	(SELECT ValorLido FROM CTE WHERE idObjeto = T.IdObjetoBico AND TCaixa = MAX(T.TCaixa) AND Dia = MIN((T.Dia)-1)) EncerranteInicial,
	(SELECT ValorLido FROM CTE WHERE idObjeto = T.IdObjetoBico AND TCaixa = MAX(T.TCaixa) AND Dia = MAX(T.Dia)) EncerranteFinal,
	SUM(T.QtdeVendida) QtdeVendida,
	SUM(T.Afericao) Afericao,
	SUM(T.Faturado) Faturado,
	PrecoVendaAtual = CASE WHEN SUM(T.QtdeVendida) > 0 THEN ROUND(SUM(T.Faturado) / SUM(T.QtdeVendida), 3) ELSE 0 END
FROM
(
	SELECT
		atual.Dia,
		atual.IdCaixa,
		atual.TCaixa,
		IdObjetoBico = atual.idObjeto, 
		IdOrdem = p.Ordem, 
		p.Descricao, 
		EncerranteInicial = prev.ValorLido, 
		EncerranteFinal = atual.ValorLido, 
		QtdeVendida = ROUND(CASE WHEN atual.ValorLido > prev.ValorLido THEN atual.ValorLido - prev.ValorLido - ISNULL((SELECT SUM(QTD) FROM tbAfericao a WHERE atual.IdCaixa = a.IdCaixa And a.IdBomba = b.id), 0)
		                         WHEN atual.ValorLido = prev.ValorLido THEN 0
								ELSE b.LimiteEncerrante - 0.01 - prev.ValorLido + atual.ValorLido - ISNULL((SELECT SUM(QTD) FROM tbAfericao a WHERE atual.IdCaixa = a.IdCaixa And a.IdBomba = b.id), 0) END, 2),
		PrecoVendaAtual = isnull((sum(round((ROUND(vi.Quantidade,3,1)+.001) * vi.PrecoVenda,2,1))),0) / isnull((SUM(ROUND(vi.Quantidade,3,1)+.001)),1),  --Usa valor de quantidade arredondado para cima
		Faturado = isnull((sum(round((ROUND(vi.Quantidade,3,1)+.001) * vi.PrecoVenda,2,1))),0),  --Usa valor de quantidade arredondado para cima
		Afericao = ISNULL((SELECT SUM(QTD) FROM tbAfericao a WHERE atual.IdCaixa = a.IdCaixa And a.IdBomba = b.id), 0),
		Tanque = p.Descricao + ' (' + CAST(t.NumTanque AS NVARCHAR(2)) + ')',
		NumTanque,
		NumBomba
	FROM   
		tbProdutos p
		INNER JOIN tbTanques t ON p.Id = t.IdProduto 
		INNER JOIN tbProdutosPostos pp ON t.IdPosto = pp.IdPosto AND p.Id = pp.IdProduto 
		INNER JOIN tbBombas b ON t.IdPosto = b.IdPosto AND t.Id = b.IdTanque 
		INNER JOIN CTE atual ON atual.idObjeto = b.NumBomba
		INNER JOIN CTE prev ON atual.rownum = prev.rownum - 1
		LEFT JOIN tbVendas v ON v.IdCaixa = atual.IdCaixa
		LEFT JOIN tbVendasItens vi ON v.id = vi.idVenda AND vi.IdBomba = b.Id
	WHERE 
		pp.IdPosto = @pIDPosto
		and atual.Dia = @pDiaMovimento
		and v.Status is null
		and (vi.Cancelado = 0 or vi.Id is null)
	GROUP BY atual.Dia,
	        atual.IdCaixa,
			atual.TCaixa,
			atual.idObjeto, 
			p.Ordem, 
			p.Descricao,
			atual.ValorLido,
			prev.ValorLido,
			b.id,
			b.NumBomba,
			b.LimiteEncerrante,
			t.NumTanque		
) T
GROUP BY
	T.IdObjetoBico, 
	T.IdOrdem, 
	T.Descricao,
	T.Tanque,
	T.NumTanque,
	T.NumBomba
ORDER BY
	T.IdOrdem, 
	T.NumTanque, 
	T.NumBomba

GO
/****** Object:  StoredProcedure [dbo].[rptResRelVendasDinheiro]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[rptResRelVendasDinheiro]
	-- Add the parameters for the stored procedure here
	@pIDPosto uniqueidentifier, @pCaixaINI uniqueidentifier, @pCaixaFIM uniqueidentifier,@ptipoPagamento nchar(2) 
	
AS
BEGIN
	SELECT   
	tbVendasItensPagamento.Id,   
	tbVendas.ValorTotal-ISNULL((select sum(Valor) from tbVendasItensPagamento where IdVenda=tbVendas.Id and TipoPagamento<>'DI'),0) AS Valor,
	tbVendas.Data,
	ISNULL(tbVendas.ValorTotal, 0) AS Total,
	tbVendasItensPagamento.TipoPagamento,
	tbEntidades.NomeUsual,
	tbVendas.NumeroCupomSat,
	CASE dbo.tbVendas.OrigemVenda
		WHEN 'VendasLIO' THEN 'Automática'
		WHEN 'VendaManual' THEN 'Manual'
		WHEN 'MultiplasVendas' THEN 'Manual'
	END AS OrigemVenda,
	CASE dbo.tbVendas.OrigemVenda
		WHEN 'VendasLIO' THEN 'Mini Vendas'
		WHEN 'VendaManual' THEN 'Vendas'
		WHEN 'MultiplasVendas' THEN 'Vendas'
	END AS Emissor
	
FROM tbVendas
	LEFT JOIN tbEntidades ON tbVendas.IdVendedor = tbEntidades.Id
	INNER JOIN tbVendasItensPagamento ON tbVendas.id = tbVendasItensPagamento.idVenda
	
WHERE    

 (tbVendas.idPosto =@pIDPosto)
 AND (tbVendas.idCaixa in (@pCaixaINI , @pCaixaFIM))
 AND (tbVendasItensPagamento.TipoPagamento = @ptipoPagamento) 
 AND (tbVendas.Status IS NULL)
 AND (tbVendasItensPagamento.TipoPagamento = 'DI')
GROUP BY tbVendasItensPagamento.Id, tbVendasItensPagamento.Valor, tbVendas.ValorTotal, tbVendasItensPagamento.TipoPagamento, tbEntidades.NomeUsual, tbVendas.Data, tbVendas.NumeroCupomSat, tbVendas.OrigemVenda,tbVendas.id
order by Data
END

--EXEC [dbo].[rptResRelVendasDinheiro] 'A94EB478-1BCF-4A4E-9039-0748EC51BBE0','4D2AD82E-718F-4D0A-9CE1-AFC700EA43D2','4D2AD82E-718F-4D0A-9CE1-AFC700EA43D2','DI'

GO
/****** Object:  StoredProcedure [dbo].[rptResRelVendasPix]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[rptResRelVendasPix]
	-- Add the parameters for the stored procedure here
	@pIDPosto uniqueidentifier, @pCaixaINI uniqueidentifier, @pCaixaFIM uniqueidentifier,@ptipoPagamento nchar(2) 
	
AS
BEGIN
	SELECT   
	tbVendasItensPagamento.Id,   
	ISNULL(tbVendasItensPagamento.Valor, 0) AS Valor,
	tbVendasItensPagamento.DataVencimento,
	tbVendasItensPagamento.TipoPagamento,
	tbEntidades.NomeUsual,
	tbContasBancarias.NomeBanco,
	tbVendas.NumeroCupomSat,
	CASE dbo.tbVendas.OrigemVenda
		WHEN 'VendasLIO' THEN 'Automática'
		WHEN 'VendaManual' THEN 'Manual'
		WHEN 'MultiplasVendas' THEN 'Manual'
	END AS OrigemVenda,
	CASE dbo.tbVendas.OrigemVenda
		WHEN 'VendasLIO' THEN 'Mini Vendas'
		WHEN 'VendaManual' THEN 'Vendas'
		WHEN 'MultiplasVendas' THEN 'Vendas'
	END AS Emissor
	
FROM tbVendas
	LEFT JOIN tbEntidades ON tbVendas.IdVendedor = tbEntidades.Id
	INNER JOIN tbVendasItensPagamento ON tbVendas.id = tbVendasItensPagamento.idVenda
	INNER JOIN tbContasBancarias ON tbVendasItensPagamento.ContaBancariaDepositoId = tbContasBancarias.Id
WHERE    

 (tbVendas.idPosto =@pIDPosto)
 AND (tbVendas.idCaixa in (@pCaixaINI , @pCaixaFIM))
 AND (tbVendasItensPagamento.TipoPagamento = @ptipoPagamento) 
 AND (tbVendas.Status IS NULL)
 AND (tbVendasItensPagamento.TipoPagamento = 'DE')
GROUP BY tbVendasItensPagamento.Id, tbVendasItensPagamento.Valor, tbVendasItensPagamento.TipoPagamento, tbEntidades.NomeUsual, tbVendasItensPagamento.DataVencimento, tbVendas.NumeroCupomSat, tbVendas.OrigemVenda, tbContasBancarias.NomeBanco
order by DataVencimento
END

--EXEC [dbo].[rptResRelVendasPix] 'A94EB478-1BCF-4A4E-9039-0748EC51BBE0','4229DC7E-CFE4-4EEB-8E9B-AF9F00EB0FDC','4229DC7E-CFE4-4EEB-8E9B-AF9F00EB0FDC','DE'

GO
/****** Object:  StoredProcedure [dbo].[rptResResumoVendasRel]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptResResumoVendasRel  
CREATE PROCEDURE [dbo].[rptResResumoVendasRel] @pIdposto   UNIQUEIDENTIFIER  
                                              ,@pCaixaIni UNIQUEIDENTIFIER  
                                              ,@pCaixaFim UNIQUEIDENTIFIER  
AS  
    DECLARE @Dia INT  
    DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)  
    DECLARE @pmes INT  
    DECLARE @pano INT  
  
    SET @Dia=(SELECT day(dia)  
              FROM   tbCaixa with (nolock)  
              WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)  
    SET @pmes = (SELECT month(dia)  
                 FROM   tbCaixa with (nolock)  
                 WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)  
    SET @pAno = (SELECT year(dia)  
                 FROM   tbCaixa with (nolock)  
                 WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)  
    INSERT INTO @tblCaixas  
    SELECT Id  
    FROM   tbCaixa with (nolock)  
    WHERE  idPosto = @pIDPosto  
      AND day(dia)<= @Dia
      AND Month(dia) = @pMes  
      AND year(dia) = @pAno  
      AND ( DataFechamento IS NOT NULL )  
  
    SELECT  dbo.tbProdutos.NumProduto AS idProduto  
           ,dbo.tbProdutos.Descricao                                         AS  
            Produto  
           ,Dia=@Dia  
           ,SUM(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.Precovenda) AS  
            Faturamento  
           ,SUM(dbo.tbVendasItens.Quantidade)                                AS  
            Quantidade  
           ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade)  
                    FROM   dbo.tbVendasItens with (nolock)  
                           INNER JOIN dbo.tbVendas with (nolock)  
                                   ON dbo.tbVendasItens.idVenda =  
                                      dbo.tbVendas.Id  
                    WHERE  ( dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id )  
                       AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )  
                       AND ( dbo.tbVendasItens.Cancelado = 0 )  
                       AND ( dbo.tbVendas.idPosto = @pIDPosto )), 0)         AS  
            Acumulado  
           ,MAX(dbo.tbVendasItens.PrecoCusto)                                AS  
            PrecoCusto  
           ,AVG(dbo.tbVendasItens.PrecoVenda)                                AS  
            PrecoVenda  
           ,dbo.tbProdutosPostos.PrecoCusto                                  AS  
            PrecoCustoTabela  
    FROM   dbo.tbProdutosPostos with (nolock)  
           INNER JOIN dbo.tbProdutos with (nolock)  
                   ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id  
           INNER JOIN dbo.tbVendas with (nolock)  
                      INNER JOIN dbo.tbVendasItens with (nolock)  
                              ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda  
                   ON dbo.tbProdutosPostos.idPosto = dbo.tbVendas.idPosto  
                      AND dbo.tbProdutos.Id = dbo.tbVendasItens.idProduto  
                      AND dbo.tbProdutosPostos.idProduto =  
                          dbo.tbVendasItens.idProduto  
    WHERE  ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )  
       AND ( dbo.tbVendas.idPosto = @pIDPosto )  
       AND ( dbo.tbProdutos.tipoProd = 'CB' )  
       AND ( dbo.tbVendasItens.Cancelado = 0 )  
    GROUP  BY dbo.tbProdutos.NumProduto
			  ,dbo.tbProdutos.Id  
              ,dbo.tbProdutos.Descricao  
              ,dbo.tbProdutosPostos.PrecoCusto  
    UNION  
    SELECT 21                                                        AS  
           idProduto  
           ,'Conveniência'                                           AS Produto  
           ,Dia=@Dia  
           ,SUM(dbo.tbVendasItens.Quantidade * CASE  
                dbo.tbVendasItens.PrecoEspecial  
                                                 WHEN 0 THEN  
                                                 dbo.tbVendasItens.PrecoVenda  
                                                 ELSE  
                dbo.tbVendasItens.PrecoEspecial  
                                               END)     AS  
            Faturamento  
           ,SUM(dbo.tbVendasItens.Quantidade)                        AS  
            Quantidade  
           ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade)  
                    FROM   dbo.tbVendasItens with (nolock)  
                           INNER JOIN dbo.tbProdutos with (nolock)  
                                   ON dbo.tbVendasItens.idProduto =  
                                      dbo.tbProdutos.Id  
                           INNER JOIN dbo.tbVendas with (nolock)  
                                   ON dbo.tbVendasItens.idVenda =  
                                      dbo.tbVendas.Id  
                    WHERE  ( dbo.tbProdutos.TipoProd = 'LC' )  
                       AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )  
                       AND ( dbo.tbVendasItens.Cancelado = 0 )  
                       AND ( dbo.tbVendas.idPosto = @pIDPosto )), 0) AS  
            Acumulado  
           ,AVG(dbo.tbVendasItens.PrecoCusto)                        AS  
            PrecoCusto  
           ,AVG(dbo.tbVendasItens.PrecoVenda)                        AS  
            PrecoVenda  
           ,0  
    FROM   dbo.tbVendas with (nolock)  
           INNER JOIN dbo.tbVendasItens with (nolock)  
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda  
           INNER JOIN dbo.tbProdutos with (nolock)  
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id  
           INNER JOIN dbo.tbProdutosPostos with (nolock)  
                   ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto  
                      AND dbo.tbVendasItens.idProduto =  
                          dbo.tbProdutosPostos.idProduto  
    WHERE  ( (dbo.tbVendasItens.idBomba = dbo.GuidEmpty() OR dbo.tbVendasItens.idBomba IS NULL) )  
       AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )  
       AND ( dbo.tbVendas.idPosto = @pIDPosto )  
       AND ( dbo.tbProdutos.TipoProd = 'LC' )  
       AND ( dbo.tbVendasItens.Cancelado = 0 )  
    UNION  
    SELECT 20                                                        AS  
           idProduto  
           ,'Lubrificantes'                                          AS Produto  
           ,Dia=@Dia  
           ,SUM(dbo.tbVendasItens.Quantidade * CASE  
                dbo.tbVendasItens.PrecoEspecial  
                                                 WHEN 0 THEN  
                                                 dbo.tbVendasItens.PrecoVenda  
                                                 ELSE  
                dbo.tbVendasItens.PrecoEspecial  
                                               END)                  AS  
            Faturamento  
           ,SUM(dbo.tbVendasItens.Quantidade)                        AS  
            Quantidade  
           ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade)  
                    FROM   dbo.tbVendasItens with (nolock)  
                           INNER JOIN dbo.tbProdutos with (nolock)  
                                   ON dbo.tbVendasItens.idProduto =  
                                      dbo.tbProdutos.Id  
                           INNER JOIN dbo.tbVendas with (nolock)  
                                   ON dbo.tbVendasItens.idVenda =  
                                      dbo.tbVendas.Id  
                    WHERE  ( dbo.tbProdutos.TipoProd = 'LB' )  
                       AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )  
                       AND ( dbo.tbVendasItens.Cancelado = 0 )  
                       AND ( dbo.tbVendas.idPosto = @pIDPosto )), 0) AS  
            Acumulado  
           ,AVG(dbo.tbVendasItens.PrecoCusto)                        AS  
            PrecoCusto  
           ,AVG(dbo.tbVendasItens.PrecoVenda)                        AS  
            PrecoVenda  
           ,0  
    FROM   dbo.tbVendas with (nolock)  
           INNER JOIN dbo.tbVendasItens with (nolock)  
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda  
           INNER JOIN dbo.tbProdutos with (nolock)  
           ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id  
           INNER JOIN dbo.tbProdutosPostos with (nolock)  
                   ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto  
                      AND dbo.tbVendasItens.idProduto =  
                          dbo.tbProdutosPostos.idProduto  
    WHERE  ( (dbo.tbVendasItens.idBomba = dbo.GuidEmpty() OR dbo.tbVendasItens.idBomba IS NULL) )  
       AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )  
       AND ( dbo.tbVendas.idPosto = @pIDPosto )  
       AND ( dbo.tbProdutos.TipoProd = 'LB' )  
       AND ( dbo.tbVendasItens.Cancelado = 0 )   

GO
/****** Object:  StoredProcedure [dbo].[rptResSituacaoEstoque]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[rptResSituacaoEstoque]
 @pIDposto		UNIQUEIDENTIFIER 
,@pCaixaIni		UNIQUEIDENTIFIER
,@pCaixaFim		UNIQUEIDENTIFIER

AS
	DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @pMes INT
	DECLARE @pano INT
	DECLARE @dia INT
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER, DataAbertura DATETIME, Dia DATETIME)
	DECLARE @tblTiposProd TABLE(Tipo NVARCHAR(2))

	--Caixas avaliados
	SET @diaIni = (SELECT DataAbertura
					FROM   tbCaixa  with(nolock)
					WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)

	SET @diaFim = (SELECT DataAbertura
					FROM   tbCaixa  with(nolock)
					WHERE  Id = @pCaixaFIM AND IdPosto = @pIdPosto)
	
	INSERT INTO @tblCaixas
    SELECT Id, DataAbertura, Dia
    FROM tbCaixa  with(nolock)
    WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto

	INSERT INTO @tblTiposProd VALUES ('LB')
	INSERT INTO @tblTiposProd VALUES ('LC')

	SELECT
		CASE 
			WHEN t.Tipo = 'LB' then 'Lubrificante'
			WHEN t.Tipo = 'LC' then 'Conveniência'
		END AS TipoProduto		
		,SUM(ISNULL(TAlmoxarifadoFinal.Valor,0)) AS AlmoxarifadoFinal
		,SUM(ISNULL(TExibicaoFinal.Valor,0)) AS AVendaFinal
		,SUM(ISNULL(TEstoqueFinal.Valor,0)) AS EstoqueFinal
	FROM @tblTiposProd t 
		LEFT JOIN tbProdutos p WITH(NOLOCK)
			ON t.Tipo COLLATE SQL_Latin1_General_CP1_CI_AS = p.TipoProd
        LEFT JOIN tbProdutosPostos pp WITH(NOLOCK)
            ON pp.IdProduto = p.Id
		LEFT JOIN (
			SELECT DISTINCT
				mv.Almoxarifado * mv.PrecoVenda AS Valor,
				mv.IdPosto,
				mv.IdProduto
			FROM 
				tbMovimentacaoEstoque mv
				INNER JOIN (
					SELECT
						MAX(Data) PrimeiraData,
						mv2.IdPosto,
						mv2.IdProduto
					FROM
						tbMovimentacaoEstoque mv2
					WHERE
						mv2.DataMovimento <= (select Dia from @tblCaixas where IdCaixa = @pCaixaFIM)
					GROUP BY
						mv2.IdPosto,
						mv2.IdProduto
					) AS TPrimeiroMov ON TPrimeiroMov.IdPosto = mv.IdPosto 
						AND TPrimeiroMov.IdProduto = mv.IdProduto
						AND TPrimeiroMov.PrimeiraData = mv.Data
			) AS TAlmoxarifadoFinal 
				ON pp.IdPosto = TAlmoxarifadoFinal.IdPosto AND pp.IdProduto = TAlmoxarifadoFinal.IdProduto
		LEFT JOIN (
			SELECT DISTINCT
				(mv.Estoque - mv.Almoxarifado) * (CASE WHEN mv.PrecoVenda > 0 THEN mv.PrecoVenda ELSE mv.PrecoCusto  END) AS Valor,
				mv.IdPosto,
				mv.IdProduto
			FROM 
				tbMovimentacaoEstoque mv
				INNER JOIN (
					SELECT
						MAX(Data) PrimeiraData,
						mv2.IdPosto,
						mv2.IdProduto
					FROM
						tbMovimentacaoEstoque mv2
					WHERE
						mv2.DataMovimento <= (select Dia from @tblCaixas where IdCaixa = @pCaixaFIM)
					GROUP BY
						mv2.IdPosto,
						mv2.IdProduto
					) AS TPrimeiroMov ON TPrimeiroMov.IdPosto = mv.IdPosto 
						AND TPrimeiroMov.IdProduto = mv.IdProduto
						AND TPrimeiroMov.PrimeiraData = mv.Data
			) AS TExibicaoFinal
				ON pp.IdPosto = TExibicaoFinal.IdPosto AND pp.IdProduto = TExibicaoFinal.IdProduto
		LEFT JOIN (
			SELECT DISTINCT
				mv.Estoque * (CASE WHEN mv.PrecoVenda > 0 THEN mv.PrecoVenda ELSE mv.PrecoCusto END) AS Valor,
				mv.IdPosto,
				mv.IdProduto
			FROM 
				tbMovimentacaoEstoque mv
				INNER JOIN (
					SELECT
						MAX(Data) PrimeiraData,
						mv2.IdPosto,
						mv2.IdProduto
					FROM
						tbMovimentacaoEstoque mv2
					WHERE
						mv2.DataMovimento <= (select Dia from @tblCaixas where IdCaixa = @pCaixaFIM)
					GROUP BY
						mv2.IdPosto,
						mv2.IdProduto
					) AS TPrimeiroMov ON TPrimeiroMov.IdPosto = mv.IdPosto 
						AND TPrimeiroMov.IdProduto = mv.IdProduto
						AND TPrimeiroMov.PrimeiraData = mv.Data
			) AS TEstoqueFinal
				ON pp.IdPosto = TEstoqueFinal.IdPosto AND pp.IdProduto = TEstoqueFinal.IdProduto
	WHERE   ( pp.IdPosto = @pIDposto)
	GROUP BY t.Tipo
	ORDER BY t.Tipo --'LB' e depois 'LC'
GO
/****** Object:  StoredProcedure [dbo].[rptResultadoMensal]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptResultadoMensal
CREATE PROCEDURE [dbo].[rptResultadoMensal]
AS
    SELECT Id
           ,NomeUsual
    FROM   tbPostos with (nolock)
    WHERE  tbPostos.NomeUsual <> 'Central'
       AND Ativo = 1 


GO
/****** Object:  StoredProcedure [dbo].[rptResultadoMensalLitragem]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptResultadoMensalLitragem
CREATE PROCEDURE [dbo].[rptResultadoMensalLitragem] @pAno      INT = NULL
                                                   ,@pMes     INT = NULL
                                                   ,@pIDPosto UNIQUEIDENTIFIER = NULL
AS
    DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
    DECLARE @pDia INT
    DECLARE @posto NVARCHAR(MAX)
    
    SET @posto = (SELECT NomeUsual FROM tbPostos  with (nolock) WHERE Id = @pIDPosto)

    IF @posto <> 'Central'
      BEGIN
          INSERT INTO @tblCaixas
          SELECT Id
		  FROM   tbCaixa with (nolock)
		  WHERE  idPosto = @pIDPosto
			AND Month(dia) = @pMes
			AND Year(dia) = @pAno
			AND ( DataFechamento IS NOT NULL )
      END
    ELSE
      BEGIN
          SET @pIDPosto = NULL
          INSERT INTO @tblCaixas
          SELECT Id
		  FROM   tbCaixa  with (nolock)
		  WHERE  Month(dia) = @pMes
			AND Year(dia) = @pAno
			AND ( DataFechamento IS NOT NULL )
      END
      
    SELECT Id
           ,Descricao
           ,ISNULL ((SELECT Isnull(Sum(Litragem), 0)
                     FROM   tbMetas  with (nolock)
                     WHERE  Ano = @pAno
                        AND Mes = @pMes
                        AND tbMetas.IDProduto = tbProdutos.Id
                        AND (idposto = @pIDPosto OR @pIDPosto IS NULL)), 0)
            AS
            Previsto
           ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade)
                    FROM   dbo.tbVendasItens  with (nolock)
                           INNER JOIN dbo.tbVendas
                                   ON dbo.tbVendasItens.idVenda =
                                      dbo.tbVendas.Id
						   INNER JOIN @tblCaixas cx
							       ON dbo.tbVendas.idCaixa = cx.IdCaixa
                    WHERE  dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
                       AND ( dbo.tbVendas.idposto = @pIDPosto OR @pIDPosto IS NULL)),
             0)
            AS
            Executado
    FROM   tbProdutos  with (nolock)
    WHERE  dbo.tbProdutos.tipoProd = 'CB'
       AND dbo.tbProdutos.Ativo = 1
    ORDER  BY Id


GO
/****** Object:  StoredProcedure [dbo].[rptResultadoMensalLucratividade]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptResultadoMensalLucratividade  
CREATE PROCEDURE [dbo].[rptResultadoMensalLucratividade] @pAno      INT = NULL  
                                                        ,@pMes     INT = NULL  
                                                        ,@pIDPosto UNIQUEIDENTIFIER = NULL  
AS  
    DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)  
    DECLARE @posto NVARCHAR(MAX)  
      
    SET @posto = (SELECT NomeUsual FROM tbPostos WHERE Id = @pIDposto)  
  
    IF @posto <> 'Central'  
      BEGIN  
          INSERT INTO @tblCaixas  
          SELECT Id  
    FROM   tbCaixa with (nolock)  
    WHERE  idPosto = @pIDPosto  
   AND Month(dia) = @pMes  
   AND Year(dia) = @pAno  
   AND ( DataFechamento IS NOT NULL )  
      END  
    ELSE  
      BEGIN  
          SET @pIDPosto = NULL  
          INSERT INTO @tblCaixas  
          SELECT Id  
    FROM   tbCaixa with (nolock)  
    WHERE  idPosto = @pIDPosto  
   AND Month(dia) = @pMes  
   AND Year(dia) = @pAno  
   AND ( DataFechamento IS NOT NULL )  
      END  
  
    SELECT NumProduto Id  
           ,Descricao  
           ,ISNULL ((SELECT Sum(Litragem)  
                     FROM   tbMetas with (nolock)  
                     WHERE  Ano = @pAno  
                        AND Mes = @pMes  
                        AND tbMetas.IDProduto = tbProdutos.Id  
                        AND (idposto = @pIDPosto OR @pIDPosto IS NULL) ), 0)  
            AS  
            LitragemPrevista  
           ,ISNULL ((SELECT Sum(Lucratividade)  
                     FROM   tbMetas with (nolock)  
                     WHERE  Ano = @pAno  
                        AND Mes = @pMes  
                        AND tbMetas.IDProduto = tbProdutos.Id  
                        AND (idposto = @pIDPosto OR @pIDPosto IS NULL)), 0)  
            AS  
            LucratividadePrevista  
           ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade)  
                    FROM   dbo.tbVendasItens with (nolock)  
                           INNER JOIN dbo.tbVendas with (nolock)  
                                   ON dbo.tbVendasItens.idVenda =  
                                      dbo.tbVendas.Id  
						   INNER JOIN @tblCaixas cx
		                           ON dbo.tbVendas.idCaixa = cx.IdCaixa
                    WHERE  dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id  
                       AND ( (dbo.tbVendas.idPosto = @pIDPosto OR @pIDPosto IS NULL) )),  
             0)  
            AS  
            LitragemRealizada  
           ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade *  
                               dbo.tbVendasItens.PrecoVenda)  
                    FROM   dbo.tbVendasItens with (nolock)  
                           INNER JOIN dbo.tbVendas with (nolock)  
                                   ON dbo.tbVendasItens.idVenda =  
                                      dbo.tbVendas.Id  
						   INNER JOIN @tblCaixas cx
		                           ON dbo.tbVendas.idCaixa = cx.IdCaixa
                    WHERE  ( dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id )  
                       AND ( (dbo.tbVendas.idPosto = @pIDPosto OR @pIDPosto IS NULL) )),  
             0) - Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade *  
                                     dbo.tbVendasItens.PrecoCusto)  
                          FROM   dbo.tbVendasItens with (nolock)  
                                 INNER JOIN dbo.tbVendas with (nolock)  
                                         ON dbo.tbVendasItens.idVenda =  
                                            dbo.tbVendas.Id  
								 INNER JOIN @tblCaixas cx
										 ON dbo.tbVendas.idCaixa = cx.IdCaixa
                          WHERE  dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id  
                       AND ( (dbo.tbVendas.idPosto = @pIDPosto OR @pIDPosto IS NULL) )),  
                        0)  
            AS  
            LucratividadeRealizada  
           ,ISNULL ((SELECT Sum (Valor + Acrescimo)  
                     FROM   tbDespesasLimite with (nolock)  
                     WHERE  (idPosto = @pIDPosto OR @pIDPosto IS NULL)  
                        AND mes = @pMes  
                        AND Ano = @pAno), 0)  
            AS  
            DespesasLimite  
           ,ISNULL ((SELECT SUM(Valor)  
                     FROM   tbContasPagarReceber with (nolock)  
					        INNER JOIN @tblCaixas cx
		                            ON dbo.tbContasPagarReceber.idPedCaixa = cx.IdCaixa
                     WHERE  (idPosto = @pIDPosto OR @pIDPosto IS NULL)  
                        AND despesa = 1), 0)  
            AS  
            DespesasRealizada  
           ,Isnull((SELECT SUM(valor)  
                    FROM   tbChequeSemFundo with (nolock)  
                    WHERE  ( YEAR(DataEstorno) = @pAno )  
                       AND ( MONTH(DataEstorno) = @pMes )  
                       AND (idPosto = @pIDPosto OR @pIDPosto IS NULL)), 0  
            ) AS  
            ChequeSemFundo  
    FROM   tbProdutos with (nolock)  
    WHERE  dbo.tbProdutos.tipoProd = 'CB'  
       AND dbo.tbProdutos.Ativo = 1  
    UNION  
    SELECT 6  
           ,'Loja Conveniência'  
           ,ISNULL ((SELECT Sum(Litragem)  
                     FROM   tbMetas with (nolock)  
                     WHERE  Ano = @pAno  
                        AND Mes = @pMes  
                        AND IDProduto = tbProdutos.Id  
                        AND (idposto = @pIDPosto OR @pIDPosto IS NULL) ), 0)  
            AS  
            LitragemPrevista  
           ,ISNULL ((SELECT Sum(Lucratividade)  
                     FROM   tbMetas with (nolock)  
                     WHERE  Ano = @pAno  
                        AND Mes = @pMes  
                        AND IDProduto = tbProdutos.Id  
                        AND (idposto = @pIDPosto OR @pIDPosto IS NULL)), 0)  
            AS  
            LucratividadePrevista  
           ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade)  
                    FROM   dbo.tbVendasItens with (nolock)  
                           INNER JOIN dbo.tbProdutos with (nolock)  
                                   ON dbo.tbVendasItens.idProduto =  
                                      dbo.tbProdutos.Id  
                           INNER JOIN dbo.tbVendas with (nolock)  
                                   ON dbo.tbVendasItens.idVenda =  
                                      dbo.tbVendas.Id  
						   INNER JOIN @tblCaixas cx
		                           ON dbo.tbVendas.idCaixa = cx.IdCaixa
                    WHERE  ( dbo.tbProdutos.TipoProd = 'LC' )  
                       AND ( dbo.tbVendas.idPosto = @pIDPosto OR @pIDPosto IS NULL )),  
             0)  
            AS  
            LitragemRealizada  
           ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade *  
                               dbo.tbVendasItens.PrecoVenda)  
                    FROM   dbo.tbVendasItens with (nolock)  
                           INNER JOIN dbo.tbProdutos with (nolock)  
                                   ON dbo.tbVendasItens.idProduto =  
                                      dbo.tbProdutos.Id  
                           INNER JOIN dbo.tbVendas with (nolock)  
                                   ON dbo.tbVendasItens.idVenda =  
                                      dbo.tbVendas.Id  
						   INNER JOIN @tblCaixas cx
		                           ON dbo.tbVendas.idCaixa = cx.IdCaixa
                    WHERE  ( dbo.tbProdutos.TipoProd = 'LC' )  
                       AND ( dbo.tbVendas.idPosto = @pIDPosto OR @pIDPosto IS NULL )),  
             0) - Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade *  
                                     dbo.tbVendasItens.PrecoCusto)  
                          FROM   dbo.tbVendasItens with (nolock)  
                                 INNER JOIN dbo.tbProdutos with (nolock)  
                                         ON dbo.tbVendasItens.idProduto =  
                                            dbo.tbProdutos.Id  
                                 INNER JOIN dbo.tbVendas with (nolock)  
                                         ON dbo.tbVendasItens.idVenda =  
                                            dbo.tbVendas.Id  
								 INNER JOIN @tblCaixas cx
		                                 ON dbo.tbVendas.idCaixa = cx.IdCaixa
                          WHERE  ( dbo.tbProdutos.TipoProd = 'LC' )  
                             AND ( dbo.tbVendas.idPosto = @pIDPosto OR @pIDPosto IS NULL )),  
                        0)  
            AS  
            LucratividadeRealizada  
           ,ISNULL ((SELECT Sum (Valor + Acrescimo)  
                     FROM   tbDespesasLimite with (nolock)  
                     WHERE  (idPosto = @pIDPosto OR @pIDPosto IS NULL)  
                        AND mes = @pMes  
                        AND Ano = @pAno), 0)  
            AS  
            DespesasLimite  
           ,ISNULL ((SELECT SUM(Valor)  
                     FROM   tbContasPagarReceber with (nolock)  
					        INNER JOIN @tblCaixas cx
		                            ON dbo.tbContasPagarReceber.idPedCaixa = cx.IdCaixa 
                     WHERE (idPosto = @pIDPosto OR @pIDPosto IS NULL)  
                        AND despesa = 1), 0)  
            AS  
            Despesas  
           ,Isnull((SELECT SUM(valor)  
                    FROM   tbChequeSemFundo with (nolock)  
                    WHERE  ( YEAR(DataEstorno) = @pAno )  
                       AND ( MONTH(DataEstorno) = @pMes )  
                       AND (idPosto = @pIDPosto OR @pIDPosto IS NULL)), 0  
            ) AS  
            ChequeSemFundo  
    FROM   tbProdutos with (nolock)  
    WHERE  ( dbo.tbProdutos.tipoProd = 'LC' )  
    UNION  
    SELECT 7  
           ,'Lubrificantes'  
           ,ISNULL ((SELECT Sum(Litragem)  
                     FROM   tbMetas with (nolock)  
                     WHERE  Ano = @pAno  
                        AND Mes = @pMes  
                        AND IDProduto = tbProdutos.Id  
                        AND (idposto = @pIDPosto OR @pIDPosto IS NULL)), 0)  
            AS  
            LitragemPrevista  
           ,ISNULL ((SELECT Sum(Lucratividade)  
                     FROM   tbMetas with (nolock)  
                     WHERE  Ano = @pAno  
                        AND Mes = @pMes  
                        AND IDProduto = tbProdutos.Id  
                        AND (idposto = @pIDPosto OR @pIDPosto IS NULL)), 0)  
            AS  
            LucratividadePrevista  
           ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade)  
                    FROM   dbo.tbVendasItens with (nolock)  
                           INNER JOIN dbo.tbProdutos with (nolock)  
                                   ON dbo.tbVendasItens.idProduto =  
                                      dbo.tbProdutos.Id  
                           INNER JOIN dbo.tbVendas with (nolock)  
                                   ON dbo.tbVendasItens.idVenda =  
                                      dbo.tbVendas.Id  
						   INNER JOIN @tblCaixas cx
		                           ON dbo.tbVendas.idCaixa = cx.IdCaixa
                    WHERE  ( dbo.tbProdutos.TipoProd = 'LB' )  
                       AND ( dbo.tbVendas.idPosto = @pIDPosto OR @pIDPosto IS NULL )),  
             0)  
            AS  
            LitragemRealizada  
           ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade *  
                               dbo.tbVendasItens.PrecoVenda)  
                    FROM   dbo.tbVendasItens with (nolock)  
                           INNER JOIN dbo.tbProdutos with (nolock)  
                                   ON dbo.tbVendasItens.idProduto =  
                                      dbo.tbProdutos.Id  
                           INNER JOIN dbo.tbVendas with (nolock)  
                                   ON dbo.tbVendasItens.idVenda =  
                                      dbo.tbVendas.Id  
						   INNER JOIN @tblCaixas cx
		                           ON dbo.tbVendas.idCaixa = cx.IdCaixa
                    WHERE  ( dbo.tbProdutos.TipoProd = 'LB' )  
                       AND ( dbo.tbVendas.idPosto = @pIDPosto OR @pIDPosto IS NULL )),  
             0) - Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade *  
                                     dbo.tbVendasItens.PrecoCusto)  
                          FROM   dbo.tbVendasItens with (nolock)  
                                 INNER JOIN dbo.tbProdutos with (nolock)  
                                         ON dbo.tbVendasItens.idProduto =  
                                            dbo.tbProdutos.Id  
                                 INNER JOIN dbo.tbVendas with (nolock)  
                                         ON dbo.tbVendasItens.idVenda =  
                                            dbo.tbVendas.Id  
								 INNER JOIN @tblCaixas cx
		                                 ON dbo.tbVendas.idCaixa = cx.IdCaixa
                          WHERE  ( dbo.tbProdutos.TipoProd = 'LB' )  
                             AND ( dbo.tbVendas.idPosto = @pIDPosto OR @pIDPosto IS NULL )),  
                        0)  
            AS  
            LucratividadeRealizada  
           ,ISNULL ((SELECT Sum (Valor + Acrescimo)  
                     FROM   tbDespesasLimite with (nolock)  
                     WHERE  (idPosto = @pIDPosto OR @pIDPosto IS NULL )  
                        AND mes = @pMes  
                        AND Ano = @pAno), 0)  
            AS  
            DespesasLimite  
           ,ISNULL ((SELECT SUM(Valor)  
                     FROM   tbContasPagarReceber with (nolock)  
					        INNER JOIN @tblCaixas cx
		                             ON dbo.tbContasPagarReceber.idPedCaixa = cx.IdCaixa
                     WHERE (idPosto = @pIDPosto OR @pIDPosto IS NULL )  
                        AND despesa = 1), 0)  
            AS  
            Despesas  
           ,Isnull((SELECT SUM(valor)  
                    FROM   tbChequeSemFundo with (nolock)  
                    WHERE  ( YEAR(DataEstorno) = @pAno )  
                       AND ( MONTH(DataEstorno) = @pMes )  
                       AND (idPosto = @pIDPosto OR @pIDPosto IS NULL )), 0  
            ) AS  
            ChequeSemFundo  
    FROM   tbProdutos with (nolock)  
    WHERE  ( dbo.tbProdutos.tipoProd = 'LB' )  
    ORDER  BY Id   
  
GO
/****** Object:  StoredProcedure [dbo].[rptResultadosPorTurno]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptResultadosPorTurno
CREATE PROCEDURE [dbo].[rptResultadosPorTurno] @pDia AS SMALLDATETIME
AS
    SELECT Id
           ,NomeUsual
           ,(SELECT Id
             FROM   tbCaixa with (nolock)
             WHERE  tbCaixa.idPosto = tbPostos.Id
                AND TCaixa = 1
                AND Dia = @pDia) AS T1
           ,(SELECT Id
             FROM   tbCaixa with (nolock)
             WHERE  tbCaixa.idPosto = tbPostos.Id
                AND TCaixa = 2
                AND Dia = @pDia) AS T2
           ,(SELECT Id
             FROM   tbCaixa with (nolock)
             WHERE  tbCaixa.idPosto = tbPostos.Id
                AND TCaixa = 3
                AND Dia = @pDia) AS T3
    FROM   tbPostos with (nolock)
    WHERE  NomeUsual <> 'Central'
       AND ativo = 1 


GO
/****** Object:  StoredProcedure [dbo].[rptResumoLucroTurno]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptResumoLucroTurno
CREATE PROCEDURE [dbo].[rptResumoLucroTurno] @pCaixaT1  UNIQUEIDENTIFIER
                                            ,@pCaixaT2 UNIQUEIDENTIFIER
                                            ,@pCaixaT3 UNIQUEIDENTIFIER
AS
    DECLARE @Dia          INT
    DECLARE @tblCaixas    TABLE(IdCaixa UNIQUEIDENTIFIER)        

    SET @dia = (SELECT month(getdate()))
    INSERT INTO @tblCaixas
    SELECT Id
    FROM   tbCaixa with(nolock)
    WHERE  Month(DataAbertura) = (SELECT Month(DataAbertura)
                                  FROM   tbCaixa with(nolock)
                                  WHERE  Id = @pCaixaT1)

    SELECT 2
           AS
           id
           ,'Gasolina'
            AS
            Descricao
           ,ISNULL(SUM(
            ( dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda ) -
            ( dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoCusto )), 0)
            AS
            T1
           ,ISNULL ((SELECT ISNULL(SUM(( dbo.tbVendasItens.Quantidade *
                                                dbo.tbVendasItens.PrecoVenda ) -
            ( dbo.tbVendasItens.Quantidade *
              dbo.tbVendasItens.PrecoCusto )), 0)
            FROM   dbo.tbVendasItens with(nolock)
            INNER JOIN dbo.tbVendas with(nolock) 
				ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
            INNER JOIN dbo.tbProdutosPostos with(nolock)
				ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
            INNER JOIN dbo.tbProdutos with(nolock)
				ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id   AND dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
            WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT2 )
            AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )), 0)
            AS
            T2
           ,ISNULL ((SELECT ISNULL(SUM(( dbo.tbVendasItens.Quantidade *
                                                dbo.tbVendasItens.PrecoVenda ) -
            ( dbo.tbVendasItens.Quantidade *
              dbo.tbVendasItens.PrecoCusto )), 0)
            FROM   dbo.tbVendasItens with(nolock)
            INNER JOIN dbo.tbVendas with(nolock)
				ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
            INNER JOIN dbo.tbProdutosPostos with(nolock)
				ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
            INNER JOIN dbo.tbProdutos with(nolock)
				ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
            AND dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
            WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT3 )
            AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )), 0)
            AS
            T3
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade = dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT1 ))
            AS
            F1
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade = dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT2 ))
            AS
            F2
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade = dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT3 ))
            AS
            F3
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT1)
            FC1
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT2)
            FC2
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT3)
            FC3
           ,(SELECT ISNULL(AVG(dbo.tbVendasItens.PrecoVenda), 0)
             FROM   dbo.tbVendasItens with(nolock)
                    INNER JOIN dbo.tbVendas with(nolock)
                            ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
                    INNER JOIN dbo.tbProdutosPostos with(nolock)
                            ON dbo.tbVendas.idPosto =
                               dbo.tbProdutosPostos.idPosto
                    INNER JOIN dbo.tbProdutos with(nolock)
                            ON dbo.tbProdutosPostos.idProduto =
                               dbo.tbProdutos.Id
                               AND dbo.tbVendasItens.idProduto =
                                   dbo.tbProdutos.Id
             WHERE  ( dbo.tbVendas.idCaixa IN ( @pCaixaT1, @pCaixaT2, @pCaixaT3
                                              ) )
                AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' ))
            AS
            PrecoVenda
           ,(SELECT ISNULL(AVG(dbo.tbVendasItens.PrecoCusto), 0)
             FROM   dbo.tbVendasItens with(nolock)
                    INNER JOIN dbo.tbVendas with(nolock)
                            ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
                    INNER JOIN dbo.tbProdutosPostos with(nolock)
                            ON dbo.tbVendas.idPosto =
                               dbo.tbProdutosPostos.idPosto
                    INNER JOIN dbo.tbProdutos with(nolock)
                            ON dbo.tbProdutosPostos.idProduto =
                               dbo.tbProdutos.Id
                               AND dbo.tbVendasItens.idProduto =
                                   dbo.tbProdutos.Id
             WHERE  ( dbo.tbVendas.idCaixa IN ( @pCaixaT1, @pCaixaT2, @pCaixaT3
                                              ) )
                AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' ))
            AS
            PrecoCusto
    FROM   dbo.tbVendasItens with(nolock)
           INNER JOIN dbo.tbVendas with(nolock)
                   ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbProdutos with(nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT1 )
       AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )
    UNION
    SELECT 3
           AS
           id
           ,'Alcool'
            AS
            Descricao
           ,ISNULL(SUM(
            ( dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda ) -
            ( dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoCusto )), 0)
            AS
            T1
           ,ISNULL ((SELECT ISNULL(SUM(( dbo.tbVendasItens.Quantidade *
                                                dbo.tbVendasItens.PrecoVenda ) -
            ( dbo.tbVendasItens.Quantidade *
              dbo.tbVendasItens.PrecoCusto )), 0)
            FROM   dbo.tbVendasItens with(nolock)
            INNER JOIN dbo.tbVendas with(nolock)
            ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
            INNER JOIN dbo.tbProdutosPostos with(nolock)
            ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
            INNER JOIN dbo.tbProdutos with(nolock)
            ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
            AND dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
            WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT2 )
            AND ( dbo.tbProdutos.Descricao = 'Etanol comum' )), 0)
            AS
            T2
           ,ISNULL ((SELECT ISNULL(SUM(( dbo.tbVendasItens.Quantidade *
                                                dbo.tbVendasItens.PrecoVenda ) -
            ( dbo.tbVendasItens.Quantidade *
              dbo.tbVendasItens.PrecoCusto )), 0)
            FROM   dbo.tbVendasItens with(nolock)
            INNER JOIN dbo.tbVendas with(nolock)
            ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
            INNER JOIN dbo.tbProdutosPostos with(nolock)
            ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
            INNER JOIN dbo.tbProdutos with(nolock)
            ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
            AND dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
            WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT3 )
            AND ( dbo.tbProdutos.Descricao = 'Etanol comum' )), 0)
            AS
            T3
           ,(SELECT TOP 1SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade = dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT1 ))
            AS
            F1
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade = dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT2 ))
            AS
            F2
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade = dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT3 ))
            AS
            F3
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT1)
            FC1
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT2)
            FC2
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT3)
            FC3
           ,(SELECT ISNULL(AVG(dbo.tbVendasItens.PrecoVenda), 0)
             FROM   dbo.tbVendasItens with(nolock)
                    INNER JOIN dbo.tbVendas with(nolock)
                            ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
                    INNER JOIN dbo.tbProdutosPostos with(nolock)
                            ON dbo.tbVendas.idPosto =
                               dbo.tbProdutosPostos.idPosto
                    INNER JOIN dbo.tbProdutos with(nolock)
                            ON dbo.tbProdutosPostos.idProduto =
                               dbo.tbProdutos.Id
                               AND dbo.tbVendasItens.idProduto =
                                   dbo.tbProdutos.Id
             WHERE  ( dbo.tbVendas.idCaixa IN ( @pCaixaT1, @pCaixaT2, @pCaixaT3
                                              ) )
                AND ( dbo.tbProdutos.Descricao = 'Etanol comum' ))
            AS
            PrecoVenda
           ,(SELECT ISNULL(AVG(dbo.tbVendasItens.PrecoCusto), 0)
             FROM   dbo.tbVendasItens with(nolock)
                    INNER JOIN dbo.tbVendas with(nolock)
                            ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
                    INNER JOIN dbo.tbProdutosPostos with(nolock)
                            ON dbo.tbVendas.idPosto =
                               dbo.tbProdutosPostos.idPosto
                    INNER JOIN dbo.tbProdutos with(nolock)
                            ON dbo.tbProdutosPostos.idProduto =
                               dbo.tbProdutos.Id
                               AND dbo.tbVendasItens.idProduto =
                                   dbo.tbProdutos.Id
             WHERE  ( dbo.tbVendas.idCaixa IN ( @pCaixaT1, @pCaixaT2, @pCaixaT3
                                              ) )
                AND ( dbo.tbProdutos.Descricao = 'Etanol comum' ))
            AS
            PrecoCusto
    FROM   dbo.tbVendasItens with(nolock)
           INNER JOIN dbo.tbVendas with(nolock)
                   ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbProdutos with(nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT1 )
       AND ( dbo.tbProdutos.Descricao = 'Etanol comum' )
    UNION
    SELECT 4
           AS
           id
           ,'Diesel'
            AS
            Descricao
           ,ISNULL(SUM(
            ( dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda ) -
            ( dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoCusto )), 0)
            AS
            T1
           ,ISNULL ((SELECT ISNULL(SUM(( dbo.tbVendasItens.Quantidade *
                                                dbo.tbVendasItens.PrecoVenda ) -
            ( dbo.tbVendasItens.Quantidade *
              dbo.tbVendasItens.PrecoCusto )), 0)
            FROM   dbo.tbVendasItens with(nolock)
            INNER JOIN dbo.tbVendas with(nolock)
            ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
            INNER JOIN dbo.tbProdutosPostos with(nolock)
            ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
            INNER JOIN dbo.tbProdutos with(nolock)
            ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
            AND dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
            WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT2 )
            AND ( dbo.tbProdutos.Descricao = 'Diesel comum' )), 0)
            AS
            T2
           ,ISNULL ((SELECT ISNULL(SUM(( dbo.tbVendasItens.Quantidade *
                                                dbo.tbVendasItens.PrecoVenda ) -
            ( dbo.tbVendasItens.Quantidade *
              dbo.tbVendasItens.PrecoCusto )), 0)
            FROM   dbo.tbVendasItens with(nolock)
            INNER JOIN dbo.tbVendas with(nolock)
            ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
            INNER JOIN dbo.tbProdutosPostos with(nolock)
            ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
            INNER JOIN dbo.tbProdutos with(nolock)
            ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
            AND dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
            WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT3 )
            AND ( dbo.tbProdutos.Descricao = 'Diesel comum' )), 0)
            AS
            T3
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade = dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT1 ))
            AS
            F1
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade = dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT2 ))
            AS
            F2
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade = dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT3 ))
            AS
            F3
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT1)
            FC1
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT2)
            FC2
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT3)
            FC3
           ,(SELECT ISNULL(AVG(dbo.tbVendasItens.PrecoVenda), 0)
             FROM   dbo.tbVendasItens with(nolock)
                    INNER JOIN dbo.tbVendas with(nolock)
                            ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
                    INNER JOIN dbo.tbProdutosPostos with(nolock)
                            ON dbo.tbVendas.idPosto =
                               dbo.tbProdutosPostos.idPosto
                    INNER JOIN dbo.tbProdutos with(nolock)
                            ON dbo.tbProdutosPostos.idProduto =
                               dbo.tbProdutos.Id
                               AND dbo.tbVendasItens.idProduto =
                                   dbo.tbProdutos.Id
             WHERE  ( dbo.tbVendas.idCaixa IN ( @pCaixaT1, @pCaixaT2, @pCaixaT3
                                              ) )
                AND ( dbo.tbProdutos.Descricao = 'Diesel comum' ))
            AS
            PrecoVenda
           ,(SELECT ISNULL(AVG(dbo.tbVendasItens.PrecoCusto), 0)
             FROM   dbo.tbVendasItens with(nolock)
                    INNER JOIN dbo.tbVendas with(nolock)
                            ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
                    INNER JOIN dbo.tbProdutosPostos with(nolock)
                            ON dbo.tbVendas.idPosto =
                               dbo.tbProdutosPostos.idPosto
                    INNER JOIN dbo.tbProdutos with(nolock)
                            ON dbo.tbProdutosPostos.idProduto =
                               dbo.tbProdutos.Id
                               AND dbo.tbVendasItens.idProduto =
                                   dbo.tbProdutos.Id
             WHERE  ( dbo.tbVendas.idCaixa IN ( @pCaixaT1, @pCaixaT2, @pCaixaT3
                                              ) )
                AND ( dbo.tbProdutos.Descricao = 'Diesel comum' ))
            AS
            PrecoCusto
    FROM   dbo.tbVendasItens with(nolock)
           INNER JOIN dbo.tbVendas with(nolock)
                   ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbProdutos with(nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT1 )
       AND ( dbo.tbProdutos.Descricao = 'Diesel comum' )
    UNION
    SELECT 5
           AS
           id
           ,'Òleo Lubrificantes'
            AS
            Descricao
           ,ISNULL(SUM(
            ( dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda ) -
            ( dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoCusto )), 0)
            AS
            T1
           ,ISNULL ((SELECT ISNULL(SUM(( dbo.tbVendasItens.Quantidade *
                                                dbo.tbVendasItens.PrecoVenda ) -
            ( dbo.tbVendasItens.Quantidade *
              dbo.tbVendasItens.PrecoCusto )), 0)
            FROM   dbo.tbVendasItens with(nolock)
            INNER JOIN dbo.tbVendas with(nolock)
            ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
            INNER JOIN dbo.tbProdutosPostos with(nolock)
            ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
            INNER JOIN dbo.tbProdutos with(nolock)
            ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
            AND dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
            WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT2 )
            AND ( dbo.tbProdutos.TipoProd = 'LB' )), 0)
            AS
            T2
           ,ISNULL ((SELECT ISNULL(SUM(( dbo.tbVendasItens.Quantidade *
                                                dbo.tbVendasItens.PrecoVenda ) -
            ( dbo.tbVendasItens.Quantidade *
              dbo.tbVendasItens.PrecoCusto )), 0)
            FROM   dbo.tbVendasItens with(nolock)
            INNER JOIN dbo.tbVendas with(nolock)
            ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
            INNER JOIN dbo.tbProdutosPostos with(nolock)
            ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
            INNER JOIN dbo.tbProdutos with(nolock)
            ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
            AND dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
            WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT3 )
            AND ( dbo.tbProdutos.TipoProd = 'LB' )), 0)
            AS
            T3
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade = dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT1 ))
            AS
            F1
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade = dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT2 ))
            AS
            F2
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade = dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT3 ))
            AS
            F3
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT1)
            FC1
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT2)
            FC2
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT3)
            FC3
           ,(SELECT ISNULL(AVG(dbo.tbVendasItens.PrecoVenda), 0)
             FROM   dbo.tbVendasItens with(nolock)
                    INNER JOIN dbo.tbVendas with(nolock)
                            ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
                    INNER JOIN dbo.tbProdutosPostos with(nolock)
                            ON dbo.tbVendas.idPosto =
                               dbo.tbProdutosPostos.idPosto
                    INNER JOIN dbo.tbProdutos with(nolock)
                            ON dbo.tbProdutosPostos.idProduto =
                               dbo.tbProdutos.Id
                               AND dbo.tbVendasItens.idProduto =
                                   dbo.tbProdutos.Id
             WHERE  ( dbo.tbVendas.idCaixa IN ( @pCaixaT1, @pCaixaT2, @pCaixaT3
                                              ) )
                AND ( dbo.tbProdutos.TipoProd = 'LB' ))
            AS
            PrecoVenda
           ,(SELECT ISNULL(AVG(dbo.tbVendasItens.PrecoCusto), 0)
             FROM   dbo.tbVendasItens with(nolock)
                    INNER JOIN dbo.tbVendas with(nolock)
                            ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
                    INNER JOIN dbo.tbProdutosPostos with(nolock)
                            ON dbo.tbVendas.idPosto =
                               dbo.tbProdutosPostos.idPosto
                    INNER JOIN dbo.tbProdutos with(nolock)
                            ON dbo.tbProdutosPostos.idProduto =
                               dbo.tbProdutos.Id
                               AND dbo.tbVendasItens.idProduto =
                                   dbo.tbProdutos.Id
             WHERE  ( dbo.tbVendas.idCaixa IN ( @pCaixaT1, @pCaixaT2, @pCaixaT3
                                              ) )
                AND ( dbo.tbProdutos.TipoProd = 'LB' ))
            AS
            PrecoCusto
    FROM   dbo.tbVendasItens with(nolock)
           INNER JOIN dbo.tbVendas with(nolock)
                   ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbProdutos with(nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT1 )
       AND ( dbo.tbProdutos.TipoProd = 'LB' )
    UNION
    SELECT 6
           AS
           id
           ,'Loja de Conveniência'
            AS
            Descricao
           ,ISNULL(SUM(
            ( dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda ) -
            ( dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoCusto )), 0)
            AS
            T1
           ,ISNULL ((SELECT ISNULL(SUM(( dbo.tbVendasItens.Quantidade *
                                                dbo.tbVendasItens.PrecoVenda ) -
            ( dbo.tbVendasItens.Quantidade *
              dbo.tbVendasItens.PrecoCusto )), 0)
            FROM   dbo.tbVendasItens with(nolock)
            INNER JOIN dbo.tbVendas with(nolock)
            ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
            INNER JOIN dbo.tbProdutosPostos with(nolock)
            ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
            INNER JOIN dbo.tbProdutos with(nolock)
            ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
            AND dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
            WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT2 )
            AND ( dbo.tbProdutos.TipoProd = 'LC' )), 0)
            AS
            T2
           ,ISNULL ((SELECT ISNULL(SUM(( dbo.tbVendasItens.Quantidade *
                                                dbo.tbVendasItens.PrecoVenda ) -
            ( dbo.tbVendasItens.Quantidade *
              dbo.tbVendasItens.PrecoCusto )), 0)
            FROM   dbo.tbVendasItens with(nolock)
            INNER JOIN dbo.tbVendas with(nolock)
            ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
            INNER JOIN dbo.tbProdutosPostos with(nolock)
            ON dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
            INNER JOIN dbo.tbProdutos with(nolock)
            ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
            AND dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
            WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT3 )
            AND ( dbo.tbProdutos.TipoProd = 'LC' )), 0)
            AS
            T3
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade = dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT1 ))
            AS
            F1
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade = dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT2 ))
            AS
            F2
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade = dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT3 ))
            AS
            F3
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT1)
            FC1
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT2)
            FC2
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT3)
            FC3
           ,(SELECT ISNULL(AVG(dbo.tbVendasItens.PrecoVenda), 0)
             FROM   dbo.tbVendasItens with(nolock)
                    INNER JOIN dbo.tbVendas with(nolock)
                            ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
                    INNER JOIN dbo.tbProdutosPostos with(nolock)
                            ON dbo.tbVendas.idPosto =
                               dbo.tbProdutosPostos.idPosto
                    INNER JOIN dbo.tbProdutos with(nolock)
                            ON dbo.tbProdutosPostos.idProduto =
                               dbo.tbProdutos.Id
                               AND dbo.tbVendasItens.idProduto =
                                   dbo.tbProdutos.Id
             WHERE  ( dbo.tbVendas.idCaixa IN ( @pCaixaT1, @pCaixaT2, @pCaixaT3
                                              ) )
                AND ( dbo.tbProdutos.TipoProd = 'LC' ))
            AS
            PrecoVenda
           ,(SELECT ISNULL(AVG(dbo.tbVendasItens.PrecoCusto), 0)
             FROM   dbo.tbVendasItens with(nolock)
                    INNER JOIN dbo.tbVendas with(nolock)
                            ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
                    INNER JOIN dbo.tbProdutosPostos with(nolock)
                            ON dbo.tbVendas.idPosto =
                               dbo.tbProdutosPostos.idPosto
                    INNER JOIN dbo.tbProdutos with(nolock)
                            ON dbo.tbProdutosPostos.idProduto =
                               dbo.tbProdutos.Id
                               AND dbo.tbVendasItens.idProduto =
                                   dbo.tbProdutos.Id
             WHERE  ( dbo.tbVendas.idCaixa IN ( @pCaixaT1, @pCaixaT2, @pCaixaT3
                                              ) )
                AND ( dbo.tbProdutos.TipoProd = 'LC' ))
            AS
            PrecoCusto
    FROM   dbo.tbVendasItens with(nolock)
           INNER JOIN dbo.tbVendas with(nolock)
                   ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbProdutos with(nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT1 )
       AND ( dbo.tbProdutos.TipoProd = 'LC' ) 

GO
/****** Object:  StoredProcedure [dbo].[rptResumoVendasTurno]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



--[rptResumoVendasTurno]
CREATE PROCEDURE [dbo].[rptResumoVendasTurno] @pCaixaT1  UNIQUEIDENTIFIER
                                             ,@pCaixaT2 UNIQUEIDENTIFIER
                                             ,@pCaixaT3 UNIQUEIDENTIFIER
AS
    DECLARE @Dia          INT
    DECLARE @tblCaixas    TABLE(IdCaixa UNIQUEIDENTIFIER)

    SET @dia = (SELECT month(getdate()))
    INSERT INTO @tblCaixas
    SELECT Id
    FROM   tbcaixa with(nolock)
    WHERE  Month(DataAbertura) = (SELECT Month(DataAbertura)
                                  FROM   tbcaixa with(nolock)
                                  WHERE  Id = @pCaixaT1)

    SELECT 2                                                      AS id
           ,'Gasolina'                                            AS Descricao
           ,ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)          AS T1
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens with(nolock)
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT2 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )), 0) AS T2
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens with(nolock)
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT3 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )), 0) AS T3
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbcaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT1 ))          AS F1
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbcaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT2 ))          AS F2
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbcaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT3 ))          AS F3
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  id = @pCaixaT1)                               FC1
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  id = @pCaixaT2)                               FC2
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  id = @pCaixaT3)                               FC3
    FROM   dbo.tbVendasItens with(nolock)
           INNER JOIN dbo.tbVendas with(nolock)
                   ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbProdutos with(nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT1 )
       AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )
       AND dbo.tbVendas.Status IS NULL
       AND dbo.tbvendasItens.Cancelado = 0
    UNION
    SELECT 3                                                      AS id
           ,'Etanol'                                              AS Descricao
           ,ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)          AS T1
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens with(nolock)
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT2 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Etanol comum' )), 0) AS T2
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens with(nolock)
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT3 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Etanol comum' )), 0) AS T3
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT1 ))          AS F1
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT2 ))          AS F2
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT3 ))          AS F3
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  id = @pCaixaT1)                               FC1
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  id = @pCaixaT2)                               FC2
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  id = @pCaixaT3)                               FC3
    FROM   dbo.tbVendasItens with(nolock)
           INNER JOIN dbo.tbVendas with(nolock)
                   ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbProdutos with(nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT1 )
       AND ( dbo.tbProdutos.Descricao = 'Etanol comum' )
       AND dbo.tbVendas.Status IS NULL
       AND dbo.tbvendasItens.Cancelado = 0
    UNION
    SELECT 4                                                      AS id
           ,'Diesel'                                              AS Descricao
           ,ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)          AS T1
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens with(nolock)
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT2 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Diesel comum' )), 0) AS T2
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens with(nolock)
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT3 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Diesel comum' )), 0) AS T3
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT1 ))          AS F1
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT2 ))          AS F2
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT3 ))          AS F3
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  id = @pCaixaT1)                               FC1
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  id = @pCaixaT2)                               FC2
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  id = @pCaixaT3)                               FC3
    FROM   dbo.tbVendasItens  with(nolock)
           INNER JOIN dbo.tbVendas  with(nolock)
                   ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbProdutos  with(nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT1 )
       AND ( dbo.tbProdutos.Descricao = 'Diesel comum' )
       AND dbo.tbVendas.Status IS NULL
       AND dbo.tbvendasItens.Cancelado = 0
    UNION
    SELECT 5                                                          AS id
           ,'Lubrificante'                                            AS
            Descricao
           ,Cast(ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0) AS INT) AS T1
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens  with(nolock)
                            INNER JOIN dbo.tbVendas  with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos  with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT2 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.TipoProd = 'LB' )), 0)   AS T2
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens  with(nolock)
                            INNER JOIN dbo.tbVendas  with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos  with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT3 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.TipoProd = 'LB' )), 0)   AS T3
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa  with(nolock)
                    INNER JOIN dbo.tbEntidades  with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT1 ))              AS F1
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa  with(nolock)
                    INNER JOIN dbo.tbEntidades  with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT2 ))              AS F2
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa  with(nolock)
                    INNER JOIN dbo.tbEntidades  with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT3 ))              AS F3
           ,(SELECT dataFechamento
             FROM   tbCaixa  with(nolock)
             WHERE  id = @pCaixaT1)                                   FC1
           ,(SELECT dataFechamento
             FROM   tbCaixa  with(nolock)
             WHERE  id = @pCaixaT2)                                   FC2
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  id = @pCaixaT3)                                   FC3
    FROM   dbo.tbVendasItens  with(nolock)
           INNER JOIN dbo.tbVendas  with(nolock)
                   ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbProdutos with(nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT1 )
       AND ( dbo.tbProdutos.TipoProd = 'LB' )
       AND dbo.tbVendas.Status IS NULL
       AND dbo.tbvendasItens.Cancelado = 0
    UNION
    SELECT 6                                                          AS id
           ,'Conveniência'                                            AS
            Descricao
           ,Cast(ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0) AS INT) AS T1
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens  with(nolock)
                            INNER JOIN dbo.tbVendas  with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos  with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT2 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.TipoProd = 'LC' )), 0)   AS T2
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens with(nolock)
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT3 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.TipoProd = 'LC' )), 0)   AS T3
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT1 ))              AS F1
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT2 ))              AS F2
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT3 ))              AS F3
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  id = @pCaixaT1)                                   FC1
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  id = @pCaixaT2)                                   FC2
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  id = @pCaixaT3)                                   FC3
    FROM   dbo.tbVendasItens
           INNER JOIN dbo.tbVendas with(nolock)
                   ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbProdutos with(nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT1 )
       AND ( dbo.tbProdutos.TipoProd = 'LC' )
       AND dbo.tbVendas.Status IS NULL
       AND dbo.tbvendasItens.Cancelado = 0
    UNION
    SELECT 7                                                            AS id
           ,'Clientes atendidos'                                        AS
            Descricao
           ,Cast(ISNULL(COUNT(dbo.tbVendasItens.Quantidade), 0) AS INT) AS T1
           ,ISNULL ((SELECT ISNULL(COUNT(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT2 )), 0)   AS T2
           ,ISNULL ((SELECT ISNULL(COUNT(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens with(nolock)
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT3 )), 0)   AS T3
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT1 ))                AS F1
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT2 ))                AS F2
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT3 ))                AS F3
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  id = @pCaixaT1)                                     FC1
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  id = @pCaixaT2)                                     FC2
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  id = @pCaixaT3)                                     FC3
    FROM   dbo.tbVendasItens with(nolock)
           INNER JOIN dbo.tbVendas with(nolock)
                   ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbProdutos with(nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT1 )
    UNION
    SELECT 9                                             AS id
           ,'Quebra caixa'                               AS Descricao
           ,Isnull((SELECT valor AS T1
                    FROM   tbColaboradoresDifCaixa with(nolock)
                    WHERE  ( tipo = 'C' )
                       AND idCaixa = @pCaixaT1), 0)      AS T1
           ,Isnull((SELECT valor AS T1
                    FROM   tbColaboradoresDifCaixa with(nolock)
                    WHERE ( tipo = 'C' )
                      AND idCaixa = @pCaixaT2), 0)       AS T2
           ,Isnull((SELECT valor AS T1
                    FROM   tbColaboradoresDifCaixa with(nolock)
                    WHERE  ( tipo = 'C' )
                       AND idCaixa = @pCaixaT3), 0)      AS T3
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT1 )) AS F1
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT2 )) AS F2
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT3 )) AS F3
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  id = @pCaixaT1)                      FC1
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  id = @pCaixaT2)                      FC2
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  id = @pCaixaT3)                      FC3
    UNION
    SELECT 10                                                             AS id
           ,'Retaguarda'                                                  AS
            Descricao
           ,Isnull((SELECT dbo.tbColaboradoresDifCaixa.valor AS T1
                    FROM   dbo.tbColaboradoresDifCaixa with(nolock)
                           INNER JOIN dbo.tbFuncs with(nolock)
                                   ON dbo.tbColaboradoresDifCaixa.idEntidade =
                                      dbo.tbFuncs.IdEntidade
                    WHERE  ( dbo.tbColaboradoresDifCaixa.Tipo = 'R' )
                       AND ( dbo.tbColaboradoresDifCaixa.idCaixa = @pCaixaT1 )
                       AND ( dbo.tbFuncs.Gerente = 0 )
                       AND ( dbo.tbFuncs.Administrativa = 0 )
                       AND ( dbo.tbColaboradoresDifCAixa.valor > 0 )), 0) AS T1
           ,Isnull((SELECT dbo.tbColaboradoresDifCaixa.valor AS T1
                    FROM   dbo.tbColaboradoresDifCaixa with(nolock)
                           INNER JOIN dbo.tbFuncs with(nolock)
                                   ON dbo.tbColaboradoresDifCaixa.idEntidade =
                                      dbo.tbFuncs.IdEntidade
                    WHERE  ( dbo.tbColaboradoresDifCaixa.Tipo = 'R' )
                       AND ( dbo.tbColaboradoresDifCaixa.idCaixa = @pCaixaT2 )
                       AND ( dbo.tbFuncs.Gerente = 0 )
                       AND ( dbo.tbFuncs.Administrativa = 0 )
                       AND ( dbo.tbColaboradoresDifCAixa.valor > 0 )), 0) AS T2
           ,Isnull((SELECT dbo.tbColaboradoresDifCaixa.valor AS T1
                    FROM   dbo.tbColaboradoresDifCaixa with(nolock)
                           INNER JOIN dbo.tbFuncs with(nolock)
                                   ON dbo.tbColaboradoresDifCaixa.idEntidade =
                                      dbo.tbFuncs.IdEntidade
                    WHERE  ( dbo.tbColaboradoresDifCaixa.Tipo = 'R' )
                       AND ( dbo.tbColaboradoresDifCaixa.idCaixa = @pCaixaT3 )
                       AND ( dbo.tbFuncs.Gerente = 0 )
                       AND ( dbo.tbFuncs.Administrativa = 0 )
                       AND ( dbo.tbColaboradoresDifCAixa.valor > 0 )), 0) AS T3
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT1 ))                  AS F1
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT2 ))                  AS F2
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT3 ))                  AS F3
           ,(SELECT dataFechamento
             FROM   tbcaixa with(nolock)
             WHERE  id = @pCaixaT1)                                       FC1
           ,(SELECT dataFechamento
             FROM   tbcaixa with(nolock)
             WHERE  id = @pCaixaT2)                                       FC2
           ,(SELECT dataFechamento
             FROM   tbcaixa with(nolock)
             WHERE  id = @pCaixaT3)                                       FC3 

GO
/****** Object:  StoredProcedure [dbo].[rptResumoVendasTurnoNovo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptResumoVendasTurnoNovo
CREATE PROCEDURE [dbo].[rptResumoVendasTurnoNovo] @pCaixaT1  UNIQUEIDENTIFIER
                                                 ,@pCaixaT2 UNIQUEIDENTIFIER
                                                 ,@pCaixaT3 UNIQUEIDENTIFIER
                                                 ,@pCaixaT4 UNIQUEIDENTIFIER
                                                 ,@pCaixaT5 UNIQUEIDENTIFIER
                                                 ,@pCaixaT6 UNIQUEIDENTIFIER
AS
    DECLARE @Dia          INT
    DECLARE @tblCaixas    TABLE(IdCaixa UNIQUEIDENTIFIER)

    SET @dia = (SELECT month(getdate()))
    INSERT INTO @tblCaixas
    SELECT Id
    FROM   tbCaixa with(nolock)
    WHERE  Month(DataAbertura) = (SELECT Month(DataAbertura)
                                  FROM   tbCaixa with(nolock)
                                  WHERE  Id = @pCaixaT1)
    
    SELECT 2                                                      AS id
           ,'Gasolina'                                            AS Descricao
           ,ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)          AS T1
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens  with(nolock)
                            INNER JOIN dbo.tbVendas  with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos  with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT2 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )), 0) AS T2
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens  with(nolock)
                            INNER JOIN dbo.tbVendas  with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos  with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT3 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )), 0) AS T3
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens  with(nolock)
                            INNER JOIN dbo.tbVendas  with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos  with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT4 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )), 0) AS T4
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens  with(nolock)
                            INNER JOIN dbo.tbVendas  with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos  with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT5 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )), 0) AS T5
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens  with(nolock)
                            INNER JOIN dbo.tbVendas  with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos  with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT6 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )), 0) AS T6
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,(SELECT top 1 RzSocial
             FROM   dbo.tbCaixa  with(nolock)
                    INNER JOIN dbo.tbEntidades  with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
					inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT1 ))          AS F1
          
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,(SELECT top 1 RzSocial
             FROM   dbo.tbCaixa  with(nolock)
                    INNER JOIN dbo.tbEntidades  with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
					inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT2 ))          AS F2
         
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,(SELECT top 1 RzSocial
             FROM   dbo.tbCaixa  with(nolock)
                    INNER JOIN dbo.tbEntidades  with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
					inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT3 ))          AS F3
             
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,(SELECT top 1 RzSocial
             FROM   dbo.tbCaixa  with(nolock)
                    INNER JOIN dbo.tbEntidades  with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
					inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT4 ))          AS F4
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,(SELECT top 1 RzSocial
             FROM   dbo.tbCaixa  with(nolock)
                    INNER JOIN dbo.tbEntidades  with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
					inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT5 ))          AS F5
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,(SELECT top 1 RzSocial
             FROM   dbo.tbCaixa  with(nolock)
                    INNER JOIN dbo.tbEntidades  with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
			inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT6 ))          AS F6
           ,(SELECT dataFechamento
             FROM   tbCaixa  with(nolock)
             WHERE  Id = @pCaixaT1)                          FC1
           ,(SELECT dataFechamento
             FROM   tbCaixa  with(nolock)
             WHERE  Id = @pCaixaT2)                          FC2
           ,(SELECT dataFechamento
             FROM   tbCaixa  with(nolock)
             WHERE  Id = @pCaixaT3)                          FC3
           ,(SELECT dataFechamento
             FROM   tbCaixa  with(nolock)
             WHERE  Id = @pCaixaT4)                          FC4
           ,(SELECT dataFechamento
             FROM   tbCaixa  with(nolock)
             WHERE  Id = @pCaixaT5)                          FC5
           ,(SELECT dataFechamento
             FROM   tbCaixa  with(nolock)
             WHERE  Id = @pCaixaT6)                          FC6
    FROM   dbo.tbVendasItens  with(nolock)
           INNER JOIN dbo.tbVendas  with(nolock)
                   ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbProdutos  with(nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT1 )
       AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )
       AND dbo.tbVendas.Status IS NULL
       AND dbo.tbvendasItens.Cancelado = 0
    UNION
    SELECT 3                                                      AS id
           ,'Etanol'                                              AS Descricao
           ,ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)          AS T1
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens  with(nolock)
                            INNER JOIN dbo.tbVendas  with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos  with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT2 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Etanol comum' )), 0) AS T2
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens  with(nolock)
                            INNER JOIN dbo.tbVendas  with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos  with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT3 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Etanol comum' )), 0) AS T3
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens  with(nolock)
                            INNER JOIN dbo.tbVendas  with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos  with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT4 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )), 0) AS T4
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens  with(nolock)
                            INNER JOIN dbo.tbVendas  with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos  with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT5 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )), 0) AS T5
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens  with(nolock)
                            INNER JOIN dbo.tbVendas  with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos  with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT6 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )), 0) AS T6
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa  with(nolock)
                    INNER JOIN dbo.tbEntidades  with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT1 ))          AS F1
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa  with(nolock)
                    INNER JOIN dbo.tbEntidades  with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT2 ))          AS F2
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa  with(nolock)
                    INNER JOIN dbo.tbEntidades  with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno                         WHERE  ( dbo.tbCaixa.Id = @pCaixaT3 ))          AS F3
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa  with(nolock)
                    INNER JOIN dbo.tbEntidades  with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno            
			WHERE  ( dbo.tbCaixa.Id = @pCaixaT4 ))          AS F4
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa  with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno            
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT5 ))          AS F5
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno            
			 WHERE  ( dbo.tbCaixa.Id = @pCaixaT6 ))          AS F6
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT1)                          FC1
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT2)                          FC2
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT3)                          FC3
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT4)                          FC4
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT5)                          FC5
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT6)                          FC6
    FROM   dbo.tbVendasItens with(nolock)
           INNER JOIN dbo.tbVendas with(nolock)
                   ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbProdutos with(nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT1 )
       AND ( dbo.tbProdutos.Descricao = 'Etanol comum' )
       AND dbo.tbVendas.Status IS NULL
       AND dbo.tbvendasItens.Cancelado = 0
    UNION
    SELECT 4                                                      AS id
           ,'Diesel'                                              AS Descricao
           ,ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)          AS T1
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens with(nolock)
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT2 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Diesel comum' )), 0) AS T2
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens with(nolock)
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos  with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT3 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Diesel comum' )), 0) AS T3
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens  with(nolock)
                            INNER JOIN dbo.tbVendas  with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos  with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT4 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )), 0) AS T4
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens  with(nolock)
                            INNER JOIN dbo.tbVendas  with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos  with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT5 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )), 0) AS T5
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens  with(nolock)
                            INNER JOIN dbo.tbVendas  with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos  with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos  with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT6 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )), 0) AS T6
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa  with(nolock)
                    INNER JOIN dbo.tbEntidades  with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno            
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT1 ))          AS F1
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa  with(nolock)
                    INNER JOIN dbo.tbEntidades  with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno            
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT2 ))          AS F2
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa  with(nolock)
                    INNER JOIN dbo.tbEntidades  with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno            
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT3 ))          AS F3
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa  with(nolock)
                    INNER JOIN dbo.tbEntidades  with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno            
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT4 ))          AS F4
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa  with(nolock)
                    INNER JOIN dbo.tbEntidades  with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno            
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT5 ))          AS F5
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa  with(nolock)
                    INNER JOIN dbo.tbEntidades  with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno            
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT6 ))          AS F6
           ,(SELECT dataFechamento
             FROM   tbCaixa  with(nolock)
             WHERE  Id = @pCaixaT1)                          FC1
           ,(SELECT dataFechamento
             FROM   tbCaixa  with(nolock)
             WHERE  Id = @pCaixaT2)                          FC2
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT3)                          FC3
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT4)                          FC4
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT5)                          FC5
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT6)                          FC6
    FROM   dbo.tbVendasItens with(nolock)
           INNER JOIN dbo.tbVendas with(nolock)
                   ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbProdutos with(nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT1 )
       AND ( dbo.tbProdutos.Descricao = 'Diesel comum' )
       AND dbo.tbVendas.Status IS NULL
       AND dbo.tbvendasItens.Cancelado = 0
    UNION
    SELECT 5                                                          AS id
           ,'Lubrificante'                                            AS
            Descricao
           ,Cast(ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0) AS INT) AS T1
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens with(nolock)
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT2 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.TipoProd = 'LB' )), 0)   AS T2
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens with(nolock)
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT3 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.TipoProd = 'LB' )), 0)   AS T3
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens with(nolock)
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT4 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )), 0)     AS T4
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens with(nolock)
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT5 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )), 0)     AS T5
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens with(nolock)
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT6 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )), 0)     AS T6
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno            
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT1 ))              AS F1
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno            
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT2 ))              AS F2
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno            
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT3 ))              AS F3
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno            
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT4 ))              AS F4
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno            
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT5 ))              AS F5
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno            
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT6 ))              AS F6
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT1)                              FC1
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT2)                              FC2
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT3)                              FC3
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT4)                              FC4
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT5)                              FC5
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT6)                              FC6
    FROM   dbo.tbVendasItens with(nolock)
           INNER JOIN dbo.tbVendas with(nolock)
                   ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbProdutos with(nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT1 )
       AND ( dbo.tbProdutos.TipoProd = 'LB' )
       AND dbo.tbVendas.Status IS NULL
       AND dbo.tbvendasItens.Cancelado = 0
    UNION
    SELECT 6                                                          AS id
           ,'Conveniência'                                            AS
            Descricao
           ,Cast(ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0) AS INT) AS T1
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens with(nolock)
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT2 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.TipoProd = 'LC' )), 0)   AS T2
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens with(nolock)
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT3 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.TipoProd = 'LC' )), 0)   AS T3
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens with(nolock)
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT4 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )), 0)     AS T4
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens with(nolock)
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT5 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )), 0)     AS T5
           ,ISNULL ((SELECT ISNULL(SUM(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens with(nolock)
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT6 )
                        AND dbo.tbVendas.Status IS NULL
                        AND dbo.tbvendasItens.Cancelado = 0
                        AND ( dbo.tbProdutos.Descricao = 'Gasolina comum' )), 0)     AS T6
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno            
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT1 ))              AS F1
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT2 ))              AS F2
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno                         WHERE  ( dbo.tbCaixa.Id = @pCaixaT3 ))              AS F3
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT4 ))              AS F4
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT5 ))              AS F5
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT6 ))              AS F6
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT1)                              FC1
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT2)                              FC2
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT3)                              FC3
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT4)                              FC4
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT5)                              FC5
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT6)                              FC6
    FROM   dbo.tbVendasItens with(nolock)
           INNER JOIN dbo.tbVendas with(nolock)
                   ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbProdutos with(nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT1 )
       AND ( dbo.tbProdutos.TipoProd = 'LC' )
       AND dbo.tbVendas.Status IS NULL
       AND dbo.tbvendasItens.Cancelado = 0
    UNION
    SELECT 7                                                            AS id
           ,'Clientes atendidos'                                        AS
            Descricao
           ,Cast(ISNULL(COUNT(dbo.tbVendasItens.Quantidade), 0) AS INT) AS T1
           ,ISNULL ((SELECT ISNULL(COUNT(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens with(nolock)
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT2 )), 0)   AS T2
           ,ISNULL ((SELECT ISNULL(COUNT(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens with(nolock)
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT3 )), 0)   AS T3
           ,ISNULL ((SELECT ISNULL(COUNT(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens with(nolock)
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT4 )), 0)   AS T4
           ,ISNULL ((SELECT ISNULL(COUNT(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT5 )), 0)   AS T5
           ,ISNULL ((SELECT ISNULL(COUNT(dbo.tbVendasItens.Quantidade), 0)
                     FROM   dbo.tbVendasItens with(nolock)
                            INNER JOIN dbo.tbVendas with(nolock)
                                    ON dbo.tbVendasItens.idVenda =
                                       dbo.tbVendas.Id
                            INNER JOIN dbo.tbProdutosPostos with(nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbProdutosPostos.idPosto
                            INNER JOIN dbo.tbProdutos with(nolock)
                                    ON dbo.tbProdutosPostos.idProduto =
                                       dbo.tbProdutos.Id
                                       AND dbo.tbVendasItens.idProduto =
                                           dbo.tbProdutos.Id
                     WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT6 )), 0)   AS T6
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT1 ))                AS F1
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT2 ))                AS F2
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT3 ))                AS F3
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT4 ))                AS F4
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT5 ))                AS F5
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT6 ))                AS F6
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT1)                                FC1
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT2)                                FC2
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT3)                                FC3
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT4)                                FC4
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT5)                                FC5
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT6)                                FC6
    FROM   dbo.tbVendasItens with(nolock)
           INNER JOIN dbo.tbVendas with(nolock)
                   ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbProdutos with(nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbVendas.idCaixa = @pCaixaT1 )
    UNION
    SELECT 9                                             AS id
           ,'Quebra caixa'                               AS Descricao
           ,Isnull((SELECT SUM(valor) AS T1
                    FROM   tbColaboradoresDifCaixa with(nolock)
                    WHERE  ( tipo = 'C' )
                       AND idCaixa = @pCaixaT1), 0)      AS T1
           ,Isnull((SELECT SUM(valor) AS T1
                    FROM   tbColaboradoresDifCaixa with(nolock)
                    WHERE ( tipo = 'C' )
                      AND idCaixa = @pCaixaT2), 0)       AS T2
           ,Isnull((SELECT SUM(valor) AS T1
                    FROM   tbColaboradoresDifCaixa with(nolock)
                    WHERE  ( tipo = 'C' )
                       AND idCaixa = @pCaixaT3), 0)      AS T3
           ,Isnull((SELECT SUM(valor) AS T1
                    FROM   tbColaboradoresDifCaixa with(nolock)
                    WHERE  ( tipo = 'C' )
                       AND idCaixa = @pCaixaT4), 0)      AS T4
           ,Isnull((SELECT SUM(valor) AS T1
                    FROM   tbColaboradoresDifCaixa with(nolock)
                    WHERE  ( tipo = 'C' )
                       AND idCaixa = @pCaixaT5), 0)      AS T5
           ,Isnull((SELECT SUM(valor) AS T1
                    FROM   tbColaboradoresDifCaixa with(nolock)
                    WHERE  ( tipo = 'C' )
                       AND idCaixa = @pCaixaT6), 0)      AS T6
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT1 )) AS F1
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT2 )) AS F2
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno                         WHERE  ( dbo.tbCaixa.Id = @pCaixaT3 )) AS F3
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno                         WHERE  ( dbo.tbCaixa.Id = @pCaixaT4 )) AS F4
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno            
             WHERE  ( dbo.tbCaixa.Id = @pCaixaT5 )) AS F5
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno                         WHERE  ( dbo.tbCaixa.Id = @pCaixaT6 )) AS F6
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT1)                 FC1
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT2)                 FC2
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT3)                 FC3
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT4)                 FC4
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT5)                 FC5
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT6)                 FC6
    UNION
    SELECT 10                                                             AS id
           ,'Retaguarda'                                                  AS
            Descricao
           ,Isnull((SELECT SUM(dbo.tbColaboradoresDifCaixa.valor) AS T1
                    FROM   dbo.tbColaboradoresDifCaixa with(nolock)
                           INNER JOIN dbo.tbFuncs with(nolock)
                                   ON dbo.tbColaboradoresDifCaixa.idEntidade =
                                      dbo.tbFuncs.IdEntidade
                    WHERE  ( dbo.tbColaboradoresDifCaixa.Tipo = 'R' )
                       AND ( dbo.tbColaboradoresDifCaixa.idCaixa = @pCaixaT1 )
                       AND ( dbo.tbFuncs.Gerente = 0 )
                       AND ( dbo.tbFuncs.Administrativa = 0 )
                       AND ( dbo.tbColaboradoresDifCAixa.valor > 0 )), 0) AS T1
           ,Isnull((SELECT SUM(dbo.tbColaboradoresDifCaixa.valor) AS T1
                    FROM   dbo.tbColaboradoresDifCaixa with(nolock)
                           INNER JOIN dbo.tbFuncs with(nolock)
                                   ON dbo.tbColaboradoresDifCaixa.idEntidade =
                                      dbo.tbFuncs.IdEntidade
                    WHERE  ( dbo.tbColaboradoresDifCaixa.Tipo = 'R' )
                       AND ( dbo.tbColaboradoresDifCaixa.idCaixa = @pCaixaT2 )
                       AND ( dbo.tbFuncs.Gerente = 0 )
                       AND ( dbo.tbFuncs.Administrativa = 0 )
                       AND ( dbo.tbColaboradoresDifCAixa.valor > 0 )), 0) AS T2
           ,Isnull((SELECT SUM(dbo.tbColaboradoresDifCaixa.valor) AS T1
                    FROM   dbo.tbColaboradoresDifCaixa with(nolock)
                           INNER JOIN dbo.tbFuncs with(nolock)
                                   ON dbo.tbColaboradoresDifCaixa.idEntidade =
                                      dbo.tbFuncs.IdEntidade
                    WHERE  ( dbo.tbColaboradoresDifCaixa.Tipo = 'R' )
                       AND ( dbo.tbColaboradoresDifCaixa.idCaixa = @pCaixaT3 )
                       AND ( dbo.tbFuncs.Gerente = 0 )
                       AND ( dbo.tbFuncs.Administrativa = 0 )
                       AND ( dbo.tbColaboradoresDifCAixa.valor > 0 )), 0) AS T3
           ,Isnull((SELECT SUM(dbo.tbColaboradoresDifCaixa.valor) AS T1
                    FROM   dbo.tbColaboradoresDifCaixa with(nolock)
                           INNER JOIN dbo.tbFuncs with(nolock)
                                   ON dbo.tbColaboradoresDifCaixa.idEntidade =
                                      dbo.tbFuncs.IdEntidade
                    WHERE  ( dbo.tbColaboradoresDifCaixa.Tipo = 'R' )
                       AND ( dbo.tbColaboradoresDifCaixa.idCaixa = @pCaixaT4 )
                       AND ( dbo.tbFuncs.Gerente = 0 )
                       AND ( dbo.tbFuncs.Administrativa = 0 )
                       AND ( dbo.tbColaboradoresDifCAixa.valor > 0 )), 0) AS T4
           ,Isnull((SELECT SUM(dbo.tbColaboradoresDifCaixa.valor) AS T1
                    FROM   dbo.tbColaboradoresDifCaixa with(nolock)
                           INNER JOIN dbo.tbFuncs with(nolock)
                                   ON dbo.tbColaboradoresDifCaixa.idEntidade =
                                      dbo.tbFuncs.IdEntidade
                    WHERE  ( dbo.tbColaboradoresDifCaixa.Tipo = 'R' )
                       AND ( dbo.tbColaboradoresDifCaixa.idCaixa = @pCaixaT5 )
                       AND ( dbo.tbFuncs.Gerente = 0 )
                       AND ( dbo.tbFuncs.Administrativa = 0 )
                       AND ( dbo.tbColaboradoresDifCAixa.valor > 0 )), 0) AS T5
           ,Isnull((SELECT SUM(dbo.tbColaboradoresDifCaixa.valor) AS T1
                    FROM   dbo.tbColaboradoresDifCaixa with(nolock)
                           INNER JOIN dbo.tbFuncs with(nolock)
                                   ON dbo.tbColaboradoresDifCaixa.idEntidade =
                                      dbo.tbFuncs.IdEntidade
                    WHERE  ( dbo.tbColaboradoresDifCaixa.Tipo = 'R' )
                       AND ( dbo.tbColaboradoresDifCaixa.idCaixa = @pCaixaT6 )
                       AND ( dbo.tbFuncs.Gerente = 0 )
                       AND ( dbo.tbFuncs.Administrativa = 0 )
                       AND ( dbo.tbColaboradoresDifCAixa.valor > 0 )), 0) AS T6
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno                         WHERE  ( dbo.tbCaixa.Id = @pCaixaT1 ))                  AS F1
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno                         WHERE  ( dbo.tbCaixa.Id = @pCaixaT2 ))                  AS F2
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno                         WHERE  ( dbo.tbCaixa.Id = @pCaixaT3 ))                  AS F3
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno                         WHERE  ( dbo.tbCaixa.Id = @pCaixaT4 ))                  AS F4
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno                         WHERE  ( dbo.tbCaixa.Id = @pCaixaT5 ))                  AS F5
           ,(SELECT TOP 1 SubString(RzSocial, 1, CHARINDEX(' ', RzSocial))
           --,( SELECT TOP 1 RzSocial 
             FROM   dbo.tbCaixa with(nolock)
                    INNER JOIN dbo.tbEntidades with(nolock)
                            ON dbo.tbCaixa.idEntidade =
                               dbo.tbEntidades.Id
                    inner join dbo.tbTurno with(nolock) on dbo.tbCaixa.IdPosto = dbo.tbTurno.IdPosto and dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno                         WHERE  ( dbo.tbCaixa.Id = @pCaixaT6 ))                  AS F6
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT1)                                  FC1
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT2)                                  FC2
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT3)                                  FC3
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT4)                                  FC4
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT5)                                  FC5
           ,(SELECT dataFechamento
             FROM   tbCaixa with(nolock)
             WHERE  Id = @pCaixaT6)                                  FC6 

GO
/****** Object:  StoredProcedure [dbo].[rptResVerificacaoCaixas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



--rptResVerificacaoCaixas
CREATE PROCEDURE [dbo].[rptResVerificacaoCaixas] @pCaixaTurnoAnt UNIQUEIDENTIFIER
                                                ,@pCaixaIni     UNIQUEIDENTIFIER
                                                ,@pCaixaFim     UNIQUEIDENTIFIER
                                                ,@pIdposto      UNIQUEIDENTIFIER
AS
    SELECT Caixa.idObjeto
           ,(SELECT Tcaixa
             FROM   tbCaixa with (nolock)
             WHERE  idCaixa = @pCaixaINI)                                  AS
            TCaixa
           ,dbo.tbProdutos.Descricao                                       AS
            Imagem
           ,RTRIM(dbo.tbProdutos.Descricao + '('
                  + Cast(Caixa.idObjeto AS VARCHAR) + ')')                 AS
            Descricao
           ,Caixa.ValorLido                                                AS
            Inicial
           ,ISNULL ((SELECT AVG(dbo.tbVendasItens.PrecoVenda)
                     FROM   dbo.tbVendas with (nolock)
                            INNER JOIN dbo.tbVendasItens with (nolock)
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                            INNER JOIN dbo.tbTanques with (nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbTanques.IdPosto
                            INNER JOIN dbo.tbBombas with (nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbVendasItens.idBomba =
                                           dbo.tbBombas.Id
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
                     WHERE  ( dbo.tbVendas.idCaixa BETWEEN
                              @pCaixaIni AND @pCaixaFim
                            )
                     GROUP  BY dbo.tbTanques.Id
                               ,dbo.tbTanques.IdPosto
                     HAVING ( dbo.tbTanques.Id = Caixa.idObjeto )
                            AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0) AS
            Preco
           ,ISNULL ((SELECT AVG(dbo.tbVendasItens.PrecoCusto)
                     FROM   dbo.tbVendas with (nolock)
                            INNER JOIN dbo.tbVendasItens with (nolock)
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                            INNER JOIN dbo.tbTanques with (nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbTanques.IdPosto
                            INNER JOIN dbo.tbBombas with (nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbVendasItens.idBomba =
                                           dbo.tbBombas.Id
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
                     WHERE  ( dbo.tbVendas.idCaixa BETWEEN
                              @pCaixaIni AND @pCaixaFim
                            )
                     GROUP  BY dbo.tbTanques.Id
                               ,dbo.tbTanques.IdPosto
                     HAVING ( dbo.tbTanques.Id = Caixa.idObjeto )
                            AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0) AS
            PrecoCusto
           ,ISNULL ((SELECT SUM(dbo.tbVendasItens.Quantidade)
                     FROM   dbo.tbVendas with (nolock)
                            INNER JOIN dbo.tbVendasItens with (nolock)
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                            INNER JOIN dbo.tbTanques with (nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbTanques.IdPosto
                            INNER JOIN dbo.tbBombas with (nolock)
                                    ON dbo.tbVendas.idPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbVendasItens.idBomba =
                                           dbo.tbBombas.Id
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
                     WHERE  ( dbo.tbVendas.idCaixa BETWEEN
                              @pCaixaIni AND @pCaixaFim
                            )
                     GROUP  BY dbo.tbTanques.Id
                               ,dbo.tbTanques.IdPosto
                     HAVING ( dbo.tbTanques.Id = Caixa.idObjeto )
                            AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0) AS
            Venda
           ,ISNULL ((SELECT SUM(dbo.tbPedidosItensRecebidos.qtd) AS Recebimento
                     FROM   dbo.tbPedidosItens with (nolock)
                            INNER JOIN dbo.tbTanques with (nolock)
                                    ON dbo.tbPedidosItens.idPosto =
                                       dbo.tbTanques.IdPosto
                                       AND dbo.tbPedidosItens.idProduto =
                                           dbo.tbTanques.IdProduto
                            INNER JOIN dbo.tbPedidosItensRecebidos with (nolock)
                                    ON dbo.tbPedidosItens.idPedido =
                                       dbo.tbPedidosItensRecebidos.idPedido
                                       AND dbo.tbPedidosItens.idPosto =
                                           dbo.tbPedidosItensRecebidos.idPosto
                                       AND dbo.tbTanques.Id =
                                           dbo.tbPedidosItensRecebidos.IdTanque
                     WHERE  ( dbo.tbPedidosItens.idCaixaRecebimento BETWEEN
                              @pCaixaINI AND @pCaixaFIM )
                        AND ( dbo.tbTanques.Id = caixa.idOBjeto )
                        AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0)     AS
            Recebimento
           ,(SELECT ValorLido
             FROM   tbCaixaItens with (nolock)
             WHERE  idCaixa = @pCaixaFIM
                AND idObjeto = Caixa.idObjeto
                AND TipoLeitura = 'T')                                     AS
            Final
           ,Isnull ((SELECT SUM(0)
                     FROM   dbo.tbTanques with (nolock)
                            INNER JOIN dbo.tbBombas with (nolock)
                                    ON dbo.tbTanques.IdPosto =
                                       dbo.tbBombas.IdPosto
                                       AND dbo.tbTanques.Id =
                                           dbo.tbBombas.IdTanque
                            INNER JOIN dbo.tbAfericao with (nolock)
                                    ON dbo.tbBombas.IdPosto =
                                       dbo.tbAfericao.idPosto
                                       AND dbo.tbBombas.Id =
                                           dbo.tbAfericao.IdBomba
                     WHERE  ( dbo.tbBombas.IdPosto = @pIDPosto )
                        AND ( dbo.tbTanques.Id = Caixa.idObjeto )
                        AND ( dbo.tbAfericao.idCaixa BETWEEN
                              @pCaixaINI AND @pCaixaFIM )),
            0
            )                                                              AS
            Afericao
           ,ROUND(ISNULL ((SELECT AVG(dbo.tbVendasItens.PrecoVenda)
                           FROM   dbo.tbVendas with (nolock)
                                  INNER JOIN dbo.tbVendasItens with (nolock)
                                          ON dbo.tbVendas.Id =
                                             dbo.tbVendasItens.idVenda
                                  INNER JOIN dbo.tbTanques with (nolock)
                                          ON dbo.tbVendas.idPosto =
                                             dbo.tbTanques.IdPosto
                                  INNER JOIN dbo.tbBombas with (nolock)
                                          ON dbo.tbVendas.idPosto =
                                             dbo.tbBombas.IdPosto
                                             AND dbo.tbVendasItens.idBomba =
                                                 dbo.tbBombas.Id
                                             AND dbo.tbTanques.Id =
                                                 dbo.tbBombas.IdTanque
                           WHERE  ( dbo.tbVendas.idCaixa BETWEEN
                                    @pCaixaIni AND @pCaixaFim
                                  )
                           GROUP  BY dbo.tbTanques.Id
                                     ,dbo.tbTanques.IdPosto
                           HAVING ( dbo.tbTanques.Id = Caixa.idObjeto )
                                  AND ( dbo.tbTanques.IdPosto = @pIDPosto )), 0)
                  *
                         ISNULL ((SELECT SUM(dbo.tbVendasItens.Quantidade)
                                  FROM   dbo.tbVendas with (nolock)
                                         INNER JOIN dbo.tbVendasItens with (nolock)
                                                 ON dbo.tbVendas.Id =
                                                    dbo.tbVendasItens.idVenda
                                         INNER JOIN dbo.tbTanques with (nolock)
                                                 ON dbo.tbVendas.idPosto =
                                                    dbo.tbTanques.IdPosto
                                         INNER JOIN dbo.tbBombas with (nolock)
                                                 ON dbo.tbVendas.idPosto =
                                                    dbo.tbBombas.IdPosto
                                                    AND
                                         dbo.tbVendasItens.idBomba =
                                         dbo.tbBombas.Id
                                                    AND dbo.tbTanques.Id =
                                                        dbo.tbBombas.IdTanque
                                  WHERE  ( dbo.tbVendas.idCaixa BETWEEN
                                           @pCaixaIni AND @pCaixaFim
                                         )
                                  GROUP  BY dbo.tbTanques.Id
                                            ,dbo.tbTanques.IdPosto
                                  HAVING ( dbo.tbTanques.Id = Caixa.idObjeto )
                                         AND ( dbo.tbTanques.IdPosto = @pIDPosto
                                             )),
                         0), 1)
                                                                          AS
            Total
           ,tbProdutos.Ordem
           ,(SELECT ValorCalculado
             FROM   tbCaixaItens with (nolock)
             WHERE  idCaixa = @pCaixaFIM
                AND idObjeto = Caixa.idObjeto
                AND TipoLeitura = 'T')                                     AS
            Medicao
    FROM   dbo.tbProdutosPostos with (nolock)
           INNER JOIN dbo.tbProdutos with (nolock)
                   ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbCaixa with (nolock)
                      INNER JOIN dbo.tbCaixaItens Caixa with (nolock)
                              ON dbo.tbCaixa.Id = Caixa.idCaixa
                   ON dbo.tbProdutosPostos.idPosto = dbo.tbCaixa.idPosto
           INNER JOIN dbo.tbTanques with (nolock)
                   ON dbo.tbProdutosPostos.idPosto = dbo.tbTanques.IdPosto
                      AND Caixa.idObjeto = dbo.tbTanques.Id
                      AND dbo.tbProdutos.Id = dbo.tbTanques.IdProduto
                      AND dbo.tbProdutosPostos.idProduto =
                          dbo.tbTanques.IdProduto
    WHERE  ( Caixa.idCaixa = @pCaixaTurnoAnt )
       AND ( Caixa.TipoLeitura = 'T' )
       AND ( dbo.tbTanques.IdPosto = @pIDPosto )
    UNION
    SELECT 20
           ,4
           ,'LB'
           ,'Lubrificantes'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbVendasItens.PrecoVenda *
                               dbo.tbVendasItens.Quantidade)
                    FROM   dbo.tbVendas with (nolock)
                           INNER JOIN dbo.tbVendasItens with (nolock)
                                   ON dbo.tbVendas.Id =
                                      dbo.tbVendasItens.idVenda
                           INNER JOIN dbo.tbProdutos with (nolock)
                                   ON dbo.tbVendasItens.idProduto =
                                      dbo.tbProdutos.Id
                           INNER JOIN dbo.tbProdutosPostos with (nolock)
                                   ON dbo.tbVendas.idPosto =
                                      dbo.tbProdutosPostos.idPosto
                                      AND dbo.tbVendasItens.idProduto =
                                          dbo.tbProdutosPostos.idProduto
                                      AND dbo.tbProdutos.Id =
                                          dbo.tbProdutosPostos.idProduto
                    WHERE  dbo.tbVendas.idPosto = @pIDPosto
                    GROUP  BY dbo.tbProdutos.TipoProd
                              ,dbo.tbVendas.idCaixa
                    HAVING ( dbo.tbVendas.idCaixa BETWEEN
                             @pCaixaINI AND @pCaixaFIM
                           )
                           AND ( dbo.tbProdutos.TipoProd = 'LB' )), 0)
           ,21
           ,0
    UNION
    SELECT 21
           ,4
           ,'LC'
           ,'Conveniência'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbVendasItens.PrecoVenda *
                               dbo.tbVendasItens.Quantidade)
                    FROM   dbo.tbVendas with (nolock)
                           INNER JOIN dbo.tbVendasItens with (nolock)
                                   ON dbo.tbVendas.Id =
                                      dbo.tbVendasItens.idVenda
                           INNER JOIN dbo.tbProdutos with (nolock)
                                   ON dbo.tbVendasItens.idProduto =
                                      dbo.tbProdutos.Id
                           INNER JOIN dbo.tbProdutosPostos with (nolock)
                                   ON dbo.tbVendas.idPosto =
                                      dbo.tbProdutosPostos.idPosto
                                      AND dbo.tbVendasItens.idProduto =
                                          dbo.tbProdutosPostos.idProduto
                                      AND dbo.tbProdutos.Id =
                                          dbo.tbProdutosPostos.idProduto
                    WHERE  dbo.tbVendas.idPosto = @pIDPosto
                    GROUP  BY dbo.tbProdutos.TipoProd
                              ,dbo.tbVendas.idCaixa
                    HAVING ( dbo.tbVendas.idCaixa BETWEEN
                             @pCaixaINI AND @pCaixaFIM
                           )
                           AND ( dbo.tbProdutos.TipoProd = 'LC' )), 0)
           ,22
           ,0
    UNION
    SELECT 22
           ,4
           ,'TOT'
           ,'Total Vendas'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,22
           ,0
    UNION
    SELECT 23
           ,4
           ,'DI'
           ,'Dinheiro'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas with (nolock)
                    INNER JOIN dbo.tbVendasItensPagamento with (nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'DI' ))
           ,23
           ,0
    UNION
    SELECT 24
           ,4
           ,'CV'
           ,'Cheque Vista'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas with (nolock)
                    INNER JOIN dbo.tbVendasItensPagamento with (nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CV' ))
           ,24
           ,0
    UNION
    SELECT 25
           ,4
           ,'CP'
           ,'Cheque Prazo'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor) *- 1, 0) )
             FROM   dbo.tbVendas with (nolock)
                    INNER JOIN dbo.tbVendasItensPagamento with (nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CP' ))
           ,25
           ,0
    UNION
    SELECT 26
           ,4
           ,'CC'
           ,'Cartão Crédito'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor) *- 1, 0) )
             FROM   dbo.tbVendas with (nolock)
                    INNER JOIN dbo.tbVendasItensPagamento with (nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CC' ))
           ,26
           ,0
    UNION
    SELECT 27
           ,4
           ,'CD'
           ,'Cartão Débito'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor) *- 1, 0) )
             FROM   dbo.tbVendas with (nolock)
                    INNER JOIN dbo.tbVendasItensPagamento with (nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CD' ))
           ,27
           ,0
    UNION
    SELECT 28
           ,4
           ,'PR'
           ,'Prazo'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor) *- 1, 0) )
             FROM   dbo.tbVendas with (nolock)
                    INNER JOIN dbo.tbVendasItensPagamento with (nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'PR' ))
           ,28
           ,0
    UNION
    SELECT 29
           ,4
           ,'CF'
           ,'Carta Frete'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor) *- 1, 0) )
             FROM   dbo.tbVendas with (nolock)
                    INNER JOIN dbo.tbVendasItensPagamento with (nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM )
                AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CF' ))
           ,29
           ,0
    UNION
    /*Select 30,4,'AF', 'Troco Frete' , 0,0,0,0 ,0,0,0, (Isnull((SELECT  SUM(dbo.tbCartaFrete.ValorAdiantamento)*-1 FROM dbo.tbCartaFrete INNER JOIN dbo.tbVendas ON dbo.tbCartaFrete.idVenda = dbo.tbVendas.Id WHERE (dbo.tbVendas.idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM))+(SELECT  SUM(dbo.tbCartaFrete.ValorRetorno)*-1 FROM dbo.tbCartaFrete WHERE (dbo.tbCartaFrete.idCaixaRetorno BETWEEN @pCaixaINI AND @pCaixaFIM)),0)) ,29*/
    SELECT 30
           ,4
           ,'AF'
           ,'Troco Frete'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbCartaFrete.ValorAdiantamento)*-1 FROM
            dbo.tbCartaFrete with (nolock)
            INNER JOIN dbo.tbVendas  with (nolock)ON dbo.tbCartaFrete.idVenda =
            dbo.tbVendas.Id
            WHERE
            dbo.tbVendas.idCaixa BETWEEN @pCaixaFIM AND @pCaixaFIM), 0)
            + Isnull((SELECT SUM(dbo.tbCartaFrete.ValorRetorno)*-1 FROM
            dbo.tbCartaFrete
            WHERE dbo.tbCartaFrete.idCaixaRetorno BETWEEN @pCaixaINI AND
            @pCaixaFIM)
            , 0)
           ,29
           ,0
    UNION
    SELECT 31
           ,4
           ,'RC'
           ,'Recebimentos'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT sum(valor)
                    FROM   tbContasPagarReceber with (nolock)
                    WHERE  idPosto = @pIDPosto
                       AND idTipo = 'RC'
                       AND idTipoDocto NOT IN ( 'CV', 'CP', 'CC', 'CD' )
                       AND idPedCaixa BETWEEN @pCaixaINI AND @pCaixaFIM), 0)
           ,30
           ,0
    UNION
    SELECT 32
           ,4
           ,'DP'
           ,'Desconto Cliente Esp.'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT SUM(dbo.tbVendasItens.PrecoVenda *
                               dbo.tbVendasItens.Quantidade)
                            -
                                           SUM(dbo.tbVendasItens.PrecoEspecial *
                                               dbo.tbVendasItens.Quantidade)
                    FROM   dbo.tbVendas with (nolock)
                           INNER JOIN dbo.tbVendasItens with (nolock)
                                   ON dbo.tbVendas.Id =
                                      dbo.tbVendasItens.idVenda
                           INNER JOIN dbo.tbProdutos with (nolock)
                                   ON dbo.tbVendasItens.idProduto =
                                      dbo.tbProdutos.Id
                           INNER JOIN dbo.tbProdutosPostos with (nolock)
                                   ON dbo.tbVendas.idPosto =
                                      dbo.tbProdutosPostos.idPosto
                                      AND dbo.tbVendasItens.idProduto =
                                          dbo.tbProdutosPostos.idProduto
                                      AND dbo.tbProdutos.Id =
                                          dbo.tbProdutosPostos.idProduto
                    WHERE  dbo.tbVendas.idPosto = @pIDPosto
                       AND precoEspecial > 0
                    GROUP  BY dbo.tbProdutos.TipoProd
                              ,dbo.tbVendas.idCaixa
                    HAVING ( dbo.tbVendas.idCaixa BETWEEN
                             @pCaixaIni AND @pCAixaFim
                           )), 0)
           ,32
           ,0
    UNION
    SELECT 33
           ,4
           ,'DE'
           ,'Despesas'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT sum(valor) *- 1
                    FROM   tbContasPagarReceber with (nolock)
                    WHERE  Despesa = 1
                       AND idPosto = @pIDPosto
                       AND idTipo = 'PG'
                       AND idPedCaixa BETWEEN @pCaixaINI AND @pCaixaFIM), 0)
           ,33
           ,0
    UNION
    SELECT 34
           ,4
           ,'TO'
           ,'Total Vendido'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,34
           ,0
    UNION
    SELECT 35
           ,4
           ,'RT'
           ,'Retiradas'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,Isnull((SELECT Sum(Valor) *- 1
                    FROM   tbRetiradas  with (nolock)
                    WHERE  idPosto = @pIDPosto
                       AND idCaixa BETWEEN @pCaixaINI AND @pCaixaFIM), 0)
           ,35
           ,0
    UNION
    SELECT 36
           ,5
           ,'SD'
           ,'Saldo Retirar'
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,0
           ,36
           ,0
    ORDER  BY tbProdutos.ordem 

GO
/****** Object:  StoredProcedure [dbo].[rptSaldoContaCorrenteColaborador]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptSaldoContaCorrenteColaborador
CREATE PROCEDURE [dbo].[rptSaldoContaCorrenteColaborador]
@pIdposto UNIQUEIDENTIFIER
,@pData   AS SMALLDATETIME
AS
    IF @pIDPosto = dbo.GuidEmpty()
      BEGIN
          SET @pIDPosto = NULL
      END

    SELECT DISTINCT dbo.tbFuncs.IdPosto
           ,dbo.tbFuncs.IdEntidade
           ,dbo.tbEntidades.RzSocial
            AS Colaborador
           ,dbo.tbEntidades.CNPJ
           ,ISNULL(dbo.tbFuncs.Salario, 0)
            + ISNULL(dbo.tbFuncs.QCaixa, 0)
            + ISNULL(dbo.tbFuncs.PercPericulosidade, 0)
            AS Salário
           ,(SELECT ISNULL(SUM(CASE idTipo
                                 WHEN 'RC' THEN Valor
                                 WHEN 'AR' THEN Valor * -1
                               END), 0) AS Valor
             FROM   dbo.tbContasPagarReceber with (nolock)
             WHERE  ( idEntidade = dbo.tbEntidades.Id )
                AND ( idTipo = 'AR' )
                 OR ( idEntidade = dbo.tbEntidades.Id )
                    AND ( idTipo = 'RC' ))
            AS SaldoContaCorrente
           ,(SELECT SUM(dbo.tbColaboradoresDifCaixa.valor) AS SaldoDevedor
             FROM   dbo.tbColaboradoresDifCaixa with (nolock)
                    INNER JOIN dbo.tbCaixa with (nolock)
                            ON dbo.tbColaboradoresDifCaixa.idCaixa =
                               dbo.tbCaixa.Id
             WHERE  ( dbo.tbColaboradoresDifCaixa.Tipo = 'C' )
                AND ( dbo.tbCaixa.Dia <= @pData )
                 OR ( dbo.tbColaboradoresDifCaixa.Tipo = 'D' )
                    AND ( dbo.tbCaixa.Dia <= @pData )
                    AND ( dbo.tbColaboradoresDifCaixa.valor < 0 )
                 OR ( dbo.tbColaboradoresDifCaixa.Tipo = 'E' )
                    AND ( dbo.tbCaixa.Dia <= @pData )
                    AND ( dbo.tbColaboradoresDifCaixa.valor > 0 )
                 OR ( dbo.tbColaboradoresDifCaixa.Tipo = 'L' )
                    AND ( dbo.tbCaixa.Dia <= @pData )
             GROUP  BY dbo.tbColaboradoresDifCaixa.idEntidade
             HAVING ( dbo.tbColaboradoresDifCaixa.idEntidade =
                      dbo.tbEntidades.Id )
                     OR ( dbo.tbColaboradoresDifCaixa.idEntidade =
                          dbo.tbEntidades.Id )
                     OR ( dbo.tbColaboradoresDifCaixa.idEntidade =
                          dbo.tbEntidades.Id )) AS   SaldoQuebradeCaixa
           ,dbo.tbPostos.RzSocial   AS Posto
           ,tbEntidades_2.RzSocial  AS NomeContador
           ,tbEntidades_2.CNPJ AS DocumentoContador
    FROM   dbo.tbFuncs  with (nolock)
                      INNER JOIN dbo.tbEntidades  with (nolock)
                              ON dbo.tbFuncs.IdEntidade = dbo.tbEntidades.Id
                      INNER JOIN dbo.tbPostos  with (nolock)
                              ON dbo.tbFuncs.IdPosto = dbo.tbPostos.Id
                      INNER JOIN dbo.tbEntidades AS tbEntidades_2  with (nolock)
                              ON dbo.tbPostos.IdContador = tbEntidades_2.Id
					  INNER JOIN tbFuncs as tbFuncs_1 ON tbFuncs_1.IdPosto = dbo.tbPostos.Id
    WHERE  ( dbo.tbFuncs.IdPosto = @pIDPosto OR @pIDPosto IS NULL )
       AND ( dbo.tbFuncs.IdPosto <> (SELECT Id FROM tbPostos WHERE NomeUsual = 'Central') 
	   AND ( dbo.tbEntidades.Tipo='FU' )) 



GO
/****** Object:  StoredProcedure [dbo].[rptSaldoContaCorrenteColaboradorNovo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



--rptSaldoContaCorrenteColaborador
CREATE PROCEDURE [dbo].[rptSaldoContaCorrenteColaboradorNovo]
@pIdposto UNIQUEIDENTIFIER
,@pData   AS SMALLDATETIME
AS
    IF @pIDPosto = dbo.GuidEmpty()
      BEGIN
          SET @pIDPosto = NULL
      END

    SELECT dbo.tbFuncs.IdPosto
           ,dbo.tbFuncs.IdEntidade
           ,dbo.tbEntidades.RzSocial
            AS Colaborador
           ,dbo.tbEntidades.CNPJ
           ,ISNULL(dbo.tbFuncs.Salario, 0)
            + ISNULL(dbo.tbFuncs.QCaixa, 0)
            + ISNULL(dbo.tbFuncs.PercPericulosidade, 0)
            AS Salário
           ,(SELECT ISNULL(SUM(CASE idTipo
                                 WHEN 'RC' THEN Valor
                                 WHEN 'AR' THEN Valor * -1
                               END), 0) AS Valor
             FROM   dbo.tbContasPagarReceber with (nolock)
             WHERE  ( idEntidade = dbo.tbEntidades.Id )
                AND ( idTipo = 'AR' )
                 OR ( idEntidade = dbo.tbEntidades.Id )
                    AND ( idTipo = 'RC' ))
            AS SaldoContaCorrente
           ,(SELECT SUM(dbo.tbColaboradoresDifCaixa.valor) AS SaldoDevedor
             FROM   dbo.tbColaboradoresDifCaixa with (nolock)
                    INNER JOIN dbo.tbCaixa with (nolock)
                            ON dbo.tbColaboradoresDifCaixa.idCaixa =
                               dbo.tbCaixa.Id
             WHERE  ( dbo.tbColaboradoresDifCaixa.Tipo = 'C' )
                AND ( dbo.tbCaixa.Dia <= @pData )
                 OR ( dbo.tbColaboradoresDifCaixa.Tipo = 'D' )
                    AND ( dbo.tbCaixa.Dia <= @pData )
                    AND ( dbo.tbColaboradoresDifCaixa.valor < 0 )
                 OR ( dbo.tbColaboradoresDifCaixa.Tipo = 'E' )
                    AND ( dbo.tbCaixa.Dia <= @pData )
                    AND ( dbo.tbColaboradoresDifCaixa.valor > 0 )
                 OR ( dbo.tbColaboradoresDifCaixa.Tipo = 'L' )
                    AND ( dbo.tbCaixa.Dia <= @pData )
             GROUP  BY dbo.tbColaboradoresDifCaixa.idEntidade
             HAVING ( dbo.tbColaboradoresDifCaixa.idEntidade =
                      dbo.tbEntidades.Id )
                     OR ( dbo.tbColaboradoresDifCaixa.idEntidade =
                          dbo.tbEntidades.Id )
                     OR ( dbo.tbColaboradoresDifCaixa.idEntidade =
                          dbo.tbEntidades.Id )) AS
            SaldoQuebradeCaixa
           ,dbo.tbPostos.RzSocial
            AS Posto
           ,tbEntidades_1.RzSocial
            AS NomeGerente
           ,tbEntidades_1.CNPJ
            AS CPFGerente
           ,tbEntidades_2.RzSocial
            AS NomeContador
           ,tbEntidades_2.CNPJ
            AS DocumentoContador
    FROM   dbo.tbEntidades AS tbEntidades_1  with (nolock)
           INNER JOIN dbo.tbFuncs AS tbFuncs_1  with (nolock)
                   ON tbEntidades_1.Id = tbFuncs_1.IdEntidade
           INNER JOIN dbo.tbFuncs  with (nolock)
                      INNER JOIN dbo.tbEntidades  with (nolock)
                              ON dbo.tbFuncs.IdEntidade = dbo.tbEntidades.Id
                      INNER JOIN dbo.tbPostos  with (nolock)
                              ON dbo.tbFuncs.IdPosto = dbo.tbPostos.Id
                      INNER JOIN dbo.tbEntidades AS tbEntidades_2  with (nolock)
                              ON dbo.tbPostos.IdContador =
                                 tbEntidades_2.Id
                   ON tbFuncs_1.IdPosto = dbo.tbPostos.Id
    WHERE  ( dbo.tbFuncs.IdPosto = @pIDPosto OR @pIDPosto IS NULL )
       AND ( dbo.tbFuncs.IdPosto <> (SELECT Id FROM tbPostos WHERE NomeUsual = 'Central') ) 
       AND ( tbFuncs_1.Administrativa = 1 ) 


GO
/****** Object:  StoredProcedure [dbo].[rptSeguroDeVida]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptSeguroDeVida
CREATE PROCEDURE [dbo].[rptSeguroDeVida] @pIdposto      UNIQUEIDENTIFIER
                                        ,@pColaborador UNIQUEIDENTIFIER
AS
    IF @pIDPosto = dbo.GuidEmpty()
      BEGIN
          SET @pIDPosto = NULL
      END

    IF @pColaborador = dbo.GuidEmpty()
      BEGIN
          SET @pColaborador = NULL
      END
    
    SELECT dbo.tbPostos.Id        AS IDPosto
           ,dbo.tbEntidades.RzSocial
           ,dbo.tbEntidades.CNPJ
           ,dbo.tbEntidades.DtNascFund
           ,dbo.tbEntidades.dtCadastro
           ,dbo.tbFuncs.EstadoCivil
           ,dbo.tbFuncs.Conjuge
           ,dbo.tbPostos.RzSocial AS Posto
           ,dbo.tbPostos.CNPJ     AS CNPJPosto
           ,dbo.tbFuncs.Folguista
           ,dbo.tbFuncs.Gerente
           ,dbo.tbFuncs.Frentista
           ,dbo.tbFuncs.Administrativa
           ,dbo.tbFuncs.FrentistaCaixa
           ,dbo.tbFuncs.FrentistaCaixaNoturno
           ,dbo.tbFuncs.Marketing
           ,dbo.tbFuncs.Vendas
           ,dbo.tbFuncs.Atendimento
           ,dbo.tbEntidades.Endereco
           ,dbo.tbEntidades.Bairro
           ,dbo.tbEntidades.Municipio
           ,dbo.tbEntidades.UF
           ,dbo.tbEntidades.CEP
    FROM   dbo.tbEntidades with (nolock)
           INNER JOIN dbo.tbFuncs with (nolock)
                   ON dbo.tbEntidades.Id = dbo.tbFuncs.IdEntidade
           INNER JOIN dbo.tbPostos with (nolock)
                   ON dbo.tbFuncs.IdPosto = dbo.tbPostos.Id
    WHERE  ( dbo.tbPostos.Id = @pIDPosto OR @pIDPosto IS NULL )
       AND ( dbo.tbPostos.Ativo = 1 )
       AND ( dbo.tbEntidades.Tipo = 'FU' )
       AND ( dbo.tbEntidades.Id = @pColaborador OR @pColaborador IS NULL )
    ORDER  BY dbo.tbEntidades.RzSocial 

GO
/****** Object:  StoredProcedure [dbo].[rptVendas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptVendas
CREATE PROCEDURE [dbo].[rptVendas] @pIDEntidade  UNIQUEIDENTIFIER
                                  ,@pDataINI    SMALLDATETIME
                                  ,@pDataFIM    SMALLDATETIME
                                  ,@pLocal      NVARCHAR(100) = NULL
                                  ,@pAutorizado NVARCHAR(100) = NULL
                                  ,@pPlaca      NVARCHAR(10) = NULL
AS
    SELECT tbContasPagarReceber.Id
           ,tbEntidades.RzSocial                      AS NomeUsual
           ,tbEntidades.Limite
           ,tbEntidades.DiaFechamento
           ,tbEntidades.Tolerancia
           ,tbEntidades.CartaFrete
           ,tbEntidades.Cheque3
           ,tbEntidades.Prazo
           ,tbEntidades.PagaChequePrazo
           ,tbContasPagarReceber.idVenda
           ,tbContasPagarReceber.IdTipoDocto
           ,tbContasPagarReceber.Data
           ,tbContasPagarReceber.InfoAdic
           ,tbContasPagarReceber.Autorizado
           ,tbContasPagarReceber.Placa
           ,tbContasPagarReceber.Local
           ,CASE dbo.tbContasPagarReceber.idTipo
              WHEN 'AR' THEN Valor * -1
              WHEN 'RC' THEN Valor
            END                                       AS valor
           ,tbContasPagarReceber.idTipo
           ,tbContasPagarReceber.DataVencto
           ,tbEntidades.idPostoCadastro
           ,tbPostos.NomeUsual                        AS Posto
           ,Isnull((SELECT Sum (CASE idTipo
                                  WHEN 'RC' THEN Valor
                                  WHEN 'AR' THEN Valor *- 1
                                END)
                    FROM   tbContasPagarReceber with (nolock)
                    WHERE  idEntidade = @pIDEntidade
                       AND ( idTipo = 'AR'
                              OR IDTIPO = 'RC' )), 0) AS SaldoContaCorrente
           ,dbo.tbEntidades.ProxFechamento
           ,dbo.tbContasPagarReceber.NumDocto
           ,Isnull((SELECT Sum (CASE idTipo
                                  WHEN 'RC' THEN Valor
                                  WHEN 'AR' THEN Valor *- 1
                                END)
                    FROM   tbContasPagarReceber with (nolock)
                    WHERE  idEntidade = @pIDEntidade
                       AND ( idTipo = 'AR'
                              OR IDTIPO = 'RC' )
                       AND data < @pDataINI), 0)      AS SaldoContaAnterior
           ,Isnull((SELECT Sum (CASE idTipo
                                  WHEN 'RC' THEN Valor
                                  WHEN 'AR' THEN Valor *- 1
                                END)
                    FROM   tbContasPagarReceber with (nolock)
                    WHERE  idEntidade = @pIDEntidade
                       AND ( idTipo = 'AR'
                              OR IDTIPO = 'RC' )), 0) AS SaldoTotal
           ,dbo.tbContasBancarias.Id
           ,dbo.tbContasBancarias.Titular
           ,dbo.tbContasBancarias.Banco
           ,dbo.tbContasBancarias.Agencia
           ,dbo.tbContasBancarias.Conta
           ,dbo.tbContasBancarias.Ativo
           ,dbo.tbPostos.CNPJ
    FROM   tbContasPagarReceber with (nolock)
           INNER JOIN tbEntidades with (nolock)
                   ON tbContasPagarReceber.idEntidade = tbEntidades.Id
           INNER JOIN tbPostos with (nolock)
                   ON tbContasPagarReceber.idPosto = tbPostos.Id
           INNER JOIN dbo.tbContasBancarias with (nolock)
                   ON dbo.tbEntidades.IdPostoCadastro =
                      dbo.tbContasBancarias.idPosto
    WHERE  ( tbEntidades.Id = @pIDEntidade )
       AND ( tbContasPagarReceber.idTipo = 'AR' )
       AND ( tbContasPagarReceber.Data BETWEEN @pDataINI AND @pDataFIM )
       AND ( idTipoDocto NOT IN( 'MU', 'JU', 'CJ', 'DE',
                                 'DF', 'LM' ) )
       AND ( tbContasPagarReceber.Local LIKE '%' + @pLocal + '%' )
       AND ( tbContasPagarReceber.Placa LIKE '%' + @pPlaca + '%' )
       AND ( tbContasPagarReceber.Autorizado LIKE '%' + @pAutorizado + '%' )
       AND dbo.tbContasBancarias.ativo = 1
    ORDER  BY tbContasPagarReceber.data 

GO
/****** Object:  StoredProcedure [dbo].[rptVendasDiariaGeral]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptVendasDiariaGeral
CREATE PROCEDURE [dbo].[rptVendasDiariaGeral] @pIDpostoINI  UNIQUEIDENTIFIER
                                             ,@pIDPostoFIM UNIQUEIDENTIFIER
                                             ,@pDataINI    SMALLDATETIME
                                             ,@pDataFIM    SMALLDATETIME
AS
    SELECT dbo.viewVendasDiariaGeral.idPosto
           ,dbo.viewVendasDiariaGeral.Posto
           ,dbo.viewVendasDiariaGeral.Data            AS Dia
           ,SUM(dbo.viewVendasDiariaGeral.Quantidade) AS Quantidade
           ,AVG(dbo.viewVendasDiariaGeral.PrecoVenda) AS PrecoVenda
           ,SUM(dbo.viewVendasDiariaGeral.Total)      AS Total
           ,dbo.viewVendasDiariaGeral.idProduto
           ,dbo.viewVendasDiariaGeral.Descricao
           ,dbo.viewVendasDiariaGeral.ordem
           ,dbo.tbEntidades.RzSocial
           ,dbo.tbEntidades.CNPJ
           ,tbEntidades_1.RzSocial                    AS NomeContador
           ,tbEntidades_1.CNPJ                        AS DocumentoContador
    FROM   dbo.viewVendasDiariaGeral with (nolock)
           INNER JOIN dbo.tbFuncs with (nolock)
                   ON dbo.viewVendasDiariaGeral.idPosto = dbo.tbFuncs.IdPosto
           INNER JOIN dbo.tbEntidades with (nolock)
                   ON dbo.tbFuncs.IdEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbPostos with (nolock)
                   ON dbo.viewVendasDiariaGeral.idPosto = dbo.tbPostos.Id
           INNER JOIN dbo.tbEntidades AS tbEntidades_1 with (nolock)
                   ON dbo.tbPostos.IdContador = tbEntidades_1.Id
    WHERE  ( dbo.tbFuncs.Administrativa = 1 )
    GROUP  BY dbo.viewVendasDiariaGeral.idPosto
              ,dbo.viewVendasDiariaGeral.Posto
              ,dbo.viewVendasDiariaGeral.Data
              ,dbo.viewVendasDiariaGeral.idProduto
              ,dbo.viewVendasDiariaGeral.Descricao
              ,dbo.viewVendasDiariaGeral.ordem
              ,dbo.tbEntidades.RzSocial
              ,dbo.tbEntidades.CNPJ
              ,tbEntidades_1.RzSocial
              ,tbEntidades_1.CNPJ
    HAVING ( dbo.viewVendasDiariaGeral.Data BETWEEN @pDataINI AND @pDataFIM )
           AND ( dbo.viewVendasDiariaGeral.idPosto BETWEEN
                 @pIDPostoINI AND @pIDPostoFIM )
    UNION
    SELECT dbo.viewVendasDiariaGeralConv.idPosto
           ,dbo.viewVendasDiariaGeralConv.Posto
           ,dbo.viewVendasDiariaGeralConv.Data            AS Dia
           ,SUM(dbo.viewVendasDiariaGeralConv.Quantidade) AS Quantidade
           ,SUM(dbo.viewVendasDiariaGeralConv.PrecoVenda) AS PrecoVenda
           ,SUM(dbo.viewVendasDiariaGeralConv.Total)      AS Total
           ,'998'                                         AS IDProduto
           ,'Conveniencia'                                AS Descricao
           ,dbo.viewVendasDiariaGeralConv.Ordem
           ,dbo.tbEntidades.RzSocial
           ,dbo.tbEntidades.CNPJ
           ,tbEntidades_1.RzSocial                        AS NomeContador
           ,tbEntidades_1.CNPJ                            AS DocumentoContador
    FROM   dbo.tbEntidades with (nolock)
           INNER JOIN dbo.tbFuncs with (nolock)
                   ON dbo.tbEntidades.Id = dbo.tbFuncs.IdEntidade
           INNER JOIN dbo.viewVendasDiariaGeralConv with (nolock)
                   ON dbo.tbFuncs.IdPosto =
                      dbo.viewVendasDiariaGeralConv.idPosto
           INNER JOIN dbo.tbPostos with (nolock)
                   ON dbo.tbFuncs.IdPosto = dbo.tbPostos.Id
           INNER JOIN dbo.tbEntidades AS tbEntidades_1 with (nolock)
                   ON dbo.tbPostos.IdContador = tbEntidades_1.Id
    WHERE  ( dbo.tbFuncs.Administrativa = 1 )
    GROUP  BY dbo.viewVendasDiariaGeralConv.idPosto
              ,dbo.viewVendasDiariaGeralConv.Posto
              ,dbo.viewVendasDiariaGeralConv.Data
              ,dbo.viewVendasDiariaGeralConv.IDProduto
              ,dbo.viewVendasDiariaGeralConv.Descricao
              ,dbo.viewVendasDiariaGeralConv.Ordem
              ,dbo.tbEntidades.RzSocial
              ,dbo.tbEntidades.CNPJ
              ,tbEntidades_1.RzSocial
              ,tbEntidades_1.CNPJ
    HAVING ( dbo.viewVendasDiariaGeralConv.Data BETWEEN @pDataINI AND @pDataFIM
           )
           AND ( dbo.viewVendasDiariaGeralConv.idPosto BETWEEN
                 @pIDPostoINI AND @pIDPostoFIM )
    UNION
    SELECT dbo.viewVendasDiariaGeralLub.idPosto
           ,dbo.viewVendasDiariaGeralLub.Posto
           ,dbo.viewVendasDiariaGeralLub.Data            AS Dia
           ,SUM(dbo.viewVendasDiariaGeralLub.Quantidade) AS Quantidade
           ,SUM(dbo.viewVendasDiariaGeralLub.PrecoVenda) AS PrecoVenda
           ,SUM(dbo.viewVendasDiariaGeralLub.Total)      AS Total
           ,'999'                                        AS IDProduto
           ,'Lubrificante'                               AS Descricao
           ,dbo.viewVendasDiariaGeralLub.Ordem
           ,dbo.tbEntidades.RzSocial
           ,dbo.tbEntidades.CNPJ
           ,tbEntidades_1.RzSocial                       AS NomeContador
           ,tbEntidades_1.CNPJ                           AS DocumentoContador
    FROM   dbo.tbEntidades with (nolock)
           INNER JOIN dbo.tbFuncs with (nolock)
                   ON dbo.tbEntidades.Id = dbo.tbFuncs.IdEntidade
           INNER JOIN dbo.viewVendasDiariaGeralLub with (nolock)
                   ON dbo.tbFuncs.IdPosto = dbo.viewVendasDiariaGeralLub.idPosto
           INNER JOIN dbo.tbPostos with (nolock)
                   ON dbo.tbFuncs.IdPosto = dbo.tbPostos.Id
           INNER JOIN dbo.tbEntidades AS tbEntidades_1 with (nolock)
                   ON dbo.tbPostos.IdContador = tbEntidades_1.Id
    WHERE  ( dbo.tbFuncs.Administrativa = 1 )
    GROUP  BY dbo.viewVendasDiariaGeralLub.idPosto
              ,dbo.viewVendasDiariaGeralLub.Posto
              ,dbo.viewVendasDiariaGeralLub.Data
              ,dbo.viewVendasDiariaGeralLub.IDProduto
              ,dbo.viewVendasDiariaGeralLub.Descricao
              ,dbo.viewVendasDiariaGeralLub.Ordem
              ,dbo.tbEntidades.RzSocial
              ,dbo.tbEntidades.CNPJ
              ,tbEntidades_1.RzSocial
              ,tbEntidades_1.CNPJ
    HAVING ( dbo.viewVendasDiariaGeralLub.Data BETWEEN @pDataINI AND @pDataFIM )
           AND ( dbo.viewVendasDiariaGeralLub.idPosto BETWEEN
                 @pIDPostoINI AND @pIDPostoFIM
               )

GO
/****** Object:  StoredProcedure [dbo].[rptVendasDiariaPorProduto]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptVendasDiariaPorProduto
CREATE PROCEDURE [dbo].[rptVendasDiariaPorProduto]
@pIDpostoINI     UNIQUEIDENTIFIER
,@pIDPostoFIM    UNIQUEIDENTIFIER
,@pDataINI       SMALLDATETIME
,@pDataFIM       SMALLDATETIME
,@pMostraGrafico BIT
AS
  BEGIN
      SET nocount ON;

      SELECT dbo.tbVendas.idPosto
             ,dbo.tbPostos.NomeUsual
              AS
              Posto
             ,dbo.tbCaixa.Dia
             ,SUM(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda)
              AS
              Quantidade
             ,dbo.tbVendasItens.idProduto
             ,dbo.tbProdutos.Descricao
             ,dbo.tbProdutos.ordem
      FROM   dbo.tbVendasItens
             INNER JOIN dbo.tbVendas
                     ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
             INNER JOIN dbo.tbCaixa
                     ON dbo.tbVendas.idCaixa = dbo.tbCaixa.Id
             INNER JOIN dbo.tbPostos
                     ON dbo.tbVendas.idPosto = dbo.tbPostos.Id
             INNER JOIN dbo.tbProdutos
                     ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
      GROUP  BY dbo.tbCaixa.Dia
                ,dbo.tbVendas.idPosto
                ,dbo.tbPostos.NomeUsual
                ,dbo.tbVendasItens.idProduto
                ,dbo.tbProdutos.Descricao
                ,dbo.tbProdutos.ordem
      HAVING ( dbo.tbCaixa.Dia BETWEEN @pDataINI AND @pDataFIM )
             AND ( dbo.tbVendas.idPosto BETWEEN @pIDPostoINI AND @pIDPostoFIM )
      ORDER  BY dbo.tbProdutos.ordem
  END 

GO
/****** Object:  StoredProcedure [dbo].[rptVendasDiariaPorProdutoLitro]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--rptVendasDiariaPorProdutoLitro
CREATE PROCEDURE [dbo].[rptVendasDiariaPorProdutoLitro]
@pIDpostoINI     UNIQUEIDENTIFIER
,@pIDPostoFIM    UNIQUEIDENTIFIER
,@pDataINI       SMALLDATETIME
,@pDataFIM       SMALLDATETIME
,@pMostraGrafico BIT
AS
  BEGIN
      SET nocount ON;

      SELECT dbo.tbVendas.idPosto
             ,dbo.tbPostos.NomeUsual            AS Posto
             ,dbo.tbCaixa.Dia
             ,SUM(dbo.tbVendasItens.Quantidade) AS Quantidade
             ,dbo.tbVendasItens.idProduto
             ,dbo.tbProdutos.Descricao
      FROM   dbo.tbVendasItens with (nolock)
             INNER JOIN dbo.tbVendas with (nolock)
                     ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
             INNER JOIN dbo.tbCaixa with (nolock)
                     ON dbo.tbVendas.idCaixa = dbo.tbCaixa.Id
             INNER JOIN dbo.tbPostos with (nolock)
                     ON dbo.tbVendas.idPosto = dbo.tbPostos.Id
             INNER JOIN dbo.tbProdutos with (nolock)
                     ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
      WHERE  ( dbo.tbProdutos.TipoProd = 'CB' )
      GROUP  BY dbo.tbCaixa.Dia
                ,dbo.tbVendas.idPosto
                ,dbo.tbPostos.NomeUsual
                ,dbo.tbVendasItens.idProduto
                ,dbo.tbProdutos.Descricao
      HAVING ( dbo.tbCaixa.Dia BETWEEN @pDataINI AND @pDataFIM )
             AND ( dbo.tbVendas.idPosto BETWEEN @pIDPostoINI AND @pIDPostoFIM )
      ORDER  BY dbo.tbVendasItens.idProduto
  END 

GO
/****** Object:  StoredProcedure [dbo].[rptVendasItensPorPeriodo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptVendasItensPorPeriodo
CREATE PROCEDURE [dbo].[rptVendasItensPorPeriodo] @pDataInicial SMALLDATETIME
                                                 ,@pDataFinal  SMALLDATETIME
                                                 ,@pIdPosto UNIQUEIDENTIFIER
                                                
                                                 ,@pTipo       VARCHAR(2)
                                                 ,@pLocal   UNIQUEIDENTIFIER
                                                 
AS

   DECLARE @GuidEmpty UNIQUEIDENTIFIER
	SET @GuidEmpty = dbo.GuidEmpty()
   
    SELECT dbo.tbProdutos.TipoProd
           ,dbo.tbVendasItens.idProduto
           ,dbo.tbProdutos.Descricao          AS Produto
           ,SUM(dbo.tbVendasItens.Quantidade) AS Quantidade
           ,dbo.tbLocalEstoque.Descricao      AS LocalEstoque
           ,dbo.tbVendas.idPosto
           ,dbo.tbPostos.NomeUsual
           ,dbo.tbProdutos.TipoAliquota
           ,dbo.tbProdutosPostos.PrecoCusto
           ,dbo.tbProdutosPostos.PrecoVenda
           ,dbo.tbProdutosPostos.Estoque
		   ,dbo.tbTipoProd.DescricaoNova	AS TipoProdutoDescricao
		   ,(select min(PrecoCusto) from tbProdutosPostos where tbProdutosPostos.IdProduto = tbProdutos.Id) As MaisBarato
    FROM   dbo.tbProdutos with (nolock)
           INNER JOIN dbo.tbVendasItens with (nolock)
                   ON dbo.tbProdutos.Id = dbo.tbVendasItens.idProduto
           INNER JOIN dbo.tbCaixa with (nolock)
                      INNER JOIN dbo.tbVendas with (nolock)
                              ON dbo.tbCaixa.Id = dbo.tbVendas.idCaixa
                                 AND dbo.tbCaixa.idPosto = dbo.tbVendas.idPosto
                   ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbProdutosPostos with (nolock)
                   ON dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
                      AND dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
                      AND dbo.tbCaixa.idPosto = dbo.tbProdutosPostos.idPosto
           INNER JOIN dbo.tbLocalEstoque with (nolock)
                   ON dbo.tbProdutosPostos.IdLocal = dbo.tbLocalEstoque.id
           INNER JOIN dbo.tbPostos with (nolock)
                   ON dbo.tbCaixa.idPosto = dbo.tbPostos.Id
			INNER JOIN dbo.tbTipoProd with (nolock)
                   ON tbProdutos.TipoProd = dbo.tbTipoProd.IdTipoProd
    WHERE  ( dbo.tbCaixa.Dia BETWEEN @pDataInicial AND @pDataFinal )
       AND ( @pTipo is null or dbo.tbProdutos.TipoProd = @pTipo )
       AND ( @pLocal is null or @pLocal = @GuidEmpty or dbo.tbProdutosPostos.IdLocal = @pLocal )
    GROUP  BY dbo.tbProdutos.TipoProd
              ,dbo.tbVendasItens.idProduto
              ,dbo.tbProdutos.Descricao
              ,dbo.tbVendas.idPosto
              ,dbo.tbLocalEstoque.Descricao
              ,dbo.tbPostos.NomeUsual
              ,dbo.tbProdutos.TipoAliquota
              ,dbo.tbProdutosPostos.PrecoCusto
              ,dbo.tbProdutosPostos.PrecoVenda
              ,dbo.tbProdutosPostos.Estoque
			  ,dbo.tbTipoProd.DescricaoNova
			  ,tbProdutos.Id
    HAVING ( dbo.tbProdutos.TipoProd = N'LB'
              OR dbo.tbProdutos.TipoProd = N'LC'
			  OR dbo.tbProdutos.TipoProd = N'CB' )
           AND ( @pIdPosto is null  or @pIdPosto = @GuidEmpty or  dbo.tbVendas.idPosto = @pIdPosto)
    ORDER  BY dbo.tbProdutos.TipoProd
              ,dbo.tbProdutos.Descricao  


GO
/****** Object:  StoredProcedure [dbo].[rptVendasItensTributadosPorPeriodo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptVendasItensTributadosPorPeriodo
CREATE PROCEDURE [dbo].[rptVendasItensTributadosPorPeriodo]
@pDataInicial SMALLDATETIME
,@pDataFinal  SMALLDATETIME
,@pIDposto    UNIQUEIDENTIFIER
AS
	DECLARE @GuidEmpty UNIQUEIDENTIFIER
	SET @GuidEmpty = dbo.GuidEmpty()
	
    SELECT CONVERT(SMALLDATETIME, CONVERT(NVARCHAR(10),
                                  dbo.tbVendas.DataMovimento, 103),
           103)                                                              AS
           DataMovimento
           ,dbo.tbProdutos.TipoProd
           ,SUM(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda) AS
            Valor
           ,dbo.tbVendas.idPosto
           ,dbo.tbPostos.NomeUsual
           ,dbo.tbGrupo.Descricao                                            AS
            GrupoProduto
           ,dbo.tbProdutos.TipoAliquota
           ,dbo.tbEntidades.RzSocial                                         AS
            NmeContador
           ,dbo.tbEntidades.CNPJ                                             AS
            DocumentoContador
           ,tbEntidades_1.RzSocial
           ,tbEntidades_1.CNPJ
    FROM   dbo.tbProdutos with (nolock)
           INNER JOIN dbo.tbVendasItens with (nolock)
                   ON dbo.tbProdutos.Id = dbo.tbVendasItens.idProduto
           INNER JOIN dbo.tbCaixa with (nolock)
                      INNER JOIN dbo.tbVendas with (nolock)
                              ON dbo.tbCaixa.Id = dbo.tbVendas.idCaixa
                                 AND dbo.tbCaixa.idPosto = dbo.tbVendas.idPosto
                   ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbProdutosPostos with (nolock)
                   ON dbo.tbProdutos.Id = dbo.tbProdutosPostos.idProduto
                      AND dbo.tbVendas.idPosto = dbo.tbProdutosPostos.idPosto
                      AND dbo.tbCaixa.idPosto = dbo.tbProdutosPostos.idPosto
           INNER JOIN dbo.tbPostos with (nolock)
                   ON dbo.tbCaixa.idPosto = dbo.tbPostos.Id
           INNER JOIN dbo.tbGrupo with (nolock)
                   ON dbo.tbProdutos.IdGrupo = dbo.tbGrupo.id
           INNER JOIN dbo.tbEntidades with (nolock)
                   ON dbo.tbPostos.IdContador = dbo.tbEntidades.Id
           INNER JOIN dbo.tbFuncs with (nolock)
                   ON dbo.tbProdutosPostos.idPosto = dbo.tbFuncs.IdPosto
           INNER JOIN dbo.tbEntidades AS tbEntidades_1 with (nolock)
                   ON dbo.tbFuncs.IdEntidade = tbEntidades_1.Id
    WHERE  ( CONVERT(SMALLDATETIME, CONVERT(NVARCHAR(10),
                                    dbo.tbVendas.DataMovimento, 103),
             103) BETWEEN @pDataInicial AND @pDataFinal )
       AND ( dbo.tbFuncs.Administrativa = 1 )
    GROUP  BY CONVERT(SMALLDATETIME, CONVERT(NVARCHAR(10),
                                     dbo.tbVendas.DataMovimento, 103),
              103)
              ,dbo.tbProdutos.TipoProd
              ,dbo.tbVendas.idPosto
              ,dbo.tbPostos.NomeUsual
              ,dbo.tbGrupo.Descricao
              ,dbo.tbProdutos.TipoAliquota
              ,dbo.tbEntidades.RzSocial
              ,dbo.tbEntidades.CNPJ
              ,tbEntidades_1.RzSocial
              ,tbEntidades_1.CNPJ
    HAVING ( dbo.tbProdutos.TipoProd = N'LB'
              OR dbo.tbProdutos.TipoProd = N'LC' )
           AND ( dbo.tbVendas.idPosto = @pIDposto OR @pIDposto = @GuidEmpty )
    ORDER  BY dbo.tbProdutos.TipoProd 

GO
/****** Object:  StoredProcedure [dbo].[rptVendasLubrificante]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptVendasLubrificante
CREATE PROCEDURE [dbo].[rptVendasLubrificante] @pIdposto  UNIQUEIDENTIFIER
                                              ,@pDataINI SMALLDATETIME
                                              ,@pDataFim SMALLDATETIME
AS
    IF @pIdposto = dbo.GuidEmpty()
      BEGIN
          SET @pIdPosto = NULL
      END
    
    SELECT SUM(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda) AS
           Valor
           ,dbo.tbEntidades.NomeUsual                                       AS
            Entidade
           ,dbo.tbPostos.NomeUsual                                          AS
            Posto
    FROM   dbo.tbCaixa with (nolock)
           INNER JOIN dbo.tbVendas with (nolock)
                   ON dbo.tbCaixa.Id = dbo.tbVendas.idCaixa
           INNER JOIN dbo.tbVendasItens with (nolock)
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos with (nolock)
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbEntidades with (nolock)
                   ON dbo.tbVendas.IDVendedor = dbo.tbEntidades.Id
           INNER JOIN dbo.tbPostos with (nolock)
                   ON dbo.tbCaixa.idPosto = dbo.tbPostos.Id
    WHERE  ( dbo.tbVendas.Data BETWEEN @pDataIni AND @pDataFim )
       AND ( dbo.tbVendasItens.Cancelado = 0 )
       AND ( dbo.tbProdutos.TipoProd = N'LB' )
       AND ( dbo.tbVendas.idPosto = @pIdPosto OR @pIdPosto IS NULL )
    GROUP  BY dbo.tbEntidades.NomeUsual
              ,dbo.tbPostos.NomeUsual 

GO
/****** Object:  StoredProcedure [dbo].[rptVendasPorReducao]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptVendasPorReducao
CREATE PROCEDURE [dbo].[rptVendasPorReducao] @pIDPosto   UNIQUEIDENTIFIER
                                        ,@pDataINI  SMALLDATETIME
                                        ,@pDataFIM  SMALLDATETIME
AS
	DECLARE @GuidEmpty UNIQUEIDENTIFIER
	SET @GuidEmpty = dbo.GuidEmpty()

    SELECT tbVendas_1.DataMovimento
           ,tbEntidades.RzSocial                 AS Contabilidade
           ,tbEntidades.CNPJ                     AS DocumentoContabilidade
           ,tbEntidades_1.RzSocial               AS Administrativo
           ,tbEntidades_1.CNPJ                   AS DocumentoAdministrativo
           ,tbPostos.NomeUsual                   AS Posto
           ,(SELECT SUM(tbVendasItens.Quantidade * CASE
                        ( tbVendasItens.PrecoESpecial )
                                                     WHEN 0 THEN
                                                     tbVendasItens.PrecoVenda
                                                     ELSE
                        tbVendasItens.PrecoEspecial
                                                   END) AS Expr1
             FROM   tbVendas with (nolock) 
                    INNER JOIN tbVendasItens with (nolock) 
                            ON tbVendas.Id = tbVendasItens.idVenda
                    INNER JOIN tbProdutos with (nolock) 
                            ON tbVendasItens.IdProduto = tbProdutos.Id
             WHERE  ( tbProdutos.Descricao = 'Gasolina' )
                AND ( tbVendas.idPosto = tbVendas_1.idPosto )
                AND ( tbVendas.DataMovimento = tbVendas_1.DataMovimento )
                AND ( tbVendasItens.cancelado = 0 )
                AND ( tbVendas.Status IS NULL )) AS TotalGasolina
           ,(SELECT SUM(tbVendasItens.Quantidade * CASE
                        ( tbVendasItens.PrecoESpecial )
                                                     WHEN 0 THEN
                                                     tbVendasItens.PrecoVenda
                                                     ELSE
                        tbVendasItens.PrecoEspecial
                                                   END) AS Expr1
             FROM   tbVendas AS tbVendas with (nolock) 
                    INNER JOIN tbVendasItens AS tbVendasItens with (nolock) 
                            ON tbVendas.Id = tbVendasItens.idVenda
                    INNER JOIN tbProdutos with (nolock) 
                            ON tbVendasItens.IdProduto = tbProdutos.Id
             WHERE  ( tbProdutos.Descricao = 'Gasolina aditivada' )
                AND ( tbVendas.idPosto = tbVendas_1.idPosto )
                AND ( tbVendas.DataMovimento = tbVendas_1.DataMovimento )
                AND ( tbVendasItens.cancelado = 0 )
                AND ( tbVendas.Status IS NULL )) AS TotalGasolinaAditivada
           ,(SELECT SUM(tbVendasItens.Quantidade * CASE
                        ( tbVendasItens.PrecoESpecial )
                                                     WHEN 0 THEN
                                                     tbVendasItens.PrecoVenda
                                                     ELSE
                        tbVendasItens.PrecoEspecial
                                                   END) AS Expr1
             FROM   tbVendas AS tbVendas with (nolock) 
                    INNER JOIN tbVendasItens AS tbVendasItens with (nolock) 
                            ON tbVendas.Id = tbVendasItens.idVenda
                    INNER JOIN tbProdutos with (nolock) 
                            ON tbVendasItens.IdProduto = tbProdutos.Id
             WHERE  ( tbProdutos.Descricao = 'Etanol' )
                AND ( tbVendas.idPosto = tbVendas_1.idPosto )
                AND ( tbVendas.DataMovimento = tbVendas_1.DataMovimento )
                AND ( tbVendasItens.cancelado = 0 )
                AND ( tbVendas.Status IS NULL )) AS TotalEtanol
           ,(SELECT SUM(tbVendasItens.Quantidade * CASE
                        ( tbVendasItens.PrecoESpecial )
                                                     WHEN 0 THEN
                                                     tbVendasItens.PrecoVenda
                                                     ELSE
                        tbVendasItens.PrecoEspecial
                                                   END) AS Expr1
             FROM   tbVendas AS tbVendas with (nolock) 
                    INNER JOIN tbVendasItens AS tbVendasItens with (nolock) 
                            ON tbVendas.Id = tbVendasItens.idVenda
                    INNER JOIN tbProdutos with (nolock) 
                            ON tbVendasItens.IdProduto = tbProdutos.Id
             WHERE  ( tbProdutos.Descricao = 'Diesel' )
                AND ( tbVendas.idPosto = tbVendas_1.idPosto )
                AND ( tbVendas.DataMovimento = tbVendas_1.DataMovimento )
                AND ( tbVendasItens.cancelado = 0 )
                AND ( tbVendas.Status IS NULL )) AS TotalDiesel
           ,(SELECT SUM(tbVendasItens.Quantidade * CASE
                        ( tbVendasItens.PrecoESpecial )
                                                     WHEN 0 THEN
                                                     tbVendasItens.PrecoVenda
                                                     ELSE
                        tbVendasItens.PrecoEspecial
                                                   END) AS Expr1
             FROM   tbVendas AS tbVendas with (nolock) 
                    INNER JOIN tbVendasItens AS tbVendasItens with (nolock) 
                            ON tbVendas.Id = tbVendasItens.idVenda
                    INNER JOIN tbProdutos with (nolock) 
                            ON tbVendasItens.idProduto = tbProdutos.Id
             WHERE  ( tbVendas.idPosto = tbVendas_1.idPosto )
                AND ( tbVendas.DataMovimento = tbVendas_1.DataMovimento )
                AND ( tbProdutos.TipoProd = N'LC' )
                AND ( tbVendasItens.cancelado = 0 )
                AND ( tbVendas.Status IS NULL )) AS TotalConveniencia
           ,(SELECT SUM(tbVendasItens.Quantidade * CASE
                        ( tbVendasItens.PrecoESpecial )
                                                     WHEN 0 THEN
                                                     tbVendasItens.PrecoVenda
                                                     ELSE
                        tbVendasItens.PrecoEspecial
                                                   END) AS Expr1
             FROM   tbVendas AS tbVendas with (nolock) 
                    INNER JOIN tbVendasItens AS tbVendasItens with (nolock) 
                            ON tbVendas.Id = tbVendasItens.idVenda
                    INNER JOIN tbProdutos AS tbProdutos with (nolock) 
                            ON tbVendasItens.idProduto = tbProdutos.Id
             WHERE  ( tbVendas.idPosto = tbVendas_1.idPosto )
                AND ( tbVendas.DataMovimento = tbVendas_1.DataMovimento )
                AND ( tbProdutos.TipoProd = N'LB' )
                AND ( tbVendasItens.cancelado = 0 )
                AND ( tbVendas.Status IS NULL )) AS TotalLubrificante
    FROM   tbVendas AS tbVendas_1 with (nolock) 
           INNER JOIN tbVendasItens AS tbVendasItens_1 with (nolock) 
                   ON tbVendas_1.Id = tbVendasItens_1.idVenda
           INNER JOIN tbPostos with (nolock) 
                   ON tbVendas_1.idPosto = tbPostos.Id
           INNER JOIN tbEntidades with (nolock) 
                   ON tbPostos.IdContador = tbEntidades.Id
           INNER JOIN tbFuncs with (nolock) 
                   ON tbPostos.Id = tbFuncs.IdPosto
           INNER JOIN tbEntidades AS tbEntidades_1 with (nolock) 
                   ON tbFuncs.IdEntidade = tbEntidades_1.Id
    WHERE  ( tbVendas_1.idPosto = @pIDPosto OR @pIDPosto = @GuidEmpty )
       AND ( tbVendas_1.DataMovimento BETWEEN @pDataINI AND @pDataFIM )
       AND ( tbFuncs.Administrativa = 1 )
    GROUP  BY tbVendas_1.DataMovimento
              ,tbVendas_1.idPosto
              ,tbEntidades.RzSocial
              ,tbEntidades.CNPJ
              ,tbEntidades_1.RzSocial
              ,tbEntidades_1.CNPJ
              ,tbPostos.NomeUsual
    ORDER  BY tbVendas_1.DataMovimento 

GO
/****** Object:  StoredProcedure [dbo].[rptVerificacaoFechamento]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptVerificacaoFechamento
CREATE PROCEDURE [dbo].[rptVerificacaoFechamento] @pIdposto   UNIQUEIDENTIFIER
                                                 ,@pCaixaIni UNIQUEIDENTIFIER
                                                 ,@pCaixaFim UNIQUEIDENTIFIER
                                                 ,@pData     SMALLDATETIME
AS
	DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)

	SET @diaIni = (SELECT DataAbertura FROM   tbCaixa  with (nolock) WHERE  Id = @pCaixaIni AND IdPosto = @pIdPosto)
	SET @diaFim = (SELECT DataAbertura FROM   tbCaixa  with (nolock) WHERE  Id = @pCaixaFim AND IdPosto = @pIdPosto)

	INSERT INTO @tblCaixas
	SELECT Id FROM tbCaixa  with (nolock) WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto


    DECLARE @ValorRetirado MONEY

    SET @ValorRetirado = Isnull((SELECT Sum(Valor)
                                 FROM   tbRetiradas with (nolock) 
								        INNER JOIN @tblCaixas cx
										        ON tbRetiradas.IdCaixa = cx.IdCaixa
                                 WHERE  idPosto = @pIDPosto),
                         0)

    SELECT
    (SELECT
    (
    ISnull(Sum(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda), 0) )
     FROM   dbo.tbVendas with (nolock) 
            INNER JOIN dbo.tbVendasItens with (nolock) 
                    ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
			INNER JOIN @tblCaixas cx
			        ON dbo.tbVendas.idCaixa = cx.IdCaixa
     WHERE  ( tbVendas.IDposto = @pIDPosto )
        AND ( tbVendasItens.Cancelado = 0 ))
           AS
           TotalVendas
    ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
      FROM   dbo.tbVendas with (nolock) 
             INNER JOIN dbo.tbVendasItensPagamento with (nolock) 
                     ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda
			 INNER JOIN @tblCaixas cx
			         ON dbo.tbVendas.idCaixa = cx.IdCaixa
      WHERE  ( tbVendas.IDposto = @pIDPosto )
         AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CV' ))
     AS
     ChequeAVista
    ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
      FROM   dbo.tbVendas with (nolock) 
             INNER JOIN dbo.tbVendasItensPagamento with (nolock) 
                     ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda
			 INNER JOIN @tblCaixas cx
			         ON dbo.tbVendas.idCaixa = cx.IdCaixa
      WHERE  ( tbVendas.IDposto = @pIDPosto )
         AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CP' ))
     AS
     ChequeAprazo
    ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
      FROM   dbo.tbVendas with (nolock) 
             INNER JOIN dbo.tbVendasItensPagamento with (nolock) 
                     ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda
			 INNER JOIN @tblCaixas cx
			         ON dbo.tbVendas.idCaixa = cx.IdCaixa
      WHERE  ( tbVendas.IDposto = @pIDPosto )
         AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CC' ))
     AS
     CartaoCredito
    ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
      FROM   dbo.tbVendas with (nolock) 
             INNER JOIN dbo.tbVendasItensPagamento with (nolock) 
                     ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda
			 INNER JOIN @tblCaixas cx
			         ON dbo.tbVendas.idCaixa = cx.IdCaixa
      WHERE  ( tbVendas.IDposto = @pIDPosto )
         AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CD' ))
     AS
     CartaoDebito
    ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
      FROM   dbo.tbVendas with (nolock) 
             INNER JOIN dbo.tbVendasItensPagamento with (nolock) 
                     ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda
			 INNER JOIN @tblCaixas cx
			         ON dbo.tbVendas.idCaixa = cx.IdCaixa
      WHERE  ( tbVendas.IDposto = @pIDPosto )
         AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'PR' ))
     AS
     Prazo
    ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
      FROM   dbo.tbVendas with (nolock) 
             INNER JOIN dbo.tbVendasItensPagamento with (nolock) 
                     ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda
			 INNER JOIN @tblCaixas cx
			         ON dbo.tbVendas.idCaixa = cx.IdCaixa
      WHERE  ( tbVendas.IDposto = @pIDPosto )
         AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CF' ))
     AS
     CartaFrete
    ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
      FROM   dbo.tbVendas with (nolock) 
             INNER JOIN dbo.tbVendasItensPagamento with (nolock) 
                     ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda
			 INNER JOIN @tblCaixas cx
			         ON dbo.tbVendas.idCaixa = cx.IdCaixa
      WHERE  ( tbVendas.IDposto = @pIDPosto )
         AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'DI' ))
     AS
     Dinheiro
    ,Isnull((SELECT sum(valor)
             FROM   tbContasPagarReceber with (nolock) 
			        INNER JOIN @tblCaixas cx
			                ON dbo.tbContasPagarReceber.idPedCaixa = cx.IdCaixa
             WHERE  idPosto = @pIDPosto
                AND idTipo = 'RC'
                AND idTipoDocto NOT IN ( 'CC', 'CD', 'DF' )), 0)
     AS
     Recebimentos
    ,Isnull((SELECT SUM(Valor) *- 1
             FROM   dbo.tbContasPagarReceber with (nolock) 
			        INNER JOIN @tblCaixas cx
			                ON dbo.tbContasPagarReceber.idPedCaixa = cx.IdCaixa
             WHERE  ( Despesa = 1 )
                AND ( idPosto = @pIDPosto )), 0)
     AS
     Despesas
    ,ISNULL ((SELECT SUM(tbVendasItens.PrecoEspecial * tbVendasItens.Quantidade)
                      - SUM(
                                      tbVendasItens.PrecoVenda
                                      * tbVendasItens.Quantidade) AS Expr1
              FROM   tbVendas with (nolock) 
                     INNER JOIN tbVendasItens with (nolock) 
                             ON tbVendas.Id = tbVendasItens.idVenda
                     INNER JOIN tbProdutos with (nolock) 
                             ON tbVendasItens.idProduto = tbProdutos.Id
                     INNER JOIN tbProdutosPostos with (nolock) 
                             ON tbVendas.idPosto = tbProdutosPostos.idPosto
                                AND tbVendasItens.idProduto =
                                    tbProdutosPostos.idProduto
                                AND tbProdutos.Id = tbProdutosPostos.idProduto
					 INNER JOIN @tblCaixas cx
			                 ON dbo.tbVendas.idCaixa = cx.IdCaixa
              WHERE  ( tbVendas.idPosto = @pIDPosto )
                 AND ( tbVendasItens.Cancelado = 0 )
                 AND ( tbVendasItens.PrecoEspecial > 0 )), 0)
     AS
     ClienteEspecial
    ,Isnull((SELECT SUM(dbo.tbCartaFrete.ValorAdiantamento) *- 1
             FROM   dbo.tbCartaFrete with (nolock) 
                    INNER JOIN dbo.tbVendas with (nolock) 
                            ON dbo.tbCartaFrete.idVenda = dbo.tbVendas.Id
					INNER JOIN @tblCaixas cx
			                ON dbo.tbVendas.idCaixa = cx.IdCaixa
             WHERE  tbVendas.IDposto = @pIDPosto), 0)
     AS
     TrocoCartaFrete
    ,Isnull((SELECT SUM(dbo.tbCartaFrete.ValorRetorno) *- 1
             FROM   dbo.tbCartaFrete with (nolock) 
			        INNER JOIN @tblCaixas cx
			                ON dbo.tbCartaFrete.idCaixaRetorno = cx.IdCaixa
             WHERE  ( tbCartaFrete.IDposto = @pIDPosto )
             ), 0)
     AS
     CartaFreteRetorno
    ,(SELECT @ValorRetirado)
     AS
     VaorRetirado
    ,Isnull((SELECT Sum (valor)
             FROM   tbColaboradoresDifCaixa with (nolock) 
			        INNER JOIN @tblCaixas cx
			                ON dbo.tbColaboradoresDifCaixa.idCaixa = cx.IdCaixa
             WHERE  ( tbColaboradoresDifCaixa.IDposto = @pIDPosto )
                AND Tipo = 'C'), 0)
     AS
     QuebraCaixa
    ,Isnull((SELECT Sum (valor)
             FROM   tbColaboradoresDifCaixa with (nolock) 
                    INNER JOIN dbo.tbFuncs with (nolock) 
                            ON dbo.tbColaboradoresDifCaixa.idEntidade =
                               dbo.tbFuncs.IdEntidade
					INNER JOIN @tblCaixas cx
							ON dbo.tbColaboradoresDifCaixa.idCaixa = cx.IdCaixa
             WHERE  ( tbColaboradoresDifCaixa.IDposto = @pIDPosto )
                AND Tipo = 'R'
                AND dbo.tbFuncs.Administrativa = 0), 0)
     AS
     Retaguarda
    ,(SELECT tbEntidades.NomeUsual
      FROM   tbEntidades with (nolock) 
             INNER JOIN tbPostos with (nolock) 
                     ON tbEntidades.Id = tbPostos.IdGerenteGeral
      WHERE  tbPostos.Id = @pIDPosto)
     AS
     Gerente 


GO
/****** Object:  StoredProcedure [dbo].[rptVerificacaoFechamentoCartaFrete]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptVerificacaoFechamentoCartaFrete
CREATE PROCEDURE [dbo].[rptVerificacaoFechamentoCartaFrete]
@pIdposto   UNIQUEIDENTIFIER
,@pCaixaIni UNIQUEIDENTIFIER
,@pCaixaFim UNIQUEIDENTIFIER
AS


	DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)

	SET @diaIni = (SELECT DataAbertura FROM   tbCaixa  with (nolock) WHERE  Id = @pCaixaIni AND IdPosto = @pIdPosto)
	SET @diaFim = (SELECT DataAbertura FROM   tbCaixa  with (nolock) WHERE  Id = @pCaixaFim AND IdPosto = @pIdPosto)

	INSERT INTO @tblCaixas
	SELECT Id FROM tbCaixa  with (nolock) WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto

    SELECT dbo.tbVendasItensPagamento.Id
           ,dbo.tbVendasItensPagamento.Valor
           ,dbo.tbEntidades.NomeUsual AS RzSocial
           ,dbo.tbTurno.Descricao     AS Turno
    FROM   dbo.tbVendasItensPagamento with (nolock) 
           INNER JOIN dbo.tbVendas with (nolock) 
                   ON dbo.tbVendasItensPagamento.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbEntidades with (nolock) 
                   ON dbo.tbVendasItensPagamento.IdEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbCaixa with (nolock) 
                   ON dbo.tbVendas.idCaixa = dbo.tbCaixa.Id
           INNER JOIN dbo.tbTurno with (nolock) 
                   ON dbo.tbCaixa.idPosto = dbo.tbTurno.IdPosto
                      AND dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
		   INNER JOIN @tblCaixas cx
				   ON dbo.tbVendas.idCaixa = cx.IdCaixa
    WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'CF' )
       AND ( dbo.tbVendas.idPosto = @pIDPosto )
    ORDER  BY dbo.tbCaixa.TCaixa
              ,dbo.tbEntidades.Id
              ,dbo.tbVendasItensPagamento.Valor 


GO
/****** Object:  StoredProcedure [dbo].[rptVerificacaoFechamentoCartoesCredito]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptVerificacaoFechamentoCartoesCredito
CREATE PROCEDURE [dbo].[rptVerificacaoFechamentoCartoesCredito]
@pIdposto   UNIQUEIDENTIFIER
,@pCaixaIni UNIQUEIDENTIFIER
,@pCaixaFim UNIQUEIDENTIFIER
AS


	DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)

	SET @diaIni = (SELECT DataAbertura FROM   tbCaixa with (nolock) WHERE  Id = @pCaixaIni AND IdPosto = @pIdPosto)
	SET @diaFim = (SELECT DataAbertura FROM   tbCaixa  with (nolock) WHERE  Id = @pCaixaFim AND IdPosto = @pIdPosto)

	INSERT INTO @tblCaixas
	SELECT Id FROM tbCaixa  with (nolock) WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto

    SELECT tbVendasItensPagamento.Id
           ,tbVendasItensPagamento.Valor
           ,tbTurno.Descricao AS Turno
           ,tbEntidades.RzSocial
    FROM   tbVendasItensPagamento with (nolock) 
           INNER JOIN tbVendas with (nolock) 
                   ON tbVendasItensPagamento.idVenda = tbVendas.Id
           INNER JOIN tbCaixa with (nolock) 
                   ON tbVendas.idCaixa = tbCaixa.Id
           INNER JOIN tbTurno with (nolock) 
                   ON tbCaixa.TCaixa = tbTurno.IdTurno
                      AND tbCaixa.idPosto = tbTurno.IdPosto
           INNER JOIN tbEntidades with (nolock) 
                   ON tbVendasItensPagamento.Operadora = tbEntidades.Id
		   INNER JOIN @tblCaixas cx
			       ON dbo.tbVendas.idCaixa = cx.IdCaixa
    WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'CC' )
       AND ( dbo.tbVendas.idPosto = @pIDPosto )
       AND ( tbVendas.Status IS NULL )
    ORDER  BY dbo.tbCaixa.TCaixa
              ,dbo.tbEntidades.Id
              ,dbo.tbVendasItensPagamento.Valor 


GO
/****** Object:  StoredProcedure [dbo].[rptVerificacaoFechamentoCartoesDebito]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptVerificacaoFechamentoCartoesDebito
CREATE PROCEDURE [dbo].[rptVerificacaoFechamentoCartoesDebito]
@pIdposto   UNIQUEIDENTIFIER
,@pCaixaIni UNIQUEIDENTIFIER
,@pCaixaFim UNIQUEIDENTIFIER
AS


	DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)

	SET @diaIni = (SELECT DataAbertura FROM   tbCaixa  with (nolock)WHERE  Id = @pCaixaIni AND IdPosto = @pIdPosto)
	SET @diaFim = (SELECT DataAbertura FROM   tbCaixa   with (nolock)WHERE  Id = @pCaixaFim AND IdPosto = @pIdPosto)

	INSERT INTO @tblCaixas
	SELECT Id FROM tbCaixa    with (nolock)WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto

    SELECT tbVendasItensPagamento.Id
           ,tbVendasItensPagamento.Valor
           ,tbEntidades.RzSocial
           ,tbTurno.Descricao AS Turno
    FROM   tbVendasItensPagamento   with (nolock)
           INNER JOIN tbVendas   with (nolock)
                   ON tbVendasItensPagamento.idVenda = tbVendas.Id
           INNER JOIN tbCaixa   with (nolock)
                   ON tbVendas.idCaixa = tbCaixa.Id
           INNER JOIN tbTurno   with (nolock)
                   ON tbCaixa.idPosto = tbTurno.IdPosto
                      AND tbCaixa.TCaixa = tbTurno.IdTurno
           INNER JOIN tbEntidades   with (nolock)
                   ON tbVendasItensPagamento.Operadora = tbEntidades.Id
		   INNER JOIN @tblCaixas cx
		           ON dbo.tbVendas.idCaixa = cx.IdCaixa
    WHERE  ( tbVendasItensPagamento.TipoPagamento = 'CD' )
       AND ( tbVendas.idPosto = @pIDPosto )
       AND ( tbVendas.Status IS NULL )
    ORDER  BY tbCaixa.TCaixa
              ,tbEntidades.Id
              ,tbVendasItensPagamento.Valor 


GO
/****** Object:  StoredProcedure [dbo].[rptVerificacaoFechamentoChequeAvista]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptVerificacaoFechamentoChequeAvista
CREATE PROCEDURE [dbo].[rptVerificacaoFechamentoChequeAvista]
@pIdposto   UNIQUEIDENTIFIER
,@pCaixaIni UNIQUEIDENTIFIER
,@pCaixaFim UNIQUEIDENTIFIER
AS


	DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)

	SET @diaIni = (SELECT DataAbertura FROM   tbCaixa  with (nolock)WHERE  Id = @pCaixaIni AND IdPosto = @pIdPosto)
	SET @diaFim = (SELECT DataAbertura FROM   tbCaixa  with (nolock)WHERE  Id = @pCaixaFim AND IdPosto = @pIdPosto)

	INSERT INTO @tblCaixas
	SELECT Id FROM tbCaixa  with (nolock)WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto

    SELECT dbo.tbVendasItensPagamento.Id
           ,dbo.tbVendasItensPagamento.Valor
           ,dbo.tbEntidades.NomeUsual             AS RzSocial
           ,dbo.tbVendasItensPagamento.NumDoc
           ,dbo.tbTurno.Descricao                 AS Turno
           ,RTRIM(dbo.tbEntidadeRefBanc.Banco1) + '-'
            + RTRIM(dbo.tbEntidadeRefBanc.Agencia1) + '-'
            + RTRIM(dbo.tbEntidadeRefBanc.Conta1) AS Conta
    FROM   dbo.tbVendasItensPagamento with (nolock)
           INNER JOIN dbo.tbVendas with (nolock)
                   ON dbo.tbVendasItensPagamento.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbEntidades with (nolock)
                   ON dbo.tbVendasItensPagamento.IdEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbCaixa with (nolock)
                   ON dbo.tbVendas.idCaixa = dbo.tbCaixa.Id
           INNER JOIN dbo.tbEntidadeRefBanc with (nolock)
                   ON dbo.tbVendasItensPagamento.ContaBancaria =
                      dbo.tbEntidadeRefBanc.Id
           INNER JOIN dbo.tbTurno with (nolock)
                   ON dbo.tbCaixa.idPosto = dbo.tbTurno.IdPosto
                      AND dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
		   INNER JOIN @tblCaixas cx
			        ON dbo.tbVendas.idCaixa = cx.IdCaixa
    WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'CV' )
       AND ( dbo.tbVendas.idPosto = @pIDPosto )
    ORDER  BY dbo.tbCaixa.TCaixa
              ,dbo.tbEntidades.Id
              ,dbo.tbVendasItensPagamento.Valor 


GO
/****** Object:  StoredProcedure [dbo].[rptVerificacaoFechamentoChequePrazo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptVerificacaoFechamentoChequePrazo
CREATE PROCEDURE [dbo].[rptVerificacaoFechamentoChequePrazo]
@pIdposto   UNIQUEIDENTIFIER
,@pCaixaIni UNIQUEIDENTIFIER
,@pCaixaFim UNIQUEIDENTIFIER
AS


	DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)

	SET @diaIni = (SELECT DataAbertura FROM   tbCaixa  with (nolock) WHERE  Id = @pCaixaIni AND IdPosto = @pIdPosto)
	SET @diaFim = (SELECT DataAbertura FROM   tbCaixa  with (nolock)WHERE  Id = @pCaixaFim AND IdPosto = @pIdPosto)

	INSERT INTO @tblCaixas
	SELECT Id FROM tbCaixa  with (nolock) WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto



    SELECT dbo.tbVendasItensPagamento.Id
           ,dbo.tbVendasItensPagamento.Valor
           ,dbo.tbEntidades.NomeUsual             AS RzSocial
           ,dbo.tbVendasItensPagamento.NumDoc
           ,dbo.tbTurno.Descricao                 AS Turno
           ,RTRIM(dbo.tbEntidadeRefBanc.Banco1) + '-'
            + RTRIM(dbo.tbEntidadeRefBanc.Agencia1) + '-'
            + RTRIM(dbo.tbEntidadeRefBanc.Conta1) AS Conta
    FROM   dbo.tbVendasItensPagamento  with (nolock)
           INNER JOIN dbo.tbVendas  with (nolock)
                   ON dbo.tbVendasItensPagamento.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbEntidades  with (nolock)
                   ON dbo.tbVendasItensPagamento.IdEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbCaixa  with (nolock)
                   ON dbo.tbVendas.idCaixa = dbo.tbCaixa.Id
           INNER JOIN dbo.tbEntidadeRefBanc  with (nolock)
                   ON dbo.tbVendasItensPagamento.ContaBancaria =
                      dbo.tbEntidadeRefBanc.Id
           INNER JOIN dbo.tbTurno  with (nolock)
                   ON dbo.tbCaixa.idPosto = dbo.tbTurno.IdPosto
                      AND dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
		   INNER JOIN @tblCaixas cx
		           ON dbo.tbVendas.idCaixa = cx.IdCaixa
    WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'CP' )
       AND ( dbo.tbVendas.idPosto = @pIDPosto )
    ORDER  BY dbo.tbCaixa.TCaixa
              ,dbo.tbEntidades.Id
              ,dbo.tbVendasItensPagamento.Valor 


GO
/****** Object:  StoredProcedure [dbo].[rptVerificacaoFechamentoChequePre]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptVerificacaoFechamentoChequePre
CREATE PROCEDURE [dbo].[rptVerificacaoFechamentoChequePre]
@pIdposto UNIQUEIDENTIFIER
,@pData   SMALLDATETIME
AS
    SELECT dbo.tbVendasItensPagamento.Id
           ,dbo.tbVendasItensPagamento.DataVencimento
           ,'Banco: '
            + RTRIM(dbo.tbEntidadeRefBanc.Banco1) + ' - '
            + 'Ag: '
            + RTRIM(dbo.tbEntidadeRefBanc.Agencia1)
            + ' - ' + 'C/C: ' + dbo.tbEntidadeRefBanc.Conta1 AS Conta
           ,dbo.tbVendasItensPagamento.NumDoc
           ,dbo.tbVendasItensPagamento.Valor
           ,dbo.tbEntidades.RzSocial
           ,dbo.tbEntidades.Id
    FROM   dbo.tbVendasItensPagamento  with (nolock)
           INNER JOIN dbo.tbDepositoChequePre  with (nolock)
                   ON dbo.tbVendasItensPagamento.Id = dbo.tbDepositoChequePre.IdVendaItemPagamento
           INNER JOIN dbo.tbVendas  with (nolock)
                   ON dbo.tbVendasItensPagamento.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbEntidadeRefBanc  with (nolock)
                   ON dbo.tbVendasItensPagamento.ContaBancaria =
                      dbo.tbEntidadeRefBanc.Id
           INNER JOIN dbo.tbEntidades  with (nolock)
                   ON dbo.tbEntidadeRefBanc.IdEntidade = dbo.tbEntidades.Id
    WHERE  ( dbo.tbDepositoChequePre.Pago = 0 )
       AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CP' )
       AND ( dbo.tbVendasItensPagamento.DataVencimento = @pData )
       AND ( dbo.tbVendas.idPosto = @pIDPosto ) 

GO
/****** Object:  StoredProcedure [dbo].[rptVerificacaoFechamentoDespesas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptVerificacaoFechamentoDespesas
CREATE PROCEDURE [dbo].[rptVerificacaoFechamentoDespesas]
@pIdposto   UNIQUEIDENTIFIER
,@pCaixaIni UNIQUEIDENTIFIER
,@pCaixaFim UNIQUEIDENTIFIER
AS
	DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
	
	SET @diaIni = (SELECT DataAbertura
                    FROM   tbCaixa with (nolock)
                    WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)
    SET @diaFim = (SELECT DataAbertura
                    FROM   tbCaixa with (nolock)
                    WHERE  Id = @pCaixaFIM AND IdPosto = @pIdPosto)
    
    INSERT INTO @tblCaixas
    SELECT Id
    FROM tbCaixa with (nolock)
    WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto
    
    SELECT tbContasPagarReceber.Id
           ,NomeUsual AS rzSocial
           ,Valor
           ,InfoAdic
    FROM   tbContasPagarReceber with (nolock)
           INNER JOIN tbEntidades with (nolock)
		           ON tbEntidades.Id = tbContasPagarReceber.IdEntidade
		   INNER JOIN @tblCaixas cx
			       ON dbo.tbContasPagarReceber.idPedCaixa = cx.IdCaixa
    WHERE  tbEntidades.Id = tbContasPagarReceber.idEntidade
       AND despesa = 1
       AND tbContasPagarReceber.idPosto = @pIDPosto
GO
/****** Object:  StoredProcedure [dbo].[rptVerificacaoFechamentoDinheiro]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptVerificacaoFechamentoDinheiro
CREATE PROCEDURE [dbo].[rptVerificacaoFechamentoDinheiro]
@pIdposto     UNIQUEIDENTIFIER
,@pIDCaixaINI UNIQUEIDENTIFIER
,@pIDCaixaFIM UNIQUEIDENTIFIER
AS
	DECLARE @diaIni DATETIME, @diaFim DATETIME
	SET @diaIni = (SELECT DataFechamento FROM tbCaixa with (nolock) WHERE Id = @pIDCaixaINI)
	SET @diaFim = (SELECT DataFechamento FROM tbCaixa  with (nolock)WHERE Id = @pIDCaixaFIM)

    SELECT SUM(dbo.tbVendasItensPagamento.Valor) AS Expr1
           ,dbo.tbTurno.Descricao                AS Turno
    FROM   dbo.tbVendasItensPagamento with (nolock)
           INNER JOIN dbo.tbVendas with (nolock)
                   ON dbo.tbVendasItensPagamento.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbEntidades with (nolock)
                   ON dbo.tbVendasItensPagamento.IdEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbCaixa with (nolock)
                   ON dbo.tbVendas.idCaixa = dbo.tbCaixa.Id
           INNER JOIN dbo.tbTurno with (nolock)
                   ON dbo.tbCaixa.idPosto = dbo.tbTurno.IdPosto
                      AND dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
    WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'DI' )
       AND ( dbo.tbVendas.idPosto = @pIDPosto )
       AND ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
    GROUP  BY dbo.tbCaixa.TCaixa
              ,dbo.tbEntidades.Id
              ,dbo.tbTurno.Descricao
    ORDER  BY dbo.tbCaixa.TCaixa
              ,dbo.tbEntidades.Id
              ,SUM(dbo.tbVendasItensPagamento.Valor) 

GO
/****** Object:  StoredProcedure [dbo].[rptVerificacaoFechamentoNotasFiscais]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptVerificacaoFechamentoNotasFiscais
CREATE PROCEDURE [dbo].[rptVerificacaoFechamentoNotasFiscais]
@pIdposto   UNIQUEIDENTIFIER
,@pCaixaIni UNIQUEIDENTIFIER
,@pCaixaFim UNIQUEIDENTIFIER
AS
	DECLARE @diaIni DATETIME, @diaFim DATETIME
	SET @diaIni = (SELECT DataFechamento FROM tbCaixa  with (nolock)WHERE Id = @pCaixaIni)
	SET @diaFim = (SELECT DataFechamento FROM tbCaixa  with (nolock)WHERE Id = @pCaixaFim)

    SELECT tbVendasItensPagamento.Id
           ,tbVendasItensPagamento.Valor
           ,tbEntidades.NomeUsual AS RzSocial
           ,CASE dbo.tbCaixa.TCaixa
              WHEN 1 THEN '14 às 22'
              WHEN 2 THEN '22 às 06'
              WHEN 3 THEN '06 às 14'
            END                   AS Turno
           ,CASE dbo.tbVendasItensPagamento.TipoPagamento
              WHEN 'SD' THEN 'Série D'
              WHEN 'M1' THEN 'Modelo 1'
            END                   AS TipoNota
           ,tbVendasItensPagamento.NumDoc
    FROM   tbVendasItensPagamento with (nolock)
           INNER JOIN tbVendas with (nolock)
                   ON tbVendasItensPagamento.idVenda = tbVendas.Id
           INNER JOIN tbEntidades with (nolock)
                   ON tbVendasItensPagamento.IdEntidade = tbEntidades.Id
           INNER JOIN tbCaixa with (nolock)
                   ON tbVendas.idCaixa = tbCaixa.Id
    WHERE  ( tbVendasItensPagamento.TipoPagamento = 'SD'
              OR tbVendasItensPagamento.TipoPagamento = 'M1' )
       AND ( tbVendas.idPosto = @pIDPosto )
       AND ( tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
    ORDER  BY tbCaixa.TCaixa
              ,tbEntidades.Id
              ,tbVendasItensPagamento.Valor 

GO
/****** Object:  StoredProcedure [dbo].[rptVerificacaoFechamentoPrazo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptVerificacaoFechamentoPrazo
CREATE PROCEDURE [dbo].[rptVerificacaoFechamentoPrazo]
@pIdposto     UNIQUEIDENTIFIER
,@pIDCaixaINI UNIQUEIDENTIFIER
,@pIDCaixaFIM UNIQUEIDENTIFIER
AS
	DECLARE @diaIni DATETIME, @diaFim DATETIME
	SET @diaIni = (SELECT DataFechamento FROM tbCaixa  with (nolock)WHERE Id = @pIDCaixaINI)
	SET @diaFim = (SELECT DataFechamento FROM tbCaixa  with (nolock)WHERE Id = @pIDCaixaFIM)
	
    SELECT dbo.tbVendasItensPagamento.Id
           ,dbo.tbVendasItensPagamento.Valor
           ,dbo.tbEntidades.NomeUsual AS RzSocial
           ,dbo.tbTurno.Descricao     AS Turno
    FROM   dbo.tbVendasItensPagamento  with (nolock)
           INNER JOIN dbo.tbVendas  with (nolock)
                   ON dbo.tbVendasItensPagamento.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbEntidades  with (nolock)
                   ON dbo.tbVendasItensPagamento.IdEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbCaixa  with (nolock)
                   ON dbo.tbVendas.idCaixa = dbo.tbCaixa.Id
           INNER JOIN dbo.tbTurno  with (nolock)
                   ON dbo.tbCaixa.idPosto = dbo.tbTurno.IdPosto
                      AND dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
    WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'PR' )
       AND ( dbo.tbVendas.idPosto = @pIDPosto )
       AND ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
       AND ( dbo.tbVendas.Status IS NULL )
    ORDER  BY dbo.tbCaixa.TCaixa
              ,dbo.tbEntidades.Id
              ,dbo.tbVendasItensPagamento.Valor 

GO
/****** Object:  StoredProcedure [dbo].[rptVerificacaoFechamentoRecebimentos]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptVerificacaoFechamentoRecebimentos
CREATE PROCEDURE [dbo].[rptVerificacaoFechamentoRecebimentos]
@pIdposto   UNIQUEIDENTIFIER
,@pCaixaIni UNIQUEIDENTIFIER
,@pCaixaFim UNIQUEIDENTIFIER
AS
	DECLARE @diaIni DATETIME, @diaFim DATETIME
	DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
	
	SET @diaIni = (SELECT DataAbertura
                    FROM   tbCaixa  with (nolock)
                    WHERE  Id = @pCaixaINI AND IdPosto = @pIdPosto)
    SET @diaFim = (SELECT DataAbertura
                    FROM   tbCaixa  with (nolock)
                    WHERE  Id = @pCaixaFIM AND IdPosto = @pIdPosto)
    
    INSERT INTO @tblCaixas
    SELECT Id
    FROM tbCaixa  with (nolock)
    WHERE DataAbertura BETWEEN @diaIni AND @diaFim AND IdPosto = @pIdPosto
    	
    SELECT tbContasPagarReceber.Id
           ,NomeUsual AS rzSocial
           ,Valor     AS valor
    FROM   tbContasPagarReceber  with (nolock)
           INNER JOIN tbEntidades  with (nolock)
		           ON tbEntidades.Id = tbContasPagarReceber.idEntidade
		   INNER JOIN @tblCaixas cx
		           ON dbo.tbContasPagarReceber.idPedCaixa = cx.IdCaixa
    WHERE  idTipo = 'RC'
       AND idTipoDocto NOT IN ( 'CC', 'CD' )
       AND tbContasPagarReceber.idPosto = @pIDPosto

GO
/****** Object:  StoredProcedure [dbo].[rptVerificacaoFechamentoRetiradas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--rptVerificacaoFechamentoRetiradas
CREATE PROCEDURE [dbo].[rptVerificacaoFechamentoRetiradas]
@pIdposto   UNIQUEIDENTIFIER
,@pCaixaIni UNIQUEIDENTIFIER
,@pCaixaFim UNIQUEIDENTIFIER
AS
	DECLARE @diaIni DATETIME, @diaFim DATETIME
	
	SET @diaIni = (SELECT DataFechamento
                    FROM   tbCaixa with (nolock)
                    WHERE  Id = @pCaixaINI)
    SET @diaFim = (SELECT DataFechamento
                    FROM   tbCaixa with (nolock)
                    WHERE  Id = @pCaixaFIM)
                    
    SELECT dbo.tbRetiradas.id
           ,CONVERT(NVARCHAR(5), dbo.tbCaixa.Dia, 103) AS Dia
           ,dbo.tbRetiradas.idCaixa
           ,dbo.tbRetiradas.valor
           ,CASE dbo.tbRetiradas.Especie
              WHEN 'DI' THEN 'Dinheiro'
              WHEN 'CH' THEN 'Cheque'
              WHEN 'MO' THEN 'Moeda'
            END                                        AS Tipo
           ,dbo.tbTurno.Descricao                      AS Turno
    FROM   dbo.tbRetiradas with (nolock)
           INNER JOIN dbo.tbCaixa with (nolock)
                   ON dbo.tbRetiradas.idCaixa = dbo.tbCaixa.Id
           INNER JOIN dbo.tbTurno with (nolock)
                   ON dbo.tbCaixa.idPosto = dbo.tbTurno.IdPosto
                      AND dbo.tbCaixa.TCaixa = dbo.tbTurno.IdTurno
    WHERE  ( dbo.tbRetiradas.idPosto = @pIDPosto )
       AND ( dbo.tbCaixa.DataFechamento BETWEEN @diaIni AND @diaFim )
    ORDER  BY dbo.tbCaixa.TCaixa 

GO
/****** Object:  StoredProcedure [dbo].[SalvaColegasTurno]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

 
CREATE PROCEDURE [dbo].[SalvaColegasTurno]	@pIdcaixa UNIQUEIDENTIFIER, @pIdUsuario UNIQUEIDENTIFIER
AS
	--com a informação do caixa na mão, faz um update com os valores IdEntidade e Dia	
	declare @pId uniqueidentifier
	set @pId=NEWID()
	insert into dbo.tbCaixaTrabalhadores (Id, IdCaixa, IdEntidade) values (@pId, @pIdcaixa, @pIdUsuario)

	Select @pID
GO
/****** Object:  StoredProcedure [dbo].[SalvaDadosReducaoZ]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SalvaDadosReducaoZ
CREATE PROCEDURE [dbo].[SalvaDadosReducaoZ]
@pIDPosto                 UNIQUEIDENTIFIER
,@pIdECF                  UNIQUEIDENTIFIER
,@pMFAdicional            CHAR(1)
,@pModeloECF              NVARCHAR(20)
,@pNumeroUsuario          CHAR(2)
,@pCRZ                    INT
,@pCOO                    INT
,@pCRO                    INT
,@pDataMovimento          SMALLDATETIME
,@pDataEmissao            SMALLDATETIME
,@pVendaBrutaDiaria       MONEY
,@pParametroDescontoISSQN CHAR(1)
,@pTotalizadorGeral       MONEY = 0
AS
    INSERT INTO tbReducao
                (IdPosto
                 ,IDECF
                 ,MFAdicional
                 ,ModeloECF
                 ,NumeroUsuario
                 ,CRZ
                 ,COO
                 ,CRO
                 ,DataMovimento
                 ,DataEmissao
                 ,VendaBrutaDiaria
                 ,ParametroDescontoISSQN
                 ,TotalizadorGeral)
    VALUES      (@pIdPosto
                 ,@pIdECF
                 ,@pMFAdicional
                 ,@pModeloECF
                 ,@pNumeroUsuario
                 ,@pCRZ
                 ,@pCOO
                 ,@pCRO
                 ,@pDataMovimento
                 ,@pDataEmissao
                 ,@pVendaBrutaDiaria
                 ,@pParametroDescontoISSQN
                 ,@pTotalizadorGeral) 
GO
/****** Object:  StoredProcedure [dbo].[SalvaDadosReducaoZTemp]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SalvaDadosReducaoZTemp
CREATE PROCEDURE [dbo].[SalvaDadosReducaoZTemp]
@pIDPosto                 UNIQUEIDENTIFIER
,@pIdECF                  UNIQUEIDENTIFIER
,@pMFAdicional            CHAR(1)
,@pModeloECF              NVARCHAR(20)
,@pNumeroUsuario          CHAR(2)
,@pCRZ                    INT
,@pCOO                    INT
,@pCRO                    INT
,@pDataMovimento          SMALLDATETIME
,@pDataEmissao            SMALLDATETIME
,@pVendaBrutaDiaria       MONEY
,@pParametroDescontoISSQN CHAR(1)
,@pTotalizadorGeral       MONEY = 0
,@pValidacaoReducao       NVARCHAR(200)
,@pCupomFiscalINI         INT
,@pCupomFiscalFIM         INT
AS

declare @id uniqueidentifier

set @id = NEWID()
    INSERT INTO tbReducao
                (id
				,IdPosto
                 ,IDECF
                 ,MFAdicional
                 ,ModeloECF
                 ,NumeroUsuario
                 ,CRZ
                 ,COO
                 ,CRO
                 ,DataMovimento
                 ,DataEmissao
                 ,VendaBrutaDiaria
                 ,ParametroDescontoISSQN
                 ,TotalizadorGeral
                 ,ValidacaoReducao
                 ,CupomInicial
                 ,CupomFinal)
    VALUES      (@id
				 ,@pIdPosto
                 ,@pIdECF
                 ,@pMFAdicional
                 ,@pModeloECF
                 ,@pNumeroUsuario
                 ,@pCRZ
                 ,@pCOO
                 ,@pCRO
                 ,@pDataMovimento
                 ,@pDataEmissao
                 ,@pVendaBrutaDiaria
                 ,@pParametroDescontoISSQN
                 ,@pTotalizadorGeral
                 ,@pValidacaoReducao
                 ,@pCupomFiscalINI
                 ,@pCupomFiscalFIM) 
                 
select @id                 

GO
/****** Object:  StoredProcedure [dbo].[SalvaDocumentosEmitidos]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SalvaDocumentosEmitidos
CREATE PROCEDURE [dbo].[SalvaDocumentosEmitidos]
@pIdposto              UNIQUEIDENTIFIER
,@pCOO                 INT
,@pGNF                 INT
,@pGRG                 INT
,@pCDC                 INT
,@pTipoDocumento       CHAR(2)
,@pDataRodape          SMALLDATETIME
,@pIDECF               UNIQUEIDENTIFIER
,@pValidacaoDocumentos NVARCHAR(200) = NULL
AS

declare @id uniqueidentifier 
set @id = NEWID()

    INSERT tbDocumentosEmitidos
           (id
            ,IdPosto
            ,COO
            ,GNF
            ,GRG
            ,CDC
            ,TipoDocumento
            ,DataRodape
            ,IDECF
            ,ValidacaoDocumentos)
    VALUES(@id
           ,@pIDPosto
           ,@pCOO
           ,@pGNF
           ,@pGRG
           ,@pCDC
           ,@pTipoDocumento
           ,@pDataRodape
           ,@pIDECF
           ,@pValidacaoDocumentos) 
           
select @id           

GO
/****** Object:  StoredProcedure [dbo].[SelecionaAbastecimentos]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SelecionaAbastecimentos
CREATE PROCEDURE [dbo].[SelecionaAbastecimentos]
@pIdposto  UNIQUEIDENTIFIER
,@pDataINI SMALLDATETIME
,@pDataFIM SMALLDATETIME
AS
    SELECT tbAbastecimentos.NumAbastecimento AS Incremento
           ,tbAbastecimentos.Canal
           ,tbAbastecimentos.TotalDinheiro
           ,tbAbastecimentos.TotalLitros
           ,tbAbastecimentos.ppu
           ,tbAbastecimentos.TempoAbastecimento
           ,tbAbastecimentos.Data
           ,tbAbastecimentos.Hora
           ,tbAbastecimentos.Registro
           ,tbAbastecimentos.EncerranteInicial
           ,tbAbastecimentos.Encerrante
           ,tbAbastecimentos.DataHoraEmissao
           ,tbAbastecimentos.COO
           ,tbAbastecimentos.NumeroNota
           ,tbAbastecimentos.Status
           ,tbAbastecimentos.NumTanque       AS Tanque
           ,tbAbastecimentos.NumeroBomba     Bomba
           ,tbAbastecimentos.NumBomba        AS Bico
           ,tbBombas.Id
           ,tbBombas.NumeroBomba
           ,tbBombas.IdTanque
           ,tbProdutos.Descricao
           ,tbAbastecimentos.ValidacaoAbastecimento
           ,tbAbastecimentos.NumeroSerieECF
    FROM   tbAbastecimentos
           INNER JOIN tbBombas
                   ON tbAbastecimentos.IdPosto = tbBombas.IdPosto
                      AND tbAbastecimentos.Canal = tbBombas.Canal
           INNER JOIN tbTanques
                   ON tbAbastecimentos.IdPosto = tbTanques.IdPosto
                      AND tbBombas.IdTanque = tbTanques.Id
           INNER JOIN tbProdutos
                   ON tbTanques.IdProduto = tbProdutos.Id
    WHERE  ( tbAbastecimentos.IdPosto = @pIDPOsto )
       AND ( CONVERT(DATE, tbAbastecimentos.Data, 103) BETWEEN
                 CONVERT(DATE, @pDataINI, 103) AND CONVERT(DATE, @pDataFIM, 103)
           )
    ORDER  BY tbAbastecimentos.NumAbastecimento 
GO
/****** Object:  StoredProcedure [dbo].[SelecionaCaixas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SelecionaCaixas
CREATE PROCEDURE [dbo].[SelecionaCaixas] @pIdposto UNIQUEIDENTIFIER
                                        ,@pDia    SMALLDATETIME
                                        ,@pDiaAnt SMALLDATETIME
AS
    SELECT Id
           ,DataFechamento
    FROM   dbo.tbCaixa
    WHERE  ( NOT ( DataFechamento IS NULL ) )
       AND ( idPosto = @pIDPosto )
       AND ( Dia = @pDiaAnt )
       AND ( TCaixa = 3 )
    UNION
    SELECT Id
           ,DataFechamento
    FROM   dbo.tbCaixa
    WHERE  ( NOT ( DataFechamento IS NULL ) )
       AND ( idPosto = @pIDPosto )
       AND ( Dia = @pDia ) 
GO
/****** Object:  StoredProcedure [dbo].[SelecionaCaixasNovo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SelecionaCaixasNovo] @pIdposto UNIQUEIDENTIFIER
                                            ,@pIdPontoVenda UNIQUEIDENTIFIER
                                            ,@pDia    SMALLDATETIME
                                            ,@pDiaAnt SMALLDATETIME
AS
    DECLARE @NTurno AS INT

    SET @NTurno =(SELECT COUNT(Id)
                  FROM   dbo.tbCaixa
                  WHERE  ( IdPosto = @pIdposto )
				     AND  ( IdPontoVenda = @pIdPontoVenda )
				     AND ( Dia = @pDia))
    
    SELECT Id
           ,DataFechamento
    FROM   dbo.tbCaixa
    WHERE  ( NOT ( DataFechamento IS NULL ) )
	   AND ( idPontoVenda = @pIdPontoVenda )
       AND ( idPosto = @pIDPosto )
       AND ( Dia = @pDiaAnt )
       AND ( TCaixa = @NTurno )
    UNION
    SELECT Id
           ,DataFechamento
    FROM   dbo.tbCaixa
    WHERE  ( NOT ( DataFechamento IS NULL ) )
	   AND ( idPontoVenda = @pIdPontoVenda )
       AND ( idPosto = @pIDPosto )
       AND ( Dia = @pDia ) 
    ORDER BY DataFechamento
GO
/****** Object:  StoredProcedure [dbo].[SelecionaCartaoCaixa]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SelecionaCartaoCaixa
CREATE PROCEDURE [dbo].[SelecionaCartaoCaixa] @pIdPosto    AS UNIQUEIDENTIFIER
                                             ,@pData      AS SMALLDATETIME
                                             ,@pTipo      AS NVARCHAR(2)
                                             ,@pOperadora AS UNIQUEIDENTIFIER
AS
    SELECT SUM(dbo.tbVendasItensPagamento.Valor) AS Valor
    FROM   dbo.tbVendasItensPagamento
           INNER JOIN dbo.tbVendas
                   ON dbo.tbVendasItensPagamento.idVenda = dbo.tbVendas.Id
           INNER JOIN dbo.tbCaixa
                   ON dbo.tbVendas.idCaixa = dbo.tbCaixa.Id
           INNER JOIN dbo.tbOperadoras
                   ON dbo.tbVendasItensPagamento.IdEntidade =
                      dbo.tbOperadoras.idEntidade
    WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = @pTipo )
       AND ( dbo.tbCaixa.Dia = @pData )
       AND ( dbo.tbVendas.idPosto = @pIdPosto )
       AND ( dbo.tbOperadoras.Id = @pOperadora ) 
GO
/****** Object:  StoredProcedure [dbo].[SelecionaCumponsPorData]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SelecionaCumponsPorData
CREATE PROCEDURE [dbo].[SelecionaCumponsPorData] @pDataINI  SMALLDATETIME
                                                ,@pDataFIM SMALLDATETIME
                                                ,@pIdposto UNIQUEIDENTIFIER
                                                ,@pNECF    UNIQUEIDENTIFIER
AS
    SELECT dbo.tbVendas.ContadorCupomFiscal
           ,dbo.tbVendas.Cupom
           ,dbo.tbVendas.Data
           ,dbo.tbVendas.SubTotal
           ,dbo.tbVendas.ValorTotal
           ,dbo.tbVendas.Status
           ,dbo.tbVendas.NomeCliente
           ,dbo.tbvendas.Documentocliente
           ,dbo.tbVendas.NomeCliente
           ,dbo.tbVendas.DocumentoCliente
           ,dbo.tbEcfs.id
           ,dbo.tbEcfs.Modelo
           ,dbo.tbEcfs.MFAdicional
           ,dbo.tbEcfs.NumeroSerie
           ,dbo.tbEcfs.NumeroCaixa
           ,dbo.tbEcfs.ValidacaoECF
           ,dbo.tbVendas.ValidacaoCupom
    FROM   dbo.tbVendas
           INNER JOIN dbo.tbEcfs
                   ON dbo.tbVendas.IdEcf = dbo.tbEcfs.Id
                      AND dbo.tbVendas.idPosto = dbo.tbEcfs.IDPosto
    WHERE  ( dbo.tbVendas.DataMovimento BETWEEN @pDataINI AND @pDataFIM )
       AND ( dbo.tbVendas.idPosto = @pIdPOsto )
       AND ( dbo.tbVendas.NotaFiscal IS NULL )
       AND ( dbo.tbVendas.IdEcf = @PNECF )
    ORDER  BY dbo.tbVendas.Cupom 

GO
/****** Object:  StoredProcedure [dbo].[SelecionaCuponsPorDataDetalhes]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SelecionaCuponsPorDataDetalhes
CREATE PROCEDURE [dbo].[SelecionaCuponsPorDataDetalhes] @pDataINI   SMALLDATETIME
                                                       ,@pDataFIM  SMALLDATETIME
                                                       ,@pIdposto  UNIQUEIDENTIFIER
                                                       ,@pidECF UNIQUEIDENTIFIER
AS
    SELECT dbo.tbVendasItens.Item
           ,dbo.tbProdutos.CodigoBarras
           ,dbo.tbProdutos.Descricao
           ,dbo.tbVendasItens.Quantidade
           ,dbo.tbVendasItens.ValorItem
           ,dbo.tbVendasItens.ValidacaoCupomItem
           ,dbo.tbProdutos.UnidadeMedida
           ,dbo.tbProdutos.Id
           ,dbo.tbProdutos.TipoProd
           ,dbo.tbVendasItens.PrecoVenda
           ,dbo.tbVendasItens.PrecoEspecial
           ,dbo.tbProdutos.TipoAliquota
           ,dbo.tbProdutos.Aliquota
           ,dbo.tbVendasItens.Cancelado
           ,dbo.tbProdutos.IAT
           ,dbo.tbProdutos.IPPT
           ,dbo.tbVendas.Cupom
           ,dbo.tbVendas.ContadorCupomFiscal
           ,dbo.tbEcfs.MFAdicional
           ,dbo.tbEcfs.NumeroSerie
           ,dbo.tbEcfs.NumeroCaixa
           ,dbo.tbEcfs.Modelo
           ,dbo.tbVendas.Data
           ,dbo.tbEcfs.ValidacaoECF
           ,dbo.tbProdutos.ValidacaoProdutos
           ,dbo.tbVendas.ValorTotal
           ,dbo.tbVendas.Status  AS StatusCupom
           ,tbVendasItens.Status AS StatusItem
           ,dbo.tbVendas.ValidacaoCupom
           ,dbo.tbProdutos.IdGrupo
           ,dbo.tbProdutos.CST
    FROM   dbo.tbVendas
           INNER JOIN dbo.tbVendasItens
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbEcfs
                   ON dbo.tbVendas.IdEcf = dbo.tbEcfs.Id
                      AND dbo.tbVendas.idPosto = dbo.tbEcfs.IDPosto
    WHERE  ( dbo.tbVendas.DataMovimento BETWEEN @pDataINI AND @pDataFIM )
       AND ( dbo.tbVendas.idPosto = @pIdPOsto )
       AND ( dbo.tbVendas.NotaFiscal IS NULL )
       AND ( dbo.tbVendas.idECF = @pIdECF ) 
GO
/****** Object:  StoredProcedure [dbo].[SelecionaCuponsporDataMeioDePagamento]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SelecionaCuponsporDataMeioDePagamento
CREATE PROCEDURE [dbo].[SelecionaCuponsporDataMeioDePagamento]
@pDataINI  SMALLDATETIME
,@pDataFIM SMALLDATETIME
,@pIdposto UNIQUEIDENTIFIER
,@pNECF    UNIQUEIDENTIFIER
AS
    SELECT dbo.tbEcfs.NumeroSerie
           ,dbo.tbEcfs.MFAdicional
           ,dbo.tbEcfs.Modelo
           ,dbo.tbEcfs.NumeroCaixa
           ,dbo.tbVendas.Cupom
           ,dbo.tbVendas.ContadorCupomFiscal
           ,dbo.tbVendas.ValorTotal
           ,dbo.tbVendasItensPagamento.TipoPagamento
           ,dbo.tbVendasItensPagamento.IdEntidade
           ,dbo.tbVendasItensPagamento.Valor
           ,dbo.tbVendas.Status
           ,dbo.tbECFs.ValidacaoECF
           ,dbo.tbVendas.ValidacaoCupom
    FROM   dbo.tbVendas
           INNER JOIN dbo.tbEcfs
                   ON dbo.tbVendas.IdEcf = dbo.tbEcfs.Id
                      AND dbo.tbVendas.idPosto = dbo.tbEcfs.IDPosto
           INNER JOIN dbo.tbVendasItensPagamento
                   ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda
    WHERE  ( dbo.tbVendas.DataMovimento BETWEEN @pDataINI AND @pDataFIM )
       AND ( dbo.tbVendas.idPosto = @pIdPOsto )
       AND ( dbo.tbVendas.NotaFiscal IS NULL )
       AND ( dbo.tbVendas.IdEcf = @PNECF ) 
GO
/****** Object:  StoredProcedure [dbo].[SelecionaCuponsPorDataTributo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SelecionaCuponsPorDataTributo
CREATE PROCEDURE [dbo].[SelecionaCuponsPorDataTributo]
@pIdposto      UNIQUEIDENTIFIER
,@pDataINI     SMALLDATETIME
,@pDataFIM     SMALLDATETIME
,@pNumeroCaixa INT
AS
    SELECT SUM(dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda) AS
           ValorAcumulado
           ,dbo.tbProdutos.TipoAliquota
           ,dbo.tbProdutos.Aliquota
           ,dbo.tbProdutos.CST
    FROM   dbo.tbVendas
           INNER JOIN dbo.tbVendasItens
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbEcfs
                   ON dbo.tbVendas.IdEcf = dbo.tbEcfs.Id
           INNER JOIN dbo.tbProdutos
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbVendas.idPosto = @pIdPosto )
       AND ( dbo.tbVendasItens.Cancelado = 0 )
       AND ( dbo.tbVendas.DataMovimento BETWEEN @pDataINI AND @pDataFIM )
       AND ( dbo.tbVendas.NotaFiscal IS NULL )
       AND ( dbo.tbEcfs.NumeroCaixa = @pNumeroCaixa )
    GROUP  BY dbo.tbProdutos.TipoAliquota
              ,dbo.tbProdutos.Aliquota
              ,dbo.tbProdutos.CST 
GO
/****** Object:  StoredProcedure [dbo].[SelecionaDados60A]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SelecionaDados60A] 
@pIdposto int,
@pDataINI smallDatetime,
@pDataFIM smallDateTime,
@pNumCaixa as int

AS

SELECT        dbo.tbEcfs.NumeroSerie, dbo.tbReducaoDetalhes.IDCRZ, dbo.tbReducaodetalhes.TipoTributo, dbo.tbReducaodetalhes.Indice, dbo.tbReducaodetalhes.ValorAliquota, 
                         dbo.tbReducaodetalhes.ValorAcumulado, dbo.tbReducao.DataMovimento, dbo.tbReducao.ModeloECF, dbo.tbReducaodetalhes.ValidacaoReducaoDetalhe, 
                         dbo.tbReducao.NumeroUsuario, dbo.tbReducaodetalhes.IDECF, dbo.tbEcfs.NumeroCaixa, dbo.tbEcfs.Modelo, dbo.tbEcfs.MFAdicional, dbo.tbEcfs.Marca, 
                         dbo.tbEcfs.Tipo, dbo.tbEcfs.Ativo, dbo.tbEcfs.ValidacaoECF, dbo.tbReducao.ValidacaoReducao, dbo.tbReducao.COO, dbo.tbReducao.CRO, 
                         dbo.tbReducao.DataEmissao, dbo.tbReducao.VendaBrutaDiaria, dbo.tbReducao.ParametroDescontoISSQN, dbo.tbReducao.TotalizadorGeral, tbReducao.CRZ
FROM            dbo.tbReducaodetalhes INNER JOIN
                         dbo.tbReducao ON dbo.tbReducaodetalhes.IdCRZ = dbo.tbReducao.CRZ AND dbo.tbReducaodetalhes.IDECF = dbo.tbReducao.IDECF INNER JOIN
                         dbo.tbEcfs ON dbo.tbReducao.IDECF = dbo.tbEcfs.NumeroCaixa AND dbo.tbReducao.IDPosto = dbo.tbEcfs.IDPosto
WHERE        (dbo.tbReducao.DataMovimento BETWEEN @pDataINI AND @pDataFIM) AND (dbo.tbReducao.IDPosto = @pIdPosto) AND (dbo.tbEcfs.NumeroCaixa = @pNumCaixa) AND(dbo.tbReducaodetalhes.TipoTributo <> 'OPNF') AND (dbo.tbReducaodetalhes.TipoTributo <>'AT')
GO
/****** Object:  StoredProcedure [dbo].[SelecionaDadosReducaoZ]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SelecionaDadosReducaoZ
CREATE PROCEDURE [dbo].[SelecionaDadosReducaoZ] @pIdposto   UNIQUEIDENTIFIER
                                               ,@pDataINI  SMALLDATETIME
                                               ,@pDataFIM  SMALLDATETIME
                                               ,@pNumCaixa AS INT
AS
    SELECT dbo.tbReducao.IDECF
           ,dbo.tbReducao.MFAdicional
           ,dbo.tbReducao.ModeloECF
           ,dbo.tbReducao.ID
           ,dbo.tbReducao.IDPosto
           ,dbo.tbReducao.NumeroUsuario
           ,dbo.tbReducao.CRZ
           ,dbo.tbReducao.COO
           ,dbo.tbReducao.CRO
           ,dbo.tbReducao.DataMovimento
           ,dbo.tbReducao.DataEmissao
           ,dbo.tbReducao.VendaBrutaDiaria
           ,dbo.tbReducao.ParametroDescontoISSQN
           ,dbo.tbEcfs.NumeroSerie
           ,dbo.tbReducao.TotalizadorGeral
           ,dbo.tbReducao.ValidacaoReducao
           ,dbo.tbECFs.ValidacaoECF
           ,dbo.tbECFs.Modelo
           ,dbo.tbReducao.CupomInicial AS CupomFiscalINI
           ,dbo.tbReducao.CupomFinal   AS CupomFiscalFIM
    FROM   dbo.tbReducao
           INNER JOIN dbo.tbEcfs
                   ON dbo.tbReducao.IDPosto = dbo.tbEcfs.IDPosto
                      AND dbo.tbReducao.IDECF = dbo.tbEcfs.Id
    WHERE  ( dbo.tbReducao.DataMovimento BETWEEN @pDAtaINI AND @pDAtaFim )
       AND ( dbo.tbReducao.IDPosto = @pIdPosto )
       AND ( dbo.tbEcfs.NumeroCaixa = @pNumCaixa ) 
GO
/****** Object:  StoredProcedure [dbo].[SelecionaDadosReducaoZDetalhes]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SelecionaDadosReducaoZDetalhes
CREATE PROCEDURE [dbo].[SelecionaDadosReducaoZDetalhes]
@pIdposto   UNIQUEIDENTIFIER
,@pDataINI  SMALLDATETIME
,@pDataFIM  SMALLDATETIME
,@pNumCaixa AS INT
AS
    SELECT dbo.tbEcfs.NumeroSerie
           ,dbo.tbReducaoDetalhes.IDCRZ
           ,dbo.tbReducaodetalhes.TipoTributo
           ,dbo.tbReducaodetalhes.Indice
           ,dbo.tbReducaodetalhes.ValorAliquota
           ,dbo.tbReducaodetalhes.ValorAcumulado
           ,dbo.tbReducao.DataMovimento
           ,dbo.tbReducao.ModeloECF
           ,dbo.tbReducaodetalhes.ValidacaoReducaoDetalhe
           ,dbo.tbReducao.NumeroUsuario
           ,dbo.tbReducaodetalhes.IDECF
           ,dbo.tbEcfs.NumeroCaixa
           ,dbo.tbEcfs.Modelo
           ,dbo.tbEcfs.MFAdicional
           ,dbo.tbEcfs.Marca
           ,dbo.tbEcfs.Tipo
           ,dbo.tbEcfs.Ativo
           ,dbo.tbEcfs.ValidacaoECF
           ,dbo.tbReducao.ValidacaoReducao
           ,dbo.tbReducao.COO
           ,dbo.tbReducao.CRO
           ,dbo.tbReducao.DataEmissao
           ,dbo.tbReducao.VendaBrutaDiaria
           ,dbo.tbReducao.ParametroDescontoISSQN
           ,dbo.tbReducao.TotalizadorGeral
           ,dbo.tbReducao.CRZ
    FROM   dbo.tbReducaodetalhes
           INNER JOIN dbo.tbReducao
                   ON dbo.tbReducaodetalhes.IdCRZ = dbo.tbReducao.CRZ
                      AND dbo.tbReducaodetalhes.IDECF = dbo.tbReducao.IDECF
           INNER JOIN dbo.tbEcfs
                   ON dbo.tbReducao.IDECF = dbo.tbEcfs.Id
                      AND dbo.tbReducao.IDPosto = dbo.tbEcfs.IDPosto
    WHERE  ( dbo.tbReducao.DataMovimento BETWEEN @pDataINI AND @pDataFIM )
       AND ( dbo.tbReducao.IDPosto = @pIdPosto )
       AND ( dbo.tbEcfs.NumeroCaixa = @pNumCaixa ) 
GO
/****** Object:  StoredProcedure [dbo].[SelecionaDadosUltimaReducao]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SelecionaDadosUltimaReducao
CREATE PROCEDURE [dbo].[SelecionaDadosUltimaReducao]
@pIdposto        UNIQUEIDENTIFIER
,@pIdECF         UNIQUEIDENTIFIER
,@pDataMovimento SMALLDATETIME
AS
    SELECT IDECF
           ,IDPosto
           ,CRZ
           ,CRO
           ,VendaBrutaDiaria
           ,DataMovimento
    FROM   tbReducao
    WHERE  ( IDECF = @pIDecf )
       AND ( IDPosto = @pIDPosto )
       AND ( DataMovimento = @pDataMovimento ) 
GO
/****** Object:  StoredProcedure [dbo].[SelecionaDocumentosEmitidos]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SelecionaDocumentosEmitidos
CREATE PROCEDURE [dbo].[SelecionaDocumentosEmitidos] @pIdposto  UNIQUEIDENTIFIER
                                                    ,@pDataINI SMALLDATETIME
                                                    ,@pDataFIM SMALLDATETIME
                                                    ,@pNECF    AS UNIQUEIDENTIFIER
AS
    SELECT dbo.tbDocumentosEmitidos.IDPosto
           ,dbo.tbDocumentosEmitidos.IDECF
           ,dbo.tbDocumentosEmitidos.COO
           ,dbo.tbDocumentosEmitidos.GNF
           ,dbo.tbDocumentosEmitidos.GRG
           ,dbo.tbDocumentosEmitidos.CDC
           ,dbo.tbDocumentosEmitidos.TipoDocumento
           ,dbo.tbDocumentosEmitidos.DataRodape
           ,dbo.tbEcfs.NumeroSerie
           ,dbo.tbEcfs.Modelo
           ,dbo.tbEcfs.MFAdicional
           ,dbo.tbEcfs.NumeroCaixa
           ,dbo.tbECFs.ValidacaoECF
           ,dbo.tbDocumentosEmitidos.ValidacaoDocumentos
    FROM   dbo.tbDocumentosEmitidos
           INNER JOIN dbo.tbEcfs
                   ON dbo.tbDocumentosEmitidos.IDPosto = dbo.tbEcfs.IDPosto
                      AND dbo.tbDocumentosEmitidos.IDECF =
                          dbo.tbEcfs.Id
    WHERE  ( CONVERT(NVARCHAR(10), dbo.tbDocumentosEmitidos.DataRodape, 103)
             BETWEEN
                    CONVERT(
                    NVARCHAR(10), @pDataINI, 103) AND
                    CONVERT(NVARCHAR(10), @pDataFIM, 103)
           )
           AND ( dbo.tbDocumentosEmitidos.IDPosto = @pIdPOsto )
           AND ( dbo.tbDocumentosEmitidos.IDECF = @pNECF ) 
GO
/****** Object:  StoredProcedure [dbo].[SelecionaEntidadeParticipanteSped]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SelecionaEntidadeParticipanteSped
CREATE PROCEDURE [dbo].[SelecionaEntidadeParticipanteSped]
@pIdposto  UNIQUEIDENTIFIER
,@pDataINI SMALLDATETIME
,@pDataFIM SMALLDATETIME
AS
  BEGIN
      SELECT e.[RzSocial]
             ,'1058' AS CodigoPais
             ,e.[CNPJ]
             ,e.[IE]
             ,c.[CodigoIBGE]
             ,e.[Endereco]
             ,e.[Bairro]
      FROM   tbEntidades e
             INNER JOIN tbCidades c
                     ON e.IdCidade = c.Id
      WHERE  CNPJ IN (SELECT DISTINCT [dbo].[FormatarCpfCnpj](
                                      SubString([XML_NFE],
                                             PatIndex(
                                             '%<dest><CNPJ>%',
                                                                  [XML_NFE])
                                             +
                                             12, 14))
                      FROM   [dbo].[tbNotaFiscalEletronica]
                      WHERE  IdPosto = @pIdPosto
                         AND DataEmissao BETWEEN @pDataINI AND @pDataFIM)
  END 
GO
/****** Object:  StoredProcedure [dbo].[SelecionaManutencaoBombas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SelecionaManutencaoBombas
CREATE PROCEDURE [dbo].[SelecionaManutencaoBombas]
@pIdposto      UNIQUEIDENTIFIER
,@pDataInicial DATETIME
,@pDataFinal   DATETIME
AS
    SELECT bomba.Id
           ,bomba.IdPosto
           ,bomba.NumeroBomba
           ,bomba.NumeroBico
           ,bomba.DataSubstituicao
           ,bomba.Motivo
           ,bomba.CNPJEmpresaSubstituicao
           ,bomba.CPFTecnicoSubstituicao
           ,bomba.NumeroLacresRemovidos
           ,bomba.NumeroLacresAplicados
           ,bomba.ValorEncerranteAntesSubstituicao
           ,bomba.ValorEncerranteDepoisSubstituicao
    FROM   tbManutencaoBomba AS bomba
    WHERE  bomba.IdPosto = @pIdPosto
       AND CONVERT(VARCHAR(10), bomba.DataSubstituicao, 103) BETWEEN
           CONVERT(VARCHAR(10), @pDataInicial, 103) AND
               CONVERT(VARCHAR(10), @pDataFinal, 103)
    ORDER  BY bomba.DataSubstituicao 
GO
/****** Object:  StoredProcedure [dbo].[SelecionaMeiosPagamento]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SelecionaMeiosPagamento
CREATE PROCEDURE [dbo].[SelecionaMeiosPagamento] @pIdposto UNIQUEIDENTIFIER
                                                ,@pData   AS NVARCHAR(10)
AS
    SELECT dbo.tbVendasItensPagamento.TipoPagamento
           ,SUM(dbo.tbVendasItensPagamento.Valor)         AS Valor
           ,CONVERT(NVARCHAR(10), dbo.tbVendas.Data, 103) AS Data
    FROM   dbo.tbVendas
           INNER JOIN dbo.tbVendasItensPagamento
                   ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda
    WHERE  ( dbo.tbVendas.idPosto = @pIdPosto )
    GROUP  BY dbo.tbVendasItensPagamento.TipoPagamento
              ,CONVERT(NVARCHAR(10), dbo.tbVendas.Data, 103)
    HAVING ( CONVERT(NVARCHAR(10), dbo.tbVendas.Data, 103) =
                    CONVERT(NVARCHAR(10), @pData, 103) ) 
GO
/****** Object:  StoredProcedure [dbo].[SelecionaNotasFicaisEmitidasPorData]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SelecionaNotasFicaisEmitidasPorData
CREATE PROCEDURE [dbo].[SelecionaNotasFicaisEmitidasPorData]
@pOp       NVARCHAR(10)
,@pIdposto UNIQUEIDENTIFIER
,@pDataINI SMALLDATETIME
,@pDataFIM SMALLDATETIME
AS
    IF @pOp = 'C300'
      BEGIN
          SELECT SUM(dbo.tbNotasFiscaisEmitidas.Valor)   AS ValorTotal
                 ,MIN(dbo.tbNotasFiscaisEmitidas.Numero) AS NumeroINI
                 ,MAX(dbo.tbNotasFiscaisEmitidas.Numero) AS NumeroFIM
                 ,dbo.tbNotasFiscaisEmitidas.Data
          FROM   dbo.tbNotasFiscaisEmitidas
                 INNER JOIN dbo.tbVendas
                         ON dbo.tbNotasFiscaisEmitidas.ID =
                            dbo.tbVendas.IDNotaFiscal
          WHERE  ( dbo.tbNotasFiscaisEmitidas.IDPosto = @pIdPosto )
             AND ( dbo.tbNotasFiscaisEmitidas.Tipo = 'SD' )
             AND ( dbo.tbNotasFiscaisEmitidas.Data BETWEEN
                   @pDataINI AND @pDataFIM )
          GROUP  BY dbo.tbNotasFiscaisEmitidas.Data
      END
    ELSE IF @pOp = 'C350'
      BEGIN
          SELECT dbo.tbNotasFiscaisEmitidas.Numero
                 ,dbo.tbNotasFiscaisEmitidas.Data
                 ,dbo.tbNotasFiscaisEmitidas.Valor
                 ,dbo.tbVendas.IDCliente
                 ,dbo.tbVendas.DocumentoCliente
                 ,dbo.tbVendas.Id
          FROM   dbo.tbNotasFiscaisEmitidas
                 INNER JOIN dbo.tbVendas
                         ON dbo.tbNotasFiscaisEmitidas.ID =
                            dbo.tbVendas.IDNotaFiscal
          WHERE  ( dbo.tbNotasFiscaisEmitidas.IDPosto = @pIdPosto )
             AND ( dbo.tbNotasFiscaisEmitidas.Tipo = 'SD' )
             AND ( dbo.tbNotasFiscaisEmitidas.Data BETWEEN
                   @pDataINI AND @pDataFIM )
          ORDER  BY dbo.tbNotasFiscaisEmitidas.Numero
      END
    ELSE IF @pOp = 'C370'
      BEGIN
          SELECT dbo.tbVendas.Id
                 ,dbo.tbVendasItens.Item
                 ,dbo.tbVendasItens.Quantidade
                 ,dbo.tbVendasItens.PrecoVenda
                 ,dbo.tbProdutos.Id
                 ,dbo.tbVendasItens.Quantidade * dbo.tbVendasItens.PrecoVenda AS
                  ValorItem
                 ,dbo.tbProdutos.UnidadeMedida
          FROM   dbo.tbNotasFiscaisEmitidas
                 INNER JOIN dbo.tbVendas
                         ON dbo.tbNotasFiscaisEmitidas.ID =
                            dbo.tbVendas.IDNotaFiscal
                 INNER JOIN dbo.tbVendasItens
                         ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
                 INNER JOIN dbo.tbProdutos
                         ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
          WHERE  ( dbo.tbNotasFiscaisEmitidas.IDPosto = @pIdPosto )
             AND ( dbo.tbNotasFiscaisEmitidas.Tipo = 'SD' )
             AND ( dbo.tbNotasFiscaisEmitidas.Data BETWEEN
                   @pDataINI AND @pDataFIM )
      END
    ELSE IF @pop = 'C390'
      BEGIN
          SELECT SUM(dbo.tbVendasItens.Quantidade *
                 dbo.tbVendasItens.PrecoVenda) AS
                 ValorAcumulado
                 ,dbo.tbNotasFiscaisEmitidas.CFOP
                 ,dbo.tbProdutos.TipoAliquota
                 ,dbo.tbProdutos.Aliquota
          FROM   dbo.tbVendasItens
                 INNER JOIN dbo.tbVendas
                         ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
                 INNER JOIN dbo.tbNotasFiscaisEmitidas
                         ON dbo.tbVendas.IDNotaFiscal =
                            dbo.tbNotasFiscaisEmitidas.ID
                 INNER JOIN dbo.tbProdutos
                         ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
          WHERE  ( dbo.tbNotasFiscaisEmitidas.IDPosto = @pIdPosto )
             AND ( dbo.tbNotasFiscaisEmitidas.Tipo = 'SD' )
             AND ( dbo.tbNotasFiscaisEmitidas.Data BETWEEN
                   @pDataINI AND @pDataFIM )
          GROUP  BY dbo.tbProdutos.TipoAliquota
                    ,dbo.tbProdutos.Aliquota
                    ,dbo.tbNotasFiscaisEmitidas.CFOP
      END 
GO
/****** Object:  StoredProcedure [dbo].[SelecionaNotasFicaisEmitidasPorDataPorTributo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SelecionaNotasFicaisEmitidasPorDataPorTributo
CREATE PROCEDURE [dbo].[SelecionaNotasFicaisEmitidasPorDataPorTributo]
@pIdposto UNIQUEIDENTIFIER
,@pData   SMALLDATETIME
AS
    SELECT SUM(dbo.tbVendasItens.Quantidade * dbo.tbvendasItens.PrecoVenda) AS
           Valor
           ,tbNotasFiscaisEmitidas_1.Data
           ,dbo.tbProdutos.Aliquota
           ,(SELECT MIN(Numero) AS Expr1
             FROM   dbo.tbNotasFiscaisEmitidas
             WHERE  ( CONVERT(NVARCHAR(10), Data, 103) =
                      CONVERT(NVARCHAR(10), @pData, 103) )
                AND ( Tipo = 'SD' ))                                        AS
            NumeroINI
           ,(SELECT MAX(Numero) AS Expr1
             FROM   dbo.tbNotasFiscaisEmitidas AS tbNotasFiscaisEmitidas_2
             WHERE  ( CONVERT(NVARCHAR(10), Data, 103) =
                      CONVERT(NVARCHAR(10), @pData, 103) )
                AND ( Tipo = 'SD' ))                                        AS
            NumeroFIM
           ,dbo.tbProdutos.TipoAliquota
    FROM   dbo.tbNotasFiscaisEmitidas AS tbNotasFiscaisEmitidas_1
           INNER JOIN dbo.tbVendas
                   ON tbNotasFiscaisEmitidas_1.ID = dbo.tbVendas.IDNotaFiscal
           INNER JOIN dbo.tbVendasItens
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
    WHERE  ( CONVERT(NVARCHAR(10), tbNotasFiscaisEmitidas_1.Data, 103) =
                    CONVERT(NVARCHAR(10), @pData, 103) )
       AND ( tbNotasFiscaisEmitidas_1.IDPosto = @pIdPosto )
       AND ( tbNotasFiscaisEmitidas_1.Tipo = 'SD' )
    GROUP  BY tbNotasFiscaisEmitidas_1.Data
              ,dbo.tbProdutos.Aliquota
              ,dbo.tbProdutos.TipoAliquota 
GO
/****** Object:  StoredProcedure [dbo].[SelecionaNotasFiscaisEmitidas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SelecionaNotasFiscaisEmitidas]
	-- Add the parameters for the stored procedure here
	@pIdPosto uniqueidentifier,
	@pData smalldatetime
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from 
	-- interfering with SELECT statements. 
	SET nocount ON; 

	-- Insert statements for procedure here 
	SELECT SUM(tbNotasFiscaisEmitidas.Valor) AS Valor 
		   ,tbVendasItensPagamento.TipoPagamento 
	FROM   tbNotasFiscaisEmitidas 
		   INNER JOIN tbVendas 
				   ON tbNotasFiscaisEmitidas.ID = tbVendas.IDNotaFiscal 
					  AND tbNotasFiscaisEmitidas.IDPosto = tbVendas.idPosto 
		   INNER JOIN tbVendasItensPagamento 
				   ON tbVendas.id = tbVendasItensPagamento.idVenda 
	WHERE  ( CONVERT(NVARCHAR(10), tbNotasFiscaisEmitidas.Data, 103) = 
					CONVERT(NVARCHAR(10), @pData, 103) ) 
		   AND ( tbNotasFiscaisEmitidas.IDPosto = @pIdPosto ) 
	GROUP  BY tbNotasFiscaisEmitidas.Data 
			  ,tbVendasItensPagamento.TipoPagamento
END
GO
/****** Object:  StoredProcedure [dbo].[SelecionaPLR]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SelecionaPLR
CREATE PROCEDURE [dbo].[SelecionaPLR] @pData        SMALLDATETIME
                                     ,@pValor      SMALLMONEY
                                     ,@pIDEntidade UNIQUEIDENTIFIER
AS
    DELETE FROM dbo.tbPLR
    WHERE  ( CONVERT(NVARCHAR(10), Data, 103) =
             CONVERT(NVARCHAR(10), @pData, 103) )
       AND ( Valor = @pValor )
       AND ( IDEntidade = @pIdEntidade ) 
GO
/****** Object:  StoredProcedure [dbo].[SelecionaPonto]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SelecionaPonto
CREATE PROCEDURE [dbo].[SelecionaPonto] @pData        AS SMALLDATETIME
                                       ,@pIdentidade AS UNIQUEIDENTIFIER
AS
    SELECT dbo.tbEntidadesPonto.ID
           ,dbo.tbEntidadesPonto.IDEntidade
           ,dbo.tbEntidades.RzSocial
           ,dbo.tbEntidadesPonto.InicioTrabalho
           ,dbo.tbEntidadesPonto.InicioAlmoco
           ,dbo.tbEntidadesPonto.FimAlmoco
           ,dbo.tbEntidadesPonto.FimTrabalho
           ,dbo.tbEntidadesPonto.MarcadoIniTrab
           ,dbo.tbEntidadesPonto.MarcadoIniDesc
           ,dbo.tbEntidadesPonto.MarcadoFimDesc
           ,dbo.tbEntidadesPonto.MarcadoFimTrab
    FROM   dbo.tbEntidadesPonto
           INNER JOIN dbo.tbEntidades
                   ON dbo.tbEntidadesPonto.IDEntidade = dbo.tbEntidades.Id
    WHERE  ( CONVERT(NVARCHAR(10), dbo.tbEntidadesPonto.InicioTrabalho, 103) =
             CONVERT(
                    NVARCHAR(10), @pData, 103) )
       AND ( dbo.tbEntidades.Id = @pIdEntidade ) 
GO
/****** Object:  StoredProcedure [dbo].[SelecionaProdutosPorData]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SelecionaProdutosPorData
CREATE PROCEDURE [dbo].[SelecionaProdutosPorData] @pIdposto  UNIQUEIDENTIFIER
                                                 ,@pDataINI SMALLDATETIME
                                                 ,@pDataFIM SMALLDATETIME
AS
    SELECT DISTINCT dbo.tbProdutos.Id
                    ,dbo.tbProdutos.UnidadeMedida
                    ,dbo.tbProdutos.Descricao
                    ,dbo.tbProdutos.CodigoBarras
                    ,dbo.tbProdutos.TipoProd
                    ,dbo.tbProdutos.TipoAliquota
                    ,dbo.tbProdutos.Aliquota
    FROM   dbo.tbVendas
           INNER JOIN dbo.tbVendasItens
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbUnidadeMedidas
                   ON dbo.tbProdutos.UnidadeMedida =
                      dbo.tbUnidadeMedidas.Unidademedida
    WHERE  ( dbo.tbVendas.DataMovimento BETWEEN @pDataINI AND @pDataFIM )
       AND ( dbo.tbVendas.idPosto = @pIdPOsto ) 
GO
/****** Object:  StoredProcedure [dbo].[SelecionaRegistro75]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SelecionaRegistro75
CREATE PROCEDURE [dbo].[SelecionaRegistro75] @pIdposto  UNIQUEIDENTIFIER
                                            ,@pDataINI SMALLDATETIME
                                            ,@pDataFIM SMALLDATETIME
AS
    SELECT DISTINCT tbProdutos.Id
                    ,tbProdutos.UnidadeMedida
                    ,tbProdutos.Descricao
                    ,tbProdutos.CodigoBarras
                    ,tbProdutos.TipoProd
                    ,tbProdutos.TipoAliquota
                    ,tbProdutos.Aliquota
                    ,tbProdutosPostos.PrecoVenda
    FROM   tbVendas
           INNER JOIN tbVendasItens
                   ON tbVendas.Id = tbVendasItens.idVenda
           INNER JOIN tbProdutos
                   ON tbVendasItens.idProduto = tbProdutos.Id
           INNER JOIN tbUnidadeMedidas
                   ON tbProdutos.UnidadeMedida = tbUnidadeMedidas.Unidademedida
           INNER JOIN tbProdutosPostos
                   ON tbVendas.idPosto = tbProdutosPostos.idPosto
                      AND tbProdutos.Id = tbProdutosPostos.idProduto
           INNER JOIN tbReducao
                   ON tbVendas.idPosto = tbReducao.IDPosto
                      AND tbVendas.DataMovimento = tbReducao.DataMovimento
    WHERE  ( tbVendas.DataMovimento BETWEEN @pDataINI AND @pDataFIM )
       AND ( tbVendas.idPosto = @pIdposto )
       AND ( tbVendas.Status IS NULL )
       AND ( tbVendasItens.Cancelado = 0 ) 
GO
/****** Object:  StoredProcedure [dbo].[SelecionaSuprimento]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SelecionaSuprimento
CREATE PROCEDURE [dbo].[SelecionaSuprimento] @pIdposto UNIQUEIDENTIFIER
                                        ,@pData   SMALLDATETIME
                                        ,@pIdECF  UNIQUEIDENTIFIER
AS
    SELECT SUM(tbSuprimento.Valor) AS Valor
    FROM   tbDocumentosEmitidos
           INNER JOIN tbSuprimento
                   ON tbDocumentosEmitidos.IDPosto = tbSuprimento.IdPosto
                      AND tbDocumentosEmitidos.COO = tbSuprimento.COO
    WHERE  ( CONVERT(NVARCHAR(10), tbDocumentosEmitidos.DataRodape, 103) =
                    CONVERT(NVARCHAR(10), @pData, 103) )
       AND ( tbSuprimento.IdPosto = @pIdPosto ) 
GO
/****** Object:  StoredProcedure [dbo].[SelecionaSuprimentoPorData]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SelecionaSuprimentoPorData
CREATE PROCEDURE [dbo].[SelecionaSuprimentoPorData] @pDataINI  SMALLDATETIME
                                               ,@pDataFIM SMALLDATETIME
                                               ,@pIdposto UNIQUEIDENTIFIER
                                               ,@pIdECF   UNIQUEIDENTIFIER
AS
    SELECT tbSuprimento.COO
           ,tbSuprimento.Valor
           ,tbEcfs.NumeroCaixa
           ,tbEcfs.Modelo
           ,tbEcfs.MFAdicional
           ,tbEcfs.Marca
           ,tbEcfs.Tipo
           ,tbEcfs.ValidacaoECF
           ,tbEcfs.VersaoFirmware
           ,tbEcfs.DataHoraSB
           ,tbDocumentosEmitidos.DataRodape
           ,tbDocumentosEmitidos.GNF
    FROM   tbSuprimento
           INNER JOIN tbDocumentosEmitidos
                   ON tbSuprimento.IdPosto = tbDocumentosEmitidos.IDPosto
                      AND tbSuprimento.COO = tbDocumentosEmitidos.COO
           INNER JOIN tbEcfs
                   ON tbDocumentosEmitidos.IDECF = tbEcfs.Id
                      AND tbSuprimento.IdPosto = tbEcfs.IDPosto
    WHERE  ( tbSuprimento.IdPosto = @pIdPOsto )
       AND ( tbDocumentosEmitidos.IDECF = @pIDECF )
       AND ( CONVERT(NVARCHAR(10), tbDocumentosEmitidos.DataRodape, 103) BETWEEN
             CONVERT(
                 NVARCHAR(10), @pDataINI, 103) AND
             CONVERT(NVARCHAR(10), @pDataFIM, 103) ) 
GO
/****** Object:  StoredProcedure [dbo].[SelecionaUnidadeMedidasPorData]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SelecionaUnidadeMedidasPorData
CREATE PROCEDURE [dbo].[SelecionaUnidadeMedidasPorData]
@pIdposto  UNIQUEIDENTIFIER
,@pDataIni SMALLDATETIME
,@pDataFIM SMALLDATETIME
AS
    SELECT DISTINCT dbo.tbUnidadeMedidas.UnidadeMedida
                    ,dbo.tbUnidadeMedidas.Descricao
    FROM   dbo.tbVendas
           INNER JOIN dbo.tbVendasItens
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbUnidadeMedidas
                   ON dbo.tbProdutos.IdUnidadeMedida =
                      dbo.tbUnidadeMedidas.id
    WHERE  ( dbo.tbVendas.DataMovimento BETWEEN @pDataINI AND @pDataFIM )
       AND ( dbo.tbVendas.idPosto = @pIdPOsto ) 
GO
/****** Object:  StoredProcedure [dbo].[SintegraRegistro60]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SintegraRegistro60
CREATE PROCEDURE [dbo].[SintegraRegistro60] @pIdposto   UNIQUEIDENTIFIER
                                           ,@pDataINI  SMALLDATETIME
                                           ,@pDAtaFIM  SMALLDATETIME
                                           ,@pNumCaixa INT
AS
    SELECT SUM(tbVendasItens.Quantidade) AS QTD
           ,tbEcfs.NumeroSerie
           ,tbProdutos.Id
           ,tbVendas.DataMovimento
           ,tbVendasItens.PrecoVenda
           ,tbProdutos.TipoAliquota
           ,tbProdutos.Aliquota
           ,tbVendasItens.Cancelado
    FROM   tbVendas
           INNER JOIN tbVendasItens
                   ON tbVendas.Id = tbVendasItens.idVenda
           INNER JOIN tbProdutos
                   ON tbVendasItens.idProduto = tbProdutos.Id
           INNER JOIN tbEcfs
                   ON tbVendas.idPosto = tbEcfs.IDPosto
                      AND tbVendas.IdEcf = tbEcfs.Id
           INNER JOIN tbReducao
                   ON tbVendas.idPosto = tbReducao.IDPosto
                      AND tbVendas.DataMovimento = tbReducao.DataMovimento
    WHERE  ( tbVendas.idPosto = @pIdPosto )
       AND ( CONVERT(NVARCHAR(10), tbVendas.DataMovimento, 103) BETWEEN
                 CONVERT(NVARCHAR(10), @pDataINI, 103) AND
                 CONVERT(NVARCHAR(10), @pDAtaFIM, 103) )
       AND ( tbVendas.Status IS NULL )
       AND ( tbVendasItens.Cancelado = 0 )
    GROUP  BY tbEcfs.NumeroSerie
              ,tbProdutos.Id
              ,tbVendas.DataMovimento
              ,tbVendasItens.PrecoVenda
              ,tbProdutos.TipoAliquota
              ,tbProdutos.Aliquota
              ,tbVendasItens.Cancelado 
GO
/****** Object:  StoredProcedure [dbo].[SintegraRegistro61]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SintegraRegistro61
CREATE PROCEDURE [dbo].[SintegraRegistro61] @pIdposto  UNIQUEIDENTIFIER
                                       ,@pDataINI SMALLDATETIME
                                       ,@pDataFIM SMALLDATETIME
AS
    SELECT SUM(tbNotasFiscaisEmitidas.Valor)   AS ValorTotal
           ,MIN(tbNotasFiscaisEmitidas.Numero) AS NumeroINI
           ,MAX(tbNotasFiscaisEmitidas.Numero) AS NumeroFIM
           ,tbNotasFiscaisEmitidas.Data
           ,tbProdutos.TipoAliquota
           ,tbProdutos.Aliquota
    FROM   tbNotasFiscaisEmitidas
           INNER JOIN tbVendas
                   ON tbNotasFiscaisEmitidas.ID = tbVendas.IDNotaFiscal
           INNER JOIN tbVendasItens
                   ON tbVendas.Id = tbVendasItens.idVenda
           INNER JOIN tbProdutos
                   ON tbVendasItens.idProduto = tbProdutos.Id
    WHERE  ( tbNotasFiscaisEmitidas.IDPosto = @pIdPosto )
       AND ( tbNotasFiscaisEmitidas.Tipo = 'SD' )
       AND ( tbNotasFiscaisEmitidas.Data BETWEEN @pDataINI AND @pDataFIM )
    GROUP  BY tbNotasFiscaisEmitidas.Data
              ,tbProdutos.TipoAliquota
              ,tbProdutos.Aliquota 
GO
/****** Object:  StoredProcedure [dbo].[SolicitacaoExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SolicitacaoExclui] @pIDSolicitacao  int AS
Delete tbSolicitacao where idSolicitacao=@pIDSolicitacao
GO
/****** Object:  StoredProcedure [dbo].[SolicitacaoSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SolicitacaoSalva] @pOP char,@pIDSolicitacao int, @pIDPosto int, @pIDProduto int, @pQTD float AS
If @pOP='I'
   begin
        insert into tbSolicitacao(idPosto, idProduto,QTD, Data)values(@pidPosto,@pIDProduto,@pQTD, getdate())
   end
else
   begin
       update tbSolicitacao set idProduto=@pIDProduto, QTD=@pQTD, data=getdate() where idSolicitacao=@pIDSolicitacao
   end
GO
/****** Object:  StoredProcedure [dbo].[SolicitacaoSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SolicitacaoSeleciona] @pIDSolicitacao int AS
Select * from tbSolicitacao where IDSolicitacao=@pIDSolicitacao
GO
/****** Object:  StoredProcedure [dbo].[sp_CrossTab]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_CrossTab]
    @DBFetch varchar(4000),
    @DBWhere varchar(2000) = NULL,
    @DBPivot varchar(4000) = NULL,
    @DBField varchar(100),
    @PCField varchar(100),
    @PCBuild varchar( 20),
    @PCAdmin varchar( 20) = NULL,
    @DBAdmin int = 0,
    @DBTable varchar(100) = NULL,
    @DBWrite varchar(160) = NULL,
    @DBUltra bit = 0
AS

SET NOCOUNT ON

DECLARE @Return int
DECLARE @Retain int
DECLARE @Status int

SET @Status = 0

DECLARE @TPre varchar(10)

DECLARE @TDo3 tinyint
DECLARE @TDo4 tinyint

SET @TPre = 'tbl'

SET @TDo3 = LEN(@TPre)
SET @TDo4 = LEN(@TPre) + 1

DECLARE @DBAE varchar(40)

DECLARE @Task varchar(8000)

DECLARE @Bank varchar(4000)

DECLARE @Cash varchar(2000)

DECLARE @Rich varchar(2000)

DECLARE @DBAI varchar(4000)
DECLARE @DBAO varchar(8000)
DECLARE @DBAU varchar(2000)

DECLARE @Name varchar(100)
DECLARE @Same varchar(100)

DECLARE @Home varchar(160)

DECLARE @Some varchar(20)

DECLARE @Work int

DECLARE @Wink int

SET @DBAE = '##Crosstab' + RIGHT(CONVERT(varchar(10),@@SPID+100000),5)

SET @Task = 'IF EXISTS (SELECT * FROM tempdb.dbo.sysobjects WHERE name = ' + CHAR(39) + @DBAE + CHAR(39) + ') DROP TABLE ' + @DBAE

EXECUTE (@Task)

CREATE TABLE #DBAT (Work int IDENTITY(1,1), Name varchar(100))

SET @Bank = @TPre + @DBFetch

IF NOT EXISTS (SELECT * FROM sysobjects WHERE RTRIM(type) = 'U' AND name = @Bank)

    BEGIN

    SET @Bank = CASE WHEN LEFT(@DBFetch,6) = 'SELECT' THEN '(' + @DBFetch + ')' ELSE @DBFetch END
    SET @Bank = REPLACE(@Bank,         CHAR(94),CHAR(39))
    SET @Bank = REPLACE(@Bank,CHAR(45)+CHAR(45),CHAR(32))
    SET @Bank = REPLACE(@Bank,CHAR(47)+CHAR(42),CHAR(32))

    END

IF @DBWhere IS NOT NULL

    BEGIN

    SET @Cash = REPLACE(@DBWhere,'WHERE'       ,CHAR(32))
    SET @Cash = REPLACE(@Cash,         CHAR(94),CHAR(39))
    SET @Cash = REPLACE(@Cash,CHAR(45)+CHAR(45),CHAR(32))
    SET @Cash = REPLACE(@Cash,CHAR(47)+CHAR(42),CHAR(32))

    END

SET @DBField = REPLACE(@DBField,CHAR(32),CHAR(95))

SET @PCField = REPLACE(@PCField,CHAR(32),CHAR(95))

SET @PCBuild = REPLACE(@PCBuild,CHAR(32),CHAR(95))

SET @PCAdmin = REPLACE(@PCAdmin,CHAR(32),CHAR(95))

SET @DBTable = REPLACE(@DBTable,CHAR(32),CHAR(95))

SET @DBWrite = REPLACE(@DBWrite,CHAR(32),CHAR(95))

SET @DBWhere = CASE WHEN @DBWhere IS NULL THEN '' ELSE ' WHERE (' + @Cash + ') AND 0 = 0' END

SET @Some = ISNULL(@PCAdmin,'NA')

SET @Task = 'SELECT * INTO ' + @DBAE + ' FROM ' + @Bank + ' AS T WHERE 0 = 1'

IF @Status = 0 EXECUTE (@Task) SET @Return = @@ERROR

IF @Status = 0 SET @Status = @Return

IF @DBPivot IS NOT NULL

    BEGIN

    IF LEFT(@DBPivot,6) <> 'SELECT'

        BEGIN

        SET @Wink = 1

        SET @Work = CHARINDEX('|',(@DBPivot)+'|')

        WHILE @Work > 0

            BEGIN

            SET @Name = SUBSTRING(@DBPivot,@Wink,@Work-@Wink)

            INSERT #DBAT (Name) VALUES (@Name)

            SET @Wink = @Work + 1

            SET @Work = CHARINDEX('|',(@DBPivot)+'|',@Wink)

            END

        END

    ELSE

        BEGIN

        SET @Task = 'INSERT #DBAT (Name) ' + @DBPivot

        SET @Task = REPLACE(@Task,         CHAR(94),CHAR(39))
        SET @Task = REPLACE(@Task,CHAR(45)+CHAR(45),CHAR(32))
        SET @Task = REPLACE(@Task,CHAR(47)+CHAR(42),CHAR(32))

        IF @Status = 0 EXECUTE (@Task) SET @Return = @@ERROR

        IF @Status = 0 SET @Status = @Return

        END

    END

ELSE

    BEGIN

    SET @Task = '   INSERT #DBAT (Name)'
              + '   SELECT CONVERT(varchar(100),' + @DBField + ')'
              + '     FROM ' + @Bank + ' AS T ' + @DBWhere
              + ' GROUP BY CONVERT(varchar(100),' + @DBField + ')'
              + ' ORDER BY 1'

    IF @Status = 0 EXECUTE (@Task) SET @Return = @@ERROR

    IF @Status = 0 SET @Status = @Return

    END

UPDATE #DBAT SET Name = @Some WHERE Name IS NULL

SET @DBAI = ''

SET @DBAO = ''

SET @Rich = ''

 DECLARE Fields CURSOR FAST_FORWARD FOR
  SELECT C.name
    FROM tempdb.dbo.sysobjects AS O
    JOIN tempdb.dbo.syscolumns AS C
      ON C.id = O.id
     AND C.name != @DBField
     AND C.name != @PCField
     AND O.name  = @DBAE
ORDER BY C.colid

SET @Retain = @@ERROR IF @Status = 0 SET @Status = @Retain

OPEN Fields

SET @Retain = @@ERROR IF @Status = 0 SET @Status = @Retain

FETCH NEXT FROM Fields INTO @Same

SET @Retain = @@ERROR IF @Status = 0 SET @Status = @Retain

WHILE @@FETCH_STATUS = 0 AND @Status = 0

    BEGIN

    SET @DBAI = @DBAI + ', ' +  @Same

    FETCH NEXT FROM Fields INTO @Same

    SET @Retain = @@ERROR IF @Status = 0 SET @Status = @Retain

    END

CLOSE Fields DEALLOCATE Fields

SET @DBAI = SUBSTRING(@DBAI,3,4000)

 DECLARE Fields CURSOR FAST_FORWARD FOR
  SELECT  Name
    FROM #DBAT
ORDER BY  Work

OPEN Fields

FETCH NEXT FROM Fields INTO @Same

WHILE @@FETCH_STATUS = 0 AND @Status = 0

    BEGIN

    IF LEN(@DBAO) < 7900 - LEN(@DBField) - LEN(@PCField) - LEN(@Same) - LEN(@Same)

        BEGIN

        SET @DBAO = @DBAO + ', ' + @PCBuild + '(CASE WHEN ISNULL(CONVERT(varchar(100),' + @DBField + '),'
                          + CHAR(39) + @Some + CHAR(39) + ') = '
                          + CHAR(39) + @Same + CHAR(39) + ' THEN '
                          + @PCField + ' ELSE NULL END) AS '
                          + CHAR(91) + @Same + CHAR(93)

        END
        ELSE
        BEGIN

        SET @Status = 50000

        END

    FETCH NEXT FROM Fields INTO @Same

    END

CLOSE Fields DEALLOCATE Fields

IF @DBAdmin IN (1,3) SET @Rich = @Rich + ', ' + @PCBuild + '(' + @PCField + ') AS All_' + @PCBuild

IF @DBAdmin IN (2,3) SET @Rich = @Rich + ', COUNT('            + @PCField + ') AS All_COUNT'

IF @DBAdmin IN (2,3) SET @Rich = @Rich + ',   MIN('            + @PCField + ') AS All_MIN'

IF @DBAdmin IN (2,3) SET @Rich = @Rich + ',   MAX('            + @PCField + ') AS All_MAX'

SET ANSI_WARNINGS OFF

SET @Home = ''

SET @Name = ''

IF @DBTable IS NOT NULL

    BEGIN

    SET @Name = @DBTable

    IF LEFT(@Name,2) = '##'

        BEGIN

        IF @DBUltra = 0

            BEGIN

            SET @Task = 'IF EXISTS (SELECT * FROM   tempdb.dbo.sysobjects WHERE name = ' + CHAR(39) + @Name + CHAR(39) + ') DROP TABLE ' +         @Name

            IF @Status = 0 EXECUTE (@Task) SET @Return = @@ERROR

            IF @Status = 0 SET @Status = @Return

            END

        END

    ELSE

        BEGIN

        IF @DBWrite IS NOT NULL SET @Home = @DBWrite + '.dbo.'

        IF @DBUltra = 0

            BEGIN

            SET @Task = 'IF EXISTS (SELECT * FROM ' + @Home + 'sysobjects WHERE name = ' + CHAR(39) + @Name + CHAR(39) + ') DROP TABLE ' + @Home + @Name

            IF @Status = 0 EXECUTE (@Task) SET @Return = @@ERROR

            IF @Status = 0 SET @Status = @Return

            END

        END

    END

IF @DBTable IS NOT NULL

    BEGIN

    IF @DBUltra = 0

        BEGIN

        IF @Status = 0 EXECUTE ( '   SELECT ' + @DBAI + @DBAO + @Rich
                               + '     INTO ' + @Home + @Name
                               + '     FROM ' + @Bank + ' AS T ' + @DBWhere
                               + ' GROUP BY ' + @DBAI
                               + ' ORDER BY ' + @DBAI ) SET @Return = @@ERROR

        IF @Status = 0 SET @Status = @Return

        END

    ELSE

        BEGIN

        IF @Status = 0 EXECUTE ( '   INSERT ' + @Home + @Name
                               + '   SELECT ' + @DBAI + @DBAO + @Rich
                               + '     FROM ' + @Bank + ' AS T ' + @DBWhere
                               + ' GROUP BY ' + @DBAI
                               + ' ORDER BY ' + @DBAI ) SET @Return = @@ERROR

        IF @Status = 0 SET @Status = @Return

        END

    END

ELSE

    BEGIN

    IF @Status = 0 EXECUTE ( '   SELECT ' + @DBAI + @DBAO + @Rich
                           + '     FROM ' + @Bank + ' AS T ' + @DBWhere
                           + ' GROUP BY ' + @DBAI
                           + ' ORDER BY ' + @DBAI ) SET @Return = @@ERROR

    IF @Status = 0 SET @Status = @Return

    END

SET ANSI_WARNINGS ON

SET @Task = 'IF EXISTS (SELECT * FROM tempdb.dbo.sysobjects WHERE name = ' + CHAR(39) + @DBAE + CHAR(39) + ') DROP TABLE ' + @DBAE

EXECUTE (@Task)

DROP TABLE #DBAT

SET NOCOUNT OFF

RETURN (@Status)
GO
/****** Object:  StoredProcedure [dbo].[sp_GetFuncsAdmPosto]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--sp_GetFuncsAdmPosto
CREATE PROCEDURE [dbo].[sp_GetFuncsAdmPosto] @pIdEntidade  UNIQUEIDENTIFIER

AS
		SELECT RzSocial, CNPJ 
		FROM tbFuncs
			INNER JOIN tbEntidades
				ON tbFuncs.IdEntidade = tbEntidades.Id
		WHERE idEntidade = @pIdEntidade
		ORDER BY RzSocial



GO
/****** Object:  StoredProcedure [dbo].[sp_SMTPMail]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
--=============================================================================================
--== Name  		-  	sp_SMTPMail
--== Purpose 	-  	Send an email using an SMTP Mailer COM Component
--== Input Parameters 	-  	 @SenderName, @SenderAddress, @RecipientName, @RecipientAddress
--== 					  	 @Subject, @Body, @MailServer
--==
--==
--== Usage	-	exec sp_SMTPMail @SenderName='Damian', @SenderAddress='damian@bdussy.com', 
--==			@RecipientName = 'Someone', @RecipientAddress = 'someone@someplace.com', 
--==			@Subject='SQL Test', @body='Hello, this is a test email from SQL Server'
--==
--== Created Date	-  	Thursday, July 19, 2001
--== Created by		-  	Damian Maclennan 
--==					merkin@sqlteam.com
--==					www.bdussy.com/damian
--== 
--== Disclaimer	-	This procedure has been created for demonstration purposes. It has not
--==				been created for production purposes and I hold no liability for any
--==				unwanted effects of running it.
--=============================================================================================
*/
CREATE Procedure [dbo].[sp_SMTPMail]

	@SenderName varchar(100),
	@SenderAddress varchar(100),
	@RecipientName varchar(100),
	@RecipientAddress varchar(100),
	@Subject varchar(200),
	@Body varchar(8000),
	@MailServer varchar(100) = 'localhost'

	AS	
	
	SET nocount on
	
	declare @oMail int --Object reference
	declare @resultcode int
	
	EXEC @resultcode = sp_OACreate 'SMTPsvg.Mailer', @oMail OUT
	
	if @resultcode = 0
	BEGIN
		EXEC @resultcode = sp_OASetProperty @oMail, 'RemoteHost', @mailserver
		EXEC @resultcode = sp_OASetProperty @oMail, 'FromName', @SenderName
		EXEC @resultcode = sp_OASetProperty @oMail, 'FromAddress', @SenderAddress
	
		EXEC @resultcode = sp_OAMethod @oMail, 'AddRecipient', NULL, @RecipientName, @RecipientAddress
	
		EXEC @resultcode = sp_OASetProperty @oMail, 'Subject', @Subject
		EXEC @resultcode = sp_OASetProperty @oMail, 'BodyText', @Body
	
	
		EXEC @resultcode = sp_OAMethod @oMail, 'SendMail', NULL
	
		EXEC sp_OADestroy @oMail
	END	
	

	SET nocount off
GO
/****** Object:  StoredProcedure [dbo].[spAcertoCaixas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spAcertoCaixas
CREATE PROCEDURE [dbo].[spAcertoCaixas] @pOP       NVARCHAR(30)
                                       ,@pIdposto UNIQUEIDENTIFIER = NULL
                                       ,@pIDCaixa UNIQUEIDENTIFIER = NULL
AS
    IF @pOP = 'ValidaCaixa'
      BEGIN
          SELECT TOP 1 Id
                 AS
                 CaixaAtual
                 ,Dia
                 ,TCaixa
                 ,ISNULL ((SELECT Id
                           FROM   tbCaixa AS tbCaixa1
                           WHERE  ( Dia = DATEADD(day, -1, tbCaixa.Dia) )
                              AND ( idPosto = @pIDposto )
                              AND ( TCaixa = (SELECT count(ID)
                                              FROM   tbturno
                                              WHERE  idPOsto = @pIdPOsto) )), dbo.GuidEmpty())
                  AS
                  CaixaAnterior
                 ,ISNULL ((SELECT COUNT(Id)
                           FROM   tbVendas
                           WHERE  ( idCaixa = tbCaixa.Id )), 0)
                  AS
                  Vendas
          FROM   tbCaixa
          WHERE  ( idPosto = @pIDposto )
          GROUP  BY Dia
                    ,DataFechamento
                    ,TCaixa
                    ,Id
          HAVING ( DataFechamento IS NULL )
                 AND ( TCaixa = 1 )
          ORDER BY DataFechamento DESC
      END
    ELSE IF @pOP = 'Seleciona'
      SELECT tbCaixaItens.Id
             ,tbCaixaItens.idObjeto       AS Tanque
             ,tbProdutos.Descricao        AS Produto
             ,tbCaixaItens.ValorLido      AS Contabil
             ,tbCaixaItens.ValorCalculado AS Medido
			 ,tbProdutos.id               AS IDProduto
			 ,tbTanques.id                AS IDTanque
      FROM   tbProdutos
             INNER JOIN tbTanques
                     ON tbProdutos.Id = tbTanques.IdProduto
             INNER JOIN tbCaixaItens
                     ON tbTanques.NumTanque = tbCaixaItens.idObjeto
      WHERE  ( tbCaixaItens.idCaixa = @pIDCaixa )
         AND ( tbCaixaItens.TipoLeitura = 'T' )
         AND ( tbTanques.IdPosto = @pIDposto )
      ORDER  BY tbProdutos.ordem, tbTanques.NumTanque
GO
/****** Object:  StoredProcedure [dbo].[spAcessos]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spAcessos    
CREATE PROCEDURE [dbo].[spAcessos] @pOP          NVARCHAR(20)
                                  ,@pID         UNIQUEIDENTIFIER
                                  ,@pidUsuario  UNIQUEIDENTIFIER=NULL
                                  ,@pDescricao  NVARCHAR(50)=NULL
                                  ,@pMaquinario NVARCHAR(50)=NULL
                                  ,@pUsuario    NVARCHAR(50)=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                SET @pID = newid()

                INSERT INTO tbAcessos
                            (ID
                             ,IDUsuario
                             ,Descricao
                             ,Maquinario
                             ,Usuario)
                VALUES      (@pID
                             ,@pidUsuario
                             ,@pDescricao
                             ,@pMaquinario
                             ,@pUsuario)

                SELECT @pID
            END
          ELSE
            BEGIN
                UPDATE tbAcessos
                SET    idUsuario = @pidUsuario
                       ,Descricao = @pDescricao
                       ,Maquinario = @pMaquinario
                       ,Usuario = @pUsuario
                WHERE  id = @pID

                SELECT @pid
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbAcessos
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbAcessos
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spAfericao]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spAfericao
CREATE PROCEDURE [dbo].[spAfericao] @pOP          NVARCHAR(20)
                                   ,@pidAfericao UNIQUEIDENTIFIER
                                   ,@pidPosto    UNIQUEIDENTIFIER=NULL
                                   ,@pIDCaixa    UNIQUEIDENTIFIER=NULL
                                   ,@pNumBomba   UNIQUEIDENTIFIER=NULL
                                   ,@pQTD        SMALLMONEY=NULL
                                   ,@pLenta      NCHAR(10)=NULL
                                   ,@pRapida     NCHAR(10)=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pidAfericao = dbo.GuidEmpty()
            BEGIN
				SET @pidAfericao = newid()
                INSERT INTO tbAfericao
                            (Id
                             ,idPosto
                             ,idCaixa
                             ,IdBomba
                             ,QTD
                             ,Lenta
                             ,Rapida)
                VALUES      (@pidAfericao
							 ,@pidPosto
                             ,@pidCaixa
                             ,@pNumBomba
                             ,@pQTD
                             ,@pLenta
                             ,@pRapida)

                UPDATE tbBombas
                SET    Encerrante = Encerrante + @pQTD
                WHERE  idPosto = @pIDPosto
                   AND Id = @pNumBomba

                SELECT @pidAfericao
            END
          ELSE
            BEGIN
                UPDATE tbAfericao
                SET    idPosto = @pidPosto
                       ,idCaixa = @pidCaixa
                       ,IdBomba = @pNumBomba
                       ,QTD = @pQTD
                       ,Lenta = @pLenta
                       ,Rapida = @prapida
                WHERE  tbAfericao.Id = @pidAfericao

                SELECT @pidAfericao
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbAfericao
          WHERE  tbAfericao.Id = @pidAfericao
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbAfericao
          WHERE  tbAfericao.Id = @pidAfericao
      END 
GO
/****** Object:  StoredProcedure [dbo].[spAlertas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spAlertas
CREATE PROCEDURE [dbo].[spAlertas] @pOp        NVARCHAR(20)
                                  ,@pID       UNIQUEIDENTIFIER
                                  ,@pMensagem NVARCHAR(1000)= NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
				SET @pID = newid()
                INSERT INTO tbAlertas
                            (Id
                             ,mensagem)
                VALUES      (@pID
                             ,@pmensagem)

                SELECT @pID
            END
          ELSE
            BEGIN
                UPDATE tbAlertas
                SET    mensagem = @pmensagem
                WHERE  id = @pID

                SELECT @pid
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbAlertas
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbAlertas
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spAlinea]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spAlinea
CREATE PROCEDURE [dbo].[spAlinea] @pOP         NVARCHAR(20)
                                 ,@pAlinea    UNIQUEIDENTIFIER
                                 ,@pDescricao NVARCHAR(70)=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pAlinea = dbo.GuidEmpty()
            BEGIN
				SET @pAlinea = newid()
                INSERT INTO tbAlinea
                            (Id
                             ,Descricao)
                VALUES      (@pAlinea
                             ,@pDescricao)

                SELECT @pAlinea
            END
          ELSE
            BEGIN
                UPDATE tbAlinea
                SET    Descricao = @pDescricao
                WHERE  tbAlinea.Id = @pAlinea

                SELECT @pAlinea
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbAlinea
          WHERE  tbAlinea.Id = @pAlinea
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbAlinea
          WHERE  tbAlinea.Id = @pAlinea
      END 
GO
/****** Object:  StoredProcedure [dbo].[spBomba]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spBomba
CREATE PROCEDURE [dbo].[spBomba] @pOP          NVARCHAR(20)
                                ,@pIdposto    UNIQUEIDENTIFIER
                                ,@pNumBomba   INT
                                ,@pNumTanque  UNIQUEIDENTIFIER=NULL
                                ,@pEncerrante FLOAT=NULL
                                ,@pAtivo      BIT=NULL
                                ,@pInativoEm  SMALLDATETIME=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pNumBomba = 0
            BEGIN
                INSERT INTO tbBombas
                            (idPosto
                             ,NumBomba
                             ,IdTanque
                             ,Encerrante
                             ,Ativo
                             ,InativoEm)
                VALUES      (@pidPosto
                             ,@pNumBomba
                             ,@pNumTanque
                             ,@pEncerrante
                             ,@pAtivo
                             ,@pInativoEm)
            END
          ELSE
            BEGIN
                UPDATE tbBombas
                SET    NumBomba = @pNumBomba
                       ,IdTanque = @pNumTanque
                       ,Encerrante = @pEncerrante
                       ,Ativo = @pAtivo
                       ,InativoEm = @pInativoEm
                WHERE  NumBomba = @pNumBomba
                       AND idPosto = @pidPosto
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbBombas
          WHERE  NumBomba = @pNumBomba
                 AND idPosto = @pidPosto
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbBombas
          WHERE  NumBomba = @pNumBomba
                 AND idPosto = @pidPosto
      END 
GO
/****** Object:  StoredProcedure [dbo].[spCameras]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spCameras]

@pOP nvarchar(20),
@pid int,
@pidPosto int=NULL,
@pidCameraPosto int=NULL,
@pDescricao nvarchar(100)=NULL

as

If @pOp = 'Salvar'
	   begin
	     if @pID = 0
	         begin
				insert into tbCameras values  (@pidPosto, @pidCameraPosto, @pDescricao)
				select @@identity
	         end
	      else
	         begin
				Update tbCameras set idPosto = @pidPosto, idCameraPosto = @pidCameraPosto, descricao = @pDescricao where id=@pID
	            select @pid
	         end
	   
	   end
	else if @pOP = 'Selecionar'
	   begin
	     Select * from tbCameras where id=@pID   
	   end
	

	else if @pOP = 'Excluir'
	   begin
	     Delete from tbCameras where id=@pID
	   end
GO
/****** Object:  StoredProcedure [dbo].[spCapasLMC]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spCapasLMC
CREATE PROCEDURE [dbo].[spCapasLMC] @pIdposto    UNIQUEIDENTIFIER
                                   ,@pFolhas    NVARCHAR(5)
                                   ,@pInicio    SMALLDATETIME
                                   ,@pFim       SMALLDATETIME
                                   ,@pNumeroLMC NVARCHAR(5)
                                   ,@pTitulo    NVARCHAR(30)
                                   ,@pIdProduto UNIQUEIDENTIFIER
AS
    SELECT dbo.tbPostos.RzSocial     AS Nome
           ,dbo.tbPostos.Endereco
           ,dbo.tbPostos.Bairro
           ,dbo.tbPostos.IM
           ,dbo.tbCidades.Descricao  AS Cidade
           ,dbo.tbPostos.UF
           ,dbo.tbPostos.CEP
           ,dbo.tbPostos.IE
           ,dbo.tbPostos.CNPJ
           ,tbEntidades_1.RzSocial   AS Gerente
           ,tbEntidades_1.RzSocial   AS Contador
           ,tbEntidades_1.CNPJ       AS ContadorCPF
           ,tbEntidades_1.IE         AS ContadorRG
           ,dbo.tbPostos.CRCContador
           ,dbo.tbEntidades.RzSocial AS NomeGerente
           ,dbo.tbEntidades.CNPJ     AS CPFGerente
           ,dbo.tbProdutos.Descricao
    FROM   dbo.tbPostos
           INNER JOIN dbo.tbEntidades AS tbEntidades_1
                   ON dbo.tbPostos.IdContador = tbEntidades_1.Id
           INNER JOIN dbo.tbCidades
                   ON dbo.tbPostos.IdMunicipio = dbo.tbCidades.id
           INNER JOIN dbo.tbFuncs
                   ON dbo.tbPostos.Id = dbo.tbFuncs.IdPosto
           INNER JOIN dbo.tbEntidades
                   ON dbo.tbFuncs.IdEntidade = dbo.tbEntidades.Id
           INNER JOIN dbo.tbProdutosPostos
                   ON dbo.tbPostos.Id = dbo.tbProdutosPostos.idPosto
           INNER JOIN dbo.tbProdutos
                   ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbPostos.Id = @pIDPOsto )
       AND ( dbo.tbFuncs.Administrativa = 1 )
       AND ( dbo.tbProdutos.Id = @pIdproduto )

    RETURN 
GO
/****** Object:  StoredProcedure [dbo].[spCarregaMedicao]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spCarregaMedicao]
	@pIdPosto  uniqueidentifier,
	@pCaixaINI  uniqueidentifier

AS
   DECLARE @pDataCaixa DATETIME
   DECLARE @pTurno INT
   DECLARE @pCaixaTurnoAnt UNIQUEIDENTIFIER
   DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)

					
	SET @pDataCaixa = (SELECT Dia
					   FROM   tbCaixa with(nolock)
					   WHERE  Id = @pCaixaINI)

    SET @pTurno = (Select tcaixa
	                   From tbCaixa with(nolock)
					   WHERE id = @pCaixaINI)

					  


IF @pTurno = 1
   BEgin
   SET @pCaixaTurnoAnt = ( SELECT id
							 FROM tbCaixa with(nolock)
							 WHERE dia = dateadd(day, -1, @pdataCaixa)
							 AND TCaixa = (Select count(id) from tbTurno where idPOsto = @pIdposto )
							 AND idPOsto = @pIdPosto)
   END
     ELSE
   SET @pCaixaTurnoAnt = (Select id
                             FROM tbCaixa with(nolock)
							 WHERE dia = @pDataCAixa
							 AND Tcaixa = @pturno - 1
							 AND idPosto = @pidPosto)


	INSERT INTO @tblCaixas
	SELECT Id
	FROM tbCaixa  with(nolock)
	WHERE id = @pCaixaINI AND IdPosto = @pIdPosto
	
	--Select  @pTurno, @pDataCaixa , @pCaixaTurnoAnt

    
    SELECT  Descricao = dbo.tbProdutos.Descricao 
           ,Caixa.idObjeto as NumTanque    
           ,Medicao =  CAST((SELECT  ROUND(tbCaixaItens.ValorLido,3)
                                 FROM tbCaixaItens 
								  INNER JOIN tbTanques 
								    ON tbCaixaItens.idObjeto = tbTanques.NumTanque
                         WHERE     (tbCaixaItens.TipoLeitura = 'T') 
						 AND (tbCaixaItens.IdCaixa = @pCaixaTurnoAnt) 
						 AND (tbTanques.IdPosto = @pIdposto)
						 AND (tbTanques.NumTanque = Caixa.IdObjeto))
		                  -
		                  (SELECT (ISNULL(SUM(b.Encerrante - ca_Ant.ValorLido),0))
                             FROM tbCaixaItens AS ca_Ant 
                             INNER JOIN tbBombas AS b ON ca_Ant.idObjeto = b.NumBomba 
                             INNER JOIN tbTanques AS t ON b.IdTanque = t.Id
                          WHERE (ca_Ant.IdCaixa = @pCaixaTurnoAnt) AND (ca_Ant.TipoLeitura = 'B') AND (t.NumTanque = Caixa.IdObjeto) AND (b.IdPosto = @pIdPosto))    
                         -
                         (SELECT  ISNULL(SUM(af.QTD),0)
                          FROM  tbAfericao as af
                            INNER JOIN @tblCaixas cx ON af.idCaixa = cx.IdCaixa
                            INNER JOIN tbBombas as b ON af.idBomba = b.Id
                            INNER JOIN tbTanques as t ON b.IdTanque = t.Id
                          WHERE ( b.IdPosto = @pIdPosto )
                            AND ( t.NumTanque = caixa.IdObjeto )) 
						 +
							      
       
                        (SELECT ISNULL(SUM(dbo.tbPedidosItensRecebidos.qtd),0) 
                            FROM   dbo.tbPedidosItensRecebidos with(nolock)
                             INNER JOIN dbo.tbPedidosItens with(nolock)
                              ON dbo.tbPedidosItens.id = dbo.tbPedidosItensRecebidos.idItem
                             AND dbo.tbPedidosItens.idPosto = dbo.tbPedidosItensRecebidos.idPosto
                             INNER JOIN dbo.tbTanques with(nolock)
                              ON dbo.tbTanques.Id = dbo.tbPedidosItensRecebidos.IdTanque    
		                     INNER JOIN @tblCaixas cx
                              ON dbo.tbPedidosItensRecebidos.idCaixaRecebimento = cx.IdCaixa
                        WHERE  ( dbo.tbTanques.NumTanque = Caixa.idObjeto )
                           AND ( dbo.tbTanques.IdPosto = @pIdPosto )
                       )
                        AS numeric(12, 3) )
    FROM   dbo.tbProdutosPostos with(nolock)
           INNER JOIN dbo.tbProdutos with(nolock)
                   ON dbo.tbProdutosPostos.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbCaixa with(nolock)
           INNER JOIN dbo.tbCaixaItens Caixa with(nolock)
                   ON dbo.tbCaixa.Id = Caixa.idCaixa
                   ON dbo.tbProdutosPostos.idPosto = dbo.tbCaixa.idPosto
           INNER JOIN dbo.tbTanques with(nolock)
                   ON dbo.tbProdutosPostos.idPosto = dbo.tbTanques.IdPosto
                      AND Caixa.idObjeto = dbo.tbTanques.NumTanque
                      AND dbo.tbProdutos.Id = dbo.tbTanques.IdProduto
                      AND dbo.tbProdutosPostos.idProduto = dbo.tbTanques.IdProduto
    WHERE  ( Caixa.idCaixa = @pCaixaTurnoAnt )
       AND ( Caixa.TipoLeitura = 'T' )
       AND ( dbo.tbTanques.IdPosto = @pIDPosto )
       AND ( dbo.tbTanques.Ativo = 1 )
    ORDER  BY dbo.tbProdutos.ordem
              ,caixa.idObjeto 
                                                   
GO
/****** Object:  StoredProcedure [dbo].[spCarreta]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spCarreta
CREATE PROCEDURE [dbo].[spCarreta] @pOP                NVARCHAR(20)
                                  ,@pIDCarreta        UNIQUEIDENTIFIER
                                  ,@pIDTransportadora UNIQUEIDENTIFIER = NULL
                                  ,@pPlaca            NCHAR(10) = NULL
                                  ,@pCompartimento    NVARCHAR(50) = NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pIDCarreta = dbo.GuidEmpty()
            BEGIN
				SET @pIDCarreta = newid()
                INSERT INTO tbCarretaTransportadora
                            (Id
                             ,IDTransportadora
                             ,Placa
                             ,Compartimento)
                VALUES      (@pIDCarreta
                             ,@pIDTransportadora
                             ,@pPlaca
                             ,@pCompartimento)

                SELECT @pIDCarreta
            END
          ELSE
            BEGIN
                UPDATE tbCarretaTransportadora
                SET    IDTransportadora = @pIDTransportadora
                       ,Placa = @pPlaca
                       ,Compartimento = @pCompartimento
                WHERE  Id = @pIdCarreta

                SELECT @pIDCarreta
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbCarretaTransportadora
          WHERE  Id = @pIdCarreta
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbCarretaTransportadora
          WHERE  Id = @pIdCarreta
      END 
GO
/****** Object:  StoredProcedure [dbo].[spCartoes]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spCartoes
CREATE PROCEDURE [dbo].[spCartoes] @pOP              NVARCHAR(20)
                                  ,@pID             UNIQUEIDENTIFIER
                                  ,@pIdposto        UNIQUEIDENTIFIER=NULL
                                  ,@pOperadora      UNIQUEIDENTIFIER=NULL
                                  ,@pTipo           NVARCHAR(2)=NULL
                                  ,@pDescricao      NVARCHAR(100)=NULL
                                  ,@pLote           NVARCHAR(20)=NULL
                                  ,@pData           SMALLDATETIME=NULL
                                  ,@pDataVencimento SMALLDATETIME=NULL
                                  ,@pValor          SMALLMONEY=NULL
                                  ,@pValorLiquido   SMALLMONEY=NULL
                                  ,@pConciliado     BIT = 0
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
				SET @pID = newid()
                INSERT INTO tbCartoes
                            (Id
                             ,idPosto
                             ,IdOperadora
                             ,Tipo
                             ,Descricao
                             ,Data
                             ,DataVencimento
                             ,Lote
                             ,Valor
                             ,ValorLiquido
                             ,Conciliado)
                VALUES      (@pID
                             ,@pidPosto
                             ,@pOperadora
                             ,@pTipo
                             ,@pDescricao
                             ,@pData
                             ,@pDataVencimento
                             ,@pLote
                             ,@pValor
                             ,@pValorLiquido
                             ,@pConciliado)

                SELECT @pID
            END
          ELSE
            BEGIN
                UPDATE tbCartoes
                SET    IdPosto = @pIdPosto
                       ,IdOperadora = @pOperadora
                       ,Tipo = @pTipo
                       ,Descricao = @pDescricao
                       ,Data = @pData
                       ,DataVencimento = @pDataVencimento
                       ,Lote = @pLote
                       ,Valor = @pValor
                       ,ValorLiquido = @pValorLiquido
                       ,Conciliado = @pConciliado
                WHERE  id = @pID

                SELECT @pid
            END
      END
    ELSE IF @pOP = 'Atualizar'
      BEGIN
          UPDATE tbCartoes
          SET    Descricao = @pDescricao
                 ,Data = @pData
                 ,DataVencimento = @pData
                 ,Valor = @pValor
                 ,ValorLiquido = @pValor
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbCartoes
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbCartoes
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spCheques]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spCheques
CREATE PROCEDURE [dbo].[spCheques] @pOP             NVARCHAR(20)
                                  ,@pID            UNIQUEIDENTIFIER
                                  ,@pNumeroCheque  NVARCHAR(50)=NULL
                                  ,@pData          SMALLDATETIME=NULL
                                  ,@pValor         SMALLMONEY=NULL
                                  ,@pContabancaria UNIQUEIDENTIFIER=NULL
                                  ,@pNominal       NVARCHAR(50)=NULL
                                  ,@pUtilizacao    NVARCHAR(200)=NULL
                                  ,@pAssinatura    NVARCHAR(20)=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbCheques
                            (NumeroCheque
                             ,Data
                             ,Valor
                             ,IdContaBancaria
                             ,Nominal
                             ,Utilizacao
                             ,Assinatura)
                VALUES      (@pNumeroCheque
                             ,@pData
                             ,@pValor
                             ,@pContaBancaria
                             ,@pNominal
                             ,@pUtilizacao
                             ,@pAssinatura)
            END
          ELSE
            BEGIN
                UPDATE tbCheques
                SET    NumeroCheque = @pNumeroCheque
                       ,Data = @pData
                       ,Valor = @pValor
                       ,IdContaBancaria = @pContaBancaria
                       ,Nominal = @pNominal
                       ,Utilizacao = @pUtilizacao
                       ,Assinatura = @pAssinatura
                WHERE  id = @pID
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbCheques
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbCheques
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spCidades]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spCidades
CREATE PROCEDURE [dbo].[spCidades] @pOP            NVARCHAR(20)
                                  ,@pID           UNIQUEIDENTIFIER
                                  ,@pDescricao    NVARCHAR(50)=NULL
                                  ,@pUF           CHAR(2)=NULL
                                  ,@pCodigoIBGE   NVARCHAR(50) =NULL
                                  ,@pDestinoFrete BIT = 0
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
				SET @pID = newid()
                INSERT INTO tbCidades
                            (Descricao
                             ,UF
                             ,CodigoIBGE
                             ,DestinoFrete)
                VALUES      (@pDescricao
                             ,@pUF
                             ,@pCodigoIBGE
                             ,@pDestinoFrete)

                SELECT @pID
            END
          ELSE
            BEGIN
                UPDATE tbCidades
                SET    Descricao = @pDescricao
                       ,UF = @pUF
                       ,CodigoIBGE = @pCodigoIBGE
                       ,DestinoFrete = @pDestinoFrete
                WHERE  id = @pID

                SELECT @pid
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbCidades
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbCidades
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spColaborador]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spColaborador
CREATE PROCEDURE [dbo].[spColaborador] @pOP                  NVARCHAR(20)
                                      ,@pIDEntidade         UNIQUEIDENTIFIER
                                      ,@pIdposto            UNIQUEIDENTIFIER=NULL
                                      ,@pCTPS               NVARCHAR(20)=NULL
                                      ,@pPIS                NVARCHAR(20)=NULL
                                      ,@pTitEleitor         NVARCHAR(25)=NULL
                                      ,@pFuncao             NVARCHAR(30)=NULL
                                      ,@pAdmissao           SMALLDATETIME=NULL
                                      ,@pSalario            SMALLMONEY=NULL
                                      ,@pPercPericulosidade FLOAT=NULL
                                      ,@pAdicNoturno        FLOAT=NULL
                                      ,@pQCaixa             FLOAT=NULL
                                      ,@pSalFamilia         SMALLMONEY=NULL
                                      ,@pBonificacao        SMALLMONEY=NULL
                                      ,@pPremio             SMALLMONEY=NULL
                                      ,@pAjudaCusto         SMALLMONEY
                                      ,@pidHorario          UNIQUEIDENTIFIER=NULL
                                      ,@pFolguista          BIT=NULL
                                      ,@pGerente            BIT=NULL
                                      ,@pContador           BIT=NULL
                                      ,@pFrentista          BIT=NULL
                                      ,@pFerias             SMALLDATETIME=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pidEntidade = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbFuncs
                            (IDEntidade
                             ,idPosto
                             ,CTPS
                             ,PIS
                             ,TitEleitor
                             ,Funcao
                             ,Admissao
                             ,Salario
                             ,PercPericulosidade
                             ,Adicnoturno
                             ,QCaixa
                             ,SalFamilia
                             ,Bonificacao
                             ,Premio
                             ,AjudaCusto
                             ,idHorario
                             ,Folguista
                             ,Gerente
                             ,Contador
                             ,Frentista
                             ,Ferias)
                VALUES      (@pIDEntidade
                             ,@pidPosto
                             ,@pCTPS
                             ,@pPIS
                             ,@pTitEleitor
                             ,@pFuncao
                             ,@pAdmissao
                             ,@pSalario
                             ,@pPercPericulosidade
                             ,@pAdicnoturno
                             ,@pQCaixa
                             ,@pSalFamilia
                             ,@pBonificacao
                             ,@pPremio
                             ,@pAjudaCusto
                             ,@pidHorario
                             ,@pFolguista
                             ,@pGerente
                             ,@pContador
                             ,@pFrentista
                             ,@pFerias)
            END
          ELSE
            BEGIN
                UPDATE tbFuncs
                SET    idPosto = @pidPosto
                       ,CTPS = @pCTPS
                       ,PIS = @pPIS
                       ,TitEleitor = @pTitEleitor
                       ,Funcao = @pFuncao
                       ,Admissao = @pAdmissao
                       ,Salario = @pSalario
                       ,Percpericulosidade = @pPercPericulosidade
                       ,AdicNoturno = @pAdicNoturno
                       ,QCaixa = @pQCaixa
                       ,SalFamilia = @pSalFamilia
                       ,Bonificacao = @pBonificacao
                       ,Premio = @pPremio
                       ,AjudaCusto = @pAjudaCusto
                       ,idHorario = @pidHorario
                       ,Folguista = @pFolguista
                       ,Gerente = @pGerente
                       ,Contador = @pContador
                       ,Frentista = @pFrentista
                       ,Ferias = @pFerias
                WHERE  idEntidade = @pidEntidade
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbFuncs
          WHERE  idEntidade = @pidEntidade
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbFuncs
          WHERE  idEntidade = @pidEntidade
      END 
GO
/****** Object:  StoredProcedure [dbo].[spColaboradorContacorrente]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spColaboradorContacorrente]
@pOP nvarchar(20),
@pid int,
@pidPosto int=Null,
@pidEntidade int=Null,
@pDescricao nvarchar(50)=Null,
@pidCaixa int=Null,
@pValor smallmoney=Null,
@pPago bit=Null,
@pTipo char(1)=Null

as
If @pOp = 'Salvar'
	   begin
	     if @pID = 0
	         begin
				insert into tbColaboradorDifCaixa (idPosto, idEntidade, Descricao, idCaixa, Valor, Pago, Tipo) values (@pidPosto, @pidEntidade, @pDescricao, @pidCaixa, @pValor, @pPago, @pTipo)
	         end
	      else
	         begin
				Update tbColaboradorDifCaixa set idPosto = @pidPosto, idEntidade = @pidEntidade, Descricao = @pDescricao, idCaixa = @pidCaixa, Valor = @pValor, Pago = @pPago, Tipo = @pTipo where id=@pID
	         end
	   
	   end
	else if @pOP = 'Selecionar'
	   begin
	     Select * from tbColaboradorDifCaixa where id=@pID   
	   end
	

	else if @pOP = 'Excluir'
	   begin
	     Delete from tbColaboradorDifCaixa where id=@pID
	   end
GO
/****** Object:  StoredProcedure [dbo].[spConcorrente]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spConcorrente
CREATE PROCEDURE [dbo].[spConcorrente] @pOP        NVARCHAR(20)
                                      ,@pID       UNIQUEIDENTIFIER
                                      ,@pNome     NVARCHAR(100)=NULL
                                      ,@pEndereco NVARCHAR(100)=NULL
                                      ,@pBairro   NVARCHAR(60)=NULL
                                      ,@pCidade   UNIQUEIDENTIFIER=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
				SET @pid = newid()
                INSERT INTO tbConcorrentes
                            (Id
                             ,Nome
                             ,Endereco
                             ,Bairro
                             ,IdCidade)
                VALUES      (@pID
                             ,@pNome
                             ,@pEndereco
                             ,@pBairro
                             ,@pCidade)

                INSERT INTO tbConcorrentesPreco
                            (IdConcorrente
                             ,Gasolina
                             ,GasolinaAditivada
                             ,Alcool
                             ,Diesel
                             ,DieselFiltrado
                             ,Observacoes)
                VALUES      (@pID
                             ,0
                             ,0
                             ,0
                             ,0
                             ,0
                             ,'')

                SELECT @pID
            END
          ELSE
            BEGIN
                UPDATE tbConcorrentes
                SET    Nome = @pNome
                       ,Endereco = @pEndereco
                       ,Bairro = @pBairro
                       ,IdCidade = @pCidade
                WHERE  id = @pID

                SELECT @pid
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT id
                 ,Nome
                 ,Endereco
                 ,Bairro
                 ,IdCidade
          FROM   tbConcorrentes
          WHERE  ( id = @pID )
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbConcorrentes
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spConcorrentesPreco]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spConcorrentesPreco
CREATE PROCEDURE [dbo].[spConcorrentesPreco] @pOP                 NVARCHAR(20)
                                            ,@pID                UNIQUEIDENTIFIER
                                            ,@pidConcorrente     UNIQUEIDENTIFIER=NULL
                                            ,@pGasolina          SMALLMONEY=NULL
                                            ,@pGasolinaAditivada SMALLMONEY=NULL
                                            ,@pAlcool            SMALLMONEY=NULL
                                            ,@pDiesel            SMALLMONEY=NULL
                                            ,@pDieselFiltrado    SMALLMONEY=NULL
                                            ,@pObservacoes       NVARCHAR(500)
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbConcorrentesPreco
                            (idConcorrente
                             ,Gasolina
                             ,GasolinaAditivada
                             ,Alcool
                             ,Diesel
                             ,DieselFiltrado
                             ,Observacoes)
                VALUES      (@pidConcorrente
                             ,@pGasolina
                             ,@pGasolinaAditivada
                             ,@pAlcool
                             ,@pDiesel
                             ,@pDieselFiltrado
                             ,@pObservacoes)
            END
          ELSE
            BEGIN
                UPDATE tbConcorrentesPreco
                SET    idConcorrente = @pidConcorrente
                       ,Gasolina = @pGasolina
                       ,GasolinaAditivada = @pGasolinaAditivada
                       ,Alcool = @pAlcool
                       ,Diesel = @pDiesel
                       ,DieselFiltrado = @pDieselFiltrado
                       ,Observacoes = @pObservacoes
                WHERE  id = @pID
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbCocorrentesPreco
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbConcorrentesPreco
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spControleTinta]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spControleTinta]
@pOP nvarchar(20),
@pid int,
@pidPosto int=Null,
@pCor nvarchar(20)=Null,
@pQuantidade nvarchar(50)=Null,
@pData smalldatetime=Null

as
If @pOp = 'Salvar'
	   begin
	     if @pID = 0
	         begin
				insert into tbControleTintas (idPosto, Cor, Quantidade, Data) values  (@pidPosto, @pCor, @pQuantidade, @pData )
	         end
	      else
	         begin
				Update tbControleTintas set idPosto = @pidPosto, Cor = @pCor, Quantidade = @pQuantidade, Data = @pData where id=@pID
	         end
	   
	   end
	else if @pOP = 'Selecionar'
	   begin
	     Select * from tbControleTintas where id=@pID   
	   end
	

	else if @pOP = 'Excluir'
	   begin
	     Delete from tbControleTintas where id=@pID
	   end
GO
/****** Object:  StoredProcedure [dbo].[spConvenios]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spConvenios
CREATE PROCEDURE [dbo].[spConvenios] @pOP					NVARCHAR(30)
                                    ,@pID					UNIQUEIDENTIFIER = NULL
                                    ,@pDescricao			NVARCHAR(100)= NULL
                                    ,@pGasolina				MONEY = NULL
                                    ,@pAlcool				MONEY = NULL
                                    ,@pDiesel				MONEY = NULL
                                    ,@pGasolinaAditivada    MONEY = NULL
AS
    IF @pOP = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                SET @pID = newid()
                INSERT INTO tbConvenios
                            (Id
                             ,Descricao
                             ,Gasolina
                             ,Alcool
                             ,Diesel
                             ,GasolinaAditivada )
                VALUES      (@pID
                             ,@pDescricao
                             ,@pGasolina
                             ,@pAlcool
                             ,@pDiesel
                             ,@pGasolinaAditivada)

                SELECT @pID
            END
          ELSE
            BEGIN
                UPDATE tbConvenios
                SET    Descricao = @pDescricao
                       ,Gasolina = @pGasolina
                       ,Alcool = @pAlcool
                       ,Diesel = @pDiesel
                       ,GasolinaAditivada = @pGasolinaAditivada
                WHERE  id = @pID

                SELECT @pID
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                SELECT *
                FROM   tbConvenios
            END
          ELSE
            BEGIN
                SELECT *
                FROM   tbConvenios
                WHERE  id = @pID
            END
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbConvenio
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spConveniosUsuarios]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spConveniosUsuarios
CREATE PROCEDURE [dbo].[spConveniosUsuarios] @pIDEntidade  UNIQUEIDENTIFIER
                                            ,@pIDConvenio UNIQUEIDENTIFIER
AS
    SELECT ID
           ,Descricao
           ,Gasolina
           ,Alcool
           ,Diesel
		   ,GasolinaAditivada
           ,(SELECT tbProdutosPostos.PrecoVenda
             FROM   tbProdutosPostos
                    INNER JOIN tbEntidades
                            ON tbProdutosPostos.idPosto =
                               tbEntidades.idPostoCadastro
                    INNER JOIN tbProdutos
                            ON tbProdutosPostos.idProduto =
                               tbProdutos.Id
             WHERE  ( tbProdutos.Descricao = 'Gasolina comum' )
                AND ( tbEntidades.Id = @pIDEntidade ))   AS PrecoGasolina
           ,(SELECT tbProdutosPostos_2.PrecoVenda
             FROM   tbProdutosPostos AS tbProdutosPostos_2
                    INNER JOIN tbEntidades AS tbEntidades_2
                            ON tbProdutosPostos_2.idPosto =
                               tbEntidades_2.idPostoCadastro
                    INNER JOIN tbProdutos
                            ON tbProdutosPostos_2.idProduto =
                               tbProdutos.Id
             WHERE  ( tbProdutos.Descricao = 'Etanol comum' )
                AND ( tbEntidades_2.Id = @pIDEntidade )) AS PrecoAlcool
           ,(SELECT tbProdutosPostos_1.PrecoVenda
             FROM   tbProdutosPostos AS tbProdutosPostos_1
                    INNER JOIN tbEntidades AS tbEntidades_1
                            ON tbProdutosPostos_1.idPosto =
                               tbEntidades_1.idPostoCadastro
                    INNER JOIN tbProdutos
                            ON tbProdutosPostos_1.idProduto =
                               tbProdutos.Id
             WHERE  ( tbProdutos.Descricao = 'Diesel comum' )
                AND ( tbEntidades_1.Id = @pIDEntidade )) AS PrecoDiesel
		   ,(SELECT tbProdutosPostos.PrecoVenda
             FROM   tbProdutosPostos
                    INNER JOIN tbEntidades
                            ON tbProdutosPostos.idPosto =
                               tbEntidades.idPostoCadastro
                    INNER JOIN tbProdutos
                            ON tbProdutosPostos.idProduto =
                               tbProdutos.Id
             WHERE  ( tbProdutos.Descricao = 'Gasolina aditivada' )
                AND ( tbEntidades.Id = @pIDEntidade )) AS PrecoGasolinaAditivada
    FROM   tbConvenios
    WHERE  id = @pIDConvenio 
GO
/****** Object:  StoredProcedure [dbo].[spDespesa]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spDespesa
CREATE PROCEDURE [dbo].[spDespesa] @pOP          NVARCHAR(20)
                                  ,@pID         UNIQUEIDENTIFIER
                                  ,@pIDEntidade UNIQUEIDENTIFIER=NULL
                                  ,@pIdposto    UNIQUEIDENTIFIER=NULL
                                  ,@pIDCaixa    UNIQUEIDENTIFIER=NULL
                                  ,@pValor      SMALLMONEY=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbDespesa
                            (idEntidade
                             ,idPosto
                             ,idCaixa
                             ,Valor)
                VALUES      (@pidEntidade
                             ,@pidPosto
                             ,@pidCaixa
                             ,@pValor)
            END
          ELSE
            BEGIN
                UPDATE tbDespesa
                SET    idEntidade = @pidEntidade
                       ,idPosto = @pidPosto
                       ,idCaixa = @pidCaixa
                       ,Valor = @pValor
                WHERE  id = @pID
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbDespesa
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbDespesa
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spDespesaItem]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spDespesaItem
CREATE PROCEDURE [dbo].[spDespesaItem] @pOP          NVARCHAR(20)
                                      ,@pID         UNIQUEIDENTIFIER
                                      ,@pidDespesa  UNIQUEIDENTIFIER=NULL
                                      ,@pIdProduto  UNIQUEIDENTIFIER=NULL
                                      ,@pQTD        INT=NULL
                                      ,@pPrecoCusto SMALLMONEY=NULL
                                      ,@pPrecoVenda SMALLMONEY=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbDespesaItens
                            (idDespesa
                             ,idProduto
                             ,QTD
                             ,PrecoCusto
                             ,PrecoVenda)
                VALUES      (@pidDespesa
                             ,@pidProduto
                             ,@pQTD
                             ,@pPrecoCusto
                             ,@pPrecoVenda)
            END
          ELSE
            BEGIN
                UPDATE tbDespesaItens
                SET    idDespesa = @pidDespesa
                       ,idProduto = @pidProduto
                       ,QTD = @pQTD
                       ,PrecoCusto = @pPrecoCusto
                       ,PrecoVenda = @pPrecoVenda
                WHERE  id = @pID
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbDespesaItens
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbDespesaItens
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spDespesasLimite]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spDespesasLimite
CREATE PROCEDURE [dbo].[spDespesasLimite] @pOP            NVARCHAR(20)
                                         ,@pID           UNIQUEIDENTIFIER = NULL
                                         ,@pAno          INT = NULL
                                         ,@pMes          INT = NULL
                                         ,@pIDPosto      UNIQUEIDENTIFIER = NULL
                                         ,@pIDHistorico  UNIQUEIDENTIFIER = NULL
                                         ,@pValor        MONEY = NULL
                                         ,@pObservacao   NVARCHAR(4000) = NULL
                                         ,@pTirarSalario CHAR(1)='N'
AS
    DECLARE @tblCaixas TABLE(IdCaixa uniqueidentifier)
    DECLARE @pAcrescimo MONEY

    IF @pIDPosto = dbo.GuidEmpty()
      BEGIN
          INSERT INTO @tblCaixas(IdCaixa)
          SELECT Id
          FROM   tbCaixa
          WHERE  Month(dia) = @pMes
             AND Year(dia) = @pAno
             
          SET @pIDposto = NULL
      END
    ELSE
      BEGIN
          INSERT INTO @tblCaixas(IdCaixa)
          SELECT Id
          FROM   tbCaixa
          WHERE  Month(dia) = @pMes
             AND Year(dia) = @pAno
             
      END

    SET @pID= Isnull((SELECT TOP 1 id
                      FROM   tbDespesasLimite
                      WHERE  ano = @pAno
                         AND Mes = @pMes
                         AND idPosto = @pIDPosto
                         AND idHistorico = @pIDHistorico), dbo.GuidEmpty())

    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbDespesasLimite
                            (Ano
                             ,Mes
                             ,IdPOsto
                             ,IdHistorico
                             ,Valor
                             ,Acrescimo
                             ,Observacao)
                VALUES      (@pAno
                             ,@pMes
                             ,@pIDPosto
                             ,@pIDHistorico
                             ,@pValor
                             ,0
                             ,@pObservacao)
            END
          ELSE
            BEGIN
                SET @pAcrescimo = (SELECT Isnull(valor, 0)
                                   FROM   tbDespesasLimite
                                   WHERE  id = @pID)

                IF @pValor > @pAcrescimo
                  BEGIN
                      SET @pAcrescimo = @pValor - @pAcrescimo
                  END
                ELSE
                  SET @pAcrescimo = 0

                UPDATE tbDespesasLimite
                SET    Ano = @pAno
                       ,Mes = @pMes
                       ,IDPosto = @pIDPosto
                       ,IDHistorico = @pIDHistorico
                       ,Valor = @pValor - @pAcrescimo
                       ,Acrescimo = @pAcrescimo
                       ,Observacao = @pObservacao
                WHERE  id = @pID
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbDespesasLimite
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'ListarCentral'
      BEGIN
          IF @pIDHistorico = dbo.GuidEmpty()
            BEGIN
                SET @pIDHistorico=NULL
            END
          
          SELECT Id
                 ,Descricao
                 ,ISNULL ((SELECT Sum(Valor + Acrescimo)
                           FROM   tbDespesasLimite
                           WHERE  (idPosto = @pIDPosto OR @pIDPosto IS NULL)
                              AND TBDespesasLimite.Ano = @pAno
                              AND tbDespesasLimite.Mes = @pMes
                              AND tbHistoricos.Id =
                          tbDespesasLimite.IdHistorico), 0
                  )
                  AS
                  Valor
                 ,Isnull ((SELECT TOP 1 Observacao
                           FROM   tbDespesasLimite
                           WHERE  (idPosto = @pIDPosto OR @pIDPosto IS NULL)
                              AND TBDespesasLimite.Ano = @pAno
                              AND tbDespesasLimite.Mes = @pMes
                              AND tbHistoricos.Id =
                          tbDespesasLimite.IdHistorico),
                  '')
                  AS
                  Observacao
                 ,ISNULL ((SELECT SUM(Valor)
                           FROM   tbContasPagarReceber
                           WHERE  (idPosto = @pIDPosto OR @pIDPosto IS NULL)
                              AND ( idPedCaixa IN (SELECT IdCaixa FROM @tblCaixas)
                                  )
                              AND ( idHistorico = tbHistoricos.Id )), 0)
                  AS
                  ValorGasto
          FROM   tbHistoricos
          WHERE  ativo = 1
             AND Tipo = 'P'
             AND (Id = @pIDHistorico OR @pIDHistorico IS NULL)
          ORDER  BY Descricao
      END
    ELSE IF @pOP = 'ListarPosto'
      BEGIN
          IF @pIDHistorico = dbo.GuidEmpty()
            BEGIN
                SET @pIDHistorico=NULL
            END
          
          IF @pTirarSalario = 'S'
            BEGIN
                SELECT Id
                       ,Descricao
                       ,ISNULL ((SELECT Sum(Valor + Acrescimo)
                                 FROM   tbDespesasLimite
                                 WHERE  idPosto = @pIDposto
                                    AND TBDespesasLimite.Ano = @pAno
                                    AND tbDespesasLimite.Mes = @pMes
                                    AND tbHistoricos.Id =
                                tbDespesasLimite.IdHistorico), 0
                        )
                        AS Valor
                       ,Isnull ((SELECT TOP 1 Observacao
                                 FROM   tbDespesasLimite
                                 WHERE  idPosto = @pIDPosto
                                    AND TBDespesasLimite.Ano = @pAno
                                    AND tbDespesasLimite.Mes = @pMes
                                    AND ( tbHistoricos.Id =
                                tbDespesasLimite.IdHistorico )),
                        0)
                        AS
                        Observacao
                       ,ISNULL ((SELECT SUM(Valor)
                                 FROM   tbContasPagarReceber
                                 WHERE  ( idPosto = @pIDPosto OR @pIDPosto IS NULL )
                                    AND ( idPedCaixa IN (SELECT IdCaixa FROM @tblCaixas)
                                        )
                                    AND ( idHistorico = tbHistoricos.Id )), 0)
                        AS ValorGasto
                FROM   tbHistoricos
                WHERE  ativo = 1
                   AND Tipo = 'P'
                   AND (Id = @pIDHistorico OR @pIDHistorico IS NULL)
                   AND ISNULL ((SELECT Valor
                                FROM   tbDespesasLimite
                                WHERE  ( idPosto = @pIDPosto )
                                   AND ano = @pAno
                                   AND mes = @pMes
                                   AND ( tbHistoricos.Id = tbDespesasLimite.IdHistorico )), 0) > 0
                ORDER  BY Descricao
            END
          ELSE
            BEGIN
                SELECT Id
                       ,Descricao
                       ,ISNULL ((SELECT Sum(Valor + Acrescimo)
                                 FROM   tbDespesasLimite
                                 WHERE  idPosto = @pIDposto
                                    AND TBDespesasLimite.Ano = @pAno
                                    AND tbDespesasLimite.Mes = @pMes
                                    AND tbHistoricos.Id =
                                tbDespesasLimite.IdHistorico), 0
                        )
                        AS Valor
                       ,Isnull ((SELECT TOP 1 Observacao
                                 FROM   tbDespesasLimite
                                 WHERE  idPosto = @pIDPosto
                                    AND TBDespesasLimite.Ano = @pAno
                                    AND tbDespesasLimite.Mes = @pMes
                                    AND ( tbHistoricos.Id =
                                tbDespesasLimite.IdHistorico )),
                        0)
                        AS
                        Observacao
                       ,ISNULL ((SELECT SUM(Valor)
                                 FROM   tbContasPagarReceber
                                 WHERE  ( idPosto = @pIDPosto OR @pIDPosto IS NULL )
                                    AND ( idPedCaixa IN (SELECT IdCaixa FROM @tblCaixas)
                                        )
                                    AND ( idHistorico = tbHistoricos.Id )), 0)
                        AS ValorGasto
                FROM   tbHistoricos
                WHERE  ativo = 1
                   AND Tipo = 'P'
                   AND (Id = @pIDHistorico OR @pIDHistorico IS NULL)
                   AND ISNULL ((SELECT Valor
                                FROM   tbDespesasLimite
                                WHERE  ( idPosto = @pIDPosto )
                                   AND ano = @pAno
                                   AND mes = @pMes
                                   AND ( tbHistoricos.Id = tbDespesasLimite.IdHistorico )), 0) > 0
                ORDER  BY Descricao
            END
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbDespesasLimite
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spDespesasPosto]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spDespesasPosto
CREATE PROCEDURE [dbo].[spDespesasPosto] @pOP           NVARCHAR(20)
                                        ,@pID          UNIQUEIDENTIFIER = NULL
                                        ,@pAno         INT = NULL
                                        ,@pMes         INT = NULL
                                        ,@pIDPosto     UNIQUEIDENTIFIER = NULL
                                        ,@pIDHistorico UNIQUEIDENTIFIER = NULL
                                        ,@pValor       MONEY = NULL
                                        ,@pObservacao  NVARCHAR(4000) = NULL
AS
    DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
    DECLARE @pAcrescimo MONEY

    IF @pIDPosto = (SELECT Id from tbPostos WHERE NomeUsual = 'Central')
      BEGIN
          INSERT INTO @tblCaixas(IdCaixa)
          SELECT Id
          FROM   tbCaixa
          WHERE  Month(dia) = @pMes
             AND Year(dia) = @pAno
          
          SET @pIDposto = NULL
      END
    ELSE
      BEGIN
          INSERT INTO @tblCaixas(IdCaixa)
          SELECT Id
          FROM   tbCaixa
          WHERE  Month(dia) = @pMes
             AND Year(dia) = @pAno
      END

    SET @pID= Isnull((SELECT TOP 1 Id
                      FROM   tbDespesasLimite
                      WHERE  ano = @pAno
                         AND Mes = @pMes
                         AND idPosto = @pIDPosto
                         AND idHistorico = @pIDHistorico), dbo.GuidEmpty())

    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbDespesasLimite
                            (Ano
                             ,Mes
                             ,IdPosto
                             ,IdHistorico
                             ,Valor
                             ,Acrescimo
                             ,Observacao)
                VALUES      (@pAno
                             ,@pMes
                             ,@pIDPosto
                             ,@pIDHistorico
                             ,@pValor
                             ,0
                             ,@pObservacao)
            END
          ELSE
            BEGIN
                SET @pAcrescimo = (SELECT Isnull(valor, 0)
                                   FROM   tbDespesasLimite
                                   WHERE  id = @pID)

                IF @pValor > @pAcrescimo
                  BEGIN
                      SET @pAcrescimo = @pValor - @pAcrescimo
                  END
                ELSE
                  SET @pAcrescimo = 0

                UPDATE tbDespesasLimite
                SET    Ano = @pAno
                       ,Mes = @pMes
                       ,IDPosto = @pIDPosto
                       ,IDHistorico = @pIDHistorico
                       ,Valor = @pValor - @pAcrescimo
                       ,Acrescimo = @pAcrescimo
                       ,Observacao = @pObservacao
                WHERE  id = @pID
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbDespesasLimite
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'ListarCentral'
      BEGIN
          IF @pIDHistorico = dbo.GuidEmpty()
            BEGIN
                SET @pIDHistorico=NULL
            END
            
          SELECT Id
                 ,Descricao
                 ,ISNULL ((SELECT Sum(Valor + Acrescimo)
                           FROM   tbDespesasLimite
                           WHERE  (idPosto = @pIDPosto OR @pIDPosto IS NULL)
                              AND TBDespesasLimite.Ano = @pAno
                              AND tbDespesasLimite.Mes = @pMes
                              AND tbHistoricos.Id = tbDespesasLimite.IdHistorico), 0
                  )
                  AS
                  Valor
                 ,Isnull ((SELECT TOP 1 Observacao
                           FROM   tbDespesasLimite
                           WHERE  (idPosto = @pIDPosto OR @pIDPosto IS NULL)
                              AND TBDespesasLimite.Ano = @pAno
                              AND tbDespesasLimite.Mes = @pMes
                              AND tbHistoricos.Id =
                          tbDespesasLimite.IdHistorico),
                  '')
                  AS
                  Observacao
                 ,ISNULL ((SELECT SUM(Valor)
                           FROM   tbContasPagarReceber
                           WHERE  (idPosto = @pIDPosto OR @pIDPosto IS NULL)
                              AND ( idPedCaixa IN (SELECT IdCaixa FROM @tblCaixas)
                                  )
                              AND ( idHistorico = tbHistoricos.Id )), 0)
                  AS
                  ValorGasto
          FROM   tbHistoricos
          WHERE  ativo = 1
             AND Tipo = 'P'
             AND (Id = @pIDHistorico OR @pIDHistorico IS NULL)
          ORDER  BY Descricao
      END
    ELSE IF @pOP = 'ListarPosto'
      BEGIN
          IF @pIDHistorico = dbo.GuidEmpty()
            BEGIN
                SET @pIDHistorico=NULL
            END

          SELECT Id
                 ,Descricao
                 ,ISNULL ((SELECT Sum(Valor + Acrescimo)
                           FROM   tbDespesasLimite
                           WHERE  idPosto = @pIDposto
                              AND TBDespesasLimite.Ano = @pAno
                              AND tbDespesasLimite.Mes = @pMes
                              AND tbHistoricos.Id =
                          tbDespesasLimite.IdHistorico), 0
                  )
                  AS Valor
                 ,Isnull ((SELECT TOP 1 Observacao
                           FROM   tbDespesasLimite
                           WHERE  idPosto = @pIDPosto
                              AND TBDespesasLimite.Ano = @pAno
                              AND tbDespesasLimite.Mes = @pMes
                              AND ( tbHistoricos.Id =
                          tbDespesasLimite.IdHistorico )),
                  0)
                  AS
                  Observacao
                 ,ISNULL ((SELECT SUM(Valor)
                           FROM   tbContasPagarReceber
                           WHERE  (idPosto = @pIDPosto OR @pIDPosto IS NULL)
                              AND ( idPedCaixa IN (SELECT IdCaixa FROM @tblCaixas)
                                  )
                              AND ( idHistorico = tbHistoricos.Id )), 0)
                  AS ValorGasto
          FROM   tbHistoricos
          WHERE  ativo = 1
             AND Tipo = 'P'
             AND (Id = @pIDHistorico OR @pIDHistorico IS NULL)
             AND ISNULL ((SELECT Valor
                          FROM   tbDespesasLimite
                          WHERE  ( idPosto = @pIDPosto )
                             AND ano = @pAno
                             AND mes = @pMes
                             AND ( tbHistoricos.Id =
                 tbDespesasLimite.IdHistorico )),
                 0) > 0
          ORDER  BY Descricao
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbDespesasLimite
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[SpDiferencaCaixa]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



--rptDiferencaCaixa
CREATE PROCEDURE [dbo].[SpDiferencaCaixa] @pIdposto      UNIQUEIDENTIFIER
                                          ,@pDataINI     SMALLDATETIME
                                          ,@pDataFim     SMALLDATETIME
                                          ,@pColaborador UNIQUEIDENTIFIER
AS
    IF @pIDposto = dbo.GuidEmpty()
      BEGIN
          SET @pIDposto = NULL
      END
    
    IF @pColaborador = dbo.GuidEmpty()
      BEGIN
          SET @pColaborador = NULL
      END
    
    SELECT tbColaboradoresDifCaixa_1.id
           ,dbo.tbPostos.Id as idposto
           ,dbo.tbPostos.NomeUsual                                   AS Posto
           ,Colaboradores.RzSocial                                   AS
            Colaborador
           ,tbColaboradoresDifCaixa_1.valor
           ,tbColaboradoresDifCaixa_1.Descricao
           ,tbCaixa_1.Dia
           ,tbCaixa_1.Id as idcaixa
           ,tbCaixa_1.TCaixa
           ,tbColaboradoresDifCaixa_1.Tipo
           ,tbColaboradoresDifCaixa_1.idEntidade
           ,ISNULL ((SELECT SUM(dbo.tbColaboradoresDifCaixa.valor) AS Expr1
                     FROM   dbo.tbColaboradoresDifCaixa with(nolock)
                            INNER JOIN dbo.tbCaixa  with(nolock)
                                    ON dbo.tbColaboradoresDifCaixa.idCaixa =
                                       dbo.tbCaixa.Id
                     WHERE  ( dbo.tbColaboradoresDifCaixa.Tipo = 'C'
                               OR dbo.tbColaboradoresDifCaixa.Tipo = 'D' )
                        AND ( dbo.tbColaboradoresDifCaixa.valor < 0 )
                        AND ( dbo.tbColaboradoresDifCaixa.idEntidade = Colaboradores.Id )
                        AND ( dbo.tbCaixa.Dia < @pDataINI )
                         OR ( dbo.tbColaboradoresDifCaixa.Tipo = 'E' )
                            AND ( dbo.tbColaboradoresDifCaixa.valor > 0 )
                            AND ( dbo.tbColaboradoresDifCaixa.idEntidade = Colaboradores.Id )
                            AND ( dbo.tbCaixa.Dia < @pDataINI )
                         OR ( dbo.tbColaboradoresDifCaixa.Tipo = 'L' )
                            AND ( dbo.tbColaboradoresDifCaixa.idEntidade = Colaboradores.Id )
                            AND ( dbo.tbCaixa.Dia < @pDataINI )), 0) AS
            SaldoAnterior
    FROM   dbo.tbColaboradoresDifCaixa AS tbColaboradoresDifCaixa_1
           INNER JOIN dbo.tbEntidades AS Colaboradores  with(nolock)
                   ON tbColaboradoresDifCaixa_1.idEntidade = Colaboradores.Id
           INNER JOIN dbo.tbPostos  with(nolock)
                   ON tbColaboradoresDifCaixa_1.idPosto = dbo.tbPostos.Id
           INNER JOIN dbo.tbCaixa AS tbCaixa_1  with(nolock)
                   ON tbColaboradoresDifCaixa_1.idCaixa = tbCaixa_1.Id
    WHERE  ( tbColaboradoresDifCaixa_1.Tipo = 'C'
              OR tbColaboradoresDifCaixa_1.Tipo = 'D' )
       AND ( tbColaboradoresDifCaixa_1.valor < 0 )
       AND ( tbColaboradoresDifCaixa_1.idEntidade = @pColaborador OR @pColaborador IS NULL )
       AND ( dbo.tbPostos.Id = @pIDposto OR @pIDposto IS NULL )
       AND ( tbCaixa_1.Dia BETWEEN @pDataINI AND @pDataFIM )
        OR ( tbColaboradoresDifCaixa_1.Tipo = 'E' )
           AND ( tbColaboradoresDifCaixa_1.valor > 0 )
           AND ( tbColaboradoresDifCaixa_1.idEntidade = @pColaborador OR @pColaborador IS NULL )
           AND ( dbo.tbPostos.Id = @pIDposto OR @pIDposto IS NULL )
           AND ( tbCaixa_1.Dia BETWEEN @pDataINI AND @pDataFIM )
        OR ( tbColaboradoresDifCaixa_1.Tipo = 'L' )
           AND ( tbColaboradoresDifCaixa_1.idEntidade = @pColaborador OR @pColaborador IS NULL )
	       AND ( dbo.tbPostos.Id = @pIDposto OR @pIDposto IS NULL )
           AND ( tbCaixa_1.Dia BETWEEN @pDataINI AND @pDataFIM )
    ORDER  BY dbo.tbPostos.NomeUsual
              ,tbCaixa_1.Dia
              ,Colaboradores.NomeUsual 



GO
/****** Object:  StoredProcedure [dbo].[SpDigital]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--SpDigital
CREATE PROCEDURE [dbo].[SpDigital] @pOP          NVARCHAR(20)
                                  ,@pID         UNIQUEIDENTIFIER = NULL
                                  ,@pIDEntidade UNIQUEIDENTIFIER = NULL
                                  ,@pNome       NVARCHAR(50) = NULL
                                  ,@pRG         NVARCHAR(20) = NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbEnroll
                            (IDEntidade
                             ,NomeApresentado
                             ,RG)
                VALUES      (@pIDEntidade
                             ,@pNome
                             ,@pRG )
            END
          ELSE
            BEGIN
                UPDATE tbEnroll
                SET    NomeApresentado = @pNome
                       ,RG = @pRG
                WHERE  id = @pid
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT ID
                 ,NomeApresentado
          FROM   tbEnroll
          WHERE  id = @pid
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbEnroll
          WHERE  id = @pid
      END
    ELSE IF @pOP = 'Listar'
      BEGIN
          SELECT ID
                 ,IDEntidade
                 ,NomeApresentado
                 ,RG
          FROM   tbEnroll
          WHERE  idEntidade = @pIDEntidade
      END 
GO
/****** Object:  StoredProcedure [dbo].[spDocumentos]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spDocumentos
CREATE PROCEDURE [dbo].[spDocumentos] @pOP           NVARCHAR(20)
                                     ,@pID          UNIQUEIDENTIFIER
                                     ,@pIdposto     UNIQUEIDENTIFIER=NULL
                                     ,@pDocumento   IMAGE=NULL
                                     ,@pNomeArquivo NVARCHAR(100)=NULL
                                     ,@pTipo        NVARCHAR(30)=NULL
                                     ,@pFiltro      INT=NULL
                                     ,@pDescricao   NVARCHAR(50)=NULL
                                     ,@pTipoDoc     NVARCHAR(50)=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbDocumentos
                            (idPosto
                             ,Documento
                             ,NomeArquivo
                             ,TIpo
                             ,Filtro
                             ,Descricao
                             ,TipoDoc)
                VALUES      (@pidPosto
                             ,@pDocumento
                             ,@pNomeArquivo
                             ,@pTipo
                             ,@pFiltro
                             ,@pDescricao
                             ,@pTipoDoc)
            END
          ELSE
            BEGIN
                UPDATE tbDocumentos
                SET    idPosto = @pidPosto
                       ,Documento = @pDocumento
                       ,NomeArquivo = @pNomeArquivo
                       ,Tipo = @pTipo
                       ,Filtro = @pFiltro
                       ,Descricao = @pDescricao
                       ,TipoDoc = @pTipoDoc
                WHERE  id = @pID
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbDocumentos
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbDocumentos
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spEntidadeEscalaTrabalho]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spEntidadeEscalaTrabalho
CREATE PROCEDURE [dbo].[spEntidadeEscalaTrabalho] @pID          UNIQUEIDENTIFIER
                                                 ,@pData       SMALLDATETIME
                                                 ,@pIDEntidade UNIQUEIDENTIFIER
                                                 ,@pHorario    UNIQUEIDENTIFIER
                                                 ,@pFolga      BIT = 0
AS
    IF @pID = dbo.GuidEmpty()
      BEGIN
		  SET @pID = newid()
          INSERT INTO tbEscalaTrabalho
                      (Id
                       ,Data
                       ,IDEntidade
                       ,IdHorario
                       ,Folga)
          VALUES     (@pID
                      ,@pData
                      ,@pIDEntidade
                      ,@pHorario
                      ,@pFolga)

          SELECT @pID
      END
    ELSE
      BEGIN
          UPDATE tbEscalaTrabalho
          SET    Data = @pData
                 ,IDEntidade = @pIDEntidade
                 ,IdHorario = @pHorario
                 ,Folga = @pFolga
          WHERE  Id = @pID

          SELECT @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spEntidadePonto]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spEntidadePonto
CREATE PROCEDURE [dbo].[spEntidadePonto] @pOP              NVARCHAR(20) = NULL
                                        ,@pID             UNIQUEIDENTIFIER = NULL
                                        ,@pIDEntidade     UNIQUEIDENTIFIER = NULL
                                        ,@pTipo           NVARCHAR(20) = NULL
                                        ,@pDataTrabalho   SMALLDATETIME = NULL
                                        ,@pData           SMALLDATETIME = NULL
                                        ,@pIdposto        UNIQUEIDENTIFIER = NULL
                                        ,@pFolga          BIT=0
                                        ,@pFalta          BIT=0
                                        ,@pFerias         BIT=0
                                        ,@pAtestado       BIT=0
                                        ,@pAfastado       BIT=0
                                        ,@pAdvertencia    BIT=0
                                        ,@pTipoData       CHAR(1)='E'
                                        ,@pMarcadoIniTrab BIT
                                        ,@pMarcadoIniDesc BIT
                                        ,@pMarcadoFimDesc BIT
                                        ,@pMarcadoFimTrab BIT
AS
    IF @pTipoData = 'S'
      BEGIN
          SET @pData=getdate()
      END

    IF @pOP = 'MarcaPonto'
      BEGIN
          DECLARE @Existe UNIQUEIDENTIFIER

          IF NOT @pDataTrabalho IS NULL
            BEGIN
                SET @Existe = (SELECT id
                               FROM   tbEntidadesPonto
                               WHERE  idEntidade = @pIDEntidade
                                  AND CONVERT(NVARCHAR(10), InicioTrabalho, 103)
                                      =
                                      CONVERT(NVARCHAR(10), @pDataTrabalho, 103)
                              )
            END
          ELSE
            BEGIN
                SET @Existe = (SELECT id
                               FROM   tbEntidadesPonto
                               WHERE  idEntidade = @pIDEntidade
                                  AND CONVERT(NVARCHAR(10), InicioTrabalho, 103)
                                      =
                                      CONVERT(NVARCHAR(10), @pData, 103))
            END

          IF @Existe <> dbo.GuidEmpty()
            BEGIN
                UPDATE tbEntidadesPonto
                SET    MarcadoIniTrab = @pMarcadoIniTrab
                       ,MarcadoIniDesc = @pMarcadoIniDesc
                       ,MarcadoFimDesc = @pMarcadoFimDesc
                       ,MarcadoFimtrab = @pMarcadoFimTrab
                WHERE  id = @Existe

                IF @pTipo = 'InicioTrabalho'
                  BEGIN
                      UPDATE tbEntidadesPonto
                      SET    InicioTrabalho = @pData
                      WHERE  id = @Existe
                  END
                ELSE IF @pTipo = 'InicioAlmoco'
                  BEGIN
                      UPDATE tbEntidadesPonto
                      SET    InicioAlmoco = @pData
                      WHERE  id = @Existe
                  END
                ELSE IF @pTipo = 'FimAlmoco'
                  BEGIN
                      UPDATE tbEntidadesPonto
                      SET    FimAlmoco = @pData
                      WHERE  id = @Existe
                  END
                ELSE IF @pTipo = 'FimTrabalho'
                  BEGIN
                      UPDATE tbEntidadesPonto
                      SET    FimTrabalho = @pData
                      WHERE  id = @Existe
                  END
                ELSE IF @pTipo = 'Folga'
                  BEGIN
                      UPDATE tbEntidadesPonto
                      SET    Folga = @pFolga
                      WHERE  id = @Existe
                  END
                ELSE IF @pTipo = 'Falta'
                  BEGIN
                      UPDATE tbEntidadesPonto
                      SET    Falta = @pFalta
                      WHERE  id = @Existe
                  END
                ELSE IF @pTipo = 'Ferias'
                  BEGIN
                      UPDATE tbEntidadesPonto
                      SET    Ferias = @pFerias
                      WHERE  id = @Existe
                  END
                ELSE IF @pTipo = 'Atestado'
                  BEGIN
                      UPDATE tbEntidadesPonto
                      SET    Atestado = @pAtestado
                      WHERE  id = @Existe
                  END
                ELSE IF @pTipo = 'Afastado'
                  BEGIN
                      UPDATE tbEntidadesPonto
                      SET    Afastado = @pAfastado
                      WHERE  id = @Existe
                  END
                ELSE IF @pTipo = 'Advertencia'
                  BEGIN
                      UPDATE tbEntidadesPonto
                      SET    Advertencia = @pAdvertencia
                      WHERE  id = @Existe
                  END
            END
          ELSE IF @pTipo = 'Folga'
              OR @pTipo = 'Falta'
              OR @pTipo = 'Ferias'
              OR @pTipo = 'Atestado'
              OR @pTipo = 'Afastado'
              OR @pTipo = 'Advertencia'
            BEGIN
                INSERT INTO tbEntidadesPonto
                            (idEntidade
                             ,InicioTrabalho
                             ,InicioAlmoco
                             ,FimAlmoco
                             ,FimTrabalho
                             ,Folga
                             ,Falta
                             ,Ferias
                             ,Atestado
                             ,Afastado
                             ,Advertencia)
                VALUES      (@pIDentidade
                             ,@pData
                             ,NULL
                             ,NULL
                             ,NULL
                             ,@pFolga
                             ,@pFalta
                             ,@pFerias
                             ,@pAtestado
                             ,@pAfastado
                             ,@pAdvertencia )
            END
          ELSE
            BEGIN
                INSERT INTO tbEntidadesPonto
                            (idEntidade
                             ,InicioTrabalho
                             ,InicioAlmoco
                             ,FimAlmoco
                             ,FimTrabalho
                             ,Folga
                             ,Falta
                             ,Ferias
                             ,Atestado
                             ,Afastado
                             ,Advertencia
                             ,MarcadoIniTrab
                             ,MarcadoIniDesc
                             ,MarcadoFimDesc
                             ,MarcadoFimTrab)
                VALUES      (@pIDentidade
                             ,@pData
                             ,NULL
                             ,NULL
                             ,NULL
                             ,@pFolga
                             ,@pFalta
                             ,@pFerias
                             ,@pAtestado
                             ,@pAfastado
                             ,@pAdvertencia
                             ,@pMarcadoInitrab
                             ,@pMarcadoIniDesc
                             ,@pMarcadoFimDesc
                             ,@pMarcadoFimTrab )
            END
      END
    ELSE IF @pOP = 'Seleciona'
      SELECT tbEntidadesPonto.ID
             ,tbEntidades.NomeUsual
             ,CONVERT(NVARCHAR(10), tbEntidadesPonto.InicioTrabalho, 103) AS
              Data
             ,CONVERT(NVARCHAR(10), InicioTrabalho, 8)                    AS
              InicioTrabalho
             ,CONVERT(NVARCHAR(10), InicioAlmoco, 8)                      AS
              InicioAlmoco
             ,CONVERT(NVARCHAR(10), FimAlmoco, 8)                         AS
              FimAlmoco
             ,CONVERT(NVARCHAR(10), FimTrabalho, 8)                       AS
              FimTrabalho
      FROM   tbEntidadesPonto
             INNER JOIN tbEntidades
                     ON tbEntidadesPonto.IDEntidade = tbEntidades.Id
             INNER JOIN tbFuncs
                     ON tbEntidades.Id = tbFuncs.IdEntidade
      WHERE  ( CONVERT(NVARCHAR(10), tbEntidadesPonto.InicioTrabalho, 103) =
                      CONVERT(NVARCHAR(10), @pData, 103) )
         AND ( tbFuncs.IdPosto = @pIDPosto ) 
GO
/****** Object:  StoredProcedure [dbo].[spEquipamento]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spEquipamento
CREATE PROCEDURE [dbo].[spEquipamento] @pOP         NVARCHAR(20)
                                      ,@pID        UNIQUEIDENTIFIER
                                      ,@pDescricao NVARCHAR(50)=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
				SET @pID = newid()
                INSERT INTO tbEquipamentos
                            (Id
                             ,Descricao)
                VALUES      (@pID
                             ,@pDescricao)

                SELECT @pID
            END
          ELSE
            BEGIN
                UPDATE tbEquipamentos
                SET    Descricao = @pDescricao
                WHERE  id = @pID

                SELECT @pId
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbEquipamentos
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbEquipamentos
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spEquipamentoPosto]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spEquipamentoPosto
CREATE PROCEDURE [dbo].[spEquipamentoPosto] @pOP             NVARCHAR(20)
                                           ,@pID            UNIQUEIDENTIFIER
                                           ,@pidEquipamento UNIQUEIDENTIFIER=NULL
                                           ,@pCodigo        INT=NULL
                                           ,@pPosto         UNIQUEIDENTIFIER=NULL
                                           ,@pStatus        INT=NULL
                                           ,@pObs           NVARCHAR(200)=NULL
                                           ,@pPreco         SMALLMONEY=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbEquipamentoPostos
                            (idEquipamento
                             ,Codigo
                             ,IdPosto
                             ,Status
                             ,Obs
                             ,Preco)
                VALUES      (@pidEquipamento
                             ,@pCodigo
                             ,@pPosto
                             ,@pStatus
                             ,@pObs
                             ,@pPreco)
            END
          ELSE
            BEGIN
                UPDATE tbEquipamentoPostos
                SET    idEquipamento = @pidEquipamento
                       ,Codigo = @pCodigo
                       ,IdPosto = @pPosto
                       ,Status = @pStatus
                       ,Obs = @pObs
                       ,Preco = @pPreco
                WHERE  id = @pID
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbEquipamentoPostos
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbEquipamentoPostos
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spEscalaTrabalho]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spEscalaTrabalho
CREATE PROCEDURE [dbo].[spEscalaTrabalho] @pIDEntidade UNIQUEIDENTIFIER
                                         ,@pMes       CHAR(2)
                                         ,@pAno       CHAR(4)
                                         ,@pDiasMes   INT
AS
    SELECT CONVERT(NVARCHAR(10), RIGHT('00' + RTRIM(LTRIM(CONVERT(CHAR(2), Dia))
                                 ), 2)
                                 + '/' + @pMes + '/' + @pAno, 103) AS Data
           ,ISNULL ((SELECT ID
                     FROM   viewEscalaTrabalho
                     WHERE  ( IDEntidade = @pIDEntidade )
                        AND ( Data = CONVERT(NVARCHAR(10),
                                     RIGHT('00' + RTRIM(LTRIM(
                                     CONVERT
                                     (
                                     CHAR
                                     (2),
                                         tbDias.Dia))), 2
                                                  )
                                     + '/' + @pMes + '/' +
                                     @pAno, 103
                                     )
                            )), dbo.GuidEmpty())                                 AS ID
           ,ISNULL ((SELECT Folga
                     FROM   viewEscalaTrabalho
                     WHERE  ( IDEntidade = @pIDEntidade )
                        AND ( Data = CONVERT(NVARCHAR(10),
                                     RIGHT('00' + RTRIM(LTRIM(
                                     CONVERT
                                     (
                                     CHAR
                                     (2),
                                         tbDias.Dia))), 2
                                                  )
                                     + '/' + @pMes + '/' +
                                     @pAno, 103
                                     )
                            )), 0)                                 AS Folga
           ,ISNULL ((SELECT Descricao
                     FROM   viewEscalaTrabalho
                     WHERE  ( IDEntidade = @pIDEntidade )
                        AND ( Data = CONVERT(NVARCHAR(10),
                                     RIGHT('00' + RTRIM(LTRIM(
                                     CONVERT
                                     (
                                     CHAR
                                     (2),
                                         tbDias.Dia))), 2
                                                  )
                                     + '/' + @pMes + '/' +
                                     @pAno, 103
                                     )
                            )), '')                                AS Descricao
           ,ISNULL ((SELECT IDHorario
                     FROM   viewEscalaTrabalho
                     WHERE  ( IDEntidade = @pIDEntidade )
                        AND ( Data = CONVERT(NVARCHAR(10),
                                     RIGHT('00' + RTRIM(LTRIM(
                                     CONVERT
                                     (
                                     CHAR
                                     (2),
                                         tbDias.Dia))), 2
                                                  )
                                     + '/' + @pMes + '/' +
                                     @pAno, 103
                                     )
                            )), dbo.GuidEmpty())                                 AS IDHorario
    FROM   tbDias
    WHERE  ( Dia <= @pDiasMes ) 
GO
/****** Object:  StoredProcedure [dbo].[spExcluirMovimentacaoPorNumeroCupom]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spExcluirMovimentacaoPorNumeroCupom]
@NumeroCupom int
as

delete dbo.tbItemPendenciaSincronizacao 
	where dbo.tbItemPendenciaSincronizacao.IdItemSincronizacao  in (select dbo.tbMovimentacaoEstoque.Id from dbo.tbMovimentacaoEstoque 
where dbo.tbMovimentacaoEstoque.NumeroCupom = @NumeroCupom)

delete dbo.tbMovimentacaoEstoque where dbo.tbMovimentacaoEstoque.NumeroCupom = @NumeroCupom

GO
/****** Object:  StoredProcedure [dbo].[spExcluirMovimentacaoPorNumeroCupomEProduto]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spExcluirMovimentacaoPorNumeroCupomEProduto]
@NumeroCupom int, 
@IdProduto uniqueidentifier
as

--Excluir os itens da tabela de movimentação de estoque que estão na tabela de sincronização
delete dbo.tbItemPendenciaSincronizacao 
	where dbo.tbItemPendenciaSincronizacao.IdItemSincronizacao in (select dbo.tbMovimentacaoEstoque.Id from dbo.tbMovimentacaoEstoque 
where dbo.tbMovimentacaoEstoque.NumeroCupom = @NumeroCupom and dbo.tbMovimentacaoEstoque.IdProduto = @IdProduto)

delete dbo.tbMovimentacaoEstoque where dbo.tbMovimentacaoEstoque.NumeroCupom = @NumeroCupom and dbo.tbMovimentacaoEstoque.IdProduto = @IdProduto
GO
/****** Object:  StoredProcedure [dbo].[spFechaCaixaDetalheVendas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



--spFechaCaixaDetalheVendas
CREATE PROCEDURE [dbo].[spFechaCaixaDetalheVendas]
                                @pIdCaixa  UNIQUEIDENTIFIER
                                ,@pIdProduto UNIQUEIDENTIFIER
                                ,@pIdBomba uniqueidentifier
                                ,@pTipo nvarchar(50)
AS
   SELECT DISTINCT(dbo.tbVendas.id)
   ,CONVERT(NVARCHAR(10),dbo.tbVendas.Data,103) AS Data 
   ,dbo.tbvendas.Cupom as Cupom
   --,STR(ABS(dbo.tbVendas.ValorTotal), 10, 2) AS Faturado 
   ,(Select STR(ABS(SUM(tbVendasItens.quantidade * CASE tbVendasItens.PrecoEspecial WHEN 0 THEN tbVendasItens.PrecoVENDA ELSE tbVendasItens.PrecoEspecial END)),10, 2)FROM tbVendasItens inner join tbVendas on tbVendas.id = tbvendasitens.idvenda WHERE tbVendas.id = dbo.tbVendas.id and tbVendasItens.IdBomba=@pIdbomba AND tbVendasitens.cancelado= 0 AND tbVendasItens.idProduto = @pIdProduto)as Faturado
FROM  dbo.tbVendas WITH (NOLOCK) 
INNER JOIN  dbo.tbVendasItens WITH (NOLOCK) ON dbo.tbVendas.id = dbo.tbVendasItens.idVenda 
INNER JOIN  dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.id 
LEFT OUTER JOIN dbo.tbbombas on dbo.tbvendasitens.idbomba = tbbombas.id 
WHERE  dbo.tbVendas.idCaixa =@pIdCaixa
AND dbo.tbVendas.Status IS NULL
AND dbo.tbProdutos.Id = @pIdProduto
AND dbo.tbVendasItens.IdBomba = @pIdBomba
and (@pIdBomba is null or dbo.tbVendasItens.IdBomba = @pIdBomba)
AND dbo.tbprodutos.TipoProd = @pTipo
ORDER BY tbVendas.Cupom desc


GO
/****** Object:  StoredProcedure [dbo].[spFechaCaixaDetalheVendasItens]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--spFechaCaixaDetalheVendasItens
CREATE PROCEDURE [dbo].[spFechaCaixaDetalheVendasItens]
                                @pIdCaixa  UNIQUEIDENTIFIER
                                ,@pIdProduto UNIQUEIDENTIFIER
                                ,@pIdBomba uniqueidentifier
                                ,@pTipo nvarchar(50)
AS
SELECT dbo.tbVendasItens.idVenda
, dbo.tbProdutos.Descricao AS Produto
, str(isnull(dbo.tbbombas.NumBomba, '')) AS Bico
, dbo.tbVendasItens.Quantidade AS Vendeu
, STR(ABS(CASE dbo.tbVendasItens.PrecoEspecial WHEN 0 THEN dbo.tbVendasItens.PrecoVenda ELSE dbo.tbVendasItens.PrecoEspecial END), 10, 3) AS Preço
,STR(ABS(dbo.tbVendasItens.Quantidade *  Case dbo.tbVendasItens.PrecoEspecial  WHEN 0 THEN dbo.tbVendasItens.PrecoVenda ELSE dbo.tbVendasItens.PrecoEspecial END), 10, 2) AS Total 

FROM dbo.tbVendasItens 
INNER JOIN dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id 
left outer join tbbombas on tbvendasitens.idbomba = tbbombas.id 
where  tbVendasItens.Cancelado = 0
        AND tbProdutos.id = @pIdProduto
		AND IdVenda in (
			SELECT dbo.tbVendas.id
			FROM  dbo.tbVendas WITH (NOLOCK) 
			INNER JOIN  dbo.tbVendasItens WITH (NOLOCK) ON dbo.tbVendas.id = dbo.tbVendasItens.idVenda 
			INNER JOIN  dbo.tbProdutos ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.id 
			LEFT OUTER JOIN dbo.tbbombas on dbo.tbvendasitens.idbomba = tbbombas.id 
			WHERE  dbo.tbVendas.idCaixa =@pIdCaixa
			AND dbo.tbVendas.Status IS NULL
			AND dbo.tbProdutos.Id = @pIdProduto
			AND dbo.tbVendasItens.idBomba = @pIdBomba
			AND (@pIdBomba is null or dbo.tbVendasItens.IdBomba = @pIdBomba))


GO
/****** Object:  StoredProcedure [dbo].[spFechaCaixaVendaCombustivel]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--spFechaCaixaVendaCombustivel
CREATE PROCEDURE [dbo].[spFechaCaixaVendaCombustivel]
                                @pIdCaixa  UNIQUEIDENTIFIER
                                ,@pIdCaixaAnt Uniqueidentifier
                                ,@pIdPosto uniqueidentifier
AS
SELECT 
		tp.id as IdProduto
		,tb.Id as IdBomba
	   ,tci.ValorLido AS EncerranteInicial
       ,tci.idObjeto AS IdObjetoBico
       ,tp.Descricao
       ,tb.Encerrante AS EncerranteFinal
       --,Quantidade = (SELECT ROUND(sum(tvi.Quantidade),3)
					  -- FROM tbVendasItens tvi
					  -- INNER JOIN tbVendas tv ON tvi.IdVenda = tv.Id
					  -- INNER JOIN tbProdutos tpp ON tvi.IdProduto = tpp.Id
					  -- WHERE tv.IdCaixa = @pIdCaixa
						 --AND tpp.Id = tp.id
						 --AND tvi.IdBomba = tb.id 
						 --AND tv.Status IS NULL
						 --AND tvi.Cancelado = 0)
       ,PrecoVendaAtual =  (SELECT avg(tvi.precovenda)
					   FROM tbVendasItens tvi
					   INNER JOIN tbVendas tv ON tvi.IdVenda = tv.Id
					   INNER JOIN tbProdutos tpp ON tvi.IdProduto = tpp.Id
					   WHERE tv.IdCaixa = @pIdCaixa
						 AND tpp.Id = tp.id
						 AND tvi.IdBomba = tb.id 
						 AND tv.Status IS NULL
						 AND tvi.Cancelado = 0)
       ,Afericao = ISNULL ((SELECT Sum(qtd)
                       FROM dbo.tbafericao
                       WHERE idbomba = tb.id
                         AND idbomba = tb.id
                         AND idcaixa = @pIdCaixa
                         AND idposto = @pIdPosto), 0)
       --,Faturado = 0 -- Valor populado na camada de UI
FROM tbCaixaItens tci
INNER JOIN tbBombas tb ON tci.idObjeto = tb.numbomba
INNER JOIN tbTanques tt ON tb.IdTanque = tt.Id
INNER JOIN tbProdutos tp ON tt.IdProduto = tp.Id
INNER JOIN tbPostos po ON tb.IdPOsto = po.id
WHERE tci.IdCaixa = @pIdCaixaAnt -- caixa ant
AND tci.TipoLeitura = 'B'
AND po.ID=@pIdPosto
GROUP BY tci.ValorLido,
         tci.idObjeto,
         tci.Id,
         tp.Descricao,
         tci.IdCaixa,
         tb.NumBomba,
         tb.Encerrante,
         tp.id,
         tb.id,
         tp.Ordem
ORDER BY tp.Ordem, tb.NumBomba
         
         
         

GO
/****** Object:  StoredProcedure [dbo].[spFechamentoCaixaResumoFormasPgto]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--spFechamentoCaixaResumoFormasPgto
CREATE PROCEDURE [dbo].[spFechamentoCaixaResumoFormasPgto] 
                                          @pIdCaixa    UNIQUEIDENTIFIER
                                          ,@pIdposto      UNIQUEIDENTIFIER


AS
   
    SELECT 1 AS ORDEM
           ,Sigla = 'CV' 
           ,Descricao = 'Cheque Vista' 
           ,Valor = (SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
             WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'CV' )
                AND ( tbVendas.Status IS NULL )
                AND ( TBVEndas.IdCaixa = @pIdCaixa))
           
    UNION
    SELECT 2
           ,'CP'
           ,'Cheque Prazo'
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
              WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'CP' )
                AND ( tbVendas.Status IS NULL )
                AND ( TBVEndas.IdCaixa = @pIdCaixa))
          
    UNION
    SELECT 3
           ,'CC'
           ,'Cartão de Crédito'
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
					  WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'CC' )
                AND ( tbVendas.Status IS NULL )
                AND ( TBVEndas.IdCaixa = @pIdCaixa))
    UNION
    SELECT 4
           ,'CD'
           ,'Cartão de Débito'
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
					 WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'CD' )
                AND ( tbVendas.Status IS NULL )
                AND ( TBVEndas.IdCaixa = @pIdCaixa))
    UNION
    SELECT 5
           ,'PR'
           ,'Prazo'
           ,(SELECT( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
					 WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'PR' )
                AND ( tbVendas.Status IS NULL )
                AND ( TBVEndas.IdCaixa = @pIdCaixa))
    UNION
    SELECT 6
           ,'CF'
           ,'Carta Frete'
           ,(SELECT (ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
             FROM   dbo.tbVendas  with(nolock)
                    INNER JOIN dbo.tbVendasItensPagamento  with(nolock)
                            ON dbo.tbVendas.Id =
                               dbo.tbVendasItensPagamento.idVenda
					 WHERE  ( dbo.tbVendasItensPagamento.TipoPagamento = 'CF' )
                AND ( tbVendas.Status IS NULL )
                AND ( TBVEndas.IdCaixa = @pIdCaixa))
    UNION
		SELECT 7  
			   ,'DI'  
			   ,'Dinheiro' 
			   , 0
	 --          ,(select ROUND(isnull(SUM(tbVendasItens.ValorItem),0),2) as Valor  
		--           FROM   dbo.tbVendas  with (nolock)  
		--          INNER JOIN tbVendasItens with(nolock) on tbVendasItens.IdVenda = tbVendas.id   
		--        WHERE  tbVendas.IdPosto = @pIdPosto  
		--           and tbvendas.IdCaixa = @pIdCaixa  
		--           and (dbo.tbVendasItens.Cancelado = 0)  
		--           and (dbo.tbVendas.Status is null)  
		--         --AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'DI' )
		-- )  
	   
		---  
		
		--(select isnull(SUM(tbVendasItensPagamento.Valor),0)
		--FROM   dbo.tbVendas  with (nolock)  
		--    INNER JOIN dbo.tbVendasItensPagamento  with (nolock) 
		--      ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda  
		--    INNER JOIN tbEntidades 
		--      ON dbo.tbVendasItensPagamento.IdEntidade = tbentidades.Id                          
		--	 WHERE  tbVendas.IdPosto = @pIdPosto  
		--        and tbvendas.IdCaixa = @pIdCaixa  
		--        and (dbo.tbVendas.Status is null)  
		--        AND ( dbo.tbVendasItensPagamento.TipoPagamento <> 'DI' ))
	   
		
		---
	 --  (SELECT ISNULL(SUM(DBO.TBCARTAFRETE.VALORRETORNO),0) 
	 --       FROM   DBO.TBVENDAS  WITH (NOLOCK)  
		--     INNER JOIN DBO.TBCARTAFRETE WITH (NOLOCK) 
		--       ON  TBCARTAFRETE.IDVENDA = TBVENDAS.ID  
		--     INNER JOIN TBENTIDADES  WITH (NOLOCK) 
		--       ON DBO.TBCARTAFRETE.IDENTIDADE = TBENTIDADES.ID    
		-- WHERE  TBVENDAS.IDPOSTO =@pIDPosto  
		-- AND  dbo.tbVendas.idCaixa = @pIdCaixa  
		-- AND TBVENDAS.STATUS IS NULL)  
		 
		 
    --UNION
    --SELECT 8
    --       ,'CE'
    --       ,'Cliente Especial'
    --       ,Isnull((SELECT SUM(dbo.tbVendasItens.PrecoEspecial *
    --                            dbo.tbVendasItens.Quantidade) -
    --                                       SUM(dbo.tbVendasItens.PrecoVenda *
    --                                           dbo.tbVendasItens.Quantidade)
    --                FROM   dbo.tbVendas  with(nolock)
    --                       INNER JOIN dbo.tbVendasItens  with(nolock)
    --                               ON dbo.tbVendas.Id =
    --                                  dbo.tbVendasItens.idVenda
    --                       INNER JOIN dbo.tbProdutos  with(nolock)
    --                               ON dbo.tbVendasItens.idProduto =
    --                                  dbo.tbProdutos.Id
    --                       INNER JOIN dbo.tbProdutosPostos  with(nolock)
    --                               ON dbo.tbVendas.idPosto =
    --                                  dbo.tbProdutosPostos.idPosto
    --                                  AND dbo.tbVendasItens.idProduto =
    --                                      dbo.tbProdutosPostos.idProduto
    --                                  AND dbo.tbProdutos.Id =
    --                                      dbo.tbProdutosPostos.idProduto
						  
    --                WHERE  dbo.tbVendas.idPosto = @pIDPosto
    --                   AND precoEspecial > 0
    --                   AND ( tbVendasItens.Cancelado = 0 )
    --                   AND ( tbVendas.Status IS NULL )
    --                   and ( TBVENDAS.IdCaixa = @pIdCaixa)
    --                GROUP  BY dbo.tbProdutos.TipoProd
    --                          ,dbo.tbVendas.idCaixa), 0)
           
    --UNION
    --SELECT 9
    --       ,'TF'
    --       ,'Troco Carta Frete'
    --       ,Isnull((SELECT SUM(dbo.tbCartaFrete.ValorAdiantamento) *- 1
    --                FROM   dbo.tbCartaFrete  with(nolock)
    --                       INNER JOIN dbo.tbVendas  with(nolock)
    --                               ON dbo.tbCartaFrete.idVenda = dbo.tbVendas.Id
    --                WHERE  dbo.tbVendas.idCaixa = @pIdCaixa),
    --        0)
          
    --UNION
    --SELECT 10
    --       ,'RF'
    --       ,'Retorno Carta Frete'
    --       ,Isnull((SELECT SUM(dbo.tbCartaFrete.ValorRetorno) *- 1
    --                FROM   dbo.tbCartaFrete  with(nolock)
				--	       where dbo.tbCartaFrete.idCaixaRetorno = @pIdCaixa
    --                ), 0)
          
    ORDER  BY ORDEM


GO
/****** Object:  StoredProcedure [dbo].[spFeriados]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spFeriados
CREATE PROCEDURE [dbo].[spFeriados] @pOP         NVARCHAR(20)
                                   ,@pID        UNIQUEIDENTIFIER
                                   ,@pDescricao NVARCHAR(50)=NULL
                                   ,@pData      NVARCHAR(10)=NULL
                                   ,@pTipo      CHAR(1) = NULL
                                   ,@pLocal     NVARCHAR(10)=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                SET @pID = newid()
                INSERT INTO tbFeriados
                            (Id
                             ,Descricao
                             ,Data
                             ,Tipo
                             ,Local)
                VALUES      (@pID
                             ,@pDescricao
                             ,@pData
                             ,@pTipo
                             ,@pLocal)

                SELECT @pID
            END
          ELSE
            BEGIN
                UPDATE tbFeriados
                SET    Descricao = @pDescricao
                       ,Data = @pData
                       ,Tipo = @pTipo
                       ,Local = @pLocal
                WHERE  id = @pID

                SELECT @pid
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbFeriados
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Confirmar'
      BEGIN
          DECLARE @UF AS CHAR(2)
          DECLARE @Municipio NVARCHAR(MAX)

          SET @UF=(SELECT UF
                   FROM   tbPostos
                   WHERE  Id = @pID)
          SET @Municipio = (SELECT tbCidades.Descricao
                            FROM   tbPostos
                                   INNER JOIN tbCidades
                                           ON tbCidades.Id = tbPostos.IdMunicipio
                            WHERE  tbPostos.Id = @pID)

          SELECT Isnull(Count(ID), 0)                AS Nacional
                 ,Isnull((SELECT Count(ID)
                          FROM   tbFeriados
                          WHERE  ( Data = @pData )
                             AND ( Local = @UF )
                             AND ( Tipo = 'E' )), 0) AS Estadual
                 ,Isnull((SELECT Count(ID)
                          FROM   tbFeriados
                          WHERE  ( Data = @pData )
                             AND ( RTRIM(Local) = RTRIM(@Municipio) )
                             AND ( Tipo = 'M' )), 0) AS Municipal
          FROM   tbFeriados
          WHERE  ( Data = @pData )
             AND ( Local IS NULL )
             AND ( Tipo = 'N' )
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbFeriados
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spGrupo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spGrupo
CREATE PROCEDURE [dbo].[spGrupo] @pOP            NVARCHAR(20)
                                ,@pID           UNIQUEIDENTIFIER
                                ,@pDescricao    NVARCHAR(80)=NULL
                                ,@pidSetor      CHAR(2)=NULL
                                ,@pTipoAliquota NVARCHAR(5)=NULL
                                ,@pAliquota     MONEY=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                SET @pID = newid()
                INSERT INTO tbGrupo
                            (Id
                             ,Descricao
                             ,idsetor
                             ,TipoAliquota
                             ,Aliquota)
                VALUES      (@pID
                             ,@pDescricao
                             ,@pidSetor
                             ,@pTipoAliquota
                             ,@pAliquota)
                SELECT @pID
            END
          ELSE
            BEGIN
                UPDATE tbGrupo
                SET    Descricao = @pDescricao
                       ,idSetor = @pidSetor
                       ,TipoAliquota = @pTipoAliquota
                       ,Aliquota = @pAliquota
                WHERE  id = @pID
                
                SELECT @pID
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbGrupo
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbGrupo
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spHistorico]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spHistorico
CREATE PROCEDURE [dbo].[spHistorico] @pOP           NVARCHAR(20)
                                    ,@pIDHistorico UNIQUEIDENTIFIER
                                    ,@pDescricao   NVARCHAR(30)=NULL
                                    ,@pDespesa     BIT=NULL
                                    ,@pAtivo       BIT=NULL
                                    ,@pTipo        CHAR(1)=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pidHistorico = dbo.GuidEmpty()
            BEGIN
                SET @pidHistorico = newid()
                INSERT INTO tbHistoricos
                            (Id
                             ,Descricao
                             ,Despesa
                             ,Ativo
                             ,Tipo)
                VALUES      (@pidHistorico
                             ,@pDescricao
                             ,@pDespesa
                             ,@pAtivo
                             ,@pTipo)

                SELECT @pidHistorico
            END
          ELSE
            BEGIN
                UPDATE tbHistoricos
                SET    Descricao = @pDescricao
                       ,Despesa = @pDespesa
                       ,Ativo = @pAtivo
                       ,Tipo = @pTipo
                WHERE  Id = @pidHistorico

                SELECT @pIDHistorico
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbHistoricos
          WHERE  Id = @pidHistorico
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbHistoricos
          WHERE  Id = @pidHistorico
      END 
GO
/****** Object:  StoredProcedure [dbo].[spHoleriteHistorico]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spHoleriteHistorico
CREATE PROCEDURE [dbo].[spHoleriteHistorico] @pOP         NVARCHAR(20)
                                            ,@pID        UNIQUEIDENTIFIER
                                            ,@pDescricao NVARCHAR(50)=NULL
                                            ,@pTipo      CHAR(1)=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
				SET @pID = newid()
                INSERT INTO tbHoleriteHistoricos
                            (Id
                             ,Descricao
                             ,Tipo)
                VALUES      (@pID
                             ,@pDescricao
                             ,@pTipo)

                SELECT @pID
            END
          ELSE
            BEGIN
                UPDATE tbHoleriteHistoricos
                SET    Descricao = @pDescricao
                       ,Tipo = @pTipo
                WHERE  id = @pID

                SELECT @pid
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbHoleriteHistoricos
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbHoleriteHistoricos
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spHorario]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spHorario]
@pOP nvarchar(20),
@pidHorario int,
@pDescricao nvarchar(50)

as
 If @pOp = 'Salvar'
	   begin
	     if @pidHorario = 0
	         begin
				insert into tbHorario (Descricao) values  (@pDescricao)
	         end
	      else
	         begin
				Update tbHorario set Descricao = @pDescricao where idHorario=@pidHorario
	         end
	   
	   end
	else if @pOP = 'Selecionar'
	   begin
	     Select * from tbHorario where idHorario=@pidHorario  
	   end
	

	else if @pOP = 'Excluir'
	   begin
	     Delete from tbHorario where idHorario=@pidHorario
	   end
GO
/****** Object:  StoredProcedure [dbo].[spInsereMedicao]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--sp_helptext spInsereMedicao
CREATE PROCEDURE [dbo].[spInsereMedicao]
	@idReducao uniqueidentifier,
	@IdProduto uniqueidentifier,
	@ValorMedicao decimal(18,4),
	@IdMedicaoOrigem uniqueidentifier,
	@TipoMedicaoOrigem char 
AS
BEGIN

	SET NOCOUNT ON;
	declare @id uniqueidentifier
	set @id = NEWID()
    INSERT INTO tbReducaoMedicao
           (Id
			,idReducaoEmissao
			,IdProduto
			,ValorMedicao
			,idMedicaoOrigem
			,TipoMedicaoOrigem
			,sincronizado)
     VALUES
           (@id, @idReducao, @IdProduto, @ValorMedicao, @IdMedicaoOrigem, @TipoMedicaoOrigem,0)
     
     
     select @id  
END

GO
/****** Object:  StoredProcedure [dbo].[spInsereMovimentacao]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[spInsereMovimentacao]
@pIdPosto uniqueidentifier,
@pIdProduto uniqueidentifier,
@pIdCaixa uniqueidentifier,
@pTipoMovimento varchar(2),
@pTipoEstoque varchar(2),
@pValor numeric(18,6),
@NumeroCupom int,
@pOrigem varchar(100)
as

declare @novoId uniqueidentifier
set @novoId = NEWID()

Declare @DataMovimento as Date
Set @DataMovimento = (Select dia from tbCaixa where id= @pIdCaixa)

INSERT INTO tbMovimentacaoEstoque
           ([Id]
           ,[IdPosto]
           ,[IdProduto]
           ,[IdCaixa]
           ,[DataMovimento]
           ,[TipoMovimento]
           ,[TipoEstoque]
           ,[Valor]
		   ,[NumeroCupom]
           ,[Origem])
     VALUES
           (@novoId, @pIdPosto, @pIdProduto, @pIdCaixa, @DataMovimento, @pTipoMovimento, @pTipoEstoque, @pValor, @NumeroCupom, @pOrigem)

select @novoId 

GO
/****** Object:  StoredProcedure [dbo].[spLMC]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spLMC
CREATE PROCEDURE [dbo].[spLMC] @pOP         NVARCHAR(50)
                              ,@pID        UNIQUEIDENTIFIER
                              ,@pIdposto   UNIQUEIDENTIFIER=NULL
                              ,@pIdProduto UNIQUEIDENTIFIER=NULL
                              ,@pData      SMALLDATETIME=NULL
                              ,@pLivro     INT=NULL
                              ,@pTipo      CHAR(1)=NULL
                              ,@pPagina    INT=NULL
AS
    IF @pOP = 'Salvar'
      INSERT INTO tbLMC
                  (IDPosto
                   ,IDProduto
                   ,Data
                   ,Livro
                   ,Tipo
                   ,Pagina)
      VALUES      (@pIDposto
                   ,@pIDProduto
                   ,@pData
                   ,@pLivro
                   ,@pTipo
                   ,@pPagina)
    ELSE IF @pOP = 'Selecionar'
      SELECT *
      FROM   tbLMC
      WHERE  id = @pid
    ELSE IF @pOP = 'Listar'
      SELECT *
      FROM   tbLMC
      WHERE  Livro = @pLivro 
GO
/****** Object:  StoredProcedure [dbo].[spLocalEstoque]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spLocalEstoque
CREATE PROCEDURE [dbo].[spLocalEstoque] @pOP         NVARCHAR(20)
                                       ,@pID        UNIQUEIDENTIFIER
                                       ,@pDescricao NVARCHAR(50)=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
				SET @pID = newid()
                INSERT INTO tbLocalEstoque
                            (Id
                             ,Descricao)
                VALUES      (@pID
                             ,@pDescricao)

                SELECT @pID
            END
          ELSE
            BEGIN
                UPDATE tbLocalEstoque
                SET    Descricao = @pDescricao
                WHERE  id = @pID

                SELECT @pID
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbLocalEstoque
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbLocalEstoque
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbLocalEstoque
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spLocalEstoquePosto]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spLocalEstoquePosto
CREATE PROCEDURE [dbo].[spLocalEstoquePosto] @pOP       NVARCHAR(20)
                                            ,@pID      UNIQUEIDENTIFIER=NULL
                                            ,@pIdposto UNIQUEIDENTIFIER=NULL
                                            ,@pIDLocal UNIQUEIDENTIFIER=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                SET @pID = newid()
                INSERT INTO tbLocalEstoquePosto
                            (Id
                             ,IDPosto
                             ,IDLocal)
                VALUES      (@pID
                             ,@pIDposto
                             ,@pIDLocal)
                SELECT @pID
            END
          ELSE
            BEGIN
                UPDATE tbLocalEstoquePosto
                SET    IDPosto = @pIDPosto
                       ,IDLocal = @pIDLocal
                WHERE  id = @pID
                
                SELECT @pID
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbLocalEstoquePosto
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Listar'
      BEGIN
          SELECT tbLocalEstoquePosto.ID
                 ,tbLocalEstoquePosto.IDLocal
                 ,tbLocalEstoquePosto.IDPosto
                 ,tbPostos.NomeUsual AS Posto
          FROM   tbLocalEstoquePosto
                 INNER JOIN tbPostos
                         ON tbLocalEstoquePosto.IDPosto = tbPostos.Id
          WHERE  ( tbLocalEstoquePosto.IDLocal = @pIDLocal )
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbLocalEstoquePosto
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spLog]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spLog
CREATE PROCEDURE [dbo].[spLog] @pOP          NVARCHAR(20)
                              ,@pID         UNIQUEIDENTIFIER
                              ,@pIDEntidade UNIQUEIDENTIFIER=NULL
                              ,@pIdposto    UNIQUEIDENTIFIER=NULL
                              ,@pTabela     NVARCHAR(50)=NULL
                              ,@pOperacao   NVARCHAR(50)=NULL
                              ,@pDescricao  NVARCHAR(300)=NULL
                              ,@pData       SMALLDATETIME=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pid = dbo.GuidEmpty()
            BEGIN
				SET @pId = newid()
                INSERT INTO tbLogs
                            (Id
                             ,idEntidade
                             ,idPosto
                             ,Tabela
                             ,Operacao
                             ,Descricao
                             ,Data)
                VALUES      (@pID
                             ,@pidEntidade
                             ,@pidPosto
                             ,@pTabela
                             ,@pOperacao
                             ,@pDescricao
                             ,getdate())

                SELECT @pID
            END
          ELSE
            BEGIN
                UPDATE tbLogs
                SET    idEntidade = @pidEntidade
                       ,idPosto = @pidPosto
                       ,Tabela = @pTabela
                       ,Operacao = @pOperacao
                       ,Descricao = @pDescricao
                       ,Data = getdate()
                WHERE  id = @pid

                SELECT @pid
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbLogs
          WHERE  id = @pid
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbLogs
          WHERE  id = @pid
      END
    ELSE IF @pOP = 'Listar'
      BEGIN
          SELECT idEntidade
                 ,idPosto
                 ,Tabela
                 ,Operacao
                 ,Descricao
                 ,Data
          FROM   tbLogs
      END 
GO
/****** Object:  StoredProcedure [dbo].[spManutencao]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spManutencao
CREATE PROCEDURE [dbo].[spManutencao] @pOP            NVARCHAR(20)
                                     ,@pID           UNIQUEIDENTIFIER=NULL
                                     ,@pidPatrimonio UNIQUEIDENTIFIER=NULL
                                     ,@pdescricao    NVARCHAR(50)=NULL
                                     ,@pValor        SMALLMONEY=NULL
                                     ,@pData         SMALLDATETIME=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                SET @pID = newid()
                INSERT INTO tbPatrimonioManutencao
                            (Id
                             ,idPatrimonio
                             ,Descricao
                             ,Valor
                             ,Data)
                VALUES      (@pID
                             ,@pidPatrimonio
                             ,@pDescricao
                             ,@pValor
                             ,@pData)

                SELECT @pID
            END
          ELSE
            BEGIN
                UPDATE tbPatrimonioManutencao
                SET    idPatrimonio = @pidPatrimonio
                       ,Descricao = @pDescricao
                       ,Valor = @pValor
                       ,Data = @pData
                WHERE  id = @pID

                SELECT @pID
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbPatrimonioManutencao
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Lista'
      BEGIN
          SELECT *
          FROM   tbPatrimonioManutencao
          WHERE  idPatrimonio = @pidPatrimonio
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbPatrimonioManutencao
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spMensagens]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spMensagens
CREATE PROCEDURE [dbo].[spMensagens] @pOP           NVARCHAR(20)
                                    ,@pID          UNIQUEIDENTIFIER=NULL
                                    ,@pIDPai       UNIQUEIDENTIFIER=NULL
                                    ,@pDe          UNIQUEIDENTIFIER=NULL
                                    ,@pPara        UNIQUEIDENTIFIER=NULL
                                    ,@pAssunto     NVARCHAR(100) =NULL
                                    ,@pMensagem    NTEXT=NULL
                                    ,@pDataEnvio   SMALLDATETIME = NULL
                                    ,@pDataLeitura SMALLDATETIME = NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                SET @pID = newid()
                INSERT INTO tbMensagens
                            (Id
                             ,IDPai
                             ,De
                             ,Para
                             ,Assunto
                             ,Mensagem
                             ,DataEnvio
                             ,DataLeitura)
                VALUES      ( @pID
                              ,@pIDPai
                              ,@pDe
                              ,@pPara
                              ,@pAssunto
                              ,@pMensagem
                              ,@pDataEnvio
                              ,@pDataLeitura)

                --SELECT @pID
            END
          ELSE
            BEGIN
                UPDATE tbMensagens
                SET    IDPai = @pIDPai
                       ,De = @pDe
                       ,Para = @pPara
                       ,Assunto = @pAssunto
                       ,Mensagem = @pMensagem
                       ,DataEnvio = @pDataEnvio
                       ,DataLeitura = @pDataLeitura
                WHERE  id = @pID

                --SELECT @pID
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbMensagens
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Lista'
      BEGIN
          SELECT *
          FROM   tbMensagens
          WHERE  idPai = @pIDPai
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbMensagens
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Leitura'
      BEGIN
          UPDATE tbMensagens
          SET    DataLeitura = getDate()
          WHERE  id = @pID
      END
      
      select @pID 

GO
/****** Object:  StoredProcedure [dbo].[spMetas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spMetas
CREATE PROCEDURE [dbo].[spMetas] @pOP                       NVARCHAR(60)
                                ,@pID                      UNIQUEIDENTIFIER = NULL
                                ,@pAno                     INT = NULL
                                ,@pMes                     INT = NULL
                                ,@pIDPosto                 UNIQUEIDENTIFIER = NULL
                                ,@pIDProduto               UNIQUEIDENTIFIER = NULL
                                ,@pLitragem                MONEY = 0
                                ,@pLucratividade           MONEY = 0
                                ,@pObservacaoLitragem      NVARCHAR(500) = NULL
                                ,@pObservacaoLucratividade NVARCHAR(500) = NULL
                                ,@pPercentualTurno1        MONEY=0
                                ,@pPercentualTurno2        MONEY=0
                                ,@pPercentualTurno3        MONEY=0
                                ,@pPercentualTurno4        MONEY=0
                                ,@pPercentualTurno5        MONEY=0
                                ,@pPercentualTurno6        MONEY=0
                                ,@pTurno                   INT=NULL
AS
    DECLARE @tblCaixas TABLE(IdCaixa UNIQUEIDENTIFIER)
    DECLARE @pDia INT
    DECLARE @pTurnoInicial INT
    DECLARE @pTurnoFinal INT
    DECLARE @posto NVARCHAR(MAX)

    IF @pTurno = 0
      BEGIN
          SET @pTurnoInicial = 1
          SET @pTurnoFinal = 6
      END
    ELSE
      BEGIN
          SET @pTurnoInicial=@pTurno
          SET @pTurnoFinal=@pTurno
      END
      
    SET @posto = (SELECT NomeUsual FROM tbPostos WHERE Id = @pIDPosto)

    IF @posto <> 'Central'
      BEGIN
          INSERT INTO @tblCaixas
          SELECT Id
		  FROM   tbCaixa
		  WHERE  idPosto = @pIDPosto
			AND Month(dia) = @pMes
			AND Year(dia) = @pAno
			AND ( DataFechamento IS NOT NULL )
      END
    ELSE
      BEGIN
          SET @pIDPosto = NULL
          INSERT INTO @tblCaixas
          SELECT Id
		  FROM   tbCaixa
		  WHERE  idPosto = @pIDPosto
			AND Month(dia) = @pMes
			AND Year(dia) = @pAno
			AND ( DataFechamento IS NOT NULL )
      END

    SET @pDia = (SELECT day(dia)
                 FROM   tbCAixa
                 WHERE  Id = (SELECT TOP 1 Id
							  FROM   tbCaixa
							  WHERE  idPosto = @pIDPosto
								AND Month(dia) = @pMes
								AND Year(dia) = @pAno
								AND ( DataFechamento IS NOT NULL )
						      ORDER BY DataFechamento DESC)
				)
				
    SET @pID = Isnull((SELECT id
                       FROM   tbMetas
                       WHERE  idPosto = @pIDPosto
                          AND ano = @pAno
                          AND mes = @pMes
                          AND IDproduto = @pIDProduto), dbo.GuidEmpty())

    IF @pOp = 'SalvarLitragem'
      BEGIN
          DECLARE @ID AS UNIQUEIDENTIFIER

          SET @ID = ISnull((SELECT ID
                            FROM   tbMetas
                            WHERE  Ano = @pAno
                               AND Mes = @pMes
                               AND IDPosto = @pIDPosto
                               AND IDProduto = @pIDProduto), dbo.GuidEmpty())

          IF @ID = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbMetas
                            (Ano
                             ,Mes
                             ,IdPosto
                             ,IdProduto
                             ,Litragem
                             ,Lucratividade
                             ,ObservacaoLitragem
                             ,ObservacaoLucratividade
                             ,PercentualTurno1
                             ,PercentualTurno2
                             ,PercentualTurno3
                             ,PercentualTurno4
                             ,PercentualTurno5
                             ,PercentualTurno6)
                VALUES      (@pAno
                             ,@pMes
                             ,@pIDPosto
                             ,@pIDProduto
                             ,@pLitragem
                             ,@pLucratividade
                             ,@pObservacaoLitragem
                             ,@pObservacaoLucratividade
                             ,@pPercentualTurno1
                             ,@pPercentualTurno2
                             ,@pPercentualTurno3
                             ,@pPercentualTurno4
                             ,@pPercentualTurno5
                             ,@pPercentualTurno6)
            END
          ELSE
            BEGIN
                UPDATE tbMetas
                SET    Ano = @pAno
                       ,Mes = @pMes
                       ,IDPosto = @pIDPosto
                       ,IDProduto = @pIDProduto
                       ,Litragem = @pLitragem
                       ,ObservacaoLitragem = @pObservacaoLitragem
                       ,PercentualTurno1 = @pPercentualTurno1
                       ,PercentualTurno2 = @pPercentualTurno2
                       ,PercentualTurno3 = @pPercentualTurno3
                       ,PercentualTurno4 = @pPercentualTurno4
                       ,PercentualTurno5 = @pPercentualTurno5
                       ,PercentualTurno6 = @pPercentualTurno6
                WHERE  id = @ID
            END
      END
    ELSE IF @pOp = 'SalvarLucratividade'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbMetas
                            (Ano
                             ,Mes
                             ,IdPosto
                             ,IdProduto
                             ,Litragem
                             ,Lucratividade
                             ,ObservacaoLitragem
                             ,ObservacaoLucratividade
                             ,PercentualTurno1
                             ,PercentualTurno2
                             ,PercentualTurno3
                             ,PercentualTurno4
                             ,PercentualTurno5
                             ,PercentualTurno6)
                VALUES      (@pAno
                             ,@pMes
                             ,@pIDPosto
                             ,@pIDProduto
                             ,@pLitragem
                             ,@pLucratividade
                             ,@pObservacaoLitragem
                             ,@pObservacaoLucratividade
                             ,@pPercentualTurno1
                             ,@pPercentualTurno2
                             ,@pPercentualTurno3
                             ,@pPercentualTurno4
                             ,@pPercentualTurno5
                             ,@pPercentualTurno6)
            END
          ELSE
            BEGIN
                UPDATE tbMetas
                SET    Ano = @pAno
                       ,Mes = @pMes
                       ,IDPosto = @pIDPosto
                       ,IDProduto = @pIDProduto
                       ,Lucratividade = @pLucratividade
                       ,ObservacaoLucratividade = @pObservacaoLucratividade
                       ,PercentualTurno1 = @pPercentualTurno1
                       ,PercentualTurno2 = @pPercentualTurno2
                       ,PercentualTurno3 = @pPercentualTurno3
                       ,PercentualTurno4 = @pPercentualTurno4
                       ,PercentualTurno5 = @pPercentualTurno5
                       ,PercentualTurno6 = @pPercentualTurno6
                WHERE  id = @pID
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbMetas
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'SelecionarPostoAnoMes'
      BEGIN
          SELECT *
          FROM   tbMetas
          WHERE  IDPosto = @pIDPosto
             AND Ano = @pAno
             AND Mes = @pMEs
      END
    ELSE IF @pOP = 'ListarLitragem'
      BEGIN
          SELECT Id as ID
                 ,Descricao
                 ,(SELECT ObservacaoLitragem
                   FROM   tbMetas
                   WHERE  Ano = @pAno
                      AND Mes = @pMes
                      AND tbMetas.IDProduto = tbProdutos.Id
                      AND idposto = @pIDPosto)
                  AS
                  ObservacaoLitragem
                 ,(SELECT ObservacaoLucratividade
                   FROM   tbMetas
                   WHERE  Ano = @pAno
                      AND Mes = @pMes
                      AND tbMetas.IDProduto = tbProdutos.Id
                      AND idposto = @pIDPosto)
                  AS
                  ObservacaoLucratividade
                 ,ISNULL ((SELECT Isnull(Sum(Litragem), 0)
                           FROM   tbMetas
                           WHERE  Ano = @pAno
                              AND Mes = @pMes
                              AND tbMetas.IDProduto = tbProdutos.Id
                              AND (idposto = @pIDPosto OR @pIDPosto IS NULL))
                  , 0)
                  AS
                  Litragem
                 ,ISNULL ((SELECT Isnull(Sum(Lucratividade), 0)
                           FROM   tbMetas
                           WHERE  Ano = @pAno
                              AND Mes = @pMes
                              AND tbMetas.IDProduto = tbProdutos.Id
                              AND (idposto = @pIDPosto OR @pIDPosto IS NULL))
                  , 0)
                  AS
                  Lucratividade
                 ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade)
                          FROM   dbo.tbVendasItens
                                 INNER JOIN dbo.tbVendas
                                         ON dbo.tbVendasItens.idVenda =
                                            dbo.tbVendas.Id
                                 INNER JOIN dbo.tbCaixa
                                         ON dbo.tbVendas.idCaixa =
                                            dbo.tbCaixa.Id
                          WHERE  dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
                             AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
                             AND ( tbCaixa.TCaixa BETWEEN @pTurnoInicial AND @pTurnoFinal )
                             AND ( dbo.tbVendasItens.Cancelado = 0 )
                             AND ( dbo.tbVendas.idposto = @pIDPosto OR @pIDPosto IS NULL)),
                   0)
                  AS
                  QTD
                 ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade *
                                     dbo.tbVendasItens.PrecoCusto)
                          FROM   dbo.tbVendasItens
                                 INNER JOIN dbo.tbVendas
                                         ON dbo.tbVendasItens.idVenda =
                                            dbo.tbVendas.Id
                                 INNER JOIN dbo.tbCaixa
                                         ON dbo.tbVendas.idCaixa =
                                            dbo.tbCaixa.Id
                          WHERE  dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
                             AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
                             AND ( tbCaixa.Tcaixa BETWEEN
                                   @pTurnoInicial AND @pTurnoFinal
                                 )
                             AND ( dbo.tbVendasItens.Cancelado = 0 )
                             AND ( dbo.tbVendas.idposto = @pIDPosto OR @pIDPosto IS NULL)),
                   0)
                  AS
                  TotalCusto
                 ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade * CASE
                                      dbo.tbVendasItens.PrecoEspecial
                                                                      WHEN 0
                                     THEN
                 dbo.tbVendasItens.PrecoVenda
                 ELSE
                 dbo.tbVendasItens.PrecoEspecial
                 END)
                 FROM   dbo.tbVendasItens
                 INNER JOIN dbo.tbVendas
                 ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
                 INNER JOIN dbo.tbCaixa
                 ON dbo.tbVendas.idCaixa = dbo.tbCaixa.Id
                 WHERE  ( dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id )
                 AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
                 AND ( dbo.tbVendasItens.Cancelado = 0 )
                 AND ( tbCaixa.tCAixa BETWEEN @pTurnoInicial AND @pTurnoFInal )
                 AND ( dbo.tbVendas.idposto = @pIDPosto OR @pIDPosto IS NULL)),
                 0)
                  AS
                  TotalVenda
          FROM   tbProdutos
          WHERE  dbo.tbProdutos.tipoProd = 'CB'
             AND dbo.tbProdutos.Ativo = 1
          ORDER  BY ordem
      END
    ELSE IF @pOP = 'ListarLitragemDia'
      BEGIN
          SELECT Id
                 ,Descricao
                 ,(SELECT ObservacaoLitragem
                   FROM   tbMetas
                   WHERE  Ano = @pAno
                      AND Mes = @pMes
                      AND tbMetas.IDProduto = tbProdutos.Id
                      AND idposto = @pIDPosto)
                  AS ObservacaoLitragem
                 ,(SELECT ObservacaoLucratividade
                   FROM   tbMetas
                   WHERE  Ano = @pAno
                      AND Mes = @pMes
                      AND tbMetas.IDProduto = tbProdutos.Id
                      AND idposto = @pIDPosto)
                  AS ObservacaoLucratividade
                 ,ISNULL ((SELECT Sum(Litragem)
                           FROM   tbMetas
                           WHERE  Ano = @pAno
                              AND Mes = @pMes
                              AND tbMetas.IDProduto = tbProdutos.Id
                              AND (idposto = @pIDPosto OR @pIDPosto IS NULL))
                  , 0)
                  /
                  30
                  AS
                  Litragem
                 ,ISNULL ((SELECT Sum(Lucratividade)
                           FROM   tbMetas
                           WHERE  Ano = @pAno
                              AND Mes = @pMes
                              AND tbMetas.IDProduto = tbProdutos.Id
                              AND (idposto = @pIDPosto OR @pIDPosto IS NULL))
                  , 0)
                  AS
                  Lucratividade
                 ,Isnull(( Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade)
                                   FROM   dbo.tbVendasItens
                                          INNER JOIN dbo.tbVendas
                                                  ON dbo.tbVendasItens.idVenda =
                                                     dbo.tbVendas.Id
                                          INNER JOIN dbo.tbCaixa
                                                  ON dbo.tbVendas.idCaixa =
                                                     dbo.tbCaixa.Id
                                   WHERE  dbo.tbVendasItens.idProduto =
                                          dbo.tbProdutos.Id
                                      AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
                                      AND ( tbCaixa.TCaixa BETWEEN
                                            @pTurnoInicial AND @pTurnoFinal
                                          )
                                      AND ( dbo.tbVendasItens.Cancelado = 0 )
                                      AND ( dbo.tbVendas.idposto = @pIDPosto OR @pIDPosto IS NULL)),
                                     0) / @pDia ), 0)
                  AS QTD
                 ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade *
                                     dbo.tbVendasItens.PrecoCusto)
                          FROM   dbo.tbVendasItens
                                 INNER JOIN dbo.tbVendas
                                         ON dbo.tbVendasItens.idVenda =
                                            dbo.tbVendas.Id
                                 INNER JOIN dbo.tbCaixa
                                         ON dbo.tbVendas.idCaixa =
                                            dbo.tbCaixa.Id
                          WHERE  dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
                             AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
                             AND ( tbCaixa.TCaixa BETWEEN
                                   @pTurnoInicial AND @pTurnoFinal
                                 )
                             AND ( dbo.tbVendasItens.Cancelado = 0 )
                             AND ( dbo.tbVendas.idposto = @pIDPosto OR @pIDPosto IS NULL)),
                   0)
                  AS TotalCusto
                 ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade * CASE
                                      dbo.tbVendasItens.PrecoEspecial
                                                                      WHEN 0
                                     THEN
                 dbo.tbVendasItens.PrecoVenda
                 ELSE
                 dbo.tbVendasItens.PrecoEspecial
                 END)
                 FROM   dbo.tbVendasItens
                 INNER JOIN dbo.tbVendas
                 ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
                 INNER JOIN dbo.tbCaixa
                 ON dbo.tbVendas.idCaixa = dbo.tbCaixa.Id
                 WHERE  ( dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id )
                 AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
                 AND ( tbCaixa.TCaixa BETWEEN @pTurnoInicial AND @pTurnoFinal )
                 AND ( dbo.tbVendasItens.Cancelado = 0 )
                 AND ( dbo.tbVendas.idposto = @pIDPosto OR @pIDPosto IS NULL)),
                 0)
                  AS TotalVenda
          FROM   tbProdutos
          WHERE  dbo.tbProdutos.tipoProd = 'CB'
             AND dbo.tbProdutos.Ativo = 1
          ORDER  BY ordem
      END
    ELSE IF @pOP = 'ListarLucratividade'
      BEGIN
	  select * from (
	        SELECT 6 as ID
                 ,'Conveniência' as Descricao
                 ,(SELECT ObservacaoLitragem
                   FROM   tbMetas
                   WHERE  Ano = @pAno
                      AND Mes = @pMes
                      AND IDProduto = tbProdutos.Id
                      AND idposto = @pIDPosto)
                  AS
                  ObservacaoLitragem
                 ,(SELECT ObservacaoLucratividade
                   FROM   tbMetas
                   WHERE  Ano = @pAno
                      AND Mes = @pMes
                      AND IDProduto = tbProdutos.Id
                      AND idposto = @pIDPosto)
                  AS
                  ObservacaoLucratividade
                 ,ISNULL ((SELECT Sum(Litragem)
                           FROM   tbMetas
                           WHERE  Ano = @pAno
                              AND Mes = @pMes
                              AND IDProduto = tbProdutos.Id
                              AND (idposto = @pIDPosto OR @pIDPosto IS NULL))
                  , 0)
                  AS
                  Litragem
                 ,ISNULL ((SELECT Sum(Lucratividade)
                           FROM   tbMetas
                           WHERE  Ano = @pAno
                              AND Mes = @pMes
                              AND IDProduto = tbProdutos.Id
                              AND (idposto = @pIDPosto OR @pIDPosto IS NULL))
                  , 0)
                  AS
                  Lucratividade
                 ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade)
                          FROM   dbo.tbVendasItens
                                 INNER JOIN dbo.tbProdutos
                                         ON dbo.tbVendasItens.idProduto =
                                            dbo.tbProdutos.Id
                                 INNER JOIN dbo.tbVendas
                                         ON dbo.tbVendasItens.idVenda =
                                            dbo.tbVendas.Id
                                 INNER JOIN dbo.tbCaixa
                                         ON dbo.tbVendas.idCaixa =
                                            dbo.tbCaixa.Id
                          WHERE  ( dbo.tbProdutos.TipoProd = 'LC' )
                             AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
                             AND ( tbCaixa.TCaixa BETWEEN
                                   @pTurnoInicial AND @pTurnoFinal
                                 )
                             AND ( dbo.tbVendasItens.Cancelado = 0 )
                             AND ( dbo.tbVendas.idposto = @pIDPosto OR @pIDPosto IS NULL)),
                   0)
                  AS
                  QTD
                 ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade *
                                     dbo.tbVendasItens.PrecoCusto)
                          FROM   dbo.tbVendasItens
                                 INNER JOIN dbo.tbProdutos
                                         ON dbo.tbVendasItens.idProduto =
                                            dbo.tbProdutos.Id
                                 INNER JOIN dbo.tbVendas
                                         ON dbo.tbVendasItens.idVenda =
                                            dbo.tbVendas.Id
                                 INNER JOIN dbo.tbCaixa
                                         ON dbo.tbVendas.idCaixa =
                                            dbo.tbCaixa.Id
                          WHERE  ( dbo.tbProdutos.TipoProd = 'LC' )
                             AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
                             AND ( tbCaixa.TCaixa BETWEEN
                                   @pTurnoInicial AND @pTurnoFinal
                                 )
                             AND ( dbo.tbVendasItens.Cancelado = 0 )
                             AND ( dbo.tbVendas.idposto = @pIDPosto OR @pIDPosto IS NULL)),
                   0)
                  AS
                  TotalCusto
                 ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade * CASE
                                      dbo.tbVendasItens.PrecoEspecial
                                                                      WHEN 0
                                     THEN
                 dbo.tbVendasItens.PrecoVenda
                 ELSE
                 dbo.tbVendasItens.PrecoEspecial
                 END)
                 FROM   dbo.tbVendasItens
                 INNER JOIN dbo.tbProdutos
                 ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
                 INNER JOIN dbo.tbVendas
                 ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
                 INNER JOIN dbo.tbCaixa
                 ON dbo.tbVendas.idCaixa = dbo.tbCaixa.Id
                 WHERE  ( dbo.tbProdutos.TipoProd = 'LC' )
                 AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
                 AND ( tbCaixa.TCaixa BETWEEN @pTurnoInicial AND @pTurnoFinal )
                 AND ( dbo.tbVendasItens.Cancelado = 0 )
                 AND ( dbo.tbVendas.idposto = @pIDPosto OR @pIDPosto IS NULL)),
                 0)
                  AS
                  TotalVenda,
				  Ordem
          FROM   tbProdutos
          WHERE  ( dbo.tbProdutos.tipoProd = 'LC' ) 
          UNION
          SELECT 7 as ID
                 ,'Lubrificantes' as Descricao
                 ,(SELECT ObservacaoLitragem
                   FROM   tbMetas
                   WHERE  Ano = @pAno
                      AND Mes = @pMes
                      AND IDProduto = tbProdutos.Id
                      AND idposto = @pIDPosto)
                  AS
                  ObservacaoLitragem
                 ,(SELECT ObservacaoLucratividade
                   FROM   tbMetas
                   WHERE  Ano = @pAno
                      AND Mes = @pMes
                      AND IDProduto = tbProdutos.Id
                      AND idposto = @pIDPosto)
                  AS
                  ObservacaoLucratividade
                 ,ISNULL ((SELECT Sum(Litragem)
                           FROM   tbMetas
                           WHERE  Ano = @pAno
                              AND Mes = @pMes
                              AND IDProduto = tbProdutos.Id
                              AND (idposto = @pIDPosto OR @pIDPosto IS NULL))
                  , 0)
                  AS
                  Litragem
                 ,ISNULL ((SELECT Sum(Lucratividade)
                           FROM   tbMetas
                           WHERE  Ano = @pAno
                              AND Mes = @pMes
                              AND IDProduto = tbProdutos.Id
                              AND (idposto = @pIDPosto OR @pIDPosto IS NULL))
                  , 0)
                  AS
                  Lucratividade
                 ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade)
                          FROM   dbo.tbVendasItens
                                 INNER JOIN dbo.tbProdutos
                                         ON dbo.tbVendasItens.idProduto =
                                            dbo.tbProdutos.Id
                                 INNER JOIN dbo.tbVendas
                                         ON dbo.tbVendasItens.idVenda =
                                            dbo.tbVendas.Id
                                 INNER JOIN dbo.tbCaixa
                                         ON dbo.tbVendas.idCaixa =
                                            dbo.tbCaixa.Id
                          WHERE  ( dbo.tbProdutos.TipoProd = 'LB' )
                             AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
                             AND ( tbCaixa.TCaixa BETWEEN
                                   @pTurnoInicial AND @pTurnoFinal
                                 )
                             AND ( dbo.tbVendasItens.Cancelado = 0 )
                             AND ( dbo.tbVendas.idposto = @pIDPosto OR @pIDPosto IS NULL)),
                   0)
                  AS
                  QTD
                 ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade *
                                     dbo.tbVendasItens.PrecoCusto)
                          FROM   dbo.tbVendasItens
                                 INNER JOIN dbo.tbProdutos
                                         ON dbo.tbVendasItens.idProduto =
                                            dbo.tbProdutos.Id
                                 INNER JOIN dbo.tbVendas
                                         ON dbo.tbVendasItens.idVenda =
                                            dbo.tbVendas.Id
                                 INNER JOIN dbo.tbCaixa
                                         ON dbo.tbVendas.idCaixa =
                                            dbo.tbCaixa.Id
                          WHERE  ( dbo.tbProdutos.TipoProd = 'LB' )
                             AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
                             AND ( tbCaixa.TCaixa BETWEEN
                                   @pTurnoInicial AND @pTurnoFinal
                                 )
                             AND ( dbo.tbVendasItens.Cancelado = 0 )
                             AND ( dbo.tbVendas.idposto = @pIDPosto OR @pIDPosto IS NULL)),
                   0)
                  AS
                  TotalCusto
                 ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade * CASE
                                      dbo.tbVendasItens.PrecoEspecial
                                                                      WHEN 0
                                     THEN
                 dbo.tbVendasItens.PrecoVenda
                 ELSE
                 dbo.tbVendasItens.PrecoEspecial
                 END)
                 FROM   dbo.tbVendasItens
                 INNER JOIN dbo.tbProdutos
                 ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
                 INNER JOIN dbo.tbVendas
                 ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
                 INNER JOIN dbo.tbCaixa
                 ON dbo.tbVendas.idCaixa = dbo.tbCaixa.Id
                 WHERE  ( dbo.tbProdutos.TipoProd = 'LB' )
                 AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
                 AND ( tbCaixa.TCaixa BETWEEN @pTurnoInicial AND @pTurnoFinal )
                 AND ( dbo.tbVendasItens.Cancelado = 0 )
                 AND ( dbo.tbVendas.idposto = @pIDPosto OR @pIDPosto IS NULL)),
                 0)
                  AS
                  TotalVenda,
				  Ordem
          FROM   tbProdutos
          WHERE  ( dbo.tbProdutos.tipoProd = 'LB' ) ) a order by ordem

      END
    ELSE IF @pOP = 'ListarLucratividadeDia'
      BEGIN
	  select * from (
          SELECT 6 as ID
                 ,'Conveniência' as Descricao
                 ,(SELECT ObservacaoLitragem
                   FROM   tbMetas
                   WHERE  Ano = @pAno
                      AND Mes = @pMes
                      AND IDProduto = tbProdutos.Id
                      AND idposto = @pIDPosto)
                  AS ObservacaoLitragem
                 ,(SELECT ObservacaoLucratividade
                   FROM   tbMetas
                   WHERE  Ano = @pAno
                      AND Mes = @pMes
                      AND IDProduto = tbProdutos.Id
                      AND idposto = @pIDPosto)
                  AS ObservacaoLucratividade
                 ,ISNULL ((SELECT Sum(Litragem)
                           FROM   tbMetas
                           WHERE  Ano = @pAno
                              AND Mes = @pMes
                              AND IDProduto = tbProdutos.Id
                              AND (idposto = @pIDPosto OR @pIDPosto IS NULL))
                  , 0)
                  AS Litragem
                 ,ISNULL ((SELECT Sum(Lucratividade)
                           FROM   tbMetas
                           WHERE  Ano = @pAno
                              AND Mes = @pMes
                              AND IDProduto = tbProdutos.Id
                              AND (idposto = @pIDPosto OR @pIDPosto IS NULL))
                  , 0)
                  /
                  30
                  AS
                  Lucratividade
                 ,isnull(@pDia,0)
                  AS QTD
                 ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade *
                                     dbo.tbVendasItens.PrecoCusto)
                          FROM   dbo.tbVendasItens
                                 INNER JOIN dbo.tbProdutos
                                         ON dbo.tbVendasItens.idProduto =
                                            dbo.tbProdutos.Id
                                 INNER JOIN dbo.tbVendas
                                         ON dbo.tbVendasItens.idVenda =
                                            dbo.tbVendas.Id
                                 INNER JOIN dbo.tbCaixa
                                         ON dbo.tbVendas.idCaixa =
                                            dbo.tbCaixa.Id
                          WHERE  ( dbo.tbProdutos.TipoProd = 'LC' )
                             AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
                             AND ( tbCaixa.TCaixa BETWEEN
                                   @pTurnoInicial AND @pTurnoFinal
                                 )
                             AND ( dbo.tbVendasItens.Cancelado = 0 )
                             AND ( dbo.tbVendas.idposto = @pIDPosto OR @pIDPosto IS NULL)),
                   0)
                  AS TotalCusto
                 ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade * CASE
                                      dbo.tbVendasItens.PrecoEspecial
                                                                      WHEN 0
                                     THEN
                 dbo.tbVendasItens.PrecoVenda
                 ELSE
                 dbo.tbVendasItens.PrecoEspecial
                 END)
                 FROM   dbo.tbVendasItens
                 INNER JOIN dbo.tbProdutos
                 ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
                 INNER JOIN dbo.tbVendas
                 ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
                 INNER JOIN dbo.tbCaixa
                 ON dbo.tbVendas.idCaixa = dbo.tbCaixa.Id
                 WHERE  ( dbo.tbProdutos.TipoProd = 'LC' )
                 AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
                 AND ( tbCaixa.TCaixa BETWEEN @pTurnoInicial AND @pTurnoFinal )
                 AND ( dbo.tbVendasItens.Cancelado = 0 )
                 AND ( dbo.tbVendas.idposto = @pIDPosto OR @pIDPosto IS NULL)),
                 0)
                  AS TotalVenda,
				  ordem
          FROM   tbProdutos
          WHERE  ( dbo.tbProdutos.tipoProd = 'LC' )
          UNION
          SELECT 7 as ID
                 ,'Lubrificantes' as Descricao
                 ,(SELECT ObservacaoLitragem
                   FROM   tbMetas
                   WHERE  Ano = @pAno
                      AND Mes = @pMes
                      AND IDProduto = tbProdutos.Id
                      AND idposto = @pIDPosto)
                  AS ObservacaoLitragem
                 ,(SELECT ObservacaoLucratividade
                   FROM   tbMetas
                   WHERE  Ano = @pAno
                      AND Mes = @pMes
                      AND IDProduto = tbProdutos.Id
                      AND idposto = @pIDPosto)
                  AS ObservacaoLucratividade
                 ,ISNULL ((SELECT Sum(Litragem)
                           FROM   tbMetas
                           WHERE  Ano = @pAno
                              AND Mes = @pMes
                              AND IDProduto = tbProdutos.Id
                              AND (idposto = @pIDPosto OR @pIDPosto IS NULL))
                  , 0)
                  AS Litragem
                 ,ISNULL ((SELECT Sum(Lucratividade)
                           FROM   tbMetas
                           WHERE  Ano = @pAno
                              AND Mes = @pMes
                              AND IDProduto = tbProdutos.Id
                              AND (idposto = @pIDPosto OR @pIDPosto IS NULL))
                  , 0)
                  /
                  30
                  AS
                  Lucratividade
                 ,isnull(@pDia,0)
                  AS QTD
                 ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade *
                                     dbo.tbVendasItens.PrecoCusto)
                          FROM   dbo.tbVendasItens
                                 INNER JOIN dbo.tbProdutos
                                         ON dbo.tbVendasItens.idProduto =
                                            dbo.tbProdutos.Id
                                 INNER JOIN dbo.tbVendas
                                         ON dbo.tbVendasItens.idVenda =
                                            dbo.tbVendas.Id
                                 INNER JOIN dbo.tbCaixa
                                         ON dbo.tbVendas.idCaixa =
                                            dbo.tbCaixa.Id
                          WHERE  ( dbo.tbProdutos.TipoProd = 'LB' )
                             AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
                             AND ( tbCaixa.TCaixa BETWEEN
                                   @pTurnoInicial AND @pTurnoFinal
                                 )
                             AND ( dbo.tbVendasItens.Cancelado = 0 )
                             AND ( dbo.tbVendas.idposto = @pIDPosto OR @pIDPosto IS NULL)),
                   0)
                  AS TotalCusto
                 ,Isnull((SELECT SUM(dbo.tbVendasItens.Quantidade * CASE
                                      dbo.tbVendasItens.PrecoEspecial
                                                                      WHEN 0
                                     THEN
                 dbo.tbVendasItens.PrecoVenda
                 ELSE
                 dbo.tbVendasItens.PrecoEspecial
                 END)
                 FROM   dbo.tbVendasItens
                 INNER JOIN dbo.tbProdutos
                 ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
                 INNER JOIN dbo.tbVendas
                 ON dbo.tbVendasItens.idVenda = dbo.tbVendas.Id
                 INNER JOIN dbo.tbCaixa
                 ON dbo.tbVendas.idCaixa = dbo.tbCaixa.Id
                 WHERE  ( dbo.tbProdutos.TipoProd = 'LB' )
                 AND ( dbo.tbVendas.idCaixa IN (SELECT IdCaixa FROM @tblCaixas) )
                 AND ( tbCaixa.TCaixa BETWEEN @pTurnoInicial AND @pTurnoFinal )
                 AND ( dbo.tbVendasItens.Cancelado = 0 )
                 AND ( dbo.tbVendas.idposto = @pIDPosto OR @pIDPosto IS NULL)),
                 0)
                  AS TotalVenda,
				  ordem
          FROM   tbProdutos
          WHERE  ( dbo.tbProdutos.tipoProd = 'LB' )
		  ) a order by ordem
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbMetas
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spMotoristas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spMotoristas
CREATE PROCEDURE [dbo].[spMotoristas] @pOP                NVARCHAR(20)
                                     ,@pIDMotorista      UNIQUEIDENTIFIER
                                     ,@pIDTransportadora UNIQUEIDENTIFIER = NULL
                                     ,@pNome             NVARCHAR(50) = NULL
                                     ,@pRG               NCHAR(20) = NULL
                                     ,@pCPF              NCHAR(14) = NULL
                                     ,@pCNH              NCHAR(20) = NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pIDMotorista = dbo.GuidEmpty()
            BEGIN
                SET @pIDMotorista = newid()
                INSERT INTO tbMotoristaTransportadora
                            (Id
                             ,IDTransportadora
                             ,Nome
                             ,RG
                             ,CPF
                             ,CNH)
                VALUES      (@pIDMotorista
                             ,@pIDTransportadora
                             ,@pNome
                             ,@pRG
                             ,@pCPF
                             ,@pCNH)

                SELECT @pIDMotorista
            END
          ELSE
            BEGIN
                UPDATE tbMotoristaTransportadora
                SET    IDTransportadora = @pIDTransportadora
                       ,Nome = @pNome
                       ,RG = @pRG
                       ,CPF = @pCPF
                       ,CNH = @pCNH
                WHERE  Id = @pIdMotorista

                SELECT @pIDMotorista
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbMotoristaTransportadora
          WHERE  Id = @pIdMotorista
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbMotoristaTransportadora
          WHERE  Id = @pIdMotorista
      END 
GO
/****** Object:  StoredProcedure [dbo].[spMovimentacaoBancaria]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spMovimentacaoBancaria
CREATE PROCEDURE [dbo].[spMovimentacaoBancaria] @pOP               NVARCHAR(20)
                                               ,@pidMov           UNIQUEIDENTIFIER
                                               ,@pTipoMov         CHAR(1)=NULL
                                               ,@pIdposto         UNIQUEIDENTIFIER=NULL
                                               ,@pidCaixaPosto    UNIQUEIDENTIFIER=NULL
                                               ,@pDescricao       NVARCHAR(50)=NULL
                                               ,@pIDContaBancaria UNIQUEIDENTIFIER=NULL
                                               ,@pValor           SMALLMONEY=NULL
                                               ,@pDataHora        SMALLDATETIME=NULL
                                               ,@pAtivo           BIT=NULL
                                               ,@pNumeroDoc       NVARCHAR(20)=NULL
                                               ,@pConciliado      BIT=nul
                                               ,@pDataBancaria    SMALLDATETIME=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pidMov = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbMovBancaria
                            (TipoMov
                             ,idPosto
                             ,idCaixaPosto
                             ,Descricao
                             ,idContaBancaria
                             ,Valor
                             ,DataHora
                             ,Ativo
                             ,NumeroDoc
                             ,Conciliado
                             ,DataBancaria)
                VALUES      (@pTipoMov
                             ,@pidPosto
                             ,@pidCaixaPosto
                             ,@pDescricao
                             ,@pidContaBancaria
                             ,@pValor
                             ,@pDataHora
                             ,@pAtivo
                             ,@pNumeroDoc
                             ,@pConciliado
                             ,@pDataBancaria)
            END
          ELSE
            BEGIN
                UPDATE tbMovBancaria
                SET    TipoMov = @pTipoMov
                       ,idPosto = @pidPosto
                       ,idCaixaPosto = @pidCaixaPosto
                       ,Descricao = @pDescricao
                       ,idContaBancaria = @pidContaBancaria
                       ,Valor = @pValor
                       ,DataHora = @pDataHora
                       ,Ativo = @pAtivo
                       ,NumeroDoc = @pNumeroDoc
                       ,Conciliado = @pConciliado
                       ,DataBancaria = @pDataBancaria
                WHERE  Id = @pidMov
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbMovbanaria
          WHERE  Id = @pidMov
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbMovBancaria
          WHERE  Id = @pidMov
      END 
GO
/****** Object:  StoredProcedure [dbo].[spNotasFiscaisEmitidas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spNotasFiscaisEmitidas
CREATE PROCEDURE [dbo].[spNotasFiscaisEmitidas] @pOp          NVARCHAR(50)
                                               ,@pID         UNIQUEIDENTIFIER=NULL
                                               ,@pIdposto    UNIQUEIDENTIFIER=NULL
                                               ,@pIDCaixa    UNIQUEIDENTIFIER=NULL
                                               ,@pCFOP       INT=NULL
                                               ,@pTipo       NVARCHAR(20)=NULL
                                               ,@pNumero     INT=NULL
                                               ,@pIDEntidade UNIQUEIDENTIFIER =NULL
                                               ,@pCupons     NVARCHAR(4000)=NULL
                                               ,@pValor      MONEY=0
                                               ,@pData       SMALLDATETIME
                                               ,@pSerie      INT
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                SET @pID = newid()
                INSERT INTO tbNotasFiscaisEmitidas
                            (Id
                             ,IDPosto
                             ,IDCaixa
                             ,CFOP
                             ,Tipo
                             ,Numero
                             ,IDEntidade
                             ,Cupons
                             ,Valor
                             ,Data
                             ,Serie)
                VALUES      (@pID
                             ,@pIDPosto
                             ,@pIDCaixa
                             ,@pCFOP
                             ,@pTipo
                             ,@pNumero
                             ,@pIDEntidade
                             ,@pCupons
                             ,@pValor
                             ,@pData
                             ,@pSerie)

                SELECT @pID
            END
          ELSE
            BEGIN
                UPDATE tbNotasFiscaisEmitidas
                SET    IDPosto = @pIDPosto
                       ,IDCaixa = @pIDCaixa
                       ,CFOP = @pCFOP
                       ,Tipo = @pTipo
                       ,Numero = @pNumero
                       ,IDEntidade = @pIDEntidade
                       ,Cupons = @pCupons
                       ,Valor = @pValor
                       ,Data = @pData
                       ,Serie = @pSerie
                WHERE  id = @pID

                SELECT @pid
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbNotasFiscaisEmitidas
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbNotasFiscaisEmitidas
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spOcorrencia]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spOcorrencia
CREATE PROCEDURE [dbo].[spOcorrencia] @pOP         NVARCHAR(20)
                                     ,@pID        UNIQUEIDENTIFIER
                                     ,@pIdposto   UNIQUEIDENTIFIER=NULL
                                     ,@pIDCaixa   UNIQUEIDENTIFIER= NULL
                                     ,@pDataHora  SMALLDATETIME=NULL
                                     ,@pAssunto   NVARCHAR(100) = NULL
                                     ,@pDescricao TEXT=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbOcorrencias
                            (idPosto
                             ,idCaixa
                             ,DataHora
                             ,Assunto
                             ,Descricao)
                VALUES      (@pidPosto
                             ,@pidCaixa
                             ,@pDataHora
                             ,@pAssunto
                             ,@pDescricao)
            END
          ELSE
            BEGIN
                UPDATE tbOcorrencias
                SET    idPosto = @pidPosto
                       ,idCaixa = @pidCaixa
                       ,DataHora = @pDataHora
                       ,Assunto = @pAssunto
                       ,Descricao = @pDescricao
                WHERE  id = @pID
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbOcorrencias
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbOcorrencias
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spPatrimonio]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spPatrimonio
CREATE PROCEDURE [dbo].[spPatrimonio] @pOP          NVARCHAR(20)
                                     ,@pID         UNIQUEIDENTIFIER
                                     ,@pIdposto    UNIQUEIDENTIFIER=NULL
                                     ,@pNumero     NVARCHAR(50)=NULL
                                     ,@pDescricao  NVARCHAR(50)=NULL
                                     ,@pTipo       UNIQUEIDENTIFIER=NULL
                                     ,@pValor      MONEY=NULL
                                     ,@pDetalhes   TEXT=NULL
                                     ,@pDataCompra SMALLDATETIME=NULL
                                     ,@pDataBaixa  SMALLDATETIME=NULL
                                     ,@pLocal      NVARCHAR(50)=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbPatrimonio
                            (idPosto
                             ,Numero
                             ,Descricao
                             ,IdTipo
                             ,Valor
                             ,Detalhes
                             ,DataCompra
                             ,DataBaixa
                             ,Local)
                VALUES      (@pidPosto
                             ,@pNumero
                             ,@pDescricao
                             ,@pTipo
                             ,@pValor
                             ,@pDetalhes
                             ,@pDataCompra
                             ,@pDataBaixa
                             ,@pLocal)
            END
          ELSE
            BEGIN
                UPDATE tbPatrimonio
                SET    idPosto = @pidPosto
                       ,Numero = @pNumero
                       ,Descricao = @pDescricao
                       ,IdTipo = @pTipo
                       ,Valor = @pvalor
                       ,Detalhes = @pDetalhes
                       ,DataCompra = @pDataCompra
                       ,DataBaixa = @pDataBaixa
                       ,Local = @pLocal
                WHERE  id = @pID
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbPatrimonio
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbPatrimonio
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spPedido]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spPedido
CREATE PROCEDURE [dbo].[spPedido] @pOP                NVARCHAR(50)
                                 ,@pIDPedido         UNIQUEIDENTIFIER
                                 ,@pIdposto          UNIQUEIDENTIFIER=NULL
                                 ,@pIDEntidade       UNIQUEIDENTIFIER=NULL
                                 ,@pidEntidadeTransp UNIQUEIDENTIFIER=NULL
                                 ,@pDataPed          SMALLDATETIME=NULL
                                 ,@pValorProduto     SMALLMONEY=NULL
                                 ,@pValorFrete       SMALLMONEY=NULL
                                 ,@pValorGNRE        SMALLMONEY=NULL
                                 ,@pValorGARE        SMALLMONEY=NULL
                                 ,@pValorTotal       SMALLMONEY=NULL
                                 ,@pidChqProd        INT=NULL
                                 ,@pidChqFrete       INT=NULL
                                 ,@pTipoPagto        NVARCHAR(5)=NULL
                                 ,@pPgRc             BIT=NULL
                                 ,@pDespesa          BIT=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pidPedido = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbPedidos
                            (idPosto
                             ,idEntidade
                             ,idEntidadeTransp
                             ,DataPed
                             ,ValorProduto
                             ,ValorFrete
                             ,ValorGNRE
                             ,ValorGARE
                             ,ValorTotal
                             ,idChqProd
                             ,idChqFrete
                             ,TipoPagto
                             ,PgRc
                             ,Despesa)
                VALUES      (@pidPosto
                             ,@pidEntidade
                             ,@pidEntidadeTransp
                             ,@pDataPed
                             ,@pValorProduto
                             ,@pValorFrete
                             ,@pValorGNRE
                             ,@pValorGARE
                             ,@pValorTotal
                             ,@pidChqProd
                             ,@pidChqFrete
                             ,@pTipoPagto
                             ,@pPgRc
                             ,@pDespesa)
            END
          ELSE
            BEGIN
                UPDATE tbPedidos
                SET    idPosto = @pidPosto
                       ,idEntidade = @pidEntidade
                       ,idEntidadeTransp = @pidEntidadeTransp
                       ,DataPed = @pDataPed
                       ,ValorProduto = @pValorProduto
                       ,ValorFrete = @pValorFrete
                       ,ValorGNRE = @pValorGNRE
                       ,ValorGARE = @pValorGARE
                       ,ValorTotal = @pValorTotal
                       ,idChqProd = @pidChqProd
                       ,idChqFrete = @pidChqFrete
                       ,TipoPagto = @pTipoPagto
                       ,PgRc = @pPgRc
                       ,Despesa = @pDespesa
                WHERE  Id = @pidPedido
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbPedidos
          WHERE  Id = @pidPedido
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbPedidos
          WHERE  Id = @pidPedido
      END 
GO
/****** Object:  StoredProcedure [dbo].[spPedidoItemP]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spPedidoItemP
CREATE PROCEDURE [dbo].[spPedidoItemP] @pOP          NVARCHAR(20)
                                      ,@pID         UNIQUEIDENTIFIER
                                      ,@pIDPedido   UNIQUEIDENTIFIER=NULL
                                      ,@pIdProduto  UNIQUEIDENTIFIER=NULL
                                      ,@pPercentual FLOAT=NULL
                                      ,@pQTD        INT=NULL
                                      ,@pValor      SMALLMONEY=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbPedidosItensP
                            (idPedido
                             ,idProduto
                             ,Percentual
                             ,QTD
                             ,Valor)
                VALUES      (@pidPedido
                             ,@pidProduto
                             ,@pPercentual
                             ,@pQTD
                             ,@pValor)
            END
          ELSE
            BEGIN
                UPDATE tbPedidosItensP
                SET    idPedido = @pidPedido
                       ,idProduto = @pidProduto
                       ,Percentual = @pPercentual
                       ,QTD = @pQTD
                       ,Valor = @pValor
                WHERE  id = @pID
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbPedidosItensP
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbPedidosItensP
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spPermissoesPrazo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spPermissoesPrazo
CREATE PROCEDURE [dbo].[spPermissoesPrazo] @pOP          NVARCHAR(20)
                                          ,@pID         UNIQUEIDENTIFIER = NULL
                                          ,@pIDEntidade UNIQUEIDENTIFIER = NULL
                                          ,@pTipo       NVARCHAR(20) = NULL
                                          ,@pDescricao  NVARCHAR(70)=NULL
                                          ,@pRG         NVARCHAR(20) = NULL
                                          ,@pSenha      NVARCHAR(20) = NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                SET @pID = newid()
                INSERT INTO tbPermissoesPrazo
                            (Id
                             ,IDEntidade
                             ,Tipo
                             ,Descricao
                             ,RG
                             ,Senha)
                VALUES      (@pID
                             ,@pIDEntidade
                             ,@pTipo
                             ,@pDescricao
                             ,@pRG
                             ,@pSenha)

                SELECT @pID
            END
          ELSE
            BEGIN
                UPDATE tbPermissoesPrazo
                SET    IDEntidade = @pIDEntidade
                       ,Tipo = @pTipo
                       ,Descricao = @pDescricao
                       ,RG = @pRG
                       ,Senha = @pSenha
                WHERE  ID = @pID

                SELECT @pID
            END
      END
    ELSE IF @pOP = 'Selecionar'
      IF @pID = dbo.GuidEmpty()
        BEGIN
            SELECT *
            FROM   tbPermissoesPrazo
            WHERE  IDEntidade = @pIDEntidade
        END
      ELSE
        BEGIN
            SELECT *
            FROM   tbPermissoesPrazo
            WHERE  id = @pID
        END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbPermissoesPrazo
          WHERE  ID = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spPlanodeConta]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spPlanodeConta
CREATE PROCEDURE [dbo].[spPlanodeConta] @pOP                 NVARCHAR(20)
                                       ,@pCodConta          UNIQUEIDENTIFIER
                                       ,@pDescricao         NVARCHAR(40)=NULL
                                       ,@pTipo              NVARCHAR(1)=NULL
                                       ,@pCodContaExtendido NVARCHAR(26)=NULL
                                       ,@pNivel             INT=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pCodConta = dbo.GuidEmpty()
            BEGIN
                SET @pCodConta = newid()
                INSERT INTO tbPlanoContas
                            (Id
                             ,Descricao
                             ,Tipo
                             ,CodContaExtendido
                             ,Nivel)
                VALUES      (@pCodConta
                             ,@pDescricao
                             ,@pTipo
                             ,@pCodContaExtendido
                             ,@pNivel)

                SELECT @pCodConta
            END
          ELSE
            BEGIN
                UPDATE tbPlanoContas
                SET    Descricao = @pDescricao
                       ,Tipo = @pTipo
                       ,CodContaExtendido = @pCodContaExtendido
                       ,Nivel = @pNivel
                WHERE  Id = @pCodConta

                SELECT @pcodConta
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbPlanoContas
          WHERE  Id = @pCodConta
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbPlanoContas
          WHERE  Id = @pCodConta
      END 
GO
/****** Object:  StoredProcedure [dbo].[spPLR]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spPLR
CREATE PROCEDURE [dbo].[spPLR] @pOP           NVARCHAR(20)
                              ,@pID          UNIQUEIDENTIFIER = NULL
                              ,@pIdposto     UNIQUEIDENTIFIER = NULL
                              ,@pIDEntidade  UNIQUEIDENTIFIER = NULL
                              ,@pData        SMALLDATETIME = NULL
                              ,@pDescricao   NVARCHAR(100) = NULL
                              ,@pTotal       MONEY = NULL
                              ,@pPercentual  MONEY = NULL
                              ,@pValor       MONEY = NULL
                              ,@pDataInicial SMALLDATETIME = NULL
                              ,@pDataFinal   SMALLDATETIME = NULL
AS
    IF @pOP = 'Selecionar'
      IF @pID = dbo.GuidEmpty()
        BEGIN
            SELECT *
            FROM   tbPLR
            WHERE  id = @pID
        END
      ELSE
        BEGIN
            SELECT *
            FROM   tbPLR
        END
    ELSE IF @pOP = 'Salvar'
      IF @pID = dbo.GuidEmpty()
		
        BEGIN
        set @pID = NEWID()
            INSERT INTO tbPLR
                        (id
                        ,IDPosto
                         ,IDEntidade
                         ,Data
                         ,Descricao
                         ,Total
                         ,Percentual
                         ,Valor)
            VALUES      (@pid
                         ,@pIDPosto
                         ,@pIDEntidade
                         ,@pData
                         ,@pDescricao
                         ,@pTotal
                         ,@pPercentual
                         ,@pValor)
        END
      ELSE
        BEGIN
            UPDATE tbPLR
            SET    IDPosto = @pIDPosto
                   ,IDEntidade = @pIDEntidade
                   ,Data = @pData
                   ,Descricao = @pDescricao
                   ,Total = @pTotal
                   ,Percentual = @pPercentual
                   ,Valor = @pValor
            WHERE  id = @pID
        END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbPLR
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'ListarPorData'
      BEGIN
          SELECT ID
                 ,IDPosto
                 ,IDEntidade
                 ,Data
                 ,Descricao
                 ,Total
                 ,Percentual
                 ,Valor
          FROM   tbPLR
          WHERE  ( IDEntidade = @pIDEntidade )
             AND ( Data BETWEEN @pDataInicial AND @pDataFinal )
      END 
      
      
      select @pID

GO
/****** Object:  StoredProcedure [dbo].[spPLRTabela]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spPLRTabela
CREATE PROCEDURE [dbo].[spPLRTabela] @pOP            NVARCHAR(50)
                                    ,@pID           UNIQUEIDENTIFIER = NULL
                                    ,@pIdposto      UNIQUEIDENTIFIER = NULL
                                    ,@pIdProduto    UNIQUEIDENTIFIER = NULL
                                    ,@pValorInicial MONEY = NULL
                                    ,@pValorFinal   MONEY = NULL
                                    ,@pPercentual   MONEY = NULL
AS
    IF @pOP = 'Selecionar'
      BEGIN
          SELECT tbPLRTabela.ID
                 ,tbPLRTabela.IDPosto
                 ,tbPLRTabela.IDProduto
                 ,tbPLRTabela.Valorinicial
                 ,tbPLRTabela.ValorFinal
                 ,tbPLRTabela.Percentual
                 ,CASE tbProdutos.TipoProd
                    WHEN 'CB' THEN tbProdutos.Descricao
                    WHEN 'LC' THEN 'Conveniência'
                    WHEN 'LB' THEN 'Lubrificantes'
                  END AS Produto
          FROM   tbPLRTabela
                 LEFT OUTER JOIN tbProdutos
                              ON tbPLRTabela.IDProduto = tbProdutos.Id
          WHERE  ( tbPLRTabela.ID = @pID )
      END
    ELSE IF @pOP = 'Salvar'
      IF @pID = dbo.GuidEmpty()
        BEGIN
            INSERT INTO tbPLRTabela
                        (IDPosto
                         ,IDProduto
                         ,ValorInicial
                         ,ValorFinal
                         ,Percentual)
            VALUES      (@pIDPosto
                         ,@pIDProduto
                         ,@pValorInicial
                         ,@pValorFinal
                         ,@pPercentual)
        END
      ELSE
        BEGIN
            UPDATE tbPLRTabela
            SET    IDPosto = @pIDPosto
                   ,IDProduto = @pIDProduto
                   ,ValorInicial = @pValorInicial
                   ,ValorFinal = @pValorFinal
                   ,Percentual = @pPercentual
            WHERE  id = @pID
        END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbPLRTabela
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'ListaPorPosto'
      BEGIN
          SELECT dbo.tbPLRTabela.ID
                 ,dbo.tbPLRTabela.IDProduto
                 ,dbo.tbPLRTabela.ValorInicial
                 ,dbo.tbPLRTabela.ValorFinal
                 ,dbo.tbPLRTabela.Percentual
                 ,CASE
                    WHEN tbProdutos.TipoProd = 'CB' THEN tbProdutos.Descricao
                    WHEN tbProdutos.TipoProd = 'LC' THEN 'Conveniência'
                    WHEN tbProdutos.TipoProd = 'LB' THEN 'Lubrificantes'
                  END AS Produto
                 ,(SELECT dbo.tbPLRTabela.ValorFinal *
                          dbo.tbPLRTabela.Percentual /
                          100 AS
                          Expr1)
                     AS Valor
          FROM   dbo.tbPLRTabela
                 LEFT OUTER JOIN dbo.tbProdutos
                              ON dbo.tbPLRTabela.IDProduto = dbo.tbProdutos.Id
          WHERE  ( dbo.tbPLRTabela.IDPosto = @pIDPosto )
          ORDER  BY dbo.tbPLRTabela.IDProduto
                    ,dbo.tbPLRTabela.ValorInicial
      END 
GO
/****** Object:  StoredProcedure [dbo].[spPLRVendas]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
  
--spPLRVendas  
CREATE PROCEDURE [dbo].[spPLRVendas] @pIdposto  UNIQUEIDENTIFIER  
                                    ,@pIDCaixa UNIQUEIDENTIFIER  
AS  
    SELECT tbVendas.IDVendedor  
           ,tbProdutos.NumProduto 
           ,tbProdutos.Descricao  
           ,CASE tbVendasItens.PrecoEspecial  
              WHEN 0 THEN SUM(tbVendasItens.Quantidade *  
                              tbVendasItens.PrecoVenda)  
              ELSE SUM(tbVendasItens.Quantidade * tbVendasItens.PrecoEspecial)  
            END                                                AS Total  
           ,dbo.PercentualPLR(@pIDPosto, tbVendasItens.idProduto, SUM(  
             tbVendasItens.Quantidade *  
             tbVendasItens.PrecoVenda))                        AS Percentual  
           ,CASE tbVendasItens.PrecoEspecial  
              WHEN 0 THEN SUM(tbVendasItens.Quantidade *  
                              tbVendasItens.PrecoVenda)  
              ELSE SUM(tbVendasItens.Quantidade * tbVendasItens.PrecoEspecial)  
            END * ( dbo.PercentualPLR(@pIDPosto, tbVendasItens.idProduto, SUM(  
                            tbVendasItens.Quantidade *  
                            tbVendasItens.PrecoVenda)) / 100 ) AS Valor  
    FROM   tbVendas  with (nolock)
           INNER JOIN tbVendasItens  with (nolock)
                   ON tbVendas.Id = tbVendasItens.idVenda  
           INNER JOIN tbProdutos  with (nolock)
                   ON tbVendasItens.idProduto = tbProdutos.Id  
    WHERE  ( tbVendas.Status IS NULL )  
       AND ( tbVendasItens.Cancelado = 0 )  
       AND ( tbVendas.idPosto = @pIDPosto )  
       AND ( NOT ( tbVendas.IDVendedor IS NULL ) )  
       AND ( tbVendas.idCaixa = @pIDCaixa )  
       AND ( tbProdutos.TipoProd = N'CB' )  
    GROUP  BY tbVendas.IDVendedor  
              ,tbVendasItens.idProduto  
              ,tbProdutos.TipoProd  
              ,tbProdutos.Descricao  
              ,tbVendas.idCaixa  
              ,tbProdutos.Id  
              ,tbProdutos.NumProduto
              ,tbVendasItens.PrecoEspecial  
    UNION  
    SELECT tbVendas.IDVendedor  
           ,1000  
            AS  
            IDProduto  
           ,'Conveniência'  
            AS  
            Descricao  
           ,CASE tbVendasItens.PrecoEspecial  
              WHEN 0 THEN SUM(tbVendasItens.Quantidade *  
                              tbVendasItens.PrecoVenda)  
              ELSE SUM(tbVendasItens.Quantidade * tbVendasItens.PrecoEspecial)  
            END  
            AS  
            Total  
           ,dbo.PercentualPLR(@pIDPosto, tbVendasItens.idProduto, SUM(tbVendasItens.Quantidade *  
                                                    tbVendasItens.PrecoVenda))  
            AS  
            Percentual  
           ,CASE tbVendasItens.PrecoEspecial  
              WHEN 0 THEN SUM(tbVendasItens.Quantidade *  
                              tbVendasItens.PrecoVenda)  
              ELSE SUM(tbVendasItens.Quantidade * tbVendasItens.PrecoEspecial)  
            END * ( dbo.PercentualPLR(@pIDPosto, tbVendasItens.idProduto, SUM(  
                    tbVendasItens.Quantidade *  
            tbVendasItens.PrecoVenda)) /  
            100 )  
            AS  
            Valor  
    FROM   tbVendas  with (nolock)
           INNER JOIN tbVendasItens  with (nolock)
                   ON tbVendas.Id = tbVendasItens.idVenda  
           INNER JOIN tbProdutos  with (nolock)
                   ON tbVendasItens.idProduto = tbProdutos.Id  
    WHERE  ( tbVendas.Status IS NULL )  
       AND ( tbVendasItens.Cancelado = 0 )  
       AND ( tbVendas.idPosto = @pIDPosto )  
       AND ( NOT ( tbVendas.IDVendedor IS NULL ) )  
       AND ( tbProdutos.TipoProd = N'LC' )  
       AND ( tbVendas.idCaixa = @pIDCaixa )  
    GROUP  BY tbVendas.IDVendedor  
              ,tbVendasItens.idProduto  
              ,tbProdutos.TipoProd  
              ,tbVendasItens.PrecoEspecial  
              ,tbVendas.idCaixa  
    UNION  
    SELECT tbVendas.IDVendedor  
           ,2000  
            AS  
            IDProduto  
           ,'Lubrificantes'  
            AS  
            Descricao  
           ,CASE tbVendasItens.PrecoEspecial  
           WHEN 0 THEN SUM(tbVendasItens.Quantidade *  
                              tbVendasItens.PrecoVenda)  
              ELSE SUM(tbVendasItens.Quantidade * tbVendasItens.PrecoEspecial)  
            END  
            AS  
            Total  
           ,dbo.PercentualPLR(@pIDPosto, tbVendasItens.idProduto, SUM(tbVendasItens.Quantidade *  
                                                    tbVendasItens.PrecoVenda))  
            AS  
            Percentual  
           ,CASE tbVendasItens.PrecoEspecial  
              WHEN 0 THEN SUM(tbVendasItens.Quantidade *  
                              tbVendasItens.PrecoVenda)  
              ELSE SUM(tbVendasItens.Quantidade * tbVendasItens.PrecoEspecial)  
            END * ( dbo.PercentualPLR(@pIDPosto, tbVendasItens.idProduto, SUM(  
                    tbVendasItens.Quantidade *  
            tbVendasItens.PrecoVenda)) /  
            100 )  
            AS  
            Valor  
    FROM   tbVendas  with (nolock)
           INNER JOIN tbVendasItens with (nolock) 
                   ON tbVendas.Id = tbVendasItens.idVenda  
           INNER JOIN tbProdutos  with (nolock)
                   ON tbVendasItens.idProduto = tbProdutos.Id  
    WHERE  ( tbVendas.Status IS NULL )  
       AND ( tbVendasItens.Cancelado = 0 )  
       AND ( tbVendas.idPosto = @pIDPosto )  
       AND ( tbVendas.idCaixa = @pIDCaixa )  
       AND ( NOT ( tbVendas.IDVendedor IS NULL ) )  
       AND ( tbProdutos.TipoProd = N'LB' )  
    GROUP  BY tbVendas.IDVendedor  
              ,tbVendasItens.idProduto  
              ,tbProdutos.TipoProd  
              ,tbVendasItens.PrecoEspecial  



GO
/****** Object:  StoredProcedure [dbo].[spPontoEletronico]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spPontoEletronico
CREATE PROCEDURE [dbo].[spPontoEletronico] @pIDEntidade UNIQUEIDENTIFIER
                                          ,@pMes       CHAR(2)
                                          ,@pAno       CHAR(4)
                                          ,@pDiasMes   INT
AS
    SELECT CONVERT(NVARCHAR(10), RIGHT('00' + RTRIM(LTRIM(CONVERT(CHAR(2), Dia))
                                 ), 2)
                                 + '/' + @pMes + '/' + @pAno, 103) AS Data
           ,ISNULL ((SELECT ID
                     FROM   viewPontoEletronico
                     WHERE  ( IDEntidade = @pIDEntidade )
                        AND ( Data = CONVERT(NVARCHAR(10),
                                     RIGHT('00' + RTRIM(LTRIM(
                                     CONVERT
                                     (
                                     CHAR
                                     (2),
                                         tbDias.Dia))), 2
                                                  )
                                     + '/' + @pMes + '/' +
                                     @pAno, 103
                                     )
                            )), dbo.GuidEmpty())                                 AS ID
           ,ISNULL ((SELECT InicioTrabalho AS Expr1
                     FROM   viewPontoEletronico
                     WHERE  ( IDEntidade = @pIDEntidade )
                        AND ( Data = CONVERT(NVARCHAR(10),
                                     RIGHT('00' + RTRIM(LTRIM(
                                     CONVERT
                                     (
                                     CHAR
                                     (2),
                                         tbDias.Dia))), 2
                                                  )
                                     + '/' + @pMes + '/' +
                                     @pAno, 103
                                     )
                            )), '')                                AS
            InicioTrabalho
           ,ISNULL ((SELECT InicioAlmoco
                     FROM   viewPontoEletronico
                     WHERE  ( IDEntidade = @pIDEntidade )
                        AND ( Data = CONVERT(NVARCHAR(10),
                                     RIGHT('00' + RTRIM(LTRIM(
                                     CONVERT
                                     (
                                     CHAR
                                     (2),
                                         tbDias.Dia))), 2
                                                  )
                                     + '/' + @pMes + '/' +
                                     @pAno, 103
                                     )
                            )), '')                                AS
            InicioAlmoco
           ,ISNULL ((SELECT FimAlmoco
                     FROM   viewPontoEletronico
                     WHERE  ( IDEntidade = @pIDEntidade )
                        AND ( Data = CONVERT(NVARCHAR(10),
                                     RIGHT('00' + RTRIM(LTRIM(
                                     CONVERT
                                     (
                                     CHAR
                                     (2),
                                         tbDias.Dia))), 2
                                                  )
                                     + '/' + @pMes + '/' +
                                     @pAno, 103
                                     )
                            )), '')                                AS FimAlmoco
           ,ISNULL ((SELECT FimTrabalho
                     FROM   viewPontoEletronico
                     WHERE  ( IDEntidade = @pIDEntidade )
                        AND ( Data = CONVERT(NVARCHAR(10),
                                     RIGHT('00' + RTRIM(LTRIM(
                                     CONVERT
                                     (
                                     CHAR
                                     (2),
                                         tbDias.Dia))), 2
                                                  )
                                     + '/' + @pMes + '/' +
                                     @pAno, 103
                                     )
                            )), '')                                AS
            FimTrabalho
           ,ISNULL ((SELECT Folga
                     FROM   viewPontoEletronico
                     WHERE  ( IDEntidade = @pIDEntidade )
                        AND ( Data = CONVERT(NVARCHAR(10),
                                     RIGHT('00' + RTRIM(LTRIM(
                                     CONVERT
                                     (
                                     CHAR
                                     (2),
                                         tbDias.Dia))), 2
                                                  )
                                     + '/' + @pMes + '/' +
                                     @pAno, 103
                                     )
                            )), 0)                                 AS Folga
           ,ISNULL ((SELECT Falta
                     FROM   viewPontoEletronico
                     WHERE  ( IDEntidade = @pIDEntidade )
                        AND ( Data = CONVERT(NVARCHAR(10),
                                     RIGHT('00' + RTRIM(LTRIM(
                                     CONVERT
                                     (
                                     CHAR
                                     (2),
                                         tbDias.Dia))), 2
                                                  )
                                     + '/' + @pMes + '/' +
                                     @pAno, 103
                                     )
                            )), 0)                                 AS Falta
           ,ISNULL ((SELECT Ferias
                     FROM   viewPontoEletronico
                     WHERE  ( IDEntidade = @pIDEntidade )
                        AND ( Data = CONVERT(NVARCHAR(10),
                                     RIGHT('00' + RTRIM(LTRIM(
                                     CONVERT
                                     (
                                     CHAR
                                     (2),
                                         tbDias.Dia))), 2
                                                  )
                                     + '/' + @pMes + '/' +
                                     @pAno, 103
                                     )
                            )), 0)                                 AS Ferias
           ,ISNULL ((SELECT Atestado
                     FROM   viewPontoEletronico
                     WHERE  ( IDEntidade = @pIDEntidade )
                        AND ( Data = CONVERT(NVARCHAR(10),
                                     RIGHT('00' + RTRIM(LTRIM(
                                     CONVERT
                                     (
                                     CHAR
                                     (2),
                                         tbDias.Dia))), 2
                                                  )
                                     + '/' + @pMes + '/' +
                                     @pAno, 103
                                     )
                            )), 0)                                 AS Atestado
           ,ISNULL ((SELECT Afastado
                     FROM   viewPontoEletronico
                     WHERE  ( IDEntidade = @pIDEntidade )
                        AND ( Data = CONVERT(NVARCHAR(10),
                                     RIGHT('00' + RTRIM(LTRIM(
                                     CONVERT
                                     (
                                     CHAR
                                     (2),
                                         tbDias.Dia))), 2
                                                  )
                                     + '/' + @pMes + '/' +
                                     @pAno, 103
                                     )
                            )), 0)                                 AS Afastado
           ,ISNULL ((SELECT Advertencia
                     FROM   viewPontoEletronico
                     WHERE  ( IDEntidade = @pIDEntidade )
                        AND ( Data = CONVERT(NVARCHAR(10),
                                     RIGHT('00' + RTRIM(LTRIM(
                                     CONVERT
                                     (
                                     CHAR
                                     (2),
                                         tbDias.Dia))), 2
                                                  )
                                     + '/' + @pMes + '/' +
                                     @pAno, 103
                                     )
                            )), 0)                                 AS
            Advertencia
           ,ISNULL ((SELECT MarcadoIniTrab
                     FROM   viewPontoEletronico
                     WHERE  ( IDEntidade = @pIDEntidade )
                        AND ( Data = CONVERT(NVARCHAR(10),
                                     RIGHT('00' + RTRIM(LTRIM(
                                     CONVERT
                                     (
                                     CHAR
                                     (2),
                                         tbDias.Dia))), 2
                                                  )
                                     + '/' + @pMes + '/' +
                                     @pAno, 103
                                     )
                            )), 0)                                 AS
            MarcadoIniTrab
           ,ISNULL ((SELECT MarcadoIniDesc
                     FROM   viewPontoEletronico
                     WHERE  ( IDEntidade = @pIDEntidade )
                        AND ( Data = CONVERT(NVARCHAR(10),
                                     RIGHT('00' + RTRIM(LTRIM(
                                     CONVERT
                                     (
                                     CHAR
                                     (2),
                                         tbDias.Dia))), 2
                                                  )
                                     + '/' + @pMes + '/' +
                                     @pAno, 103
                                     )
                            )), 0)                                 AS
            MarcadoIniDesc
           ,ISNULL ((SELECT MarcadoFimDesc
                     FROM   viewPontoEletronico
                     WHERE  ( IDEntidade = @pIDEntidade )
                        AND ( Data = CONVERT(NVARCHAR(10),
                                     RIGHT('00' + RTRIM(LTRIM(
                                     CONVERT
                                     (
                                     CHAR
                                     (2),
                                         tbDias.Dia))), 2
                                                  )
                                     + '/' + @pMes + '/' +
                                     @pAno, 103
                                     )
                            )), 0)                                 AS
            MarcadoFimDesc
           ,ISNULL ((SELECT MarcadoFimTrab
                     FROM   viewPontoEletronico
                     WHERE  ( IDEntidade = @pIDEntidade )
                        AND ( Data = CONVERT(NVARCHAR(10),
                                     RIGHT('00' + RTRIM(LTRIM(
                                     CONVERT
                                     (
                                     CHAR
                                     (2),
                                         tbDias.Dia))), 2
                                                  )
                                     + '/' + @pMes + '/' +
                                     @pAno, 103
                                     )
                            )), 0)                                 AS
            MarcadoFimTrab
    FROM   tbDias
    WHERE  ( Dia <= @pDiasMes ) 
GO
/****** Object:  StoredProcedure [dbo].[spPosto]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spPosto
CREATE PROCEDURE [dbo].[spPosto] @pOP             NVARCHAR(20)
                                ,@pIdposto       UNIQUEIDENTIFIER
                                ,@pRzSocial      NVARCHAR(100)=NULL
                                ,@pNomeUsual     NVARCHAR(100)=NULL
                                ,@pAtivo         BIT=NULL
                                ,@pRede          NVARCHAR(20)=NULL
                                ,@pCNPJ          NVARCHAR(20)=NULL
                                ,@pIE            NVARCHAR(20)=NULL
                                ,@pEndereco      NVARCHAR(150)=NULL
                                ,@pBairro        NVARCHAR(50)=NULL
                                ,@pMunicipio     UNIQUEIDENTIFIER=NULL
                                ,@pUF            NVARCHAR(2)=NULL
                                ,@pCEP           NVARCHAR(10)=NULL
                                ,@pFone          NVARCHAR(20)=NULL
                                ,@pFax           NVARCHAR(20)=NULL
                                ,@pContato       UNIQUEIDENTIFIER=NULL
                                ,@pGerenteGeral  UNIQUEIDENTIFIER=NULL
                                ,@pContador      UNIQUEIDENTIFIER=NULL
                                ,@pValorContador SMALLMONEY=NULL
                                ,@pContacorrente UNIQUEIDENTIFIER=NULL
                                ,@pInternet      NVARCHAR(50)=NULL
                                ,@pValorInternet SMALLMONEY=NULL
                                ,@pHorarioFunc   NVARCHAR(50)=NULL
                                ,@pAluguelMensal SMALLMONEY=NULL
                                ,@pObs           NVARCHAR(100)=NULL
                                ,@pIP            NVARCHAR(50)=NULL
                                ,@pidRede        UNIQUEIDENTIFIER=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pidPosto = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbPostos
                            (RzSocial
                             ,NomeUsual
                             ,Ativo
                             ,Rede
                             ,CNPJ
                             ,IE
                             ,Endereco
                             ,Bairro
                             ,IdMunicipio
                             ,UF
                             ,CEP
                             ,Fone
                             ,Fax
                             ,IdContato
                             ,IdGerenteGeral
                             ,IdContador
                             ,ValorContador
                             ,IdContaCorrente
                             ,Internet
                             ,ValorInternet
                             ,HorarioFunc
                             ,AluguelMensal
                             ,Obs
                             ,IP
                             ,idRede)
                VALUES      (@pRzSocial
                             ,@pNomeUsual
                             ,@pAtivo
                             ,@pRede
                             ,@pCNPJ
                             ,@pIE
                             ,@pEndereco
                             ,@pBairro
                             ,@pMunicipio
                             ,@pUF
                             ,@pCEP
                             ,@pFone
                             ,@pFax
                             ,@pContato
                             ,@pGerenteGeral
                             ,@pContador
                             ,@pValorContador
                             ,@pContaCorrente
                             ,@pInternet
                             ,@pValorInternet
                             ,@pHorarioFunc
                             ,@pAluguelMensal
                             ,@PObs
                             ,@pIP
                             ,@pidRede)
            END
          ELSE
            BEGIN
                UPDATE tbPostos
                SET    RzSocial = @pRzSocial
                       ,NomeUsual = @pNomeUsual
                       ,Ativo = @pAtivo
                       ,Rede = @pRede
                       ,CNPJ = @pCNPJ
                       ,IE = @pIE
                       ,Endereco = @pEndereco
                       ,Bairro = @pBairro
                       ,IdMunicipio = @pMunicipio
                       ,UF = @pUF
                       ,CEP = @pCEP
                       ,Fone = @pFone
                       ,Fax = @pFax
                       ,IdContato = @pContato
                       ,IdGerenteGeral = @pGerenteGeral
                       ,IdContador = @pContador
                       ,ValorContador = @pValorContador
                       ,IdContaCorrente = @pContaCorrente
                       ,Internet = @pInternet
                       ,ValorInternet = @pValorInternet
                       ,HorarioFunc = @pHorarioFunc
                       ,AluguelMensal = @pAluguelMensal
                       ,Obs = @pObs
                       ,IP = @pIP
                       ,idRede = @pidRede
                WHERE  Id = @pidPosto
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbPostos
          WHERE  Id = @pidPosto
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbPostos
          WHERE  Id = @pidPosto
      END 
GO
/****** Object:  StoredProcedure [dbo].[spPrecoEspecial]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spPrecoEspecial
CREATE PROCEDURE [dbo].[spPrecoEspecial] @pOP             NVARCHAR(20)
                                        ,@pID            UNIQUEIDENTIFIER
                                        ,@pIDEntidade    UNIQUEIDENTIFIER=NULL
                                        ,@pIdProduto     UNIQUEIDENTIFIER=NULL
                                        ,@pPrecoEspecial SMALLMONEY=NULL
                                        ,@pDiferenca     SMALLMONEY=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbPrecosEspeciais
                            (idEntidade
                             ,idProduto
                             ,PrecoEspecial
                             ,Diferenca)
                VALUES      (@pidEntidade
                             ,@pidProduto
                             ,@pPrecoEspecial
                             ,@pDiferenca)
            END
          ELSE
            BEGIN
                UPDATE tbPrecosEpeciais
                SET    idEntidade = @pidEntidade
                       ,idProduto = @pidProduto
                       ,PrecoEspecial = @pPrecoEspecial
                WHERE  id = @pID
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbPrecosEspeciais
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbPrecosEspeciais
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spProduto]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spProduto
CREATE PROCEDURE [dbo].[spProduto] @pOP             NVARCHAR(20)
                                  ,@pIdProduto     UNIQUEIDENTIFIER
                                  ,@pCodigoBarras  NVARCHAR(50)=NULL
                                  ,@pDescricao     NVARCHAR(80)=NULL
                                  ,@pTipoProd      NVARCHAR(50)=NULL
                                  ,@pTipoAliquota  NVARCHAR(4)=NULL
                                  ,@pOrdem         INT=NULL
                                  ,@pAtivo         BIT=NULL
                                  ,@pUnidadeMedida NVARCHAR(4)=NULL
                                  ,@pGrupo         UNIQUEIDENTIFIER=NULL
                                  ,@pIdposto       UNIQUEIDENTIFIER = NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pidProduto = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbProdutos
                            (CodigoBarras
                             ,Descricao
                             ,TipoProd
                             ,TipoAliquota
                             ,Ordem
                             ,Ativo
                             ,UnidadeMedida
                             ,IdGrupo)
                VALUES      (@pCodigoBarras
                             ,@pDescricao
                             ,@pTipoProd
                             ,@pTipoAliquota
                             ,@pOrdem
                             ,@pAtivo
                             ,@pUnidadeMedida
                             ,@pGrupo)
            END
          ELSE
            BEGIN
                UPDATE tbProdutos
                SET    CodigoBarras = @pCodigoBarras
                       ,Descricao = @pDescricao
                       ,TipoProd = @pTipoProd
                       ,TipoAliquota = @pTipoAliquota
                       ,Ordem = @pOrdem
                       ,Ativo = @pAtivo
                       ,UnidadeMedida = @pUnidadeMedida
                       ,IdGrupo = @pGrupo
                WHERE  Id = @pidProduto
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbProdutos
          WHERE  Id = @pidProduto
      END
    ELSE IF @pOP = 'PrecoNoPosto'
      BEGIN
          SELECT PrecoVenda
          FROM   tbProdutosPostos
          WHERE  idProduto = @pidProduto
             AND idPosto = @pIDPosto
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbProdutos
          WHERE  Id = @pidProduto
      END 
GO
/****** Object:  StoredProcedure [dbo].[spProdutosAlteracaoPreco]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spProdutosAlteracaoPreco
CREATE PROCEDURE [dbo].[spProdutosAlteracaoPreco] @pOP         NVARCHAR(20)
                                                 ,@pID        UNIQUEIDENTIFIER = NULL
                                                 ,@pIdposto   UNIQUEIDENTIFIER=NULL
                                                 ,@pIdProduto UNIQUEIDENTIFIER=NULL
                                                 ,@pData      SMALLDATETIME=NULL
                                                 ,@pTurno     INT=NULL
                                                 ,@pValor     SMALLMONEY=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                SET @pID = newid()
                INSERT INTO tbProdutosAlteracaoPreco
                            (Id
                             ,IdPosto
                             ,IdProduto
                             ,Data
                             ,Turno
                             ,Valor)
                VALUES      (@pID
                             ,@pIdPosto
                             ,@pIdProduto
                             ,@pData
                             ,@pTurno
                             ,@pValor)

                SELECT @pID
            END
          ELSE
            BEGIN
                UPDATE tbProdutosAlteracaoPreco
                SET    IdPosto = @pIdPosto
                       ,IdProduto = @pIdProduto
                       ,Data = @pData
                       ,Turno = @pTurno
                       ,Valor = @pValor
                WHERE  id = @pID

                SELECT @pid
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbProdutosAlteracaoPreco
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'TemAlteracao'
      BEGIN
          SELECT tbProdutosAlteracaoPreco.ID
                 ,tbProdutos.Descricao           AS Produto
                 ,tbProdutosAlteracaoPreco.Valor AS Preco
                 ,tbProdutosAlteracaoPreco.IdProduto
          FROM   tbProdutosAlteracaoPreco
                 INNER JOIN tbProdutos
                         ON tbProdutosAlteracaoPreco.IdProduto = tbProdutos.Id
          WHERE  ( tbProdutosAlteracaoPreco.IdPosto = @pIDposto )
             AND ( tbProdutosAlteracaoPreco.Data = @pData )
             AND ( tbProdutosAlteracaoPreco.Turno = @pTurno )
             AND Efetuada = 0
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbProdutosAlteracaoPreco
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spProdutosEstoqueTeto]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spProdutosEstoqueTeto
CREATE PROCEDURE [dbo].[spProdutosEstoqueTeto] @pOP            NVARCHAR(20)
                                              ,@pID           UNIQUEIDENTIFIER
                                              ,@pIdposto      UNIQUEIDENTIFIER=NULL
                                              ,@pConveniencia SMALLMONEY=NULL
                                              ,@pLubrificante SMALLMONEY=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                SET @pID = newid()
                INSERT INTO tbProdutosEstoqueTeto
                            (Id
                             ,IdPosto
                             ,Conveniencia
                             ,Lubrificante)
                VALUES      (@pID
                             ,@pIdPosto
                             ,@pConveniencia
                             ,@pLubrificante)

                SELECT @pID
            END
          ELSE
            BEGIN
                UPDATE tbProdutosEstoqueTeto
                SET    IdPosto = @pIdPosto
                       ,Conveniencia = @pConveniencia
                       ,Lubrificante = @pLubrificante
                WHERE  id = @pID

                SELECT @pid
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbProdutosEstoqueTeto
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbProdutosEstoqueTeto
          WHERE  id = @pid
      END 
GO
/****** Object:  StoredProcedure [dbo].[spRede]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spRede
CREATE PROCEDURE [dbo].[spRede] @pOP         NVARCHAR(20)
                               ,@pID        UNIQUEIDENTIFIER
                               ,@pDescricao NVARCHAR(50)=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbRedes
                            (Descricao)
                VALUES      (@pDescricao)
            END
          ELSE
            BEGIN
                UPDATE tbRedes
                SET    Descricao = @pDescricao
                WHERE  id = @pID
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbRedes
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbRedes
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spSaldoContaCorrente]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spSaldoContaCorrente
CREATE PROCEDURE [dbo].[spSaldoContaCorrente] @pIDEntidade      UNIQUEIDENTIFIER
                                             ,
@pDataVencimento SMALLDATETIME = NULL
AS
    IF @pDataVencimento IS NULL
        OR @pDataVencimento = ''
      BEGIN
          SET @pDataVencimento = (SELECT ProxFechamento
                                  FROM   tbEntidades
                                  WHERE  ( Id = @pIDEntidade ))
      END

    SELECT Id
           ,Limite
           ,DiaFechamento
           ,SaldoLimite
           ,Especial
           ,@pDataVencimento
            AS ProxFechamento
           ,NVendasPrazo
           ,Tolerancia
           ,ISNULL ((SELECT SUM(CASE idTipo
                                  WHEN 'RC' THEN Valor
                                  WHEN 'AR' THEN Valor * -1
                                END) AS Expr1
                     FROM   tbContasPagarReceber
                     WHERE  ( idEntidade = @pIDEntidade )
                        AND ( idTipo = 'AR' )
                        AND ( Data <= @pDataVencimento )
                         OR ( idEntidade = @pIDEntidade )
                            AND ( idTipo = 'RC' )
                            AND ( Data <= @pDataVencimento )), 0)
            AS SaldoVencimento
           ,ISNULL ((SELECT SUM(CASE idTipo
                                  WHEN 'RC' THEN Valor
                                  WHEN 'AR' THEN Valor * -1
                                END) AS Expr1
                     FROM   tbContasPagarReceber AS tbContasPagarReceber_3
                     WHERE  ( idEntidade = @pIDEntidade )
                        AND ( idTipo = 'AR' )
                        AND ( IdTipoDocto = 'JU' )
                        AND ( Data <= @pDataVencimento )
                         OR ( idEntidade = @pIDEntidade )
                            AND ( idTipo = 'RC' )
                            AND ( IdTipoDocto = 'JU' )
                            AND ( Data <= @pDataVencimento )), 0)
            AS Juros
           ,ISNULL ((SELECT SUM(CASE idTipo
                                  WHEN 'RC' THEN Valor
                                  WHEN 'AR' THEN Valor * -1
                                END) AS Expr1
                     FROM   tbContasPagarReceber AS tbContasPagarReceber_2
                     WHERE  ( idEntidade = @pIDEntidade )
                        AND ( idTipo = 'AR' )
                        AND ( IdTipoDocto = 'MU' )
                        AND ( Data <= @pDataVencimento )
                         OR ( idEntidade = @pIDEntidade )
                            AND ( idTipo = 'RC' )
                            AND ( IdTipoDocto = 'MU' )
                            AND ( Data <= @pDataVencimento )), 0)
            AS Multa
           ,ISNULL ((SELECT SUM(CASE idTipo
                                  WHEN 'RC' THEN Valor
                                  WHEN 'AR' THEN Valor * -1
                                END) AS Expr1
                     FROM   tbContasPagarReceber AS tbContasPagarReceber_1
                     WHERE  ( idEntidade = @pIDEntidade )
                        AND ( idTipo = 'AR' )
                         OR ( idEntidade = @pIDEntidade )
                            AND ( idTipo = 'RC' )), 0)
            AS SaldoTotal
           ,Isnull ((SELECT SUM(tbVendasItensPagamento.Valor)
                     FROM   tbVendasItensPagamento
                            INNER JOIN tbDepositoChequePre
                                    ON tbVendasItensPagamento.Id =
                                       tbDepositoChequePre.IdVendaItemPagamento
                     WHERE  ( tbVendasItensPagamento.TipoPagamento = 'CP' )
                        AND ( tbDepositoChequePre.Pago = 0 )
                        AND ( tbVendasItensPagamento.IdEntidade = @pIDEntidade )
                    ), 0
            ) AS
            Cheque
           ,Isnull ((SELECT SUM(Valor)
                     FROM   tbCartaFreteEnvio
                     WHERE  ( Pago = 0 )
                        AND ( idEntidade = @pIDEntidade )), 0)
            AS CartasFreteEnviadas
           ,Isnull ((SELECT SUM(ValorLiquido)
                     FROM   tbCartaFrete
                     WHERE  ( idEntidade = @pIDEntidade )
                        AND ( idEnviada IS NULL )), 0)
            AS CartasFreteAbertas
           ,Isnull ((SELECT SUM(valor)
                     FROM   tbChequeSemFundo
                     WHERE  ( idEntidade = @pIDEntidade )
                        AND ( pago = 0 )), 0)
            AS ChequesDevolvidos
    FROM   tbEntidades
    WHERE  ( Id = @pIDEntidade ) 
GO
/****** Object:  StoredProcedure [dbo].[spSolicitacao]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spSolicitacao]
@pOP nvarchar(20),
@pidSolicitacao int,
@pData smalldatetime=Null,
@pidPosto int=Null,
@pidProduto int=Null,
@pQTD float=Null,
@pAtentido bit=Null

as
If @pOp = 'Salvar'
	   begin
	     if @pidSolicitacao = 0
	         begin
				insert into tbSoicitacao (Data, idPosto, idProduto, QTD, Atentido) values  (@pData, @pidPosto, @pidProduto, @pQTD, @pAtentido)
	         end
	      else
	         begin
				Update tbSolicitacao set Data = @pData, idPosto = @pidPosto, idProduto = @pidProduto, QTD = @pQTD, Atendido = @pAtentido  where idSolicitacao=@pidSolicitacao
	         end
	   
	   end
	else if @pOP = 'Selecionar'
	   begin
	     Select * from tbSolicitacao where idSolicitacao=@pidSolicitacao   
	   end
	

	else if @pOP = 'Excluir'
	   begin
	     Delete from tbSolicitacao where idSolicitacao=@pidSolicitacao
	   end
GO
/****** Object:  StoredProcedure [dbo].[spTanque]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spTanque
CREATE PROCEDURE [dbo].[spTanque] @pOP          NVARCHAR(20)
                                 ,@pIdposto    UNIQUEIDENTIFIER
                                 ,@pNumTanque  INT
                                 ,@pIdProduto  UNIQUEIDENTIFIER=NULL
                                 ,@pCapacidade INT=NULL
                                 ,@pAtivo      INT=NULL
                                 ,@pInativoEm  SMALLDATETIME=NULL
                                 ,@pMedicao    FLOAT=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pNumTanque = 0
            BEGIN
                INSERT INTO tbTanques
                            (idPosto
                             ,NumTanque
                             ,idProduto
                             ,Capacidade
                             ,Ativo
                             ,InativoEm
                             ,Medicao)
                VALUES      (@pidPosto
                             ,@pNumTanque
                             ,@pidProduto
                             ,@pCapacidade
                             ,@pAtivo
                             ,@pInativoEm
                             ,@pMedicao)
            END
          ELSE
            BEGIN
                UPDATE tbTanques
                SET    idPosto = @pidPosto
                       ,NumTanque = @pNumTanque
                       ,idProduto = @pidProduto
                       ,Capacidade = @PCapacidade
                       ,Ativo = @pAtivo
                       ,InativoEm = @pInativoEm
                       ,Medicao = @pMedicao
                WHERE  NumTanque = @pNumTanque
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbTanques
          WHERE  NumTanque = @pNumTanque
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbTanques
          WHERE  NumTanque = @pNumTanque
      END 
GO
/****** Object:  StoredProcedure [dbo].[spTarefa]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spTarefa
CREATE PROCEDURE [dbo].[spTarefa] @pOP             NVARCHAR(20)
                                 ,@pID            UNIQUEIDENTIFIER
                                 ,@pidTarefaTipo  UNIQUEIDENTIFIER=NULL
                                 ,@pDescricao     NVARCHAR(50)=NULL
                                 ,@pDataPrevista  SMALLDATETIME=NULL
                                 ,@pDataRealizada SMALLDATETIME=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbTarefas
                            (idTarefaTipo
                             ,Descricao
                             ,DataPrevista
                             ,DataRealizada)
                VALUES      (@pidTarefaTipo
                             ,@pDescricao
                             ,@pDataPrevista
                             ,@pDataRealizada)
            END
          ELSE
            BEGIN
                UPDATE tbTarefas
                SET    idTarefaTipo = @pidTarefaTipo
                       ,Descricao = @pDescricao
                       ,DataPrevista = @pDataPrevista
                       ,DataRealizada = @pDataRealizada
                WHERE  id = @pID
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbTarefas
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbTarefas
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spTarefaTipo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spTarefaTipo
CREATE PROCEDURE [dbo].[spTarefaTipo] @pOP         NVARCHAR(20)
                                     ,@pID        UNIQUEIDENTIFIER
                                     ,@pDescricao NVARCHAR(50)=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbTarefaTipo
                            (Descricao)
                VALUES      (@pDescricao)
            END
          ELSE
            BEGIN
                UPDATE tbTarefaTipo
                SET    Descricao = @pDescricao
                WHERE  id = @pID
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbTarefaTipo
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbTarefaTipo
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spTipoDoc]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[spTipoDoc] @pOP         NVARCHAR(20)
                                  ,@pidTipoDoc NVARCHAR(2)
                                  ,@pDescricao NVARCHAR(50)=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pidTipoDoc = ''
            BEGIN
                INSERT INTO tbTipoDoc
                            (IdTipoDoc
                             ,Descricao)
                VALUES      (@pIdTipoDoc
                             ,@pDescricao)

                SELECT @pidTipoDoc
            END
          ELSE
            BEGIN
                UPDATE tbTipoDoc
                SET    Descricao = @pDescricao
                WHERE  idTipoDoc = @pidTipoDoc

                SELECT @pidTipoDoc
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbTipoDoc
          WHERE  idTipoDoc = @pidTipoDoc
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbTipoDoc
          WHERE  idTipoDoc = @pIdTipoDoc
      END 
GO
/****** Object:  StoredProcedure [dbo].[spUniformes]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spUniformes
CREATE PROCEDURE [dbo].[spUniformes] @pOP               NVARCHAR(20)
                                    ,@pID              UNIQUEIDENTIFIER
                                    ,@pIDEntidade      UNIQUEIDENTIFIER=NULL
                                    ,@pTipo            NVARCHAR(10)=NULL
                                    ,@pTamanho         NVARCHAR(10)=NULL
                                    ,@pObs             NVARCHAR(100)=NULL
                                    ,@pEstado          NVARCHAR(10)=NULL
                                    ,@pDataEntrega     SMALLDATETIME=NULL
                                    ,@pDataDesativacao SMALLDATETIME=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pID = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbUniformes
                            (idEntidade
                             ,Tipo
                             ,Tamanho
                             ,Obs
                             ,Estado
                             ,Dataentrega
                             ,DataDesativacao)
                VALUES      (@pidEntidade
                             ,@pTipo
                             ,@pTamanho
                             ,@pObs
                             ,@pEstado
                             ,@pDataentrega
                             ,@pDataDesativacao)
            END
          ELSE
            BEGIN
                UPDATE tbUniformes
                SET    idEntidade = @pidEntidade
                       ,Tipo = @pTipo
                       ,Tamanho = @pTamanho
                       ,Obs = @pObs
                       ,Estado = @pEstado
                       ,DataEntrega = @pDataEntrega
                       ,DataDesativacao = @pDataDesativacao
                WHERE  id = @pID
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbUniformes
          WHERE  id = @pID
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbUniformes
          WHERE  id = @pID
      END 
GO
/****** Object:  StoredProcedure [dbo].[spUsuario]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spUsuario
CREATE PROCEDURE [dbo].[spUsuario] @pOP             NVARCHAR(20)
                                  ,@pIDEntidade    UNIQUEIDENTIFIER
                                  ,@pSenha         NVARCHAR(50)=NULL
                                  ,@pNivel         UNIQUEIDENTIFIER=NULL
                                  ,@pTurno         BIT=NULL
                                  ,@pDataExpiracao SMALLDATETIME=NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pidEntidade = dbo.GuidEmpty()
            BEGIN
                INSERT INTO tbUsuarios
                            (idEntidade
                             ,Senha
                             ,Nivel
                             ,Turno
                             ,DataExpiracao)
                VALUES      (@pidEntidade
                             ,@pSenha
                             ,@pNivel
                             ,@pTurno
                             ,@pDataExpiracao)
            END
          ELSE
            BEGIN
                UPDATE tbUsuarios
                SET    idEntidade = @pidEntidade
                       ,Senha = @pSenha
                       ,Nivel = @pNivel
                       ,Turno = @pTurno
                       ,DataExpiracao = @pDataExpiracao
                WHERE  idEntidade = @pidEntidade
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbUsuarios
          WHERE  idEntidade = @pidEntidade
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbUsuarios
          WHERE  idEntidade = @pidEntidade
      END
    ELSE IF @pOP = 'Login'
      BEGIN
          SELECT idEntidade
          FROM   tbUsuarios
          WHERE  IDEntidade = @pIDEntidade
             AND Senha = @pSenha
      END 
GO
/****** Object:  StoredProcedure [dbo].[spVeiculo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spVeiculo
CREATE PROCEDURE [dbo].[spVeiculo] @pOP                NVARCHAR(20)
                                  ,@pIDCavalo         UNIQUEIDENTIFIER
                                  ,@pIDTransportadora UNIQUEIDENTIFIER = NULL
                                  ,@pDescricao        NVARCHAR(50) = NULL
                                  ,@pPlaca            NCHAR(10) = NULL
AS
    IF @pOp = 'Salvar'
      BEGIN
          IF @pIDCavalo = dbo.GuidEmpty()
            BEGIN
                SET @pIDCavalo = newid()
                INSERT INTO tbVeiculoTransportadora
                            (Id
                             ,IDTransportadora
                             ,Descricao
                             ,Placa)
                VALUES      (@pIDCavalo
                             ,@pIDTransportadora
                             ,@pDescricao
                             ,@pPlaca)

                SELECT @pIDCavalo
            END
          ELSE
            BEGIN
                UPDATE tbVeiculoTransportadora
                SET    IDTransportadora = @pIDTransportadora
                       ,Descricao = @pDescricao
                       ,Placa = @pPlaca
                WHERE  Id = @pIdCavalo

                SELECT @pIDCavalo
            END
      END
    ELSE IF @pOP = 'Selecionar'
      BEGIN
          SELECT *
          FROM   tbVeiculoTransportadora
          WHERE  Id = @pIdCavalo
      END
    ELSE IF @pOP = 'Excluir'
      BEGIN
          DELETE FROM tbVeiculoTransportadora
          WHERE  Id = @pIdCavalo
      END 
      
select @pIDCavalo      
GO
/****** Object:  StoredProcedure [dbo].[spVendasVerificacao]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--spVendasVerificacao
CREATE PROCEDURE [dbo].[spVendasVerificacao] @pIdposto       UNIQUEIDENTIFIER
                                            ,@pIDCaixa      UNIQUEIDENTIFIER
                                            ,@pIDCaixaAtual UNIQUEIDENTIFIER
                                            ,@pTanque       UNIQUEIDENTIFIER
AS
    SELECT dbo.tbBombas.Id
           AS Bico
           ,dbo.tbBombas.Encerrante
            AS EncerranteAtual
           ,tbCaixaItens_1.ValorLido
            AS EncerranteAnterior
           ,dbo.tbTanques.Id as idtanque
		   ,dbo.tbTanques.NumTanque  
           ,dbo.tbCaixaItens.ValorLido
            AS MedicaoAnterior
           ,dbo.tbTanques.Medicao
            AS MedicaoAtual
           ,dbo.tbBombas.Encerrante - tbCaixaItens_1.ValorLido
            AS VendasPorEncerrante
           ,dbo.tbCaixaItens.ValorLido - dbo.tbTanques.Medicao
            AS VendasPorMedicao
           ,ISNULL ((SELECT SUM(dbo.tbVendasItens.Quantidade) AS VendasCaixa
                     FROM   dbo.tbVendas
                            INNER JOIN dbo.tbVendasItens
                                    ON dbo.tbVendas.Id =
                                       dbo.tbVendasItens.idVenda
                     WHERE  ( dbo.tbVendas.idPosto = @pIDPosto )
                        AND ( dbo.tbVendas.Status IS NULL )
                        AND ( dbo.tbVendasItens.Cancelado = 0 )
                        AND ( dbo.tbVendas.idCaixa = @pIDCaixaAtual )
                        AND ( dbo.tbVendasItens.idBomba = dbo.tbBombas.Id )), 0)
            AS
            VendasPorCaixa
           ,ISNULL ((SELECT SUM(dbo.tbAfericao.QTD)
                     FROM   dbo.tbAfericao
                     WHERE  ( dbo.tbAfericao.idPosto = @pIDPosto )
                        AND ( dbo.tbAfericao.idCaixa = @pIDCaixaAtual )
                        AND ( dbo.tbAfericao.IdBomba = dbo.tbBombas.Id )), 0)
            AS Afericao
           ,Isnull((SELECT AVG(tbPedidosItensRecebidos.qtd) AS Expr1
                    FROM   tbPedidosItensRecebidos
                           INNER JOIN tbPedidosItens
                                   ON tbPedidosItensRecebidos.idPedido =
                                      tbPedidosItens.idPedido
                                      AND tbPedidosItensRecebidos.idPosto =
                                          tbPedidosItens.idPosto
                    WHERE  ( dbo.tbPedidosItens.idCaixaRecebimento =
                             @pIDCaixaAtual
                           )
                       AND ( dbo.tbPedidosItens.idPosto = @pIDposto )
                       AND ( dbo.tbPedidosItensRecebidos.IdTanque = @ptanque )),
            0)
            AS
            Recebimentos
    FROM   dbo.tbTanques
           INNER JOIN dbo.tbBombas
                   ON dbo.tbTanques.IdPosto = dbo.tbBombas.IdPosto
                      AND dbo.tbTanques.Id = dbo.tbBombas.IdTanque
           INNER JOIN dbo.tbCaixaItens
                   ON dbo.tbTanques.NumTanque = dbo.tbCaixaItens.idObjeto
           INNER JOIN dbo.tbCaixaItens AS tbCaixaItens_1
                   ON dbo.tbBombas.NumBomba = tbCaixaItens_1.idObjeto
    WHERE  ( dbo.tbTanques.IdPosto = @pIDPosto )
       AND ( dbo.tbTanques.Id = @pTanque )
       AND ( dbo.tbCaixaItens.TipoLeitura = 'T' )
       AND ( dbo.tbCaixaItens.idCaixa = @pIDCAixa )
       AND ( tbCaixaItens_1.TipoLeitura = 'B' )
       AND ( tbCaixaItens_1.idCaixa = @pIDCAixa )
    ORDER  BY dbo.tbTanques.Id 

GO
/****** Object:  StoredProcedure [dbo].[TanqueExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--TanqueExclui
CREATE PROCEDURE [dbo].[TanqueExclui] @pIdposto    UNIQUEIDENTIFIER
                                     ,@pNumTanque INT
AS
    UPDATE tbTanques
    SET    ativo = 0
           ,InativoEM = getdate()
    WHERE  idPosto = @pIDPosto
       AND NumTanque = @pNumTanque 
GO
/****** Object:  StoredProcedure [dbo].[TanqueSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--TanqueSalva
CREATE PROCEDURE [dbo].[TanqueSalva] @pOP          CHAR
                                    ,@pIdposto    UNIQUEIDENTIFIER
                                    ,@pNumTanque  INT
                                    ,@pIdProduto  UNIQUEIDENTIFIER
                                    ,@pCapacidade FLOAT
                                    ,@pMedicao    FLOAT
AS
    IF @pOP = 'I'
      BEGIN
          INSERT INTO tbTanques
                      (idPosto
                       ,NumTanque
                       ,idProduto
                       ,Capacidade
                       ,Medicao
                       ,Ativo
                       ,InativoEM)
          VALUES     (@pIDPosto
                      ,@pNumTanque
                      ,@pIDProduto
                      ,@pCapacidade
                      ,@pMedicao
                      ,1
                      ,NULL)
      END
    ELSE
      BEGIN
          UPDATE tbTanques
          SET    idProduto = @pIDProduto
                 ,Capacidade = @pCapacidade
                 ,Medicao = @pMedicao
                 ,Ativo = 1
                 ,InativoEM = NULL
          WHERE  idPosto = @pidPosto
             AND NumTanque = @pNumTanque
      END 
GO
/****** Object:  StoredProcedure [dbo].[TanquesEstoqueAtualiza]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--TanquesEstoqueAtualiza
CREATE PROCEDURE [dbo].[TanquesEstoqueAtualiza] @pOP          CHAR
                                               ,@pIDTanque   INT
                                               ,@pQuantidade DECIMAL
                                               ,@pIdposto    UNIQUEIDENTIFIER
AS
    IF @pOP = '+'
      BEGIN
          UPDATE tbTanques
          SET    Medicao = ( Medicao + @pQuantidade )
          WHERE  NumTanque = @pIdTanque
             AND idPosto = @pIDPosto
      END
    ELSE
      BEGIN
          UPDATE tbTanques
          SET    Medicao = ( Medicao - @pQuantidade )
          WHERE  NumTanque = @pIdTanque
             AND idPosto = @pIDPosto
      END 
GO
/****** Object:  StoredProcedure [dbo].[TanquesSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--TanquesSeleciona
CREATE PROCEDURE [dbo].[TanquesSeleciona] @pIdposto UNIQUEIDENTIFIER
AS
    SELECT dbo.tbTanques.Id
           ,dbo.tbTanques.IdProduto
           ,dbo.tbProdutos.Descricao
           ,dbo.tbTanques.Capacidade
           ,dbo.tbTanques.Medicao
           ,dbo.tbTanques.Ativo
           ,dbo.tbTanques.InativoEm
    FROM   dbo.tbTanques
           INNER JOIN dbo.tbProdutos
                   ON dbo.tbTanques.IdProduto = dbo.tbProdutos.Id
    WHERE  ( dbo.tbTanques.IdPosto = @pIDPosto ) 
GO
/****** Object:  StoredProcedure [dbo].[tipoDocExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--tipoDocExclui
CREATE PROCEDURE [dbo].[tipoDocExclui] @pIDTipoDoc VARCHAR(2)
AS
    DELETE tbTipoDoc
    WHERE  idTipoDoc = @pIDTipoDoc 
GO
/****** Object:  StoredProcedure [dbo].[TipoDocSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--TipoDocSalva
CREATE PROCEDURE [dbo].[TipoDocSalva] @pOP         CHAR
                                     ,@pIDTipoDoc VARCHAR(2)
                                     ,@pDescricao VARCHAR(50)
AS
    DECLARE @pOP1 INT

    SET @pOP1 = (SELECT Count(Id)
                 FROM   tbTipoDoc
                 WHERE  IdTipoDoc = @pIDTipoDoc)

    IF @pOP1 = 0
      BEGIN
          INSERT INTO tbTipoDoc
                      (IdTipoDoc
                       ,Descricao)
          VALUES     (@pIDTipoDoc
                      ,@pDescricao)
      END
    ELSE
      BEGIN
          UPDATE tbTipoDoc
          SET    Descricao = @pDescricao
          WHERE  IdTipoDoc = @pIDTipoDoc
      END 
GO
/****** Object:  StoredProcedure [dbo].[TipoDocSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--TipoDocSeleciona
CREATE PROCEDURE [dbo].[TipoDocSeleciona] @pIDTipoDoc VARCHAR(2)
AS
    SELECT *
    FROM   tbTipoDoc
    WHERE  IdTipoDoc = @pIDTipoDOc 
GO
/****** Object:  StoredProcedure [dbo].[UniformeExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--UniformeExclui
CREATE PROCEDURE [dbo].[UniformeExclui] @pID UNIQUEIDENTIFIER
AS
    DELETE FROM tbUniformes
    WHERE  id = @pID 
GO
/****** Object:  StoredProcedure [dbo].[UniformeSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--UniformeSalva
CREATE PROCEDURE [dbo].[UniformeSalva] @pID               UNIQUEIDENTIFIER
                                      ,@pIDEntidade      UNIQUEIDENTIFIER
                                      ,@pTipo            VARCHAR(50)
                                      ,@pTamanho         VARCHAR(50)
                                      ,@pObs             VARCHAR(100)
                                      ,@pEstado          VARCHAR(20)
                                      ,@pDataEntrega     SMALLDATETIME
                                      ,@pDataDesativacao SMALLDATETIME
AS
    IF @pID = dbo.GuidEmpty()
      BEGIN
	  SET @pID = newid()
          INSERT INTO tbUniformes
                      (id
					   ,idEntidade
                       ,Tipo
                       ,Tamanho
                       ,Obs
                       ,Estado
                       ,DataEntrega
					   ,sincronizado)
          VALUES     (@pId
		              ,@pidEntidade
                      ,@pTipo
                      ,@pTamanho
                      ,@pObs
                      ,@pEstado
                      ,@pDataEntrega
					  ,0)
      END
    ELSE
      BEGIN
          UPDATE tbUniformes
          SET    Tipo = @pTipo
                 ,Tamanho = @pTamanho
                 ,Obs = @pObs
                 ,Estado = @pEstado
                 ,DataEntrega = @pDataEntrega
                 ,DataDesativacao = @pDataDesativacao
				 ,sincronizado = 0
          WHERE  id = @pID
      END 
	  SELECT @pID
GO
/****** Object:  StoredProcedure [dbo].[UniformeSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--UniformeSeleciona
CREATE PROCEDURE [dbo].[UniformeSeleciona] @pID UNIQUEIDENTIFIER
AS
    SELECT id
           ,idEntidade
           ,Tipo
           ,Tamanho
           ,Obs
           ,Estado
           ,DataEntrega
           ,CASE ( CONVERT(NVARCHAR(10), DataDesativacao, 103) )
              WHEN '01/01/1900' THEN ''
              ELSE CONVERT(NVARCHAR(10), DataDesativacao, 103)
            END AS DataDesativacao
    FROM   dbo.tbUniformes
    WHERE  ( idEntidade = @pID )
    ORDER  BY tipo 
GO
/****** Object:  StoredProcedure [dbo].[UsuarioAcessoPostosSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--UsuarioAcessoPostosSeleciona
CREATE PROCEDURE [dbo].[UsuarioAcessoPostosSeleciona]
@pIDEntidade UNIQUEIDENTIFIER
AS
    SELECT dbo.tbUsuariosPostos.idPosto
           ,dbo.tbPostos.NomeUsual
           ,dbo.tbUsuarios.Nivel
           ,dbo.tbUsuarios.Turno
           ,dbo.tbUsuarios.NomeUsual AS NomeUsuario
    FROM   dbo.tbUsuariosPostos
           INNER JOIN dbo.tbPostos
                   ON dbo.tbUsuariosPostos.idPosto = dbo.tbPostos.Id
           INNER JOIN dbo.tbUsuarios
                   ON dbo.tbUsuariosPostos.idEntidade =
                      dbo.tbUsuarios.idEntidade
    WHERE  ( dbo.tbUsuariosPostos.idEntidade = @pidEntidade )
    ORDER  BY dbo.tbPostos.NomeUsual 
GO
/****** Object:  StoredProcedure [dbo].[UsuarioExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--UsuarioExclui
CREATE PROCEDURE [dbo].[UsuarioExclui] @pIDEntidade UNIQUEIDENTIFIER
AS
    DELETE FROM tbUsuarios
    WHERE  idEntidade = @pidEntidade

    DELETE FROM tbUsuariosPostos
    WHERE  idEntidade = @pidEntidade 
GO
/****** Object:  StoredProcedure [dbo].[UsuarioPostoExclui]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--UsuarioPostoExclui
CREATE PROCEDURE [dbo].[UsuarioPostoExclui] @pIDEntidade UNIQUEIDENTIFIER
                                           ,@pIdposto   UNIQUEIDENTIFIER
AS
    DELETE FROM tbUsuariosPostos
    WHERE  idEntidade = @pIDEntidade
       AND idPosto = @pIDPosto 
GO
/****** Object:  StoredProcedure [dbo].[UsuarioPostoSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--UsuarioPostoSalva
CREATE PROCEDURE [dbo].[UsuarioPostoSalva] @pIdEntidade UNIQUEIDENTIFIER
                                          ,@pIdposto   UNIQUEIDENTIFIER
AS
    DECLARE @existe INT
    DECLARE @pID UNIQUEIDENTIFIER

    SET @existe =Isnull((SELECT COUNT(idPosto)
                         FROM   tbUsuariosPostos
                         WHERE  idPosto = @pIDPosto
                            AND idEntidade = @pIdEntidade), 0)

    IF @Existe = 0
      BEGIN
          SET @pID = newid()
          INSERT INTO tbUsuariosPostos
                      (Id
                       ,idEntidade
                       ,idPosto)
          VALUES      (@pID
                       ,@pIDEntidade
                       ,@pIDPosto)
      END
    ELSE
      BEGIN
          SET @pID = (SELECT Id FROM tbUsuariosPostos WHERE idEntidade = @pidEntidade AND idPosto = @pIDPosto)
      END
    
    SELECT @pID 
GO
/****** Object:  StoredProcedure [dbo].[UsuarioPrazoTrocaSenha]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--UsuarioPrazoTrocaSenha
CREATE PROCEDURE [dbo].[UsuarioPrazoTrocaSenha] @pidEntidade     UNIQUEIDENTIFIER
                                               ,@pNovaSenha     VARCHAR(30)
                                               ,@pDataExpiracao SMALLDATETIME
AS
    UPDATE tbEntidades
    SET    SenhaPrazo = @pNovaSenha
           ,DataExpiracao = @pDataExpiracao
    WHERE  Id = @pIDEntidade 
GO
/****** Object:  StoredProcedure [dbo].[UsuarioSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--UsuarioSalva
CREATE PROCEDURE [dbo].[UsuarioSalva] @pOP          CHAR
                                     ,@pIDEntidade UNIQUEIDENTIFIER
                                     ,@pSenha      VARCHAR(20)
                                     ,@pNivel      UNIQUEIDENTIFIER
                                     ,@pTurno      BIT
                                     ,@pNomeUsual  NVARCHAR(50)
AS
    DECLARE @pID UNIQUEIDENTIFIER
    DECLARE @ProxCodigoVendedor INT
    
    SET @ProxCodigoVendedor = (SELECT MAX(CODIGOVENDEDOR) FROM TBENTIDADES) + 1
    
    IF @pOP = 'I'
      BEGIN
          SET @pID = newid()
          INSERT INTO tbUsuarios
                      (Id
                       ,idEntidade
                       ,Senha
                       ,Nivel
                       ,Turno
                       ,DataExpiracao
                       ,NomeUsual)
          VALUES      (@pID
                       ,@pidEntidade
                       ,@pSenha
                       ,@pNivel
                       ,@pTurno
                       ,getDate()
                       ,@pNomeUsual)
                       
          -- atualiza cod vendedor           
		  IF EXISTS (SELECT 1 FROM tbEntidades WHERE ID = @pIDEntidade and CodigoVendedor IS NULL)
			BEGIN
				UPDATE tbEntidades set CodigoVendedor = @ProxCodigoVendedor where ID = @pIDEntidade
			END                      
      END
    ELSE
      BEGIN
          UPDATE tbUsuarios
          SET    Nivel = @pNivel
                 ,Turno = @pTurno
                 ,NomeUsual = @pNomeUsual
          WHERE  idEntidade = @pidEntidade
          
           -- atualiza cod vendedor           
		  IF EXISTS (SELECT 1 FROM tbEntidades WHERE ID = @pIDEntidade and CodigoVendedor IS NULL)
			BEGIN
				UPDATE tbEntidades set CodigoVendedor = @ProxCodigoVendedor where ID = @pIDEntidade
			END  
          
          SET @pID = (SELECT Id FROM tbUsuarios WHERE idEntidade = @pidEntidade)
      END 
    
    SELECT @pID

GO
/****** Object:  StoredProcedure [dbo].[UsuarioSeleciona]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--UsuarioSeleciona
CREATE PROCEDURE [dbo].[UsuarioSeleciona] @pIDEntidade UNIQUEIDENTIFIER
AS
    SELECT *
    FROM   tbusuarios
    WHERE  idEntidade = @pIDEntidade 
GO
/****** Object:  StoredProcedure [dbo].[UsuarioTrocaSenha]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--UsuarioTrocaSenha
CREATE PROCEDURE [dbo].[UsuarioTrocaSenha] @pidEntidade     UNIQUEIDENTIFIER
                                          ,@pNovaSenha     VARCHAR(30)
                                          ,@pDataExpiracao SMALLDATETIME
AS
    UPDATE tbUsuarios
    SET    Senha = @pNovaSenha
           ,DataExpiracao = @pDataExpiracao
		   ,Sincronizado=0
    WHERE  idEntidade = @pIDEntidade 
GO
/****** Object:  StoredProcedure [dbo].[VendaAtualiza]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--VendaAtualiza
CREATE PROCEDURE [dbo].[VendaAtualiza] @pIDPosto         UNIQUEIDENTIFIER
                                      ,@pIDVenda        UNIQUEIDENTIFIER
                                      ,@pTotal          MONEY
                                      ,@pSubTotal       MONEY
                                      ,@pIDVendedor     UNIQUEIDENTIFIER = NULL
                                      ,@pValidacaoCupom NVARCHAR(200)
AS
    UPDATE tbVendas
    SET    ValorTotal = @pTotal
           ,IDVendedor = @pIDVendedor
           ,SubTotal = @pSubTotal
           ,ValidacaoCupom = @pValidacaoCupom
    WHERE  Id = @pIDVenda
       AND IDPosto = @pIDposto 
GO
/****** Object:  StoredProcedure [dbo].[VendaAtualizaMaisNovo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--VendaAtualizaMaisNovo
CREATE PROCEDURE [dbo].[VendaAtualizaMaisNovo] @pIDPosto         UNIQUEIDENTIFIER
                                              ,@pIDVenda        UNIQUEIDENTIFIER
                                              ,@pTotal          MONEY
                                              ,@pSubTotal       MONEY
                                              ,@pIDVendedor     UNIQUEIDENTIFIER = NULL
                                              ,@pValidacaoCupom NVARCHAR(200)
AS
    UPDATE tbVendas
    SET    ValorTotal = @pTotal
           ,IDVendedor = @pIDVendedor
           ,SubTotal = @pSubTotal
           ,ValidacaoCupom = @pValidacaoCupom
    WHERE  Id = @pIDVenda
       AND IDPosto = @pIDposto 
GO
/****** Object:  StoredProcedure [dbo].[VendaAtualizaNovo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--VendaAtualizaNovo
CREATE PROCEDURE [dbo].[VendaAtualizaNovo] @pIDPosto         UNIQUEIDENTIFIER
                                          ,@pNumCupom       INT
                                          ,@pTotal          MONEY
                                          ,@pSubTotal       MONEY
                                          ,@pIDVendedor     UNIQUEIDENTIFIER = NULL
                                          ,@pValidacaoCupom NVARCHAR(200)
AS
    DECLARE @pIDVenda UNIQUEIDENTIFIER

     SET @pIDVenda = (SELECT TOP 1 Id
                     FROM   tbVendas
                     WHERE  Cupom = @pNumCupom
                        AND idPosto = @pIDposto
                     ORDER BY Data DESC)

    UPDATE tbVendas
    SET    ValorTotal = @pTotal
           ,IDVendedor = @pIDVendedor
           ,SubTotal = @pSubTotal
           ,ValidacaoCupom = @pValidacaoCupom
    WHERE  Id = @pIDVenda
      
      SELECT @pIDVenda 
       
       
      

GO
/****** Object:  StoredProcedure [dbo].[VendaItemEstorno]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--VendaItemEstorno  
CREATE PROCEDURE [dbo].[VendaItemEstorno] @pIdposto  UNIQUEIDENTIFIER  
                                         ,@pCupom   INT  
                                         ,@pItem    INT 
                                         ,@pIdItem  UNIQUEIDENTIFIER 
AS  
    DECLARE @pValor FLOAT  
    DECLARE @pBomba UNIQUEIDENTIFIER  
    DECLARE @pTanque UNIQUEIDENTIFIER  
    DECLARE @venda UNIQUEIDENTIFIER  
    DECLARE @pProduto UNIQUEIDENTIFIER  
    DECLARE @pPEPS UNIQUEIDENTIFIER  
    DECLARE @pCusto MONEY  
    DECLARE @pTipo NCHAR(2)  
  
    SET @venda = (SELECT TOP 1 Id  
                  FROM   tbVendas  
                  WHERE  idPosto = @pIDPosto  
                     AND Cupom = @pCupom 
                     and Status IS NULL
                  ORDER  BY Data DESC)  
                  
    SET @pProduto = (SELECT idProduto  
                     FROM   tbVendasItens  
                     WHERE  idVenda = @Venda  
                        AND Item = @pItem
                        AND id = @pIdItem) 
                         
    SET @pValor= (SELECT quantidade  
                  FROM   tbVendasItens  
                  WHERE  idVenda = @Venda  
                     AND Item = @pItem
                     AND id = @pIdItem)  
                     
    SET @pBomba= (SELECT idBomba  
                  FROM   tbVendasItens  
                  WHERE  idVenda = @Venda  
                     AND Item = @pItem
                     AND id = @pIdItem) 
                      
    SET @pTanque= (SELECT idTanque  
                   FROM   tbVendasItens  
                   WHERE  idVenda = @Venda  
                      AND Item = @pItem
                      AND id = @pIdItem)  
                      
    SET @pCusto= (SELECT PrecoCusto  
                  FROM   tbVendasItens  
                  WHERE  idVenda = @Venda  
                     AND Item = @pItem
                     AND id = @pIdItem)  
                     
    SET @pTipo = (SELECT TOP 1 TipoPagamento  
                  FROM   tbVendasItensPagamento  
                  WHERE  idVenda = @Venda)  
                  
    SET @pPEPS = (SELECT TOP 1 Id  
                  FROM   dbo.tbTanquesMovEstoque  
                  WHERE  ( idPosto = @pIDposto )  
                     AND ( idTanque = @ptanque )  
                     AND ( Quantidade - QuantVend > 0 )  
                     AND ( PrecoCusto = @pCusto ))  
  
    UPDATE tbVendas  
 SET Sincronizado = 0  
 WHERE Id = @venda  
   
 UPDATE tbBombas  
    SET    encerrante = encerrante - @pValor, Sincronizado = 0  
    WHERE  Id = @pBomba  
       AND idPosto = @pIDPosto  
  
    UPDATE tbTanques  
    SET    Medicao = Medicao + @pValor, Sincronizado = 0  
    WHERE  Id = @pTanque  
       AND idPosto = @pIDposto  
  
    UPDATE tbVendasItens  
    SET    cancelado = 1, Sincronizado = 0,  Status = 'CA'
    WHERE  idVenda = @Venda  
       AND item = @pItem  
       AND id = @pIdItem
  
    UPDATE tbTanquesMovEstoque  
    SET    QuantVend = QuantVend - @pValor, Sincronizado = 0  
    WHERE  Id = @pPEPS  
  
    UPDATE tbProdutosPostos  
    SET    Estoque = Estoque + @pValor, Sincronizado = 0  
    WHERE  IDPosto = @pIDposto  
       AND idProduto = @pProduto  
  
    IF @pTipo = 'PR'  
        OR @pTipo = 'CF'  
        OR @pTipo = 'CP'  
        OR @ptipo = 'CC'  
        OR @ptipo = 'CD'  
      BEGIN  
          DELETE FROM tbContasPagarReceber  
          WHERE  IdVenda = @Venda  
      END  
	  

GO
/****** Object:  StoredProcedure [dbo].[VendaItemPagamentoSalvaNovo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--VendaItemPagamentoSalvaNovo
CREATE PROCEDURE [dbo].[VendaItemPagamentoSalvaNovo] @pNumCupom           INT
                                                    ,@pTipoPagamento     CHAR(3)
                                                    ,@pValor             MONEY
                                                    ,@pDesconto          MONEY
                                                    ,@pEntidade          UNIQUEIDENTIFIER
                                                    ,@pContabancaria     UNIQUEIDENTIFIER
                                                    ,@pNumDoc            VARCHAR(50)
                                                    ,@pDataVencimento    SMALLDATETIME
                                                    ,@pIdposto           UNIQUEIDENTIFIER
                                                    ,@pIDCaixa           UNIQUEIDENTIFIER
                                                    ,@pAutorizado        VARCHAR(50)
                                                    ,@pPlaca             VARCHAR (15)
                                                    ,@pLocal             NVARCHAR(50) = ''
                                                    ,@pAutorizacao       VARCHAR(10) = NULL
                                                    ,@pNumCupomVinculado VARCHAR(20) = NULL
                                                    ,@pOperadora         UNIQUEIDENTIFIER
                                                    ,@pIdNotaFiscal      UNIQUEIDENTIFIER = NULL
AS
    DECLARE @pIDVenda UNIQUEIDENTIFIER

    IF (@pIDNotaFiscal IS NOT NULL AND @pIDNotaFiscal <> dbo.GuidEmpty())
      BEGIN
          SET @pIDVenda = (SELECT TOP 1 Id
                           FROM   tbVendas
                           WHERE  IDNotaFiscal = @pIDNotaFiscal
                              AND idPosto = @pIDposto
                           ORDER BY Data DESC)
      END
    ELSE
      BEGIN
          SET @pIDVenda = (SELECT TOP 1 Id
                           FROM   tbVendas
                           WHERE  Cupom = @pNumCupom
                              AND idPosto = @pIDposto
                           ORDER BY Data DESC)
      END


	declare @listaids varchar(200)
    DECLARE @Id UNIQUEIDENTIFIER
	DECLARE @IdPagamento UNIQUEIDENTIFIER
    
 

	set @IdPagamento = newID()
    INSERT INTO tbVendasItensPagamento
                (Id
                 ,idVenda
                 ,TipoPagamento
                 ,Valor
                 ,Desconto
                 ,IdEntidade
                 ,Contabancaria
                 ,NumDoc
                 ,DataVencimento
                 ,Autorizacao
                 ,NumCupomVinculado
                 ,Operadora)
    VALUES      (@IdPagamento
                 ,@pidVenda
                 ,@pTipoPagamento
                 ,@pValor
                 ,@pDesconto
                 ,@pEntidade
                 ,@pContabancaria
                 ,@pNumDoc
                 ,@pDataVencimento
                 ,@pAutorizacao
                 ,@pNumCupomVinculado
                 ,@pOperadora)
                 
      set @listaids = 'VENDA:' + convert(nvarchar(36), @IdPagamento)                

    UPDATE tbDepRet
    SET    ret = ret + @pvalor
           ,Sincronizado = 0
    WHERE  idPosto = @pIDPosto

    IF @pTipoPagamento = 'CP'
        OR @pTipoPagamento = 'PR'
      BEGIN
      
		  set @id = newID()
          INSERT INTO tbContasPagarReceber
                      (id
                       ,idPosto
                       ,idTipo
                       ,idPedCaixa
                       ,idEntidade
                       ,data
                       ,DataVencto
                       ,idTipoDocto
                       ,Valor
                       ,TaxaCartao
                       ,idVenda
                       ,Autorizado
                       ,Placa
                       ,Local)
          VALUES      (@id
                       ,@pIDPosto
                       ,'AR'
                       ,@pIDCaixa
                       ,@pEntidade
                       ,getdate()
                       ,@pDataVencimento
                       ,@pTipoPagamento
                       ,@pValor
                       ,@pDesconto
                       ,@pIDVenda
                       ,@pAutorizado
                       ,@pPlaca
                       ,@pLocal)
                       
		   set @listaids = @listaids + ',VPRAZO:' + convert(nvarchar(36), @ID)                         

          UPDATE tbEntidades
          SET    saldoLimite = saldoLimite - ( @pValor - @pDesconto )
                 ,Sincronizado = 0
          WHERE  Id = @pEntidade
      END

    IF @pTipoPagamento = 'CD'
        OR @pTipoPagamento = 'CC'
      BEGIN
      
		  set @Id = NEWID()
          INSERT INTO tbContasPagarReceber
                      (id
                       ,idPosto
                       ,idTipo
                       ,idPedCaixa
                       ,idEntidade
                       ,data
                       ,DataVencto
                       ,idTipoDocto
                       ,Valor
                       ,TaxaCartao
                       ,idVenda)
          VALUES      (@id
                       ,@pIDPosto
                       ,'AR'
                       ,@pIDCaixa
                       ,@pOperadora
                       ,getdate()
                       ,@pDataVencimento
                       ,@pTipoPagamento
                       ,@pValor
                       ,@pDesconto
                       ,@pIDVenda)
                       
		set @listaids = @listaids + ',VVISTA:' +convert(nvarchar(36), @ID)    
		
		                      
      END

    IF @pTipoPagamento = 'CP'
      BEGIN
			set @id = newID()
          INSERT INTO tbDepositoChequePre
                      (Id
                       ,Pago
					   ,IdVendaItemPagamento)
          VALUES      (@Id
                       ,0
					   ,@IdPagamento)
                       
		set @listaids = @listaids + ',DCHEQUE:' +convert(nvarchar(36), @ID)                           
      END 
      
  -- lista de ids abaixo para gerar controle de sincronizacao referenciado como:
  -- VENDA é o guid do vendas pagamento
  -- VPRAZO -é guid de tbContasPagarReceber compra a prazo
  -- VVISTA -é guid de tbContasPagarReceber compra a vista
  -- DCHEQUE é guid de tbDepositoChequePre
  select @listaids      
GO
/****** Object:  StoredProcedure [dbo].[VendaItemSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--VendaItemSalva
CREATE PROCEDURE [dbo].[VendaItemSalva] @pIdposto             UNIQUEIDENTIFIER
                                       ,@pIDVenda            UNIQUEIDENTIFIER
                                       ,@pItem               INT
                                       ,@pIDbomba            UNIQUEIDENTIFIER
                                       ,@pIDTanque           UNIQUEIDENTIFIER
                                       ,@pIDProduto          UNIQUEIDENTIFIER
                                       ,@pQuantidade         FLOAT
                                       ,@pPrecoCusto         MONEY
                                       ,@pPrecoVenda         MONEY
                                       ,@pPrecoEspecial      MONEY
                                       ,@pValorItem          MONEY = 0
                                       ,
@pValidacaoCupomItem NVARCHAR(200) = NULL
AS
    DECLARE @CMov UNIQUEIDENTIFIER
    DECLARE @CPosto UNIQUEIDENTIFIER
    DECLARE @CTanque UNIQUEIDENTIFIER
    DECLARE @CPrecoCusto MONEY
    DECLARE @CQuantidade FLOAT
    DECLARE @CQuantVend FLOAT
    DECLARE @pQ FLOAT
    DECLARE @pLimite FLOAT
    DECLARE @op INT

    SET @pQ=0
    SET @pLimite=0

    IF @pIDTanque = dbo.GuidEmpty()
      BEGIN
          SET @pPrecoCusto = (SELECT PrecoCusto
                              FROM   tbProdutosPostos
                              WHERE  idPosto = @pIDPosto
                                 AND idProduto = @pIDProduto)

          INSERT INTO tbVendasItens
				      (IdVenda
					   ,Item
					   ,IdProduto
					   ,IdBomba
					   ,IdTanque
					   ,Quantidade
					   ,PrecoCusto
					   ,PrecoVenda
					   ,PrecoEspecial
					   ,Cancelado
					   ,ValorItem
					   ,ValidacaoCupomItem
					   ,Status
					   ,Sincronizado)
          VALUES      (@pIDVenda
                       ,@pItem
                       ,@pIDProduto
                       ,@pIDBomba
                       ,@pIDTanque
                       ,@pQuantidade
                       ,@pPrecoCusto
                       ,@pPrecoVenda
                       ,@pPrecoEspecial
                       ,0
                       ,@pValorItem
                       ,@pValidacaoCupomItem
                       ,NULL
                       ,0)

          UPDATE tbProdutosPostos
          SET    estoque = estoque - @pQuantidade
          WHERE  idPosto = @pIDPosto
             AND idProduto = @pIDProduto

          UPDATE tbProdutosPostos
          SET    ValidacaoEstoque = CONVERT(NVARCHAR, idProduto)
                                    + CONVERT(NVARCHAR, Estoque)
                                    + CONVERT(NVARCHAR, PrecoVenda)
                                    + CONVERT(NVARCHAR, IdLocal)
                                    + CONVERT(NVARCHAR, Almoxarifado)
          WHERE  idPosto = @pIDPosto
             AND idProduto = @pIDProduto
      END
    ELSE
      BEGIN
          UPDATE tbBombas
          SET    Encerrante = Encerrante + @pQuantidade
          WHERE  idPosto = @pIDposto
             AND Id = @pIDBomba

          UPDATE tbTanques
          SET    Medicao = Medicao - @pQuantidade
          WHERE  idPosto = @pIDPosto
             AND Id = @pIDTanque

          UPDATE tbProdutosPostos
          SET    estoque = estoque - @pQuantidade
          WHERE  idPosto = @pIDPosto
             AND idProduto = @pIDProduto

          DECLARE curpreco CURSOR FOR
            SELECT Id
                   ,idPosto
                   ,idTanque
                   ,PrecoCusto
                   ,Quantidade
                   ,Quantvend
            FROM   tbTanquesMovEstoque
            WHERE  idPosto = @pIDposto
               AND idTanque = @pIDtanque
               AND Quantidade - QuantVend > 0

          OPEN curpreco

          WHILE @pQuantidade > 0
            BEGIN
                FETCH next FROM curpreco INTO @CMov, @CPosto, @Ctanque,
                @CPrecoCusto
                ,
                @CQuantidade, @CQuantvend

                IF @pQuantidade <= ( @CQuantidade - @CQuantvend )
                  BEGIN
                      IF @CPrecoCusto IS NULL
                        BEGIN
                            INSERT INTO tbVendasItens
                                        (IdVenda
									     ,Item
									     ,IdProduto
									     ,IdBomba
									     ,IdTanque
									     ,Quantidade
									     ,PrecoCusto
									     ,PrecoVenda
									     ,PrecoEspecial
									     ,Cancelado
									     ,ValorItem
									     ,ValidacaoCupomItem
									     ,Status
									     ,Sincronizado)
                            VALUES      (@pIDVenda
                                         ,@pItem
                                         ,@pIDProduto
                                         ,@pIDBomba
                                         ,@pIDTanque
                                         ,@pQuantidade
                                         ,@pPrecoCusto
                                         ,@pPrecoVenda
                                         ,@pPrecoEspecial
                                         ,0
                                         ,@pValorItem
                                         ,@pValidacaoCupomItem
                                         ,NULL
                                         ,0)

                            SET @pQuantidade=0
                        END
                      ELSE
                        BEGIN
                            INSERT INTO tbVendasItens
                                        (IdVenda
									     ,Item
									     ,IdProduto
									     ,IdBomba
									     ,IdTanque
									     ,Quantidade
									     ,PrecoCusto
									     ,PrecoVenda
									     ,PrecoEspecial
									     ,Cancelado
									     ,ValorItem
									     ,ValidacaoCupomItem
									     ,Status
									     ,Sincronizado)
                            VALUES      (@pIDVenda
                                         ,@pItem
                                         ,@pIDProduto
                                         ,@pIDBomba
                                         ,@pIDTanque
                                         ,@pQuantidade
                                         ,@CPrecoCusto
                                         ,@pPrecoVenda
                                         ,@pPrecoEspecial
                                         ,0
                                         ,@pValorItem
                                         ,@pValidacaoCupomItem
                                         ,NULL
                                         ,0)

                            UPDATE tbTanquesMovEstoque
                            SET    QuantVend = QuantVend + @pQuantidade
                            WHERE  Id = @CMov

                            SET @pQuantidade=0
                        END
                  END
                ELSE
                  BEGIN
                      IF @CPrecoCusto IS NULL
                        BEGIN
                            INSERT INTO tbVendasItens
                                        (IdVenda
									     ,Item
									     ,IdProduto
									     ,IdBomba
									     ,IdTanque
									     ,Quantidade
									     ,PrecoCusto
									     ,PrecoVenda
									     ,PrecoEspecial
									     ,Cancelado
									     ,ValorItem
									     ,ValidacaoCupomItem
									     ,Status
									     ,Sincronizado)
                            VALUES      (@pIDVenda
                                         ,@pItem
                                         ,@pIDProduto
                                         ,@pIDBomba
                                         ,@pIDTanque
                                         ,@pQuantidade
                                         ,@pPrecoCusto
                                         ,@pPrecoVenda
                                         ,@pPrecoEspecial
                                         ,0
                                         ,@pValorItem
                                         ,@pValidacaoCupomItem
                                         ,NULL
                                         ,0)

                            SET @pQuantidade=0
                        END
                      ELSE
                        BEGIN
                            INSERT INTO tbVendasItens
                                        (IdVenda
									     ,Item
									     ,IdProduto
									     ,IdBomba
									     ,IdTanque
									     ,Quantidade
									     ,PrecoCusto
									     ,PrecoVenda
									     ,PrecoEspecial
									     ,Cancelado
									     ,ValorItem
									     ,ValidacaoCupomItem
									     ,Status
									     ,Sincronizado)
                            VALUES      (@pIDVenda
                                         ,@pItem
                                         ,@pIDProduto
                                         ,@pIDBomba
                                         ,@pIDTanque
                                         ,( @CQuantidade - @CQuantVend )
                                         ,@CPrecoCusto
                                         ,@pPrecoVenda
                                         ,@pPrecoEspecial
                                         ,0
                                         ,@pValorItem
                                         ,@pValidacaoCupomItem
                                         ,NULL
                                         ,0)

                            UPDATE tbTanquesMovEstoque
                            SET    QuantVend = QuantVend + (
                                               @CQuantidade - @CQuantVend )
                            WHERE  Id = @CMov

                            SET @pQuantidade=@pQuantidade - (
                                             @CQuantidade - @CQuantVend )
                        END
                  END
            END

          CLOSE curpreco

          DEALLOCATE curpreco
      END 

GO
/****** Object:  StoredProcedure [dbo].[VendaItemSalvaNovo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--VendaItemSalvaNovo
CREATE PROCEDURE [dbo].[VendaItemSalvaNovo] @pIDPosto             UNIQUEIDENTIFIER
                                           ,@pNumCupom           INT
                                           ,@pItem               INT
                                           ,@pIDbomba            UNIQUEIDENTIFIER
                                           ,@pIDTanque           UNIQUEIDENTIFIER
                                           ,@pIDProduto          UNIQUEIDENTIFIER
                                           ,@pQuantidade         FLOAT
                                           ,@pPrecoCusto         MONEY
                                           ,@pPrecoVenda         MONEY
                                           ,@pPrecoEspecial      MONEY
                                           ,@pValorItem          MONEY = 0
                                           ,@pValidacaoCupomItem NVARCHAR(200) = NULL
                                           ,@pIdNotaFiscal       UNIQUEIDENTIFIER = NULL
AS
    DECLARE @CMov UNIQUEIDENTIFIER
    DECLARE @CPosto UNIQUEIDENTIFIER
    DECLARE @CTanque UNIQUEIDENTIFIER
    DECLARE @CPrecoCusto MONEY
    DECLARE @CQuantidade FLOAT
    DECLARE @CQuantVend FLOAT
    DECLARE @pQ FLOAT
    DECLARE @pLimite FLOAT
    DECLARE @op INT
    DECLARE @pIDVenda UNIQUEIDENTIFIER
    
    DECLARE @id UNIQUEIDENTIFIER
    
    
    IF (@pIDNotaFiscal IS NOT NULL AND @pIDNotaFiscal <> dbo.GuidEmpty())
      BEGIN
          SET @pIDVenda = (SELECT TOP 1 Id
                           FROM   tbVendas
                           WHERE  IDNotaFiscal = @pIDNotaFiscal
                              AND idPosto = @pIDposto
                           ORDER BY Data Desc)
      END
    ELSE
      BEGIN
          SET @pIDVenda = (SELECT TOP 1 Id
                           FROM   tbVendas
                           WHERE  Cupom = @pNumCupom
                              AND idPosto = @pIDposto
                           ORDER BY Data Desc)
      END

    SET @pQ=0
    SET @pLimite=0

    IF @pIDTanque = dbo.GuidEmpty() -- FLUXO PARA PRODUTOS TIPO LUBRIFICANTES, CONVENIENCIAS
      BEGIN
          SET @pPrecoCusto = (SELECT PrecoCusto
                              FROM   tbProdutosPostos
                              WHERE  idPosto = @pIDPosto
                                 AND idProduto = @pIDProduto)
		SET @id = NEWID()

          INSERT INTO tbVendasItens
                      (Id
                       ,IdVenda
                       ,Item
                       ,IdProduto
                       ,IdBomba
                       ,IdTanque
                       ,Quantidade
                       ,PrecoCusto
                       ,PrecoVenda
                       ,PrecoEspecial
                       ,Cancelado
                       ,ValorItem
                       ,ValidacaoCupomItem
                       ,Status
                       ,Sincronizado)
          VALUES      (@id	
					   ,@pIDVenda
                       ,@pItem
                       ,@pIDProduto
                       ,@pIDBomba
                       ,@pIDTanque
                       ,@pQuantidade
                       ,@pPrecoCusto
                       ,@pPrecoVenda
                       ,@pPrecoEspecial
                       ,0
                       ,@pValorItem
                       ,@pValidacaoCupomItem
                       ,NULL
                       ,0)
                       
           SELECT @ID

          UPDATE tbProdutosPostos
          SET    estoque = estoque - @pQuantidade
                 ,Sincronizado = 0
          WHERE  idPosto = @pIDPosto
             AND idProduto = @pIDProduto
      END
    ELSE -- FLUXO PARA PRODUTOS TIPO COMBUSTIVEL(GAS,ALCOOL,DIESEL,ETC)
      BEGIN
          UPDATE tbBombas
          SET    Encerrante = Encerrante + @pQuantidade
                 ,Sincronizado = 0
          WHERE  idPosto = @pIDposto
             AND Id = @pIDBomba

          UPDATE tbTanques
          SET    Medicao = Medicao - @pQuantidade
                 ,Sincronizado = 0
          WHERE  idPosto = @pIDPosto
             AND Id = @pIDTanque

          UPDATE tbProdutosPostos
          SET    estoque = estoque - @pQuantidade
		         ,Sincronizado = 0
          WHERE  idPosto = @pIDPosto
             AND idProduto = @pIDProduto

          DECLARE curpreco CURSOR FOR
            SELECT Id
                   ,idPosto
                   ,idTanque
                   ,PrecoCusto
                   ,Quantidade
                   ,Quantvend
            FROM   tbTanquesMovEstoque
            WHERE  idPosto = @pIDposto
               AND idTanque = @pIDtanque
               AND Quantidade - QuantVend > 0

          OPEN curpreco

          WHILE @pQuantidade > 0
            BEGIN
                FETCH next FROM curpreco INTO @CMov, @CPosto, @Ctanque, @CPrecoCusto, @CQuantidade, @CQuantvend

                IF @pQuantidade <= ( @CQuantidade - @CQuantvend )
                  BEGIN
                      IF @CPrecoCusto IS NULL
                        BEGIN
                        
                        SET @id = NEWID()
                            INSERT INTO tbVendasItens
										(ID
										 ,IdVenda
									     ,Item
									     ,IdProduto
									     ,IdBomba
									     ,IdTanque
									     ,Quantidade
									     ,PrecoCusto
									     ,PrecoVenda
									     ,PrecoEspecial
									     ,Cancelado
									     ,ValorItem
									     ,ValidacaoCupomItem
									     ,Status
									     ,Sincronizado)
                            VALUES      (@ID
                                         ,@pIDVenda
                                         ,@pItem
                                         ,@pIDProduto
                                         ,@pIDBomba
                                         ,@pIDTanque
                                         ,@pQuantidade
                                         ,@pPrecoCusto
                                         ,@pPrecoVenda
                                         ,@pPrecoEspecial
                                         ,0
                                         ,@pValorItem
                                         ,@pValidacaoCupomItem
                                         ,NULL
                                         ,0)

                            SET @pQuantidade=0
                        END
                      ELSE
                        BEGIN
                        
							SET @id = NEWID()
                            INSERT INTO tbVendasItens
                                        (ID
                                         ,IdVenda
									     ,Item
									     ,IdProduto
									     ,IdBomba
									     ,IdTanque
									     ,Quantidade
									     ,PrecoCusto
									     ,PrecoVenda
									     ,PrecoEspecial
									     ,Cancelado
									     ,ValorItem
									     ,ValidacaoCupomItem
									     ,Status
									     ,Sincronizado)
                            VALUES      (@ID
                                         ,@pIDVenda
                                         ,@pItem
                                         ,@pIDProduto
                                         ,@pIDBomba
                                         ,@pIDTanque
                                         ,@pQuantidade
                                         ,@CPrecoCusto
                                         ,@pPrecoVenda
                                         ,@pPrecoEspecial
                                         ,0
                                         ,@pValorItem
                                         ,@pValidacaoCupomItem
                                         ,NULL
                                         ,0)

                            UPDATE tbTanquesMovEstoque
                            SET    QuantVend = QuantVend + @pQuantidade
                                   ,Sincronizado = 0
                            WHERE  Id = @CMov

                            SET @pQuantidade=0
                        END
                  END
                ELSE
                  BEGIN
                      IF @CPrecoCusto IS NULL
                        BEGIN
                        
                           SET @id = NEWID()

                            INSERT INTO tbVendasItens
                                        (ID
                                         ,IdVenda
									     ,Item
									     ,IdProduto
									     ,IdBomba
									     ,IdTanque
									     ,Quantidade
									     ,PrecoCusto
									     ,PrecoVenda
									     ,PrecoEspecial
									     ,Cancelado
									     ,ValorItem
									     ,ValidacaoCupomItem
									     ,Status
									     ,Sincronizado)
                            VALUES      (@ID
                                         ,@pIDVenda
                                         ,@pItem
                                         ,@pIDProduto
                                         ,@pIDBomba
                                         ,@pIDTanque
                                         ,@pQuantidade
                                         ,@pPrecoCusto
                                         ,@pPrecoVenda
                                         ,@pPrecoEspecial
                                         ,0
                                         ,@pValorItem
                                         ,@pValidacaoCupomItem
                                         ,NULL
                                         ,0)

                            SET @pQuantidade=0
                        END
                      ELSE
                        BEGIN
                        
                           SET @id = NEWID()

                            INSERT INTO tbVendasItens
                                        (ID
                                         ,IdVenda
									     ,Item
									     ,IdProduto
									     ,IdBomba
									     ,IdTanque
									     ,Quantidade
									     ,PrecoCusto
									     ,PrecoVenda
									     ,PrecoEspecial
									     ,Cancelado
									     ,ValorItem
									     ,ValidacaoCupomItem
									     ,Status
									     ,Sincronizado)
                            VALUES      (@ID
                                         ,@pIDVenda
                                         ,@pItem
                                         ,@pIDProduto
                                         ,@pIDBomba
                                         ,@pIDTanque
                                         ,( @CQuantidade - @CQuantVend )
                                         ,@CPrecoCusto
                                         ,@pPrecoVenda
                                         ,@pPrecoEspecial
                                         ,0
                                         ,(@CQuantidade * Case @pPrecoEspecial WHEN 0 THEN @pPrecoVenda ELSE @pPrecoEspecial END)
                                         ,@pValidacaoCupomItem
                                         ,NULL
                                         ,0)

                            UPDATE tbTanquesMovEstoque
                            SET    QuantVend = QuantVend + ( @CQuantidade - @CQuantVend )
                                   ,Sincronizado = 0
                            WHERE  Id = @CMov

                            SET @pQuantidade=@pQuantidade - ( @CQuantidade - @CQuantVend )
                        END
                  END
            END
          CLOSE curpreco
      DEALLOCATE curpreco 
	select @id  
 END 


GO
/****** Object:  StoredProcedure [dbo].[VendaSalva]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--VendaSalva
CREATE PROCEDURE [dbo].[VendaSalva] @pIdposto           UNIQUEIDENTIFIER
                                   ,@pIDCaixa          UNIQUEIDENTIFIER
                                   ,@pValorTotal       MONEY
                                   ,@pCupom            BIGINT
                                   ,@pNECF             UNIQUEIDENTIFIER
                                   ,@pData             SMALLDATETIME
                                   ,@pIDCliente        UNIQUEIDENTIFIER = NULL
                                   ,@pNomeCliente      NVARCHAR(100) = NULL
                                   ,@pDocumentoCliente NVARCHAR(20) = NULL
                                   ,@pDataMovimento    SMALLDATETIME = NULL
                                   ,@pNotaFiscal       NCHAR(2) = NULL
AS
    DECLARE @pID UNIQUEIDENTIFIER
	
	SET @pID = newid()
	
    INSERT INTO tbVendas
                (Id
                 ,idPosto
                 ,Cupom
                 ,idCaixa
                 ,ValorTotal
                 ,Estornado
                 ,data
                 ,IdEcf
                 ,IDCliente
                 ,NomeCliente
                 ,DocumentoCliente
                 ,DataMovimento
                 ,NotaFiscal)
    VALUES      (@pID
                 ,@pIDPosto
                 ,@pCupom
                 ,@pIDCaixa
                 ,@pValorTotal
                 ,0
                 ,@pData
                 ,@pNECF
                 ,@pIDCliente
                 ,@pNomeCliente
                 ,@pDocumentoCliente
                 ,@pDataMovimento
                 ,@pNotaFiscal)

    SELECT @pID 
GO
/****** Object:  StoredProcedure [dbo].[VendaSalvaMaisNovo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--VendaSalvaMaisNovo
CREATE PROCEDURE [dbo].[VendaSalvaMaisNovo]
@pIdposto              UNIQUEIDENTIFIER
,@pIDCaixa             UNIQUEIDENTIFIER
,@pValorTotal          MONEY
,@pCupom               BIGINT
,@pidECF               UNIQUEIDENTIFIER
,@pData                SMALLDATETIME
,@pIDCliente           UNIQUEIDENTIFIER = NULL
,@pNomeCliente         NVARCHAR(100) = NULL
,@pDocumentoCliente    NVARCHAR(20) = NULL
,@pDataMovimento       SMALLDATETIME = NULL
,@pNotaFiscal          NCHAR(2) = NULL
,@pContadorCupomFiscal INT
,@PSubTotal            MONEY
,@pIDNotaFiscal        UNIQUEIDENTIFIER = NULL
,@pValidacaoCupom      NVARCHAR(200)
AS
    DECLARE @pID UNIQUEIDENTIFIER
	
	SET @pID = newid()
	
    INSERT INTO tbVendas
                (Id
                 ,idPosto
                 ,Cupom
                 ,idCaixa
                 ,ValorTotal
                 ,Estornado
                 ,data
                 ,idEcf
                 ,IDCliente
                 ,NomeCliente
                 ,DocumentoCliente
                 ,DataMovimento
                 ,NotaFiscal
                 ,ContadorCupomFiscal
                 ,SubTotal
                 ,IDNotaFiscal
                 ,ValidacaoCupom)
    VALUES      (@pID
                 ,@pIDPosto
                 ,@pCupom
                 ,@pIDCaixa
                 ,@pValorTotal
                 ,0
                 ,@pData
                 ,@pidECF
                 ,@pIDCliente
                 ,@pNomeCliente
                 ,@pDocumentoCliente
                 ,@pDataMovimento
                 ,@pNotaFiscal
                 ,@pContadorCupomFiscal
                 ,@pSubTotal
                 ,@pIDNotaFiscal
                 ,@pValidacaoCupom)

    SELECT @pID 
GO
/****** Object:  StoredProcedure [dbo].[VendaSalvaNovo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--VendaSalvaNovo
CREATE PROCEDURE [dbo].[VendaSalvaNovo] @pIdposto              UNIQUEIDENTIFIER
                                       ,@pIDCaixa             UNIQUEIDENTIFIER
                                       ,@pValorTotal          MONEY
                                       ,@pCupom               BIGINT
                                       ,@pNECF                UNIQUEIDENTIFIER
                                       ,@pData                SMALLDATETIME
                                       ,@pIDCliente           UNIQUEIDENTIFIER = NULL
                                       ,@pNomeCliente         NVARCHAR(100) = NULL
                                       ,@pDocumentoCliente    NVARCHAR(20) = NULL
                                       ,@pDataMovimento       SMALLDATETIME = NULL
                                       ,@pNotaFiscal          NCHAR(2) = NULL
                                       ,@pContadorCupomFiscal INT
                                       ,@PSubTotal            MONEY
                                       ,@pIDNotaFiscal        UNIQUEIDENTIFIER = NULL
AS
	DECLARE @pID UNIQUEIDENTIFIER
	
	SET @pID = newid()
	
    INSERT INTO tbVendas
                (Id
                 ,idPosto
                 ,Cupom
                 ,idCaixa
                 ,ValorTotal
                 ,Estornado
                 ,data
                 ,IdEcf
                 ,IDCliente
                 ,NomeCliente
                 ,DocumentoCliente
                 ,DataMovimento
                 ,NotaFiscal
                 ,ContadorCupomFiscal
                 ,SubTotal
                 ,IDNotaFiscal)
    VALUES      (@pID
                 ,@pIDPosto
                 ,@pCupom
                 ,@pIDCaixa
                 ,@pValorTotal
                 ,0
                 ,@pData
                 ,@pNECF
                 ,@pIDCliente
                 ,@pNomeCliente
                 ,@pDocumentoCliente
                 ,@pDataMovimento
                 ,@pNotaFiscal
                 ,@pContadorCupomFiscal
                 ,@pSubTotal
                 ,@pIDNotaFiscal)

    SELECT @pID 
GO
/****** Object:  StoredProcedure [dbo].[VendasDeLubrificantes]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--VendasDeLubrificantes
CREATE PROCEDURE [dbo].[VendasDeLubrificantes] @pDataINI  SMALLDATETIME
                                              ,@pDataFIM SMALLDATETIME
                                              ,@pIdposto UNIQUEIDENTIFIER
AS
    SELECT dbo.tbEntidades.NomeUsual
           ,SUM(dbo.tbVendasItens.PrecoVenda * dbo.tbVendasItens.Quantidade) AS
            Valor
    FROM   dbo.tbVendas
           INNER JOIN dbo.tbVendasItens
                   ON dbo.tbVendas.Id = dbo.tbVendasItens.idVenda
           INNER JOIN dbo.tbProdutos
                   ON dbo.tbVendasItens.idProduto = dbo.tbProdutos.Id
           INNER JOIN dbo.tbEntidades
                   ON dbo.tbVendas.IDVendedor = dbo.tbEntidades.Id
    WHERE  ( dbo.tbVendas.DataMovimento BETWEEN @pDataINI AND @pDataFIM )
       AND ( dbo.tbVendasItens.Cancelado = 0 )
       AND ( dbo.tbVendas.idPosto = @pIdPosto )
       AND ( dbo.tbProdutos.TipoProd = N'LB' )
    GROUP  BY dbo.tbEntidades.NomeUsual 
GO
/****** Object:  StoredProcedure [dbo].[VendasResumo]    Script Date: 20/05/2024 14:45:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--VendasResumo
CREATE PROCEDURE [dbo].[VendasResumo] @pIDCaixa UNIQUEIDENTIFIER
AS
    DECLARE @pAdiantamento FLOAT

    SET @pAdiantamento = (SELECT
    Isnull(SUM(dbo.tbCartaFrete.ValorAdiantamento), 0) AS Valor
                          FROM   dbo.tbVendas
                                 INNER JOIN dbo.tbCartaFrete
                                         ON dbo.tbVendas.Id =
                                            dbo.tbCartaFrete.idVenda
                          WHERE  ( dbo.tbVendas.idCaixa = @pIDCaixa ))

    SELECT Codigo=1
           ,Descricao='Total'
           ,Valor=( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
    FROM   dbo.tbVendas
           INNER JOIN dbo.tbVendasItensPagamento
                   ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda
    WHERE  ( dbo.tbVendas.idCaixa = @pIDCaixa )
    UNION
    SELECT Codigo=2
           ,Descricao='Cartão Débito'
           ,Valor=( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
    FROM   dbo.tbVendas
           INNER JOIN dbo.tbVendasItensPagamento
                   ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda
    WHERE  ( dbo.tbVendas.idCaixa = @pIDCaixa )
       AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CD' )
    UNION
    SELECT Codigo=3
           ,Descricao='Cartão Crédito'
           ,Valor=( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
    FROM   dbo.tbVendas
           INNER JOIN dbo.tbVendasItensPagamento
                   ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda
    WHERE  ( dbo.tbVendas.idCaixa = @pIDCaixa )
       AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CC' )
    UNION
    SELECT Codigo=4
           ,Descricao='Carta Frete'
           ,Valor=( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0)
                    + @pAdiantamento )
    FROM   dbo.tbVendas
           INNER JOIN dbo.tbVendasItensPagamento
                   ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda
    WHERE  ( dbo.tbVendas.idCaixa = @pIDCaixa )
       AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CF' )
    UNION
    SELECT Codigo=5
           ,Descricao='Cheque a Prazo'
           ,Valor=( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
    FROM   dbo.tbVendas
           INNER JOIN dbo.tbVendasItensPagamento
                   ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda
    WHERE  ( dbo.tbVendas.idCaixa = @pIDCaixa )
       AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CP' )
    UNION
    SELECT Codigo=6
           ,Descricao='Cheque a Vista'
           ,Valor=( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
    FROM   dbo.tbVendas
           INNER JOIN dbo.tbVendasItensPagamento
                   ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda
    WHERE  ( dbo.tbVendas.idCaixa = @pIDCaixa )
       AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'CV' )
    UNION
    SELECT Codigo=7
           ,Descricao='Dinheiro'
           ,Valor=( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
    FROM   dbo.tbVendas
           INNER JOIN dbo.tbVendasItensPagamento
                   ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda
    WHERE  ( dbo.tbVendas.idCaixa = @pIDCaixa )
       AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'DI' )
    UNION
    SELECT Codigo=8
           ,Descricao='Venda a Prazo'
           ,Valor=( ISnull(Sum(dbo.tbVendasItensPagamento.Valor), 0) )
    FROM   dbo.tbVendas
           INNER JOIN dbo.tbVendasItensPagamento
                   ON dbo.tbVendas.Id = dbo.tbVendasItensPagamento.idVenda
    WHERE  ( dbo.tbVendas.idCaixa = @pIDCaixa )
       AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'PR' )
    UNION
    SELECT Codigo=9
           ,Descricao=( 'Despesas' )
           ,Valor=( Isnull(Sum(dbo.tbContasPagarReceber.Valor), 0) )
    FROM   tbContasPagarReceber
    WHERE  idPedCaixa = @pIDCaixa
       AND Despesa = 1
    UNION
    SELECT Codigo=10
           ,Descricao=( 'Depositar' )
           ,Isnull((SELECT SUM(dbo.tbVendasItensPagamento.Valor)
                    FROM   dbo.tbVendas
                           INNER JOIN dbo.tbVendasItensPagamento
                                   ON dbo.tbVendas.Id =
                                      dbo.tbVendasItensPagamento.idVenda
                    WHERE  ( dbo.tbVendas.idCaixa = @pIDCaixa )
                       AND ( dbo.tbVendasItensPagamento.TipoPagamento = 'DI' ))
                   - (
                   SELECT
                    SUM(dbo.tbContasPagarReceber.Valor)
                   FROM
                           tbContasPagarReceber
                   WHERE
                           idPedCaixa = @pIDCAixa
                           AND
                           Despesa = 1), 0) AS Valor
    UNION
    SELECT Codigo=11
           ,Descricao=( 'Caixa' )
           ,Valor=200 
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Valor do produto gás veicular' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tbConcorrentesPreco', @level2type=N'COLUMN',@level2name=N'DieselS10Aditivado'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Valor do produto Etanol aditivado' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tbConcorrentesPreco', @level2type=N'COLUMN',@level2name=N'DieselS500Aditivado'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'nome do tipo de intenção para pagar a despesa(MOVIMENTO OU CONTABANCARIA).' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tbContasPagarReceber', @level2type=N'COLUMN',@level2name=N'TipoIntencaoPagar'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Valor de quebra de caixa do holerite' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tbContasPagarReceber', @level2type=N'COLUMN',@level2name=N'ValorQuebraCaixa'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Ano de pagamento da despesa para colaborador' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tbContasPagarReceber', @level2type=N'COLUMN',@level2name=N'AnoPagamentoColaborador'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Mes de pagamento da despesa para colaborador' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tbContasPagarReceber', @level2type=N'COLUMN',@level2name=N'MesPagamentoColaborador'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Tipo de despesa salario V adiantamento,S Salario,F Ferias, 13 13o salario, R Recisao' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tbContasPagarReceber', @level2type=N'COLUMN',@level2name=N'TipoDespesaSalario'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data de inclusao da despesa no movimento(tbcontaspagarreceber) quando a despesa fica no status de pago' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'tbDepositoChequePre', @level2type=N'COLUMN',@level2name=N'DataInclusaoNoMovimento'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[20] 4[23] 2[28] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "tbCartaFrete"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 213
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbCartaFreteEnvio"
            Begin Extent = 
               Top = 6
               Left = 251
               Bottom = 114
               Right = 414
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbEntidades"
            Begin Extent = 
               Top = 6
               Left = 452
               Bottom = 114
               Right = 620
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbPostos"
            Begin Extent = 
               Top = 6
               Left = 658
               Bottom = 114
               Right = 830
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 10
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 4050
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
        ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW4'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N' Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW4'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VIEW4'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[45] 4[27] 2[19] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "tbAdiantamento"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 188
               Right = 203
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbAdiantamentoItem"
            Begin Extent = 
               Top = 26
               Left = 497
               Bottom = 212
               Right = 653
            End
            DisplayFlags = 280
            TopColumn = 1
         End
         Begin Table = "tbEntidades"
            Begin Extent = 
               Top = 133
               Left = 241
               Bottom = 248
               Right = 398
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 9
         Width = 284
         Width = 1440
         Width = 3270
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewAdiantamentos'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewAdiantamentos'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[50] 4[30] 2[15] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "tbContasPagarReceber"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 253
               Right = 216
            End
            DisplayFlags = 280
            TopColumn = 3
         End
         Begin Table = "tbCaixa"
            Begin Extent = 
               Top = 6
               Left = 254
               Bottom = 172
               Right = 417
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbEntidades"
            Begin Extent = 
               Top = 6
               Left = 455
               Bottom = 121
               Right = 617
            End
            DisplayFlags = 280
            TopColumn = 3
         End
         Begin Table = "tbEntidades_1"
            Begin Extent = 
               Top = 6
               Left = 655
               Bottom = 121
               Right = 817
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbPostos"
            Begin Extent = 
               Top = 200
               Left = 516
               Bottom = 315
               Right = 669
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 13
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewBuscaRecebimentos em cheque'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'= 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 2850
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewBuscaRecebimentos em cheque'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewBuscaRecebimentos em cheque'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[16] 4[34] 2[17] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "tbCartaFrete"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 271
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 7
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 2265
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewCartasPorVenda'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewCartasPorVenda'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[29] 4[19] 2[21] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "tbVendas"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 121
               Right = 222
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbVendasItens"
            Begin Extent = 
               Top = 6
               Left = 260
               Bottom = 121
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbProdutos"
            Begin Extent = 
               Top = 6
               Left = 466
               Bottom = 121
               Right = 636
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewComissaoDeVendas'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewComissaoDeVendas'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[25] 4[20] 2[29] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "tbColaboradoresDifCaixa"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 211
               Right = 190
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbEntidades"
            Begin Extent = 
               Top = 118
               Left = 283
               Bottom = 233
               Right = 452
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbPostos"
            Begin Extent = 
               Top = 0
               Left = 480
               Bottom = 115
               Right = 633
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbCaixa"
            Begin Extent = 
               Top = 21
               Left = 748
               Bottom = 136
               Right = 911
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 2205
         Width = 1500
         Width = 2880
         Width = 2100
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1380
         Alias = 900
         Table = 3795
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 4140
         Or = 4095
         Or = 1350
         Or ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewContaCorrenteColaborador'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'= 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewContaCorrenteColaborador'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewContaCorrenteColaborador'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[26] 4[22] 2[31] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "tbVendasItensPagamento"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 121
               Right = 197
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbDepositoChequePre"
            Begin Extent = 
               Top = 6
               Left = 235
               Bottom = 91
               Right = 387
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbVendas"
            Begin Extent = 
               Top = 6
               Left = 425
               Bottom = 121
               Right = 577
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbEntidadeRefBanc"
            Begin Extent = 
               Top = 6
               Left = 615
               Bottom = 121
               Right = 770
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbEntidades"
            Begin Extent = 
               Top = 6
               Left = 808
               Bottom = 121
               Right = 970
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 7
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 3225
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias =' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewDepChequePre'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N' 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewDepChequePre'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewDepChequePre'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "tbContasPagarReceber"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 366
               Right = 216
            End
            DisplayFlags = 280
            TopColumn = 9
         End
         Begin Table = "tbHistoricos"
            Begin Extent = 
               Top = 235
               Left = 229
               Bottom = 350
               Right = 381
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbEntidades"
            Begin Extent = 
               Top = 125
               Left = 628
               Bottom = 370
               Right = 797
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbPostos"
            Begin Extent = 
               Top = 6
               Left = 651
               Bottom = 121
               Right = 804
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbCaixa"
            Begin Extent = 
               Top = 225
               Left = 430
               Bottom = 368
               Right = 593
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 2805
         Width = 2355
         Width = 2505
         Width = 3255
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
      ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewDespesas1'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'   Alias = 990
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 4215
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewDespesas1'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewDespesas1'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[33] 4[23] 2[3] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "tbPedidos"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 299
               Right = 202
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbPedidosItens"
            Begin Extent = 
               Top = 7
               Left = 236
               Bottom = 385
               Right = 414
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbPostos"
            Begin Extent = 
               Top = 6
               Left = 456
               Bottom = 121
               Right = 609
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbEntidades"
            Begin Extent = 
               Top = 6
               Left = 647
               Bottom = 121
               Right = 816
            End
            DisplayFlags = 280
            TopColumn = 2
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 12
         Width = 284
         Width = 645
         Width = 1500
         Width = 2580
         Width = 3180
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1065
         Width = 1710
         Width = 3180
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 2655
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewPedidos'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewPedidos'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewPedidos'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[33] 4[26] 2[11] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "tbEntidadesPonto (dbo)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 200
               Right = 219
            End
            DisplayFlags = 280
            TopColumn = 10
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 14
         Width = 284
         Width = 1500
         Width = 1500
         Width = 3570
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 5085
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewPontoEletronico'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewPontoEletronico'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[26] 4[22] 2[32] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "tbVendas"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 121
               Right = 206
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbVendasItens"
            Begin Extent = 
               Top = 6
               Left = 244
               Bottom = 121
               Right = 412
            End
            DisplayFlags = 280
            TopColumn = 5
         End
         Begin Table = "tbProdutos"
            Begin Extent = 
               Top = 6
               Left = 450
               Bottom = 121
               Right = 618
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbProdutosPostos"
            Begin Extent = 
               Top = 6
               Left = 656
               Bottom = 121
               Right = 824
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 2
         Width = 284
         Width = 2370
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 3885
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 4260
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewPrecosEspeciaos'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewPrecosEspeciaos'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[42] 4[5] 2[35] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "tbVendas"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 227
               Right = 190
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbVendasItens"
            Begin Extent = 
               Top = 6
               Left = 228
               Bottom = 209
               Right = 380
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewVendas'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewVendas'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[12] 4[15] 2[18] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1[50] 4[25] 3) )"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4[30] 2[40] 3) )"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = -1579
      End
      Begin Tables = 
         Begin Table = "tbContasPagarReceber"
            Begin Extent = 
               Top = 6
               Left = 1617
               Bottom = 121
               Right = 1795
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 30
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1500
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewVendasCaixa'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewVendasCaixa'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[25] 4[46] 2[28] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "tbVendasItens"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 121
               Right = 206
            End
            DisplayFlags = 280
            TopColumn = 7
         End
         Begin Table = "tbVendas"
            Begin Extent = 
               Top = 6
               Left = 244
               Bottom = 121
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbPostos"
            Begin Extent = 
               Top = 6
               Left = 466
               Bottom = 121
               Right = 655
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbProdutos"
            Begin Extent = 
               Top = 6
               Left = 693
               Bottom = 121
               Right = 863
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 10
         Width = 284
         Width = 1500
         Width = 1500
         Width = 3915
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 7845
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
 ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewVendasDiariaGeral'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'        Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewVendasDiariaGeral'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewVendasDiariaGeral'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[8] 4[29] 2[39] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = -1240
      End
      Begin Tables = 
         Begin Table = "tbVendasItens"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 121
               Right = 206
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbVendas"
            Begin Extent = 
               Top = 6
               Left = 244
               Bottom = 121
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbPostos"
            Begin Extent = 
               Top = 6
               Left = 466
               Bottom = 121
               Right = 655
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbProdutos"
            Begin Extent = 
               Top = 6
               Left = 693
               Bottom = 121
               Right = 863
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 7815
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
  ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewVendasDiariaGeralConv'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'    End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewVendasDiariaGeralConv'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewVendasDiariaGeralConv'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[26] 4[36] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "tbVendasItens"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 121
               Right = 206
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbVendas"
            Begin Extent = 
               Top = 6
               Left = 244
               Bottom = 121
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbPostos"
            Begin Extent = 
               Top = 6
               Left = 466
               Bottom = 121
               Right = 655
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbProdutos"
            Begin Extent = 
               Top = 6
               Left = 693
               Bottom = 121
               Right = 863
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 7800
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewVendasDiariaGeralLub'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewVendasDiariaGeralLub'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[49] 4[15] 2[27] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -192
         Left = 0
      End
      Begin Tables = 
         Begin Table = "tbVendasItens"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 249
               Right = 258
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewVendasItensPLR'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewVendasItensPLR'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[15] 4[25] 2[12] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "tbContasPagarReceber"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 121
               Right = 216
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 30
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 3870
         Width = 2205
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewVendasPorCAixa'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewVendasPorCAixa'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[27] 2[4] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1 [56] 4 [18] 2))"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "tbVendas"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 200
               Right = 190
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "tbVendasItensPagamento"
            Begin Extent = 
               Top = 6
               Left = 228
               Bottom = 236
               Right = 387
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      RowHeights = 220
      Begin ColumnWidths = 7
         Width = 284
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 1440
         Width = 2970
         Width = 1440
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 2640
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewVendasporCaixaOK'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'viewVendasporCaixaOK'
GO

